%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{1 dict dup /PageSize [paperwidth paperheight]put setpagedevice}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 {1 dict dup /ManualFeed manualfeed put setpagedevice } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 18 FMDOCUMENT
0 0 /Helvetica-Narrow-BoldOblique FMFONTDEFINE
1 0 /Times-Roman FMFONTDEFINE
2 0 /Times-Italic FMFONTDEFINE
3 0 /Helvetica-Bold FMFONTDEFINE
4 0 /Courier FMFONTDEFINE
5 0 /Courier-Oblique FMFONTDEFINE
6 1 /ZapfDingbats FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "441" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (APPENDIX G: X USER\325S GUIDE: OPEN LOOK EDITION) 265.78 693.79 S
0 9 Q
0.45 (441) 487.34 693.79 S
111 684 507 708 R
0.2 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 10 Q
7 X
(G) 531 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
0 0 0 0 1 1 1 K
1 10 Q
7 X
(Appendix) 138 719.33 T
(G) 179.94 719.33 T
2 F
(X USER\325S GUIDE: OPEN LOOK EDITION) 187.16 719.33 T
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 16 Q
0 X
0 1 1 0 1 0 0 K
(APPENDIX) 110 633.83 T
(G) 180.72 633.83 T
0 0 0 1 0 0 0 K
0 35 Q
0 0 0 1 0 0 0 K
(Introduction to Xt W) 144.5 573.5 T
(idget) 418.48 573.5 T
(Resources) 144.5 530.5 T
1 10 Q
-0.16 (We\325ve said several times that you can set \322resources\323 to control the behavior of client pro-) 147 434.33 P
0.23 (grams. Unfortunately, to make full use of this feature, you need to know a little about the) 147 422.03 P
0.35 (program you want to customize. If the program is an XView application\321the OpenWin-) 147 409.73 P
0.79 (dows DeskSet,) 147 397.43 P
2 F
0.79 (cmdtool) 210.52 397.43 P
1 F
0.79 (, and most current Sun programs\321it uses a simpler hierarchy of) 242.74 397.43 P
-0.29 (resources. If the program is written using any \322Xt Intrinsices\323 or \322Widget\323-based toolkit\321) 147 385.13 P
0.8 (such as) 147 372.83 P
1 9 Q
0.72 (OLIT) 180.27 372.83 P
1 10 Q
0.8 (, Motif, or the MIT Athena Widgets\321then you need to know a little more) 200.76 372.83 P
-0.14 (about the individual widgets. These toolkits do allow you to set not only resources defined) 147 360.53 P
0.4 (by the application itself, but also resources that apply to any of the widgets that make up) 147 348.23 P
0.12 (the application. The reference page for the application sometimes lists the most important) 147 335.93 P
-0.53 (of these resources, but for fuller customization, you need to know more about each widget.) 147 323.63 P
-0.47 (Unfortunately, the design of the X Toolkit is such that to really do the right thing, you prob-) 147 305.33 P
-0.22 (ably need to know a bit more about Toolkit programming than the average user might like.) 147 293.03 P
0.12 (In this appendix we provide some introductory concepts about how widgets are used in X) 147 274.73 P
-0.41 (Toolkit programs. The following two appendices provide reference information about each) 147 262.43 P
-0.09 (class of widgets in the OpenWindows version of) 147 250.13 P
1 9 Q
-0.08 (OLIT) 342.96 250.13 P
1 10 Q
-0.09 ( as well as the MIT Athena Widgets) 363.45 250.13 P
0.1 (used in many MIT and contributed applications. If you are a Toolkit programmer or other) 147 237.83 P
(sophisticated user, feel free to skip right to the widget reference descriptions.) 147 225.53 T
0 1 1 0 1 0 0 K
0 20 Q
0 1 1 0 1 0 0 K
(G.1  The W) 111 193.27 T
(idget Class Hierarchy) 195.62 193.27 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
(The first thing you need to know is how widgets are built.) 147 173.93 T
-0.33 (Rather than starting each widget from scratch, the widget programmer starts with a copy of) 147 155.63 P
-0.2 (another, more basic widget, and modifies it. This process is called) 147 143.33 P
2 F
-0.2 (subclassing) 411.48 143.33 P
1 F
-0.2 ( the  widget,) 458.15 143.33 P
0.89 (and the sequence of widgets leading up to the one you see is called its) 147 131.03 P
2 F
0.89 (class hierarchy) 442.23 131.03 P
1 F
0.89 (.) 504.5 131.03 P
0.98 (Because of the way subclassing works, a widget) 147 118.73 P
2 F
0.98 (inherits) 350.05 118.73 P
1 F
0.98 ( all of the characteristics of its) 380.61 118.73 P
(superclasses, except those that are explicitly overridden or changed.) 147 106.43 T
FMENDPAGE
%%EndPage: "441" 1
%%Page: "442" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (442) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 10 Q
7 X
(G) 74.62 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
-0.21 (The class hierarchy starts with a class called Object, which defines some basic characteris-) 141 650.33 P
0.3 (tics common to all widgets\321namely the ability to understand resources, and to be linked) 141 638.03 P
-0.32 (to applications via a mechanism referred to as a  callback. \050When you click on a \322quit\323 but-) 141 625.73 P
1.86 (ton, and the application quits, that is because the widget has communicated with the) 141 613.43 P
(application via a callback.\051) 141 601.13 T
-0.39 (RectObj   is a subclass of Object. RectObj adds various resources having to do with the fact) 141 582.83 P
0.21 (that widgets are rectangular: width, height, borderWidth, and x, y positions. RectObj also) 141 570.53 P
0.62 (adds resources for sensitivity\321the fact that a widget can be temporarily \322disabled\323 by a) 141 558.23 P
0 (client \050so for example, not allowing you to choose an option on a menu that would close a) 141 545.93 P
(file if no file was open.\051) 141 533.63 T
0.46 (Core   is the first true widget in the class hierarchy. Object and RectObj don\325t have win-) 141 515.33 P
0.63 (dows associated with them, and can never be \322instantiated\323\321created and mapped to the) 141 503.03 P
-0.27 (screen. In fact, prior to Release 4, they were \322invisible\323 even to Toolkit programmers, who) 141 490.73 P
(simply assumed that Core was the root of the widget hierarchy.) 141 478.43 T
-0.17 (The reason we now talk openly about Object and RectObj is that the R4 Toolkit supports a) 141 460.13 P
-0.19 (different class of object, known colloquially as a gadget, which is subclassed directly from) 141 447.83 P
-0.01 (RectObj, and does not have a window associated with it. It can be used only within a wid-) 141 435.53 P
0.06 (get that understands how to manage gadgets, and allocates some of its own window space) 141 423.23 P
0.44 (to display them. This is typically done when there are many identical widgets. \050The only) 141 410.93 P
-0.28 (gadgets in the Athena widget set are the SmeBSB and SmeLine gadgets used to implement) 141 398.63 P
0.1 (panes in a SimpleMenu widget. OLIT and Motif offer both widget and gadget versions of) 141 386.33 P
(many of their objects, including all kinds of command buttons.\051) 141 374.03 T
0.56 (At any rate, for most purposes, you can still act as though Core is the root of the widget) 141 355.73 P
0.07 (hierarchy, since all widgets are subclassed from it, and therefore share all of its resources.) 141 343.43 P
-0.25 (The phrase \322Core resources\323 is a fluke of terminology that can be misleading to new users.) 141 331.13 P
0.38 (Because it sounds meaningful just as a general term, it isn\325t clear that the Core resources) 141 318.83 P
0.33 (are really the resources of a particular widget class \050rather than something magically rec-) 141 306.53 P
(ognized as central or \322core\323 by the X Toolkit.\051) 141 294.23 T
0.19 (Let\325s take a brief look at the some of the Core resources, which appear in Table G-1. The) 141 275.93 P
(list includes the resources inherited from Object and RectObj, plus those added by Core.) 141 263.63 T
3 9 Q
(Table) 231 242.3 T
(G-) 257.01 242.3 T
(1. Core Resources) 267.01 242.3 T
(background) 201 219.3 T
(Background) 273 219.3 T
1 10 Q
-0.25 (borderColor) 201 197.63 S
-0.25 (BorderColor) 273 197.63 S
-0.25 (borderWidth) 201 177.63 S
-0.25 (BorderWidth) 273 177.63 S
-0.25 (1) 345 177.63 S
-0.25 (height) 201 157.63 S
-0.25 (Height) 273 157.63 S
-0.25 (0) 345 157.63 S
-0.25 (width) 201 137.63 S
-0.25 (Width) 273 137.63 S
-0.25 (0) 345 137.63 S
-0.25 (x) 201 117.63 S
-0.25 (Position) 273 117.63 S
-0.25 (0) 345 117.63 S
-0.25 (y) 201 97.63 S
-0.25 (Position) 273 97.63 S
-0.25 (0) 345 97.63 S
267 234.3 267 90.05 2 L
V
0.5 H
0 Z
N
339 234.3 339 90.05 2 L
V
N
195 233.3 411 233.3 2 L
V
2 H
N
195 210.3 411 210.3 2 L
V
N
195 190.3 411 190.3 2 L
V
0.5 H
N
195 170.3 411 170.3 2 L
V
N
195 150.3 411 150.3 2 L
V
N
195 130.3 411 130.3 2 L
V
N
195 110.3 411 110.3 2 L
V
N
195 90.3 411 90.3 2 L
V
N
FMENDPAGE
%%EndPage: "442" 2
%%Page: "443" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (APPENDIX G: X USER\325S GUIDE: OPEN LOOK EDITION) 265.78 693.79 S
0 9 Q
0.45 (443) 487.34 693.79 S
111 684 507 708 R
0.5 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 10 Q
7 X
(G) 531 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
1.9 (Some of these Core resources set obvious characteristics of a widget:) 147 650.33 P
4 F
4.56 (background) 447 650.33 P
1 F
0.97 (\050color\051,) 147 638.03 P
4 F
2.32 (borderColor) 180.18 638.03 P
1 F
0.97 (, and) 246.18 638.03 P
4 F
2.32 (borderWidth) 270.05 638.03 P
1 F
0.97 ( \050in pixels\051.) 336.05 638.03 P
4 F
2.32 (height) 387.28 638.03 P
1 F
0.97 ( and) 423.28 638.03 P
4 F
2.32 (width) 444.65 638.03 P
1 F
0.97 ( specify) 474.65 638.03 P
-0.09 (the dimensions of the widget in pixels.) 147 625.73 P
4 F
-0.21 (x) 303.61 625.73 P
1 F
-0.09 ( and) 309.61 625.73 P
4 F
-0.21 (y) 328.87 625.73 P
1 F
-0.09 ( represent the x,y coordinates of the widget) 334.87 625.73 P
(in relation to its parent.) 147 613.43 T
1.92 (Technically,) 147 595.13 P
4 F
4.61 (foreground) 201.13 595.13 P
1 F
1.92 ( is) 261.13 595.13 P
2 F
1.92 (not) 276.65 595.13 P
1 F
1.92 ( a Core resource. However, since) 289.43 595.13 P
4 F
4.61 (foreground) 435.91 595.13 P
1 F
1.92 ( is) 495.91 595.13 P
0.23 (defined by every widget class that does any drawing of lines or text, it can be assumed to) 147 582.83 P
(be.) 147 570.53 T
0.26 (Note that Table G-1 isn\325t actually a complete list of all of the Core resources, but only of) 147 552.23 P
-0.32 (those that might be set by users. Some resources \050such as callbacks\051 can only be set by pro-) 147 539.93 P
0.81 (grammers. The Toolkit doesn\325t even support a mechanism for understanding how to set) 147 527.63 P
0.53 (them in a resource file. In addition, there are two resources that are so common that you) 147 515.33 P
0.2 (might expect them to be Core resources, but which are not. They are defined individually) 147 503.03 P
-0.34 (by each of the widget classes that use them. This can be confusing, especially since they do) 147 490.73 P
1.18 (correspond to standard X Toolkit options. But really, it is hair-splitting to worry about) 147 478.43 P
0.42 (where they are defined\321they are sufficiently standard to fall under the colloquial under-) 147 466.13 P
(standing of Core resources.) 147 453.83 T
0.82 (We\325ll say more about the subject of resource conversion later. First, though, let\325s finish) 147 435.53 P
0.22 (describing the base classes provided by the X Toolkit, which are common to all Xt-based) 147 423.23 P
(widget sets \050including) 147 410.93 T
1 9 Q
(OLIT) 237.83 410.93 T
1 10 Q
(, Motif ,and the Athena widgets\051.) 258.32 410.93 T
-0.11 (There is a special class of widgets whose job is to manage the size and/or position of other) 147 392.63 P
0.21 (widgets. These are called   Composite widgets, and all such geometry-managing widgets,) 147 380.33 P
0 (are children of the Composite widget class. Composite inherits all of the characteristics of) 147 368.03 P
-0.02 (Core, and adds resources \050settable only by the programmer\051 for identifying which widgets) 147 355.73 P
(it should treat as its children.) 147 343.43 T
0.42 (Some simple geometry-managing widgets such as the Athena Box widget are direct sub-) 147 325.13 P
1.17 (classes of Core. However, there is another, more complex class of geometry-managing) 147 312.83 P
-0.12 (widget defined by the X Toolkit Intrinsics, called Constraint. A constraint   widget defines) 147 300.53 P
-0.17 (special resources, called constraint resources, that apply to its children rather than to itself.) 147 288.23 P
1.5 (They are actually resources of the constraint widget, but are specified as if they were) 147 275.93 P
-0.29 (resources of the child. The clearest example of constraint resources is provided by the Ath-) 147 263.63 P
0.28 (ena Form widget,   which allows widgets to be positioned with respect to one another, so) 147 251.33 P
-0.09 (that they always keep the same arrangement, even when the Form is resized. For example,) 147 239.03 P
2 F
(xcalc) 147 226.73 T
1 F
( is implemented using a Form widget. Resources such as:) 168.1 226.73 T
4 8 Q
-0.16 (Form widget) 165 209.77 S
-0.16 (|) 183 200.77 S
5 F
-0.16 (Command widget child of Form) 201 200.77 S
4 F
-0.16 (|) 183 191.77 S
-0.16 (|) 201 191.77 S
-0.16 (|) 219 191.77 S
5 F
-0.16 (Constraint resource of Form seems to be resource of child) 237 191.77 S
4 F
-0.16 (|) 183 182.77 S
-0.16 (|) 201 182.77 S
-0.16 (|) 219 182.77 S
-0.16 (XCalc.ti.button12.fromHoriz: button11) 165 173.77 S
-0.16 (XCalc.ti.button12.fromVert: button7) 165 164.77 S
1 10 Q
1.21 (specify that button12 \050label PI\051 should always be next to button11 \050label x!\051, and over) 147 148.43 P
0.06 (button7 \050label 7\051. We\325ll return to this example later, when we talk about the instance hier-) 147 136.13 P
(archy of widgets in an application.) 147 123.83 T
FMENDPAGE
%%EndPage: "443" 3
%%Page: "444" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (444) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 10 Q
7 X
(G) 74.62 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
0.15 (At any rate, there is one other subclass of Composite that bears mention: the Shell widget) 141 650.33 P
-0.47 (class.  Shell widgets are simple composite widgets; they manage only one child\321the appli-) 141 638.03 P
0.56 (cation\325s main window, and they make themselves exactly the same size, so that they are) 141 625.73 P
0.77 (hidden behind it. Even though you never see them, though, Shell widgets are extremely) 141 613.43 P
-0.08 (important, since they are the widgets that know how to interact with the window manager.) 141 601.13 P
0.36 (Shell introduces several resources of importance to the application programmer, but only) 141 588.83 P
(one of importance to the user:) 141 576.53 T
4 F
(geometry) 263.2 576.53 T
1 F
( \050class) 311.2 576.53 T
4 F
(Geometry) 338.97 576.53 T
1 F
(\051.) 386.97 576.53 T
-0.49 (There are actually seven subclasses of Shell, three of which are for internal toolkit purposes) 141 558.23 P
1.05 (and four of which are used by application programmers in different circumstances. For) 141 545.93 P
1.08 (example, there is one kind of shell widget used for the main window of an application) 141 533.63 P
0.28 (\050class TopLevelShell\051 and another used as the parent of a popup widget like a dialog box) 141 521.33 P
0.56 (\050class OverrideShell\051 that should never be manipulated by the window manager. \050Notice) 141 509.03 P
1.02 (that) 141 496.73 P
2 F
1.02 (mwm) 159.52 496.73 P
1 F
1.02 ( doesn\325t reparent dialogs\321they don\325t get a titlebar of their own, and can\325t be) 180.63 496.73 P
0.16 (moved independently\321this is because they are children of an OverrideShell, which over-) 141 484.43 P
(rides window manager intervention.\051) 141 472.13 T
0.5 (There is another class of shell widget, called a TransientShell, which is used for popups,) 141 453.83 P
-0.42 (but can be manipulated by the window manager. An application might use a TransientShell) 141 441.53 P
1.03 (for a popup help window that would be allowed to remain on the screen, and could be) 141 429.23 P
-0.29 (moved or resized separately \050but not iconified.\051 An ApplicationShell is used by an applica-) 141 416.93 P
-0.06 (tion that has more than one completely independent window, as the class for its secondary) 141 404.63 P
(\322top level\323 windows.) 141 392.33 T
0.49 (For all practical purposes, you don\325t need this much information about shell widgets. As) 141 374.03 P
-0.37 (we\325ll see shortly, the only reference to a shell widget in a resource specification is typically) 141 361.73 P
(via the application name, which the shell widget takes as its own.) 141 349.43 T
-0.29 (Returning to widgets that you actually do see and interact with, let\325s consider the class der-) 141 331.13 P
0.33 (ivation of a widget like  Command, which is used to implement buttons you can click on) 141 318.83 P
(with the mouse to ask the application to do something.) 141 306.53 T
-0.29 (The Athena Command widget is a subclass of the Label widget,   which is a subclass of the) 141 288.23 P
-0.36 (Simple widget, which in turn is a subclass of Core. As a result, Command inherits all of the) 141 275.93 P
-0.27 (Core resources, plus the resources of the Athena Simple widget \050for practical purposes, the) 141 263.63 P
0.07 (cursor that is to be displayed when the pointer is in the window\051, plus the resources of the) 141 251.33 P
-0.42 (Label widget\321such as the ability to display a label, in a particular font. Command adds the) 141 239.03 P
0.52 (ability \050defined by the programmer, not the user\051 to call a particular application function) 141 226.73 P
(when the button is clicked on.) 141 214.43 T
0.9 (Figure) 141 196.13 P
0.9 (G-) 169.61 196.13 P
0.9 (1 shows the complete class hierarchy of the Athena widgets used in all of the) 180.16 196.13 P
0.26 (standard MIT applications described in this book. The widgets shown in gray are defined) 141 183.83 P
0.6 (by the X Toolkit intrinsics, and are common to all Xt-based widget sets, including) 141 171.53 P
1 9 Q
0.54 (OLIT) 480.51 171.53 P
1 10 Q
(and Motif.) 141 159.23 T
0.42 (The) 141 140.93 P
2 F
0.42 (listres) 159.47 140.93 P
1 F
0.42 ( application, without any arguments, lists the inheritance hierarchy for each of) 183.92 140.93 P
-0.24 (the Athena widgets. Given the name of any widget class, it lists all of the resources for that) 141 128.63 P
0.8 (widget, and which superclass they are inherited from. Figure XXX shows listres for the) 141 116.33 P
0.31 (Athena Label widget.:     As we\325ll describe later in this appendix, not all of the resources) 141 104.03 P
FMENDPAGE
%%EndPage: "444" 4
%%Page: "445" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (APPENDIX G: X USER\325S GUIDE: OPEN LOOK EDITION) 265.78 693.79 S
0 9 Q
0.45 (445) 487.34 693.79 S
111 684 507 708 R
0.5 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 10 Q
7 X
(G) 531 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
0.98 (listed by) 147 285.34 P
2 F
0.98 (listres) 185.62 285.34 P
1 F
0.98 ( can be set in a resource file. However, this listing can provide a handy) 210.07 285.34 P
(quick reference.) 147 273.04 T
0 1 1 0 1 0 0 K
0 20 Q
0 1 1 0 1 0 0 K
(G.2  W) 111 240.78 T
(idgets in the Application) 161.9 240.78 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
0.24 (Widget inheritance of resources from superclasses is an important part of the background) 147 221.44 P
1.08 (to understanding how to affect the widget resources in the application, but it is not the) 147 209.14 P
(whole story. Let\325s talk for a moment about how these widgets are used.) 147 196.84 T
1 (To make things more concrete, let\325s look at an actual application.) 147 178.54 P
2 F
1 (xclipboard) 422.07 178.54 P
1 F
1 ( is a good) 465.4 178.54 P
0.86 (choice. It uses several different widget classes, but isn\325t too complex. .Figure) 147 166.24 P
0.86 (G-) 467.53 166.24 P
0.86 (3 illus-) 478.08 166.24 P
(trates the widgets that make up) 147 153.94 T
2 F
(xclipboard) 273.65 153.94 T
1 F
(.) 316.98 153.94 T
0.09 (Every Toolkit application begins with a call to a function called) 147 135.64 P
4 F
0.22 (XtInitialize) 405.47 135.64 P
1 F
0.09 (, which) 477.47 135.64 P
(in looks something like this) 147 123.34 T
1 8 Q
(1) 257.57 127.34 T
4 F
-0.16 (top = XtInitialize\050 "xclipboard", "XClipboard", ... \051;) 165 106.38 S
3 9 Q
(Figure) 147 315.01 T
(G-) 177.01 315.01 T
(1. Inheritance among the Athena widgets) 187.01 315.01 T
111 331.01 507 657 C
114 331.01 504 648.01 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 17 469 395 774 378 305 120 337.01 FMBEGINEPSF
%%BeginDocument: /home/darian/ian/book/vol3ol/art/3m.G.03.epsi
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 17 469 395 774
/InitDictCount countdictstack def
gsave
save
mark
newpath
/showpage {} def
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: FreeHand 3.1
%%Title: 3m.G.03
%%CreationDate: 11/30/92 3:32 PM
%%BoundingBox: 16.8 469.1 395 773.7
%%DocumentProcSets: FreeHand_header 3 1
%%DocumentSuppliedProcSets: FreeHand_header 3 1
%%ColorUsage: Color
%%DocumentFonts: Symbol
%%+Helvetica-Condensed
%%+Helvetica-Condensed-Bold
%%DocumentNeededFonts: Symbol
%%+Helvetica-Condensed
%%+Helvetica-Condensed-Bold
%%FHPathName: Illustrations:Vol.3M:..All 3M Figures:3m.G.03
%%EndComments
%%BeginProcSet: FreeHand_header 3 0
/FHIODict 30 dict def
FHIODict begin
/bdf{bind def}bind def
/d{setdash}bdf
/h{closepath}bdf
/H{}bdf
/J{setlinecap}bdf
/j{setlinejoin}bdf
/M{setmiterlimit}bdf
/n{newpath}bdf
/N{newpath}bdf
/q{gsave}bdf
/Q{grestore}bdf
/w{setlinewidth}bdf
/u{}bdf
/U{}bdf
/sepdef{
dup where not
{
FreeHandSepDict
}
if
3 1 roll exch put
}bdf
/`
{false setoverprint
end %. FreeHandDict
/-save0- save def
pop pop pop pop pop
concat
userdict begin
/showpage {} def
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
/languagelevel where {pop languagelevel 1 ne{false setstrokeadjust}if}if
} bdf
/~
{end
-save0- restore
FreeHandDict begin
}bdf
/FreeHandDict 191 dict def
FreeHandDict begin
/currentpacking where{pop true setpacking}if
/xdf{exch def}bdf
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/min{2 copy gt{exch}if pop}bdf
/max{2 copy lt{exch}if pop}bdf
/isLino statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse def
/dr{transform .25 sub round .25 add
exch .25 sub round .25 add exch itransform}bdf
/C{dr curveto}bdf
/L{dr lineto}bdf
/m{dr moveto}bdf
/printerRes
gsave
matrix defaultmatrix setmatrix
72 72 dtransform
abs exch abs
max
grestore
def
/maxsteps 256 def
/calcgraysteps {
currentscreen pop exch 
printerRes exch div exch
2 copy
sin mul round dup mul
3 1 roll
cos mul round dup mul
add 1 add
dup maxsteps gt {pop maxsteps} if
} bdf
/bottom -0 def
/delta -0 def
/frac -0 def
/left -0 def
/numsteps -0 def
/numsteps1 -0 def
/radius -0 def
/right -0 def
/top -0 def
/xt -0 def
/yt -0 def
/df currentflat def
/tempstr 1 string def
/clipflatness currentflat def
/inverted?
0 currenttransfer exec .5 ge def
/level2 
/languagelevel where {pop languagelevel 1 ne}{false}ifelse def
/colorexists
level2
{
statusdict/processcolors known
{statusdict/processcolors get exec}{1}ifelse
4 eq def
}
{systemdict/setcmykcolor known def}
ifelse
/tc1 [0 0 0 1] def
/tc2 [0 0 0 1] def
/fc [0 0 0 1] def
/sc [0 0 0 1] def
/concatprocs{
/packedarray where
{pop dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse
{
/proc2 exch cvlit def/proc1 exch cvlit def
proc1 aload pop proc2 aload pop
proc1 length proc2 length add packedarray cvx
}
{
/proc2 exch cvlit def/proc1 exch cvlit def
/newproc proc1 length proc2 length add array def
newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval
newproc cvx
}ifelse
}bdf
/storerect{/top xdf/right xdf/bottom xdf/left xdf}bdf
/rectpath{newpath left bottom m left top L
right top L right bottom L closepath}bdf
/i{dup 0 eq
{pop df dup}
{dup} ifelse
/clipflatness xdf setflat
}bdf
version cvr 38.0 le
{/setrgbcolor{
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
setrgbcolor}bdf}if
/gettint{0 get}bdf
/puttint{0 exch put}bdf
/vms {/vmsv save def} bdf
/vmr {vmsv restore} bdf
/vmrs{vmsv restore /vmsv save def}bdf
/eomode{
{/filler /eofill load def /clipper /eoclip load def}
{/filler /fill load def /clipper /clip load def}
ifelse
}bdf
/CD{/NF exch def{exch dup/FID ne 1 index/UniqueID ne and{exch NF 3 1 roll put}
{pop pop}ifelse}forall NF}bdf
/MN{1 index length/Len exch def
dup length Len add string dup
Len 4 -1 roll putinterval dup 0 4 -1 roll putinterval}bdf
/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch
{1 index MN cvn/NewN exch def cvn
findfont dup maxlength dict CD dup/FontName NewN put dup
/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf
/RF{dup FontDirectory exch known{pop 3 -1 roll pop}{RC}ifelse}bdf
/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
{exch pop findfont 3 -1 roll pop}{pop dup findfont dup maxlength dict CD dup dup
/Encoding exch /Encoding get 256 array copy 7 -1 roll {3 -1 roll dup 4 -2 roll put}forall put definefont}ifelse}bdf
userdict begin /BDFontDict 20 dict def end
BDFontDict begin
/bu{}def
/bn{}def
/setTxMode{av 70 ge{pop}if pop}def
/gm{m}def
/show{pop}def
/gr{pop}def
/fnt{pop pop pop}def
/fs{pop}def
/fz{pop}def
/lin{pop pop}def
end
/MacVec 256 array def
MacVec 0 /Helvetica findfont
/Encoding get 0 128 getinterval putinterval
MacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put
/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI
/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/US
MacVec 0 32 getinterval astore pop
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase
/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacVec 128 128 getinterval astore pop
/fps{
currentflat 
exch 
dup 0 le{pop 1}if
{
dup setflat 3 index stopped
{1.3 mul dup 3 index gt{pop setflat pop pop stop}if}
{exit}
ifelse
}loop
pop setflat pop pop
}bdf
/fp{100 currentflat fps}bdf
/clipper{clip}bdf
/W{/clipper load 100 clipflatness fps}bdf
end%. FreeHandDict
end%. FHIODict
%%EndProcSet
%%EndProlog
%%BeginSetup
FHIODict begin
FreeHandDict begin
16.8 469.1 395 773.7 storerect rectpath clip newpath
/onlyk{false}ndf
/ccmyk{dup 5 -1 roll sub 0 max exch}ndf
/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{5 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf
/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf
/setseparationgray{1 exch sub dup dup dup setcmykcolor}ndf
/setoverprint{pop}ndf
/currentoverprint false ndf
/colorimage{pop pop
[5 -1 roll/exec cvx 6 -1 roll/exec cvx 7 -1 roll/exec cvx 8 -1 roll/exec cvx
/cmykbufs2gray cvx]cvx image}
%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)
version cvr 47.1 le isLino and{userdict begin bdf end}{ndf}ifelse
/customcolorimage{
colorexists
{
aload pop pop 4 array astore
setimagecmyk
currentcolortransfer
{ik mul ik sub 1 add}concatprocs 4 1 roll
{iy mul iy sub 1 add}concatprocs 4 1 roll
{im mul im sub 1 add}concatprocs 4 1 roll
{ic mul ic sub 1 add}concatprocs 4 1 roll
setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{invbuf dup length magentabuf length ne
{dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def}if
dup magentabuf copy yellowbuf copy blackbuf copy pop}concatprocs
{magentabuf}{yellowbuf}{blackbuf}true 4 colorimage
}
{
pop image
}
ifelse
}ndf
/separationimage{image}ndf
/newcmykcustomcolor{6 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf
/inkoverprint false ndf
/setinkoverprint{pop}ndf
/overprintprocess{pop}ndf
/setspotcolor
{spots exch get 0 5 getinterval exch setcustomcolor}ndf
/currentcolortransfer{currenttransfer dup dup dup}ndf
/setcolortransfer{systemdict begin settransfer end pop pop pop}ndf
/getcmyk {
dup length 4 eq
{aload pop}
{aload pop spots exch get 0 4 getinterval aload pop 4
{4 index mul 4 1 roll}repeat 5 -1 roll pop} ifelse
}bdf
/setimagecmyk{
getcmyk/ik xdf /iy xdf /im xdf /ic xdf
}ndf
/autospread{pop}ndf
/fhsetspreadsize{pop}ndf
/fhsetspreadallow{pop}ndf
/strokeopf false def
/fillopf false def
/R{0 ne /strokeopf xdf}bdf
/O{0 ne /fillopf xdf}bdf
/filler{fill}bdf
/F{fc fhsetcolor fillopf setoverprint false autospread
gsave /filler load fp grestore false setoverprint}bdf
/f{closepath F}bdf
/S{sc fhsetcolor strokeopf setoverprint true autospread {stroke}fp false setoverprint}bdf
/s{closepath S}bdf
/B{fc fhsetcolor fillopf setoverprint gsave /filler load fp grestore
sc fhsetcolor strokeopf setoverprint true autospread {stroke}fp false setoverprint}bdf
/b{closepath B}bdf
/setcolorscreen where{pop}{/setcolorscreen{setscreen pop pop pop pop pop pop pop pop pop}bdf}ifelse
/fhsetcolor{dup length 4 eq
{aload overprintprocess setcmykcolor}
{aload 1 get spots exch get 5 get setinkoverprint setspotcolor}
ifelse
}ndf
/settextcolor{
dup fhsetcolor
textblackopf
{
dup length 4 eq
{onlyk{3 get 1.0 eq{true setinkoverprint}if}{pop}ifelse}
{pop}
ifelse
}
{pop}ifelse
}ndf
/ka{/fc xdf}bdf
/Ka{/sc xdf}bdf
/xa{/fc xdf} bdf
/Xa{/sc xdf} bdf
/bc2[0 0]def
/bc4[0 0 0 0]def
/absmax{2 copy abs exch abs gt{exch}if pop}bdf
/calcstep
{ {calcgraysteps}{maxsteps}ifelse
tc1 length 4 eq
{
0 1 3
{tc1 1 index get
tc2 3 -1 roll get
sub
}for
absmax absmax absmax
}
{
bc2 tc1 1 get 1 exch put
tc1 gettint tc2 gettint
sub abs
}
ifelse
mul abs round dup 0 eq{pop 1}if 
dup /numsteps xdf 1 sub dup 0 eq{pop 1}if /numsteps1 xdf
}bdf
/cblend{
tc1 length 4 eq
{
0 1 3
{bc4 exch
tc1 1 index get
tc2 2 index get
1 index sub
frac mul add put
}for bc4
}
{
bc2
tc1 gettint
tc2 gettint
1 index sub
frac mul add
puttint bc2
}
ifelse
fhsetcolor
}bdf
/logtaper{/frac frac 9 mul 1 add log def}bdf
FHIODict begin
/origmtx matrix currentmatrix def
/iminv false def
/invbuf{0 1 2 index length 1 sub{dup 2 index exch get 255 exch sub 2 index 3 1 roll put}for}bdf
/cmykbufs2gray{
dup length 0 1 3 -1 roll 1 sub
{4 index 1 index get
4 index 2 index get
4 index 3 index get
4 index 4 index get
255 exch sub ccmyk ccmyk ccmyk pop 5 mul exch 45 mul add exch 14 mul add -6 bitshift
2 index 3 1 roll put}for
4 1 roll pop pop pop
}bdf
end
/textopf false def
/textblackopf true def
/curtextmtx{}def
/otw .25 def
/msf{dup/curtextmtx xdf makefont setfont}bdf
/makesetfont/msf load def
/curtextheight{.707104 .707104 curtextmtx dtransform
dup mul exch dup mul add sqrt}bdf
/ta{1 index
{tempstr 0 2 index put tempstr 2 index
gsave exec grestore
tempstr stringwidth rmoveto
5 index eq{6 index 6 index rmoveto}if
3 index 3 index rmoveto
}forall 7{pop}repeat}bdf
/sts{settextcolor textopf setoverprint/ts{awidthshow}def exec false setoverprint}bdf
/stol{/xt currentlinewidth def 
setlinewidth settextcolor textopf setoverprint newpath
/ts{{false charpath stroke}ta}def exec
false setoverprint xt setlinewidth}bdf
/currentpacking where{pop false setpacking}if
/spots[1 0 0 0 (Process Cyan) false newcmykcustomcolor
0 1 0 0 (Process Magenta) false newcmykcustomcolor
0 0 1 0 (Process Yellow) false newcmykcustomcolor
0 0 0 1 (Process Black) false newcmykcustomcolor
0 0 0 0  (White) false
newcmykcustomcolor
]def
%%EndSetup
%%IncludeFont: Symbol
0 dict dup begin
end
/f0 /Symbol FF def
[] 0 d
3.863708 M
1 w
0 j
0 J
0 O
0 R
0 i
false eomode
[0 0 0 1] Ka
[0 0 0 1] ka
vms
u
u
true fhsetspreadallow
16.9 773.6 m
394.9 773.6 L
394.9 469.2 L
16.9 469.2 L
16.9 773.6 L
0.2 w
3.863693 M
[0 0 0 1] Ka
s
U
U
vmr
vms
u
u
true fhsetspreadallow
100.3 727.7998 m
155.7733 727.7998 L
155.7733 711.3999 L
100.3 711.3999 L
100.3 727.7998 L
[0 0 0 1] ka
[0 0 0 1] Ka
0.5 w
3.863693 M
b
U
u
162.3 761.4999 m
220.6525 761.4999 L
220.6525 745.1 L
162.3 745.1 L
162.3 761.4999 L
b
U
u
221.2001 691.3 m
270.2001 691.3 L
270.2001 679.3 L
221.2001 679.3 L
221.2001 691.3 L
b
U
u
161.7001 691.2 m
210.7001 691.2 L
210.7001 679.2 L
161.7001 679.2 L
161.7001 691.2 L
b
U
u
280.7001 691.2 m
329.7001 691.2 L
329.7001 679.2 L
280.7001 679.2 L
280.7001 691.2 L
b
U
u
252.2001 674.3 m
301.2001 674.3 L
301.2001 662.3 L
252.2001 662.3 L
252.2001 674.3 L
b
U
u
192.7001 674.2 m
241.7001 674.2 L
241.7001 662.2 L
192.7001 662.2 L
192.7001 674.2 L
b
U
u
311.7001 674.2 m
360.7001 674.2 L
360.7001 662.2 L
311.7001 662.2 L
311.7001 674.2 L
b
U
u
228.2001 727.7998 m
284.1476 727.7998 L
284.1476 711.3999 L
228.2001 711.3999 L
228.2001 727.7998 L
b
U
u
161.7001 634.7 m
210.7001 634.7 L
210.7001 622.7 L
161.7001 622.7 L
161.7001 634.7 L
b
U
u
161.7001 611.3 m
210.7001 611.3 L
210.7001 599.3 L
161.7001 599.3 L
161.7001 611.3 L
b
U
u
30.2 691.1 m
79.2 691.1 L
79.2 679.1 L
30.2 679.1 L
30.2 691.1 L
b
U
u
89.2 691.1 m
138.2 691.1 L
138.2 679.1 L
89.2 679.1 L
89.2 691.1 L
b
U
u
59.2 674.1 m
108.2 674.1 L
108.2 662.1 L
59.2 662.1 L
59.2 674.1 L
b
U
u
119.2 674.1 m
168.2 674.1 L
168.2 662.1 L
119.2 662.1 L
119.2 674.1 L
b
U
u
89.2 627.5 m
138.2 627.5 L
138.2 615.5 L
89.2 615.5 L
89.2 627.5 L
b
U
u
89.2 604.1 m
138.2 604.1 L
138.2 592.1 L
89.2 592.1 L
89.2 604.1 L
b
U
u
30.2 627.5 m
79.2 627.5 L
79.2 615.5 L
30.2 615.5 L
30.2 627.5 L
b
U
u
29.9 489.3 m
94.9 489.3 L
94.9 477.2 L
29.9 477.2 L
29.9 489.3 L
f
n
U
u
29.9 519.3 m
94.9 519.3 L
94.9 507.2 L
29.9 507.2 L
29.9 519.3 L
b
U
vmrs
u
true fhsetspreadallow
105.9 519.3 m
170.9 519.3 L
170.9 507.2 L
105.9 507.2 L
105.9 519.3 L
[0 0 0 1] ka
[0 0 0 1] Ka
0.5 w
3.863693 M
b
U
u
141.9 576.3 m
196.4 576.3 L
196.4 564.2 L
141.9 564.2 L
141.9 576.3 L
b
U
u
141.9 551.8 m
196.4 551.8 L
196.4 539.7 L
141.9 539.7 L
141.9 551.8 L
b
U
u
65.4 576.3 m
119.9 576.3 L
119.9 564.2 L
65.4 564.2 L
65.4 576.3 L
b
U
u
65.4 551.8 m
119.9 551.8 L
119.9 539.7 L
65.4 539.7 L
65.4 551.8 L
b
U
u
33.4952 655.1201 m
82.4952 655.1201 L
82.4952 643.1201 L
33.4952 643.1201 L
33.4952 655.1201 L
b
U
u
339.44 691.1 m
388.44 691.1 L
388.44 679.1 L
339.44 679.1 L
339.44 691.1 L
b
U
u
216.7001 611.3 m
265.7001 611.3 L
265.7001 599.3 L
216.7001 599.3 L
216.7001 611.3 L
b
U
u
30 603.8 m
79 603.8 L
79 591.8 L
30 591.8 L
30 603.8 L
b
U
U
vmr
vms
u
true fhsetspreadallow
125.9 700.3 m
125.9 738.3 L
254.1 738.2 L
254.1 700.2 L
[0 0 0 1] Ka
S
52.8 688.3 m
52.8 700.3 L
144.3 700.3 L
144.3 588.3 L
S
52.9 623.6 m
52.9 637.1 L
114.9 637.1 L
114.9 599.1 L
S
90.4 531.2 m
90.4 588.3 L
166.9 588.3 L
166.9 552.2 L
S
190 738.3 m
190 752.3 L
S
60.4 488.8 m
60.4 531.3 L
136.4 531.3 L
136.4 517.3 L
S
214.2001 700.3 m
214.2001 675.7 L
S
243.7001 700.3 m
243.7001 683.8 L
S
273.7001 700.3 m
273.7001 676.2 L
S
81.9 700.3 m
81.9 675.7 L
S
111.4 700.3 m
111.4 641.8 L
94.4 641.8 L
94.4 637 L
S
303.2001 700.3 m
303.2001 683.8 L
S
183.7001 611.4 m
183.7001 618.4967 L
183.7001 700.3 L
361.94 700.3 L
S
333.1001 700.3 m
333.1001 675.2 L
S
361.94 700.3 m
361.94 683.8 L
S
183.9402 618.8 m
240.1001 618.8 L
240.1001 613.3999 L
S
28 599.8 m
22 599.8 L
22 637.18 L
52.9 637.18 L
S
31.5 651 m
23 651 L
23 700.3 L
52.9 700.3 L
S
U
vmr
vms
u
u
true fhsetspreadallow
98.3 729.7998 m
153.7733 729.7998 L
153.7733 713.3999 L
98.3 713.3999 L
98.3 729.7998 L
[0 0 0 0.25] ka
[0 0 0 1] Ka
0.5 w
3.863693 M
b
U
u
160.3 763.4999 m
218.6525 763.4999 L
218.6525 747.1 L
160.3 747.1 L
160.3 763.4999 L
b
U
u
27.9 491.3 m
92.9 491.3 L
92.9 479.2 L
27.9 479.2 L
27.9 491.3 L
b
U
u
219.2001 693.3 m
268.2001 693.3 L
268.2001 681.3 L
219.2001 681.3 L
219.2001 693.3 L
[0 0 0 0] ka
b
U
u
159.7001 693.2 m
208.7001 693.2 L
208.7001 681.2 L
159.7001 681.2 L
159.7001 693.2 L
b
U
u
278.7001 693.2 m
327.7001 693.2 L
327.7001 681.2 L
278.7001 681.2 L
278.7001 693.2 L
b
U
u
250.2001 676.3 m
299.2001 676.3 L
299.2001 664.3 L
250.2001 664.3 L
250.2001 676.3 L
b
U
u
190.7001 676.2 m
239.7001 676.2 L
239.7001 664.2 L
190.7001 664.2 L
190.7001 676.2 L
b
U
u
309.7001 676.2 m
358.7001 676.2 L
358.7001 664.2 L
309.7001 664.2 L
309.7001 676.2 L
b
U
u
226.2001 729.7998 m
282.1476 729.7998 L
282.1476 713.3999 L
226.2001 713.3999 L
226.2001 729.7998 L
b
U
u
159.7001 636.7 m
208.7001 636.7 L
208.7001 624.7 L
159.7001 624.7 L
159.7001 636.7 L
b
U
u
159.7001 613.3 m
208.7001 613.3 L
208.7001 601.3 L
159.7001 601.3 L
159.7001 613.3 L
b
U
u
28.2 693.1 m
77.2 693.1 L
77.2 681.1 L
28.2 681.1 L
28.2 693.1 L
b
U
u
87.2 693.1 m
136.2 693.1 L
136.2 681.1 L
87.2 681.1 L
87.2 693.1 L
[0 0 0 0.25] ka
b
U
u
57.2 676.1 m
106.2 676.1 L
106.2 664.1 L
57.2 664.1 L
57.2 676.1 L
[0 0 0 0] ka
b
U
u
117.2 676.1 m
166.2 676.1 L
166.2 664.1 L
117.2 664.1 L
117.2 676.1 L
[0 0 0 0.25] ka
b
U
u
87.2 629.5 m
136.2 629.5 L
136.2 617.5 L
87.2 617.5 L
87.2 629.5 L
[0 0 0 0] ka
b
U
u
87.2 606.1 m
136.2 606.1 L
136.2 594.1 L
87.2 594.1 L
87.2 606.1 L
b
U
u
28.2 629.5 m
77.2 629.5 L
77.2 617.5 L
28.2 617.5 L
28.2 629.5 L
b
U
u
27.9 521.3 m
92.9 521.3 L
92.9 509.2 L
27.9 509.2 L
27.9 521.3 L
[0 0 0 0.25] ka
b
U
vmrs
u
true fhsetspreadallow
103.9 521.3 m
168.9 521.3 L
168.9 509.2 L
103.9 509.2 L
103.9 521.3 L
[0 0 0 0.25] ka
[0 0 0 1] Ka
0.5 w
3.863693 M
b
U
u
139.9 578.3 m
194.4 578.3 L
194.4 566.2 L
139.9 566.2 L
139.9 578.3 L
b
U
u
139.9 553.8 m
194.4 553.8 L
194.4 541.7 L
139.9 541.7 L
139.9 553.8 L
[0 0 0 0] ka
b
U
u
63.4 578.3 m
117.9 578.3 L
117.9 566.2 L
63.4 566.2 L
63.4 578.3 L
[0 0 0 0.25] ka
b
U
u
63.4 553.8 m
117.9 553.8 L
117.9 541.7 L
63.4 541.7 L
63.4 553.8 L
b
U
u
31.4952 657.1201 m
80.4952 657.1201 L
80.4952 645.1201 L
31.4952 645.1201 L
31.4952 657.1201 L
[0 0 0 0] ka
b
U
u
337.44 693.1 m
386.44 693.1 L
386.44 681.1 L
337.44 681.1 L
337.44 693.1 L
b
U
u
214.7001 613.3 m
263.7001 613.3 L
263.7001 601.3 L
214.7001 601.3 L
214.7001 613.3 L
b
U
u
28 605.8 m
77 605.8 L
77 593.8 L
28 593.8 L
28 605.8 L
b
U
U
vmr
vms
u
vmrs
%%IncludeFont: Helvetica-Condensed
MacVec 256 array copy
/f1 /|______Helvetica-Condensed dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
174.700058 684.311234 m
0 0 32 0 0 (Label) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed
MacVec 256 array copy
/f1 /|______Helvetica-Condensed dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
237.200058 684.311234 m
0 0 32 0 0 (List) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed
MacVec 256 array copy
/f1 /|______Helvetica-Condensed dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
267.200058 667.41124 m
0 0 32 0 0 (Grip) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed
MacVec 256 array copy
/f1 /|______Helvetica-Condensed dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
287.200058 684.311234 m
0 0 32 0 0 (Scrollbar) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed
MacVec 256 array copy
/f1 /|______Helvetica-Condensed dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
166.000061 627.91124 m
0 0 32 0 0 (Command) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed
MacVec 256 array copy
/f1 /|______Helvetica-Condensed dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
46 684.311234 m
0 0 32 0 0 (Box) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed
MacVec 256 array copy
/f1 /|______Helvetica-Condensed dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
66 667.41124 m
0 0 32 0 0 (V) ts
71.003174 667.41124 m
0 0 32 0 0 (iewport) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed
MacVec 256 array copy
/f1 /|______Helvetica-Condensed dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
93.5 684.311234 m
0 0 32 0 0 (Constraint) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed
MacVec 256 array copy
/f1 /|______Helvetica-Condensed dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
133 667.41124 m
0 0 32 0 0 (Shell) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed
MacVec 256 array copy
/f1 /|______Helvetica-Condensed dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
41.699997 620.711243 m
0 0 32 0 0 (Paned) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed
MacVec 256 array copy
/f1 /|______Helvetica-Condensed dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
102.5 620.711243 m
0 0 32 0 0 (Form) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed
MacVec 256 array copy
/f1 /|______Helvetica-Condensed dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
100.5 597.211243 m
0 0 32 0 0 (Dialog) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed
MacVec 256 array copy
/f1 /|______Helvetica-Condensed dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
143.399994 568.41124 m
0 0 32 0 0 (OverrideShell) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed
MacVec 256 array copy
/f1 /|______Helvetica-Condensed dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
74.600006 568.41124 m
0 0 32 0 0 (WMShell) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed
MacVec 256 array copy
/f1 /|______Helvetica-Condensed dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
69.199997 544.41124 m
0 0 32 0 0 (V) ts
74.04277 544.41124 m
0 0 32 0 0 (endorShell) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed
MacVec 256 array copy
/f1 /|______Helvetica-Condensed dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
36 512.41124 m
0 0 32 0 0 (T) ts
39.834229 512.41124 m
0 0 32 0 0 (opLevelShell) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed
MacVec 256 array copy
/f1 /|______Helvetica-Condensed dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
111.5 512.41124 m
0 0 32 0 0 (T) ts
115.334229 512.41124 m
0 0 32 0 0 (ransientShell) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed
MacVec 256 array copy
/f1 /|______Helvetica-Condensed dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
31.899994 482.41124 m
0 0 32 0 0 (ApplicationShell) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed-Bold
MacVec 256 array copy
/f2 /|______Helvetica-Condensed-Bold dup RF findfont def
{
f2 [8.856323 0 0 12.000244 0 0] makesetfont
106.960236 717.717911 m
0 0 32 0 0 (Composite) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed
MacVec 256 array copy
/f1 /|______Helvetica-Condensed dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
172.600067 604.41124 m
0 0 32 0 0 (T) ts
176.434296 604.41124 m
0 0 32 0 0 (oggle) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed
MacVec 256 array copy
/f1 /|______Helvetica-Condensed dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
144.899994 544.41124 m
0 0 32 0 0 (SimpleMenu) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed
MacVec 256 array copy
/f1 /|______Helvetica-Condensed dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
316.200058 667.41124 m
0 0 32 0 0 (StripChart) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed-Bold
MacVec 256 array copy
/f2 /|______Helvetica-Condensed-Bold dup RF findfont def
{
f2 [8.932022 0 0 12.000244 0 0] makesetfont
241.218857 717.717911 m
0 0 32 0 0 (Simple) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed
MacVec 256 array copy
/f1 /|______Helvetica-Condensed dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
41 648.431351 m
0 0 32 0 0 (Porthole) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed
MacVec 256 array copy
/f1 /|______Helvetica-Condensed dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
349.44635 684.411224 m
0 0 32 0 0 (Panner) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed
MacVec 256 array copy
/f1 /|______Helvetica-Condensed dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
223.46434 604.41124 m
0 0 32 0 0 (Repeater) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed
MacVec 256 array copy
/f1 /|______Helvetica-Condensed dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
45.09082 597.111237 m
0 0 32 0 0 (T) ts
48.925049 597.111237 m
0 0 32 0 0 (ree) ts
} 
[0 0 0 1]
sts
U
vmr
vms
u
U
vmr
vms
u
vmrs
%%IncludeFont: Helvetica-Condensed-Bold
MacVec 256 array copy
/f2 /|______Helvetica-Condensed-Bold dup RF findfont def
{
f2 [13.441849 0 0 13.999847 0 0] makesetfont
173.49968 750.413284 m
0 0 32 2.143936 0 (Cor) ts
198.597824 750.413284 m
0 0 32 2.143936 0 (e) ts
} 
[0 0 0 1]
sts
U
vmr
vms
u
vmrs
%%IncludeFont: Helvetica-Condensed
MacVec 256 array copy
/f1 /|______Helvetica-Condensed dup RF findfont def
{
f1 [9 0 0 9 0 0] makesetfont
208.100067 667.41124 m
0 0 32 0 0 (T) ts
211.934296 667.41124 m
0 0 32 0 0 (ext) ts
} 
[0 0 0 1]
sts
U
vmr
%%Trailer
end  % FreeHandDict
end  % FHIODict
countdictstack InitDictCount sub { end } repeat
cleartomark
restore
grestore

%%EndDocument
FMENDEPSF
111 331.01 507 657 C
45 63 567 729 C
FMENDPAGE
%%EndPage: "445" 5
%%Page: "446" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (446) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 10 Q
7 X
(G) 74.62 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
-0.45 (The first two arguments to this function give the instance name and class name of the appli-) 141 246.32 P
0.67 (cation. This becomes the start of any resource specification for this application. And we) 141 234.02 P
0.76 (know that if) 141 221.72 P
2 F
0.76 (xclipboard) 194.1 221.72 P
1 F
0.76 ( has an app-defaults file, it will be called) 237.43 221.72 P
2 F
0.76 (XClipboard) 409.21 221.72 P
1 F
0.76 (, since that) 456.44 221.72 P
-0.5 (name is taken from the class name of the application. Notice that there\325s no magic here: this) 141 209.42 P
0.46 (is under the explicit control of the application programmer. If he doesn\325t follow the con-) 141 197.12 P
0.4 (ventions for the application\325s class and instance name, he\325d better document what names) 141 184.82 P
(he used here!) 141 172.52 T
0 1 1 0 1 0 0 K
105 123 501 140.98 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
105 123 501 140.98 R
7 X
0 1 1 0 1 0 0 K
V
106.07 128.96 286.07 128.96 2 L
V
0.5 H
2 Z
0 X
N
45 63 567 729 C
0 0 0 1 0 0 0 K
1 8 Q
0 X
0 0 0 1 0 0 0 K
-0.32 (1. Actually, modern Toolkit applications are supposed to use the more complex) 141 117.67 P
4 10 Q
-0.95 (XtAppInitialize) 393.61 117.67 P
1 F
-0.4 (, but) 483.61 117.67 P
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
4 F
-0.85 (XtInitialize) 141 107.67 P
1 F
-0.35 ( makes the concept clearer, and besides, it\325s what) 213 107.67 P
2 F
-0.35 (xclipboard) 409.49 107.67 P
1 F
-0.35 ( actually us-) 452.83 107.67 P
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
(es.) 141 97.67 T
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
3 9 Q
(Figure) 141 275.98 T
(G-) 171.01 275.98 T
(2. listres for \322label\323 widget) 181.01 275.98 T
135 294.15 517.33 657 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 X
0 0 0 1 0 0 0 K
%%BeginBinary:  35464    
898 852 380.33 360.85 0 136 295.15 BEGINBITMAPBWc
7"J"
DFP2BF7"J"
FFP2FF7"J"
DFP2BF#J$
F23FP0FB93FF5
P5FFFBFFFD24A5249294AA955492495524AA49249249495524AAAA9292494A4924924A524924924A924A49294AA92492494A4924AAAA49249254A5524A492552AAA924A49249249254A4924925555524925292492AA492492AAA492492492AAAAA4955494924924924925292492492ABFFBF%Z
F7FFFFFBP/9"J"J"
FFO&F7O)FF"8"J"J"
FFFBO&E7O)BF%J&J"
F7FFC07BO%F30187264CO&FF%J&8"J#F#
97FFFFFFO&273326227FEF=FEFBFD3F%;$8$;%G#<#8*A$;"9#:&B$
FFFFEFFBBBF77FDFFFDFBDFFDDDFFBBFDDDFF967331E667FFEFFFEFEEEEFF7F77FFFFFBFFFBBBFFF7F;"8%8$:'8"9":#9#9"8#8%8%<#8$8"8#8#:'<#9$
FEFBFFFFFDFEFFFFEFFFFFFFFFBFFBFDFBBFBFFF7BFFFFFCE7033EFFEEFFFBFBDFFFFFFEFDFEEFFFEEEFFFFEFFFFDFDF7FFFBFBF7585
O+BFF7FBEEEFEF777FFFBFFFDEEEFFEFFDEFDF7DEEFFFFEFFFFDFBBBBBBFBDEF7BDFDDDDEF777FFBBBBDDFFFFBBBBBDFFFBFBDFFFDEF7BFA673EO'77BFFFFFFFBBBBDEF7BDEEFFFDF7BDEFFFFFEF7BBFDF7BFFFF7FBDFFFFEF7DEF77FFFFFFEFFFFDDEF7BDDDEFBFFFF77BEF77FBFF7F7#W"P$Z"Q"P(9V8P%8'T"R"
FBF7FEFDFFFE2FBFBD3273B36667FFFBFFFFBFFFFFFFFFEFFEFFDBF7$="9$9$H"<";%;"H$<&="="
FFFFFBEFFFFFFEFFFFFFFFFFF330873EBFFFFFFFFFFFFFEFFEFF7FA";":"J"8+<"E";%>":$
FFFFEE=7FFFDFFFFFFDFFFDFFFBFFEFF7FEFEFFFFFD7FFFBF"=$9'8%G#8#8#8*=(9"8"8"8"8#8";&8$
FDF777FBEFFFEFFFFBDFFFFFEEEFDDDFF77FDFF7FDFFF7FF7FDFFFFEFFFEFF7FFFFEEEF7F7F77FDFFFFFEEFBFFFFFFFEFFDF7F"8%P*9$908)P5
FFFFDFFFDEBDFFFFBFFFEFFFFEEFFFFFFD7BBBBBBFBFFFDEFFF777FFFBFFFFFF7FEEFFFBFFFFEEEEO'FDDFEFFFFBBFFF77777777FFF7FDDDDFFFFFBDDDF77FF7FF7FBFF7FFBDDDFFDEFFEFFFFEEFFFFBEEEEEEFFBFEFDFEFEFF77FF7FBBF7(8,8"818(8#;P#T8.V,
FE000FFDDDFFEE7FBFFFDDFFFFFEFFFFFFFEDF7FDDDDDFFFFFFFFBFBBBFFEEFFFF777FFDDDDFFFFFFDFFFFFFFBBFFFFFFFFF7FDFFFFBFFFFFFFFFDEFFFFFFFFEFFFFF7FFFF7F7"Q8P#9&P9P8(8%8%:%:"@&9&=&8"8"
EFF77FFFF77FFF7FFFFFEEFFFFFFFFDFBFFFFEDFFF7FF7EFFFFFF7BFFFFFFFFF7FFFFFDDFFF7FFFFFDFFFFFFBF7"?"8&8%G"<%8*8":$B";(;#:$
FFFBFBFFFFFEEFFFFFFFFFFFFFFFF7FFFFEFFEFFDFFFFDFFFEFFFFFFEFFFFFFEFFBFFDFFDF7FFDFEFF7F"@"8"8#J":S?"IQ;#:$
F7FFFFFFFF@FFFFFFFFFFF7BF5
P5FC255AA008888022000080940088144902229000422480210000808888800084208888880044008222002480044440008892401004821120524290A00412004901089208210820800052100000000040000100000025000000400401240524902480500208410002920A04400210052F7FZ"
P4BF8"J"
EFP17FJ"
P4BFJ#
P3FE7FJ#
P3FFBFJ"
P47F;$>%8"J"
F81FF3F81FFFE781OKBF9%?#:"J"
81FFFF9FFF9FF9OK7F9"9"8"J"
2DFF3FP)BF9"J"
2FP07F=)9%J"
83F03C03E63C3F0381E63F0FOLBF=)9%J"
F3E7BF3FE4399E7BBCE01E67OL7F9";'9%J"
8FFF3FE1FBCE7FFCE38EF3OLBF9":"8%:#J"
C7E1E3F3CE1FE7CCOM7F9":"8%9"8"J"
E3F0E7F00F0FC003OLBF9":#8$9"8"J#
E9F83FF3FF839CFFOKFD7F>#:"9"J#
FE1FE13CP FFBF>";";"J"
FFF1DCOM7F9":"9#:%J"
69EFF9EE38E39E7BOLBF9":(9%J"
03E03F87E7FC0E0382243F03OL7F9"8T8QJ"
EFOKBF9"J"
FFP07FJ"
P4BFJ"
P47F"J"
EFP3BF"J"
FFP37FJ"
P4BF<$:#J"J#
9FFE7FFE07LC0O%FE7F:#<$J#B#J#J#
9FCFFE07E7=807FC0FC<003F5FFBF:$:$J#8"?"J#J"
9DCFFFE7FCF7>F3FFF39E=F3FF67FB#J"J"
F9FFL3FO'BF:*8%J+9(J%I"
888C1FC2784F0F807BE07C0F81:F31F03C03C0F31FC0F0F7FFCFC0F81F03F8F3F263F07F:*8%J+8"8&J&H"
CA9F9F8C738E67E7F3EF39EF3D:F20E7BF3FDE720F8EE67FEFDE73DE7BF8F1E601E67FBF=%:%J+;&J&H"
1E77CEF3FF39FF3F:F0CE7FF3FFE70CF1FEF3FFE73FE7FF8F9E638EF3F7F:'<$J$9$>#J$I"
C21F9F3E67CC387F0F:F1CE1F1CF3FC0FE1:EE7CCFBF:#:":%J(8";%J%I"
E23F03F03C3F87:F3CF0FF3FE073C03FE0787F09FCCE7CC07F:";":%J%9";&J%H"
E7FFE73E0FC1<83F3FCE7FFFCE7C1F83F9DE7CCFFFBFB"8%J$=)J"J"
F9CF3F87F0<E1F3F9FF3FFCF9E7F0FE1F91E57F=$8#9#J":";"9#J"J#
1C638CF8F7C7F8<F1F11EF8FF9FE5FBBF:0J"9&9"8$J%G#
F77F9F80700E7BE7FC07E7CE3BC778;CEC73CF8EE7B80C778EF:3E39E7BFFF7F=-J,9(J&H"
C678CF03F0FE0FE7E0880F0198073CE03F87C113CFC0F03C1FCFC1101E03F8FF3E43F03FBF:P"TJV9RJ'H"
CF97FFFF7E7FFFFF7FJ"J"
OKFE6BF"=#J"J"
F7F79FOBFE57F"=#J"J"
FFF03FOAF96BF>#J$J"
FFFFOAFFFFFF47FJ"
P4BFJ"
P47FJ"
P4BFJ"
P47FJ"
P4BFJ#
P3FD7FJ#
P3FFBFJ"
P47FJ"
P4BFJ"
P47FJ"
P4BF:1J,8)J'H"
C0180300600C0180300600C01803007F880300600C0180300600C01FE00C0180300600F780300600C01F7F:ZJV8SJQH"
087BFJ"
P47FJ"
P4BFJ"
P47F"J"
EFP3BF"J#
FFP2FD7FJ#
P3FFBFJ"
P47FJ"
P4BFJ"
P47FJ"
P4BF8%8#B"9"<%J"
EE07FFF9E07FF9C09FFFFE07O=7F8#:";":$:"8#:#J"
EFE7FEC0E7FF03FC3FF3FFE7O=BFD":%<"J"
9EF7FE7BFFBFOD7FD":$="J"
3FF3FCFF9FODBF:%8"9'8/J"
E0798FC38F7FF07E63C3FBC1F26663FCFE1FDFF3FE0798FC3FO>7F:%;28%J"
EF380799FE7FE73E4399F9FC7FF9F00201FCFCCFCFF380799FO>BF:%=5J#
FF38E3BC5CF9E1FBCFDFE1FF9F33238FCFDE7EFF3FFF38E3BCFO=FD7F;$8"<&9&9#J#
39F33CFF3F3CFCFF877CFCF9E7E79F33O>FFBF:"8"?&;$8%J"
F0007F00FEFFE3F807F7039F300FO>7F:"8"@%;*J"
E73F3FFE7FF1F9FFF3F3FE739F33FFO>BF:">#:$=%J"
CFFF3FFF7FF9FBF3FCF3OA7F<"9"9";">":"J"
F78F1E3FF973O?BF"9%<)9&8%J"
F7CE38E79E80E73E7F9EFFBCF339FCFCF7FDE38E79EFO>7F"9%<)9,J"
FFE0890FC0C1F07E7FC0FF9C0743FCFE07FCF00E0890FC0FO>BF9S9Q+RJ"
DFFFFFFFFE7FFFFFFFFEO=7FJ"?"J"
4CF7FOCBFJ">"J"
4EFFFOD7FJ"?"J"
4FFFFOCBFJ#J#
8FFFFOGFD7FJ#
P3FFBFJ"
P47FJ"H#J#A$9"
L81E07F<F81F3FE07FBF:#J"C":"J":#>#8":"
F81FFF9C7FE8F1FF9F801FFE7F:#J#H"J"9#="
F3DFKFE7F9F=E7F9FFBF:#J"
E7FFP.7F:'J29&8*D&8-8"8"
EFFE0FCC787F<FC0FE07C0F0FF9FC3F98E07807C1F98E0793F81F03C30FE6381E01F07E6381E4FE07C0F0C3F98E07807C1F98F9FC0F310FBF:'J291D58"
CFFCE7C8733F<FDE7C778EE67F9F99F90EF3E7F9CF90CF7B3F1DE3B99FE7E67E43BCF9FE73E433D6ECFC778EE67F9F99F90EF3E7F9CF90F9FDE700FE7E677F;&J,8%9&8$8%D+8+8"
F9F3C3F79F<FFE78FF1FEF3F9FBCF87FF3E787CFF33E3FC7FBCF3E1FFCF9E1F3FCCF8FF1FEF3F9FBCF87FF3E787F9FFE71C7E7EF3BF=#J$8$;#9*;#E%8$:"9$9"
C7E7?9FF3FCF3CF8FFC3F31E7FCFF3CFE7CF3E33F0F79FF3FCF3CF8FF8F3E7E7C7F=$J#9'9$9"9"8%9#D"9"8%9%9"8"
CFE01F<FE0703F9F00F9FF079FE1F790003E7FC0F7F87DEC000F9FF039FF9FE0703BF>#J#9':#8#9"8%:"D"9(;#9%
E7FF<FCE7FFF9F3FF9FE7FF07FE013FFFE7F9CFC180CFFF9F3FF9FE73FCE7FFFFFD7F"9"J"?";"9">";"D#=#;"<#
EFE7AF9CFC37CF3F09F39FCF3F9FFBF"9#J#B"9%A"D%E":"
FFE3D9B8FF1E3FCE3FC7FF8BF38FF1FFE7F:'J+8$9*8'D)8%9&8"
F01CE7CFF3DF=C7C778EE7BF9F9EF9FCE9CF9FDFCFCF1DE3B9EFE7E7B8F9FE73E7F783F3C778EE7BF9F9EE3E7F9CFC71CFE7E7BBF:'J2:0E.8'8"
F83E0FCFF81F<FC11E07C0F03F9FC0F9FE08F0FC1F9FC07781F03C0FE7F03E7F823C3F07E7F011E07C0F03F9FC0F9FE08F0FC1FFC1121FE7F037F:QJZ8ZDZ8"
<116BFJ"
P47FJ"
P4BFJ"
P47FJ"
P4BFJ"
P47FJ"
P4BFJ"8"A%J"H#
O"FCF3FE7FFFF99C0FD7F:#J"D"J#8"H#
F81FE0381=C07FFCFFBF:#J#8#:%<":%J#J"
F3DF@FE7FFE7BFFFE7FFF3DFFFF3FFF5CE3F67F:#J#C#J"J"
E7FFDFCFFFE7F=CF7BF:'J5:,I*D"
EFFE0FCC787F58FE0798FE0787E07807C1F98CFFE1F31F03E0F80783E7E70FF0F98F81F07C03C1F3F3873C1F83FCFE1F81E63F7F:'J59-I*D"
CFFCE7C8733F67F3907C7733CF7E7F9CF90C7FCCF20E7BFCFE7FF3E3EE673FE679073DFE7F3FF9F1F73379CF39FCFCCFBCE41FBF;&J2:$8':$H+D"
F9F3C3F79F5FFF38678FF79CFFE7F3E787E1FDE70CE7FF3CEF3FF0FEF38673FF9E779CEF3E67CFCFDE7FCE19F7F=#J&:';":&;"I":"8"E"
C7E788E79FE79C3FF879E71CE1FDCC3CF38E70FEEC0F9E3BF"<$J#8#9(:$9&:$H#9%E"
F7CFE01F6039E01E179FFE38073CF0FF99C03F1C039E787FCCE01CE73F807C0E77F"=#J#9$:&<"9&<"H#9$F"
FFE7FF5FE737FF07EF19FF3CF83FFF8CFF9E7C17FCF33F9FF9CBF:"J#:#:"9":#:"9";"J"F"
E7:FCF3FC3EF9E1F83CFCF01E:3C7F:#J"8"?":"?":"J"
E3D9<78FEF1FCF8FELBF:'J'8(<#8';#H)E#
F01CE7CFF3DF6E39E7C773DDE9CF9FCF3CF73CE7E7BFE79E7B9E7783F3DCE39CF39FCFCF738FD7F:'J+8#8)9&8&H*D#
F83E0FCFF81F5FE089E7E0781C07F0FC107E003FCFF0FF3FE7F0303F039E70187F9FF3F81C07C1F83FCFE078227FFBF:QJZ8XHUD"
587FJ"
P4BFJ"
P47FJ"
P4BFJ"
P47FJ"
P4BFJ"
P47FJ"9">"=">"H"8#G"
IE7F9F99F9F3FF81FBF:#J"J#9#G"
F81FO&01=C07FFF9F7F:#J"J$J"
F3DFO&38=CF3FFF5BF:#J"J#
E7FFO&3CO&FD7F:'J/:-H%H#
EFFE0FCC787F?E63E07F039E784F31E0F3CE63F09E07F039E784F31E0F3CE63F0383E3CF0FFBF:'J/9/G&H"
CFFCE7C8733F?E01EF3E3B9CF38F21CE73CE41E313DEF3E3B9CF38F21CE73CE41E31F3F3F39E67F7F":&J/9/I$H"
EFF9F3C3F79F?E38FF3C7F99F7CF0F9F33CE19C793BFF3C7F99F7CF0F9F33CE19C79F9BEF3FBF"<#J)9$9"8&9#H%I"
FFC7E7@E7CFF3CFF93E7CF1E39CF903FF93E7CF1F39CF7F3F83CF7F=$J'9";#8"8"9"H&I"
CFE01FA03CFF87E7CF3E739F0873F79C0FF3FC7C0BF>#J#8"A#8"J"9#H"
E7FF@CE733E3CE7839CFCFFF7F:"J&B"8"J"J"
E7ECCF3CFF91ECF91<934BF:#J'<"<%;#I"J"
E3D9DDCF3C7F98E38717F98E38FC71FB147F:'J/9.J$H"
F01CE7CFF3DF?E39CE3E3B9C700F3FCE700E79E0138CE3E3B9C700F3FCE700E79E0439E7BFBF:'J/9/H%H"
F83E0FCFF81F?E43E08F039E38CF3FE0F84E79F1901E08F039E38CF3FE0F84E79F19F3E7C703F7F:QJQ"R9Q"RFRG"
?FCCFBFJ#
P3FD7FJ"E#J#
O!79F79FO FFBFJ"E#J"
O!03F03FO!7FJ"E#J"
O!FFFFFFO!BFJ"
P47FJ"
P4BFJ"9">$@"J"J"
A9FE7E7FFFCFC>3F57F:#J"@"J#J"
F81FI0101=C07F6BF:#J#?#J$J"
F3DFI3CFF3CFF<CF3FFF57F:#J"
E7FFP.BF"9'J5:(J(F"
F7EFFE0FCC787F7698F81FC0E79E13CC783CF398FC273CE0F8F326703CC7E0F8F326703CC77383E3CC99C0F317F"9'J5:(J(F"
FFCFFCE7C8733F76807BCF8EE73CE3C8739CF39078C73CFCFCE700379C03FCFCE700379C0373F3F39C00DE700BF;&J/8';'J'D#
F9F3C3F79F78E3FCF1FE67DF3C3E7CCF38671E7FE6F333F9C71FE6F333F9C7199BCCCFE71C7FFD7F=#J"8&9%8"9"9"8"9"J$9"E#
C7E789F3FE4F9F3C78E73E73D0FF93D0FF977F3F833EFFBF=$J%8"9"8(:(J(G"
CFE01F83C0F3FE1CF9E03FCFF1F33381C03FCFF1F33381C7C0FF3FC7CCCE077F>#J%?":#:":#J":#G"
E7FF839CF3FE03F339C3F339C7CFCCE7BF:"J"8#@%=%J$H"
E7=33E479FE4F3327FE4F3327;93CCC97F:#J';#9"@"J"J"
E3D9<73CF1FE638E371C7C7C7=B14BF:'J/8#8#;#8#J"8$E"
F01CE7CFF3DF78E738F8EE71C03CFF39C039E7807FCE71C73FCE71C73939C71CFF7F:'J/8';'J'F"
F83E0FCFF81F790F823C0E78E33CFF83E139E7C67F9F133304487F9F13330448783E7C4CCC1121BF:QJQ"X#9Q#JR"F"
7F3FCFFFCFF63F7FJ"
P4BFJ#J"
FFDE7O:7FJ#J"
FFC0FO:BFJ#C"@"J"E#
FFFFFFFFF>FFFD7FJ#
P3FFBFJ"
P47F=%J$@"J"J"
3FFFFC0FCFE7FFCFC>3F5BF:":#J"J#J"
E7FFCFO!01=C07F67F"J$=#J%J"
EFO!FFFE7F3CFF<CE3FFF9F4BF"J"J"
FFOICF77F;&J):(J(F"
FC0F31F87FE63E0F80726703CC7E0F8F326703CC77383E01C99C0F31BF;&J):(J(F"
FDE700F33FE01FCFE7F00379C03FCFCE700379C0377F3F9FC00DE7007F;&J"9%;'J#8&E"
FFE71C779FE38333F9C71FE6F333F9C716CEFFCCCFE71C7FBF=#J"<"9"8"9"J"<"F"
3E67F7CF93D0FF96C03E7F;&J#:(J#9#G"
FE073E601FJ381C03FCFF1F33381C7CE7FCE07BF;&J#:":#J#9#F#
FCE73E67FFJ339C3F339C7CF3FCCE7FD7F;"J"=%J"G#
F9O 27FE4F3327=C9FFBF>"J"C"J"
E7F7DC7O$7F<%J";#;#8#J";$E"
C71CF3DFE391C73FCE71C736CEC71CFFBF:'J);'J)F"
E01C1121F81FE43FCFF0F33304487F9F1333044876C07F3FC3CCCC11217F:RJR#9Q#JR"F"
CFCFFFCFF63FBFJ"
P47FJ"
P4BFJ"
P47FJ"@"J"F"
O'FFFF>FFBFJ"
P47FJ"
P4BF"J":";"@#:#J"8#F#
F7G3F3F03FE7FFE0743FF81FFD7F"9#J%<"=%H#9#F#
FFF81FJF81FFFF301F03FFFE7C07FFF9FFFBF:#J#>"=#J$J"
F3DFJF3DF38E7BF4CF3FFF57F:#J#>"=#J"
E7FFJE7FF3CCFFFLBF:'J0:/F%I"
EFFE0FCC787F>31F83F31E13C3F98EFFE0FF3F83F31F07E63C2787F31DFFC1FE7F07E63383E3CF07F:'J090F&H"
CFFCE7C8733F>00F39F21C6399F90CFFCE7F3F39F213DE73E438C733F219FF9CFE7E73E433F3F39E67FBF;&J090H$H"
F9F3C3F79F>1C67CF0F8F3BCF87CFF9F3F3E7CF0F3BCF9E1F1E779F0F9FF3E7E7CF9E1F9BEF3F7F=#J"8&<"9"8&<"F%I"
C7E7?3E1F9F33CF8F1F033F3E679F1F3F7F3F83CFBF=$J&<"9"8&<"E&I"
CFE01FA3F9F300F9F3F397F3E601F3F7FC0FF3FC7C07F>#J#A":#J"9#H"
E7FFC33FF3C67FF7CFCFFFBF:"J"G"J"J"
E7KE7CF89347F:#J"8"9#B"9#J"J"
E3D9CE78EE3D91CC7B37B14BF:'J/:/I$G#
F01CE7CFF3DF>1CF39F3FC039EF9FF01CE7F3F39F38E73E7F8073DF3FE039CFE7E73E39E7BFFD7F:'J/:/H%G#
F83E0FCFF81F>21F83F3FE33C0F9FF83E0FF3F83F01F07E7FC6781F3FF07C1FE7F07E3E7C703FFFBF:QJZ9ZERG"
>//7FJ"
P4BFJ"
P47FJ"
P4BFJ"
P47F"J"
EFP3BF"J"
FFP37FJ":":"@"J"J"
FF9F9FCFC>3F5BF:#J"@"J#J"
F81FI0101=C07F67F:#J#?#J$J"
F3DFI3CFF3CFF<CF3FFF5BF:#J#
E7FFP-FD7F:'J1:(J(E#
EFFE0FCC787F=8FC1F98F09E1FCC73CE0F8F326703CC7E0F8F326703CC77383E3CC99C0F31FFBF:'J2:(J(F"
CFFCE7C8733F<F8079CF90E31CCFC873CFCFCE700379C03FCFCE700379C0373F3F39C00DE7007F;&J)8';'J'E"
F9F3C3F79F=E33E787C79DE7C3FFE6F333F9C71FE6F333F9C7199BCCCFE71C7FBF=#J#8'8"9"9"8"9"J$9"F"
C7E7=F9F3FCF99E7C7F3D0FF93D0FF977F3F833E7F=$J"8+:(J(G"
CFE01F?79807CFF03FCFF1F33381C03FCFF1F33381C7C0FF3FC7CCCE07BF>#J%:#:":#J":#G"
E7FFB9FFCFF3F339C3F339C7CFCCE77F:"J%=%J$H"
E7LFE4F3327FE4F3327;93CCC9BF:#J"9"<"@"J"J"
E3D9AF771C7C7=B147F:'J)9#8#;#8#J"8$E"
F01CE7CFF3DF<F8E79CF9FE01CF7CFCE71C73FCE71C73939C71CFFBF:'J(:';'J'F"
F83E0FCFF81F<F90FC1F9FF19E0F9F133304487F9F13330448783E7C4CCC11217F:QJZ#9Q#JR"F"
</FCFFFCFF63FBFJ#
P3FD7FJ#
P3FFBF"J"
F7P37F"J"@"J"F"
FFO&FFFF>FFBFJ"
P47FJ"
P4BFJ":":%>#:%H";#D"
H3F3F9FFE7FFCFE7F3FFCFFF93FFE7F7F:#J#>"=#J"J"
F81FJ9FCF013F9F4817BF:#J&;"=&G$;#D"
F3DFJ9DCFFFFE79383B9FFFFCF39C7FFFFFFF7F:#J"J"J"
E7FFO&3C=9E7BF:'J0:/E-B"
EFFE0FCC787F>31F83F31E13C3F98888C1FC2601CC7F07E63C2787F3111183F84C0398F9F383E4CF0F98F81F07F07987F:'J090F-A"
CFFCE7C8733F>00F39F21C6399F90CA9F9F8C79FC033DE73E438C733F21953F3F18F3F8073F3E006679073DFE7E73907FBF;&J)9"8"9)8#8"H*A#
F9F3C3F79F>1C67CF0F8F3BCF871E733BCF9E1F1E779F0F3E3CE7666F38673FFE7CF986FD7F=#J"8*8"9"8'8$J%9"A#
C7E7?3E1F9F33CF8FC21F9F3EF3033F3E679F1F847CF3F944F38E70F8EFFBF=$J(>"8(J%9"B"
CFE01FA3F9F300F9FE23F397F3E601F3FC47F84039E7879E7F>#J%?":%J%F"
E7FFC33FF9FE73C67FF3FCE94FF9E7C1BF:"J"F"
E7OLF07F:#J"8"<"@"<"H#;"F"
E3D9CE78E1C1C389E7FF8BF:'J-<-H#8(C"
F01CE7CFF3DF>1CF39F3FC039EF9FF77F9F8038E73E7F8073DF3FEEFF3F009CFF67B9E778FE7E737F:'J(:$:(:$F"9(C"
F83E0FCFF81F>21F83F3FE33C0FC67C3C01F07E7FC6781F8CF879817039E701FE7F07BF:QJZ9ZEXA"
>//7F"J"
EFP3BF"J"
FFP37FJ"
P4BFJ#
P3FD7FJ#
P3FFBFJ"
P47FJ#B#J#J"
O FE07F81F<FE074BF:#J#@%J%J"
F81FHFFE7C0FFFF9F:F03FFFE747F:#J"J#J"
F3DFO&9E=E7BF6BF:#J"J#J"
E7FFO&3F=CFFF67F:'J,9,I,C"
EFFE0FCC787FBF03C1FE7F07E6326703CC77FF07F9FC1F98C99C0F31FDFFC1FE7F07E6326703CC7BF:'J,8-I,C"
CFFCE7C8733FBE3B9CFE7E73E4300379C03FE7FE73F9F9CF90C00DE700F9FF9CFE7E73E4300379C037F;&J,:+J+C"
F9F3C3F79FBC7F3E7E7CF9E1F333F9C71CF9F9F3E787CCCFE71C74F3E7E7CF9E1F333F9C71BF=#J";"9"?"8#J"9"C"
C7E7CCF3FF9FC73E793FF97F=$J%?"8"J%D"
CFE01FH7F33381C79E0;7F33381CBF>#J#B"J#C#
E7FFJ339CCE=339CFD7F:"J":#="J"="D#
E7O!27FF3F9E5CF27FFBF:#J"C"J#J"
E3D9FC71E=C7B367F:'J'9#9'8$I'9#C"
F01CE7CFF3DFBE3B9CFE7E73E1C7380E73F9F9CF99C71CFE039CFE7E73E1C73BF"9'J'8$9&9$I'8$C"
F7F83E0FCFF81FBF03C1FE7F07E304487C1F07F9FC1C1121FF07C1FE7F07E3044877F"9QJT#9T#IT#C"
FFBFCFFF3FFFCFFBFJ"
P47FJ"
P4BFJ"
P47FJ"C"J"D"
O'FFFF=FFBFJ"
P47FJ"
P4BF<"8#J#
9FFC0FP(FD7F:#9#J"J#J#
F03FFFCFO!C0=F03F5FFBF:$J"J#J"
E7BFFFO%9E=E7BF67F:#J"J#J"
CFFFO&3F=CFFF6BF;(J)9)J*E"
FC1F26663FCFE1CC0CF3E6381F83F317FCF3E6381F83F316DFF3CF98E07E0FCC7F7F:)J"8&8"9&J"8&F"
C7FF9F00201FCFCCC8E433DF39F21FE433DF39F2169F90CF7CE7C8BF:"8'J"8&<&J'E"
E133238FCFDE7FB1F1F3FE7CF0F1F3FE7CF0F987CFF9F3C3FF7F:#8%J"8#8"<#8"J#8"F"
F87F27CFCF9EC3F3F0F1F3F0F1F98FC3C7BF:#;"J#8"<#8"J#8"F"
FE3F80F7F873F7F873F99FE1CF7F:#;#J"@"J#H"
FF1F9FFFFC1C1=F079BF;"J";#9"J"9#H"
9FMF0FF3FF09CFFC397F"J"9"<"9"J#8"I"
EFO 1FF81EF89C7B3FEBF"9#8&J#8$:#8$J(F#
FFCF3F239FCFCF7FB8EC078F39F80C078F39F7E0300F9FDE3CE7FD7F:#8%J#8$:#8$J(F#
C07F243FCFE0CC0E101F83FC1E101F83F7F0784F9FC07E0FFFBF:*JS9SJSF"
FFFFFFFFE7FFFFFFFFB67FJ"
P4BFJ"
P47FJ"
P4BF>"J"
FFP+7FJ"
P4BFJ"
P47F<"8#J"I"
9FFC0FOCFCBF:#9#J#="J#J"
F03FFFCFFF8F3C0=E07F67F:$J"J#8"I"
E7BFFFO%9E=CF7CFFBF:#J"="J#J#
CFFFL733F=9FFC5FD7F;(J/9)J)D#
FC1F26663FCFE1=FC0CF3E6381F83F3197381E4CF0F7FCF3E6381F83F317F00F98E0F98FC27FFFBF:)J/8"9&J)F"
C7FF9F00201FCFCC=F8ECF3E433DF39F21933BCE00667FE433DF39F2168FFCFF90FCF9079C7F:"8'J/<&J"8&F"
E133238FCFDE7F<F1FCF3E1F3FE7CF0F9B3FCE666F31F3FE7CF0F6C387FCF867BEBF:#8%J"8#8$8"=#8"J"8"8#F"
F87F27CFCF9E=F3E3F0F1F993643F0F1F6F08FE73E7F:#;"J)8"<#8"J'H"
FE3F80@E7F87E7CF3F9D3C0037F873F6FC7CFF9FFCF9BF"9#;#J#9#8"="J#J"
F7FF1F9FFF@FC1EE39CFFC19FE3C67F":"J#:";#9"J"J"
FF9FGFF0E3CFF3FF09FF7BFJ":"A"9"J"F"
IF18E1EF8@1C7F:#8&J(8&9#8$J#;"F"
CF3F239FCFCF7F<F8EC03E7F78F39F338E6667B80C078F39F79E7C80BF:#8%J(9%9#8$J$:"F"
C07F243FCFE0=FC0E13E7F01F8382266703C1E101F83F780FE1FC67F:*JY9SJR"F"
FFFFFFFFE7FFFFFFFF<6FEBFJ#
P3FD7FJ#D#
P#BCFFFFBFJ"F"
P#817F>"J"F"
FFOHFFBFJ"
P47FJ"
P4BFJ"9"?"J"
O#9FFCE7O"7F:#J#J#J"
F81FO%FE07=807F6BF:#J";"9"J%J"
F3DFO F971CF9F3FFFF9F47F:#J"J"
E7FFO&79O'BF:'J(9(J$J"
EFFE0FCC787FFF09E1F31E01CC77CF0F98F00E63F8F31E0147F:'J(:'J$J"
CFFCE7C8733FFE31CCF00F9FC03E67807CFE01F8F20F9F4BF;&J(:'J#J#
F9F3C3F79FFC79DE71C79FC73EF38E3CFE39F8F0CF4FD7F"<#J%8":&J"J#
EFC7E7GCF99E73EF3CF39F3CFE79F15FFBF"<$J#>"J"J"
FFCFE01FG9807C0=F367F>#J#>#J"
E7FFG99FFCFF9O%BF:"J"
E7P/7F:#J#>"J"
E3D9JC71979O'BF:'J&;%J"
F01CE7CFF3DFFE01CF71CF973E7B8E7O$7F:'J':&J%J"
F83E0FCFF81FFF19E0721FC3C07F0390FE198073CFC34BF:QJ(8)J%J"
FFFFFFF3FFFFFFFFFFFFFF9FFFFFFFF7FFFFFFFF47FJ"
P4BFJ"
P47FJ"
P4BFJ">"J#
O%FFFFO$FD7FJ#
P3FFBFJ"
P47FJ"@%9#;%9"J%9#C"
CE7FE07C0F9FE7FF81F03E7F96FE07C0F9FE7FBF:#J&?&J&I"
F81FFF03FFFE7FCC0FFFF9FF39F03FFFE7FC7F:#J#:#B"J#J"
F3DF@FE7FE7BF9E=E7BF6BF:#J#B"J#J"
E7FFFCFFF3F=CFFF67F:'J.9&9$8'I$9&C"
EFFE0FCC787F8FC2787E07807CC783CFCDFF81F8F81FC0E797FE07FE63E07F039E7DFF81F8F81FC0E79BF"9'J.8'8%8'I$8'C"
F7CFFCE7C8733F8F8C733CF7E7FC8739C799FFBCFF807BCF8EE73FE7FEF3FE01EF3E3B9CF9FFBCFF807BCF8EE737F":&J*8":&:"9'J":&C"
FFF9F3C3F79F8F1E779CFFE7FC3E7CEFFE3FCF1FE67FFE38FF3C7F99F4FFE3FCF1FE67BF=#J%8"8";'>'J'C"
C7E79F3E679C3C77BF9F3FCF3FE4FE7CFF3CFF93F8F9F3FCF3FE4F7F=$J#8(:"8":";%J#:"8"C"
CFE01F:01E1CFE7CF339FFC0FC01FF003CFF87F4FC0FC01FBF>#J$:%:"8":":#8"J#:"8"B#
E7FF:7FF07E379FF9CF9C0FE7CE733F4F9CF9C0FFD7F:"J#:$;"8"8$:&I#;"8"B#
E7@FC3E07CFF33C47FF3FCFCCF3CFF91FCFF33C47FFBF:#J%;$:&9";&I#:&C"
E3D9<F1C67FFE87C7B3F73CF1FE631EDCF3C7F98FC7B3F73CF1FE637F:'J%9'8'9#9'I$8'C"
F01CE7CFF3DF8F8073DDEF39F8FE0338FF8E738F8EE7180CEE39CE3E3B9C7E0338FF8E738F8EE71BF:'J.8'9$8'I$8'C"
F83E0FCFF81F8FC6781C07F0FCFF83FCFF07823F90F823C0E78C1E08FE43E08F039E3F07823F90F823C0E787F:QJT"V9VIVC"
8DFBFJ"J"
K9FO67FJ"J"
KBFO6BFJ#J"
JFE7FO67FJ#J"
JFFFFO6BFJ"
P47FJ"
P4BF=%J#B#J";$@#
3FFFFC0FGF3F3CFCF:FCF9FFF3FD7F:":#J"J#?#@#
E7FFCFO!00=9F3FF033FFBFJ"<"<"J"<#A"
O%FF3FFF:FFE7B37F"J#A"
EFP&CFF3BF":&J,:+J1="
FFFC0F31F87FBE1F31FC0F07E1383E63F09CC7F03C1F84E0F98FC274331F03E0FE1331F87F09DFF31F03F31F7F;&J,:+J0>"
FDE700F33FBCCF20F8EE73C63F3E41E71C83E3B9CF18FCF9079C74320E7BFCFCE320F33E319FF00F79F2BF;&J,:+J1="
FFE71C779FBDE70CF1FCF98F3F3E19EF9C33C7F3E63CFCF867BE7430CE7FFCFDF30CF79C799FF1CFF9F0FF7F=#J'8#:'8#J-8">"
3E67C9E71CF3FCF99E39C01C73CFF3E678E73531CE1FFCF9F31CE79CF99FF3F1BF;&J#<";#<"J$9$:#>"
FE073E601FB8073E73FCF9E633CF0F3CE01C81F37F;&J#J":#:"?"
FCE73E67FFB9FF3M83E7FC39BF;"J"=%?"
F9OGE1CFF3CE797F>"J%9"<%8#J%9$A"
E7F1FCF98E3717F3E638F71C76F1FCF8E371C7B3BF<%J(8#;&8#I$8+>#
C71CF3DFBCF73CF8EE73C039E013E3B9CF00F7807CE73CEFC033CF3DE01E033CE71FD7F:'J"8%8#9(8#I1=#
E01C1121F81FBE0C0F07E339F1900CF3F03C1F8CF7C67E0F3CE03FCFE333CF81F19F073CF0473FFBF:RJU"9U"IQ"T>"
AF9E7F37FJ"
P4BFJ#B#J#G"
O'FEF3FBCF8FDE77FJ"B#J#G"
O(07F81F8FC0FBFJ#B#J#G"
O'FFFFFFFF8FFFF7FJ"
P4BFJ"
P47F=%J"J"
3FFFFC0FG83O/BF"9":#J"="J#9#G"
F7E7FFCFG3F00=C03FFE077F"J"9"9"J#8%:"A"
FFO'3F3FCF9CFFFF3FCF7CFFCBFJ#F#
P!F9FFFD7F;&J':%J.?#
FC0F31F87FGF801C1E63C03F0798F00:FC1E63C039FF00F98CF3F0300FFFBF;&J':%J.@"
FDE700F33FGFF3F9CE41F3FE73907CF:F9CE41F3F8FFCFF90CF3E3BCFF7F;&J$;$J-A"
FFE71C779FI3E619FCF9867;F3E619F3FC3FCFF87CF3C7FCBF=#J";"8"J(8$B"
3E67K6301E7:C073E639F3FF0FFCF3CF7F;&J";$J%8$E"
FE073E601FJ673FCF99;CFF3E679C7CFF9BF;&J"G"
FCE73E67FFOFE37F;"J"G"
F9OJF3BF>"J"B"
E7OLC77F<%J#<#J#8#9$A"
C71CF3DFI9CE7E739<F9CEF9E703E3BCBF:'J"8":%J.@"
E01C1121F81FIC187F079E7E1:FC1E79F8780FE1F9FE13F03E1F7F:RJP9PJY@"
G9BFJ#
P3FD7FJ#
P3FFBFJ"
P47FJ"
P4BFJ"
P47F"J"
EFP3BF"<%J#A"F"H"8#G"
FF3FFFFC0F>FE0FF99F3FF81F7F:":#J#E"J#9#G"
E7FFCF>FCFF00=C07FFF9FBFJ"J$J"
O,3F=CF3FFF57FJ"
P4BF;&J/:-H%I"
FC0F31F87F?E00707E63C3F84F31E0F3CE63F09F07E63C3F84F31E0F3CE63F0383E3CF07F;&J/:.G&H"
FDE700F33F?FCFE73E4399F38F21CE73CE41E31E73E4399F38F21CE73CE41E31F3F3F39E67FBF;&J.:.I$G#
FFE71C779F@FCF9E1FBCF7CF0F9F33CE19C79CF9E1FBCF7CF0F9F33CE19C79F9BEF3FFD7F=#J&9$9"8&9#H%H#
3E67CE3F3CE7CF1E39CF9013F3CE7CF1F39CF7F3F83CFFFBF;&J&9";"8#8"9"H&I"
FE073E601FBE7F00E7CF3E73F7F003F79C0FF3FC7C07F;&J#E"J"9#H"
FCE73E67FFCF3FE3F9CFCFFFBF;"J"J"
F9OG9347F>"J"<">#;#I"J"
E7F3871E38FC71FB14BF<%J.:-J$H"
C71CF3DF@FE73E7F9EF00F3FCE700E79E01E73E7F9EF00F3FCE700E79E0439E7BF7F:'J.:.H%H"
E01C1121F81F@FF07E7FC0F8CF3FE0F84E79F19F07E7FC0F8CF3FE0F84E79F19F3E7C703FBF:RJQ"R9Q"RFRG"
>FCCF7FJ"
P4BFJ"E#J"
O!79F79FO!7FJ"E#J"
O!03F03FO!BF"J"E#J#
F7O FFFFFFO FD7F"J#
FFP2FFBFJ"
P47FJ#8$>$J";#D"
O FE7F9FFFE79FFFE7:3FFE7FBF:#J#J"J"
F81FO%FE7C=8177F:#J"9"<"9"J$;#D"
F3DFLFF3FFF3F69C7FFFFFFFBF:#J"J"
E7FFOD9E77F:'J):(J-B"
EFFE0FCC787FE63F0FC1FC2663C03F0FC1FC2663C0369F383E4CF0F98F81F07F0798BF:'J):(J-A"
CFFCE7C8733FE01E67F9F9C601F3FE67F9F9C601F3F73F3E006679073DFE7E73907F7F;&J(;'J*B"
F9F3C3F79FE39EF3F9FBE639FEF3F9FBE639F:666F38673FFE7CF986BF=#J#8#;#8#J%9"B"
C7E7F79CF3E6700CF3E67<4F38E70F8E7F=$J"?#J%9"B"
CFE01FFC07CC0@4039E7879EBF>#J#?#J%E#
E7FFFCFFFCFFF?4FF9E7C1FD7F:"J"E#
E7OLF0FFBF:#J"@"J#;"F"
E3D9M1C1C99E7FF87F:'J%=%J#8(C"
F01CE7CFF3DFFE7BF9F80E7BF9F8099CFF67B9E778FE7E73BF:'J%8":%8"J"9(C"
F83E0FCFF81FFF03F9FC687F03F9FC6876817039E701FE7F077F:QJP%8P%JXA"
DFE7FFFFFFE7FFFFF6BFJ"
P47F"J#?#J"
EFO$BCFFBCFFO"BF"J"@"J"
FFO$8181O#7FJ"@"J"
O%FFFFO#BFJ"
P47FJ"
P4BF<"8#J"="8"=#C"8"J"J#
9FFC0F5CFF3CFFE7FF9E743F4FD7F:#9#J"?#J#J#
F03FFFCFD01FE01=C07F5FFBF:$J"=%9"?#=%H$J"
E7BFFF9FFFFF9FFFF38FFCFFFFCFFFFCF3FFF57F:#J"J"
CFFFI3CO2BF;(I5:/F(F"
FC1F26663FCFE18FE0F98F81F87CC7C0F83E01E0F9F9C3F3CF07E63C2787F31CC7C0FC3E63E07C1F00F07CFCE1F383E3CC99C0F317F:)I5:/F(F"
C7FF9F00201FCFCC8FFCF9073DF33C839EFF3F9FFCF8FB99F3DE73E438C733F21C839EF99E41CF7F9FCFFE7C7DCCF3F3F39C00DE700BF:"8'J(:,:(:$H'E"
E133238FCFDE7F48673FF79C339FFCF3BCF3BCF9E1F1E779F0FC339FFBCE19CFFE79DE79BCCCFE71C7F7F:#8%J(;$8&:(;"G$9"F"
F87F27CFCF9E58E70FE79C7387F73CF033F3E679F1FC7387F3CE39C3FB97F3F833EBF:#;"J(:%8&:(:$E(G"
FE3F8059E787E01CF3C3FE6700F397F3E601F3FCF3C3F00E79E1FF33807C0FF3FC7CCCE077F:#;#J';$:#<';#E":#G"
FF1F9FFF57C1E7FCF3E0F73FF3C67FF3E0F3FE79F0739FFCFCCE7BF;"J#8#:#D#9":#I$H"
9F<7F0E3F87E0F33F87C3F07993CCC97FJ"9":"<"?"9":"J"J"
C8EC7F01CC7E3F84B14BF:#8&J&;+<&<#H"8$D#
CF3F239FCFCF7F5778F3DCF3BF1F9EF38E73E7F8073DF3BC79EE79DFCF739C71CFFFD7F:#8%J591G'E#
C07F243FCFE064701F81CF380FF3FC3FCFF9FC0F01F07E7FC6781FFE01CF380FC0E79C07F9FE1FE7FCFE073E7C4CCC1121FFBF"9*IZ8ZER"F"
F7FFFFFFFFE7FFFFFFFF703F7F"J"
FFP3BFJ"
P47FJ"
P4BF>"J"F"
FFOHFF7FJ"
P4BFJ"
P47F=%J">#9$>$J";#D"
3FFFFC0F9E7F03F9FFFE79FFFE7:3FFE7FBF:":#J$?#J"J"
E7FFCFBFF3E7CFE7C=8177FJ%@"9"<"9"J$;#D"
DFFFFFE7FFF3FFF3F69C7FFFFFFFBFJ"J#
OJ9E6FD7F;&J*9(:(J-A#
FC0F31F87F:07CC7807C3F98CC7C0F0FC1FC2663C03F0FC1FC2663C0369F383E4CF0F98F81F07F0798FFBF;&J+8(:(J-A"
FDE700F33F:E7C83E7F99F90C83DE7FE67F9F9C601F3FE67F9F9C601F3F73F3E006679073DFE7E73907F7F;&J"8&9';'J*B"
FFE71C779F;C3BCF87C33FEEF3F9FBE639FEF3F9FBE639F:666F38673FFE7CF986BF=#J"8%9#8#;#8#J%9"B"
3E67<C73CF8FC7300CF3E6700CF3E67<4F38E70F8E7F;&J"8&8#?#J%9"B"
FE073E601F;CF00F9FCF3E07CC07CC0@4039E7879EBF;&J"9"9#?#J%F"
FCE73E67FF>3FCECFFFCFFF?4FF9E7C17F;"J"J"F"
F9F9EO$F0BF>"J"@"J#;"F"
E7J1C1C99E7FF87F";%J"9"9%=%J#8(C"
EFC71CF3DF>9E9CE7BF9F80E7BF9F8099CFF67B9E778FE7E73BF"9'J$9#8%8":%8"J"9(C"
FFE01C1121F81F<3F0FC0C11FF03F9FC687F03F9FC6876817039E701FE7F077F:RJZ%8P%JXA"
9/FE7FFFFFFE7FFFFF6BFJ#
P3FD7FJ#?#J#
O%BCFFBCFFO!FFBFJ"@"J"
O%8181O#7FJ"@"J"
O%FFFFO#BFJ"
P47FJ"
P4BF=%J">#8%;&J";#D"
3FFFFC0F:FCFE079FFE7FFCFCFFF3FFE7:3FFE7F7F:":#J%=$J"J"
E7FFCFCFFE79FCFFCFE7C<817BFJ"8"=&;#8"J$;#D"
EFFCF9DCFFFFE79EE7FCF99C7FFFFFFF7FJ"J"
OJ9E7BF;&J39(J-B"
FC0F31F87F;E0F98F00F87F3198F81FE7888C1FC2601CC74460FE1300E63F79F383E4CF0F98F81F07F07987F;&J38)J-A"
FDE700F33F;FCF907CFF33F21907BCFE7CA9F9F8C79FC03FE54FCFC63CFE01F83F3E006679073DFE7E73907FBF;&J);"8";&J*A#
FFE71C779F<F867CFF79F0F867F1E73F8F3CFE39F:666F38673FFE7CF986FD7F=#J'9%8"9$8"J%9"A#
3E67>E7CFE79F1F8EC21F9F3EF310FCF9E7<4F38E70F8EFFBF;&J"8*=#J%9"B"
FE073E601F<F9E01F3F9E7C0FE7E23FFF11A4039E7879E7F;&J#8%?"J%F"
FCE73E67FF?E7FF79CFE7E739A4FF9E7C1BF":"J"J"F"
F7F9G73O#F07F"="J">#J#;"F"
FFE7J1CF8E3:9E7FF8BF<%J#9'<%J#8(C"
C71CF3DF?F3DF8FE7F77F9F80BBFCFC03:9CFF67B9E778FE7E737F:'J$8#:$<$J"9(C"
E01C1121F81F>E1F81F7823C67C3CFE33E19817039E701FE7F07BF:RJZ9RJXA"
:277FJ"
P4BFJ"
P47FJ"
P4BFJ#
P3FD7FJ#
P3FFBFJ"
P47F=%J":$?$J$E"
3FFFFC0FC9FF3FE0FFE7FC1<9FF07FBF:":#J#:"<"J"<#E"
E7FFCFIFCFF039F6C0E7FF7FJ"8$<"9$J"9$G"
O FFFE7FFFF3CFFFFF7FCF3FFFFBFJ"
P47F;&J+:*J*D"
FC0F31F87FCF81E79E0780783E004FCCF3C0F00F07C009F9F5F3CF03C03C1F0027E7BF;&J+;)J)D"
FDE700F33FCFF9E79CF7E7FF3FCFC7939EFCFFE7F9F8F3F6CE7BF3FF9FE7E3CF7F;&J"9"=":"J":"E"
FFE71C779FGFEFEFFCF87FF3BF=#J";";#;"J";"D"
3E67GC37B387F7F71FDF7F":&J":#;#:"J#:#D"
EFFE073E601FFE1FF333C3FE67CF0FF99FBF":&J#:";#;"J";"C#
FFFCE73E67FFFF07E373E0FFF783BFFD7F;"J#:";#:"J":#C#
F9JFC3E073F87E08E1F83FFFBF>"J";"<":"J":"E"
E7GFE87C7F08F1FC7F<%J#;"8%;"J$<"D"
C71CF3DFE01DE8FFEE7C03BF15B9F00E7FBF:'J&9"9&9"J'8"E"
E01C1121F81FD9F09C07F0FCF0FE1380FE1F9583F84E03F87FFE7F:RJR"8T"JS#D"
DDFFB5FEFFBFJ"A"J"E"
O(9FF3=FC7FJ#="A"J"E"
MF73FBFF7=FDBFJ#<#A"J"E"
MF07FFE7FCF=F37FJ#<#A"J"E"
MFFFFFFFFFF=FFBFJ"
P47FJ"
P4BF=%J"8%;"8#J"H#
3FFFFC0FEC03FFFFC0FF9E07F;FCFD7F:":#J":#9":"J#J#
E7FFCFEFCFFCF3FFE8E07F5FFBFJ#8"I"
OJCF7CFF7FJ#J"
OJ9FFC6BF;&J&;%J)E"
FC0F31F87FGFC0F31F87FE0798FC3:F00F98E0F98FC27F7F;&J&;%J)F"
FDE700F33FGFDE700F33FEF38079998FFCFF90FCF9079CBF":&J&;%J"8&F"
F7FFE71C779FGFFE71C779FFF38E3BC9C387FCF867BE7F"<#J#=$J"8"8#F"
FF3E67J3E6739F33C9F08FE73EBF;&J&;"8"J'H"
FE073E601FGFE073E601FF0009FC7CFF9FFCF97F;&J&;"8"J#J"
FCE73E67FFGFCE73E67FFE73F9FE3C6BF;"J"?"J"J"
F9KF9CF<FF77F>"J">"J"F"
E7KE7F7A1CBF<%J%;%J#;"E#
C71CF3DFHC71CF3DFCE38E79E99E7C80FD7F:'J&:&J$:"E#
E01C1121F81FGFC1121F81F00E0890FC0980FE1FC6FFBF:RJR9RJR"F"
E7FE7FJ"
P4BFJ#E"
P#BCFF7FJ"F"
P#81BFJ"F"
P#FF7FJ"
P4BFJ"
P47F=%J&8"B"9"J"J"
3FFFFC0F>E07FFFF83FFC83CF83F5BF:":#J"8%@"8%J#J"
E7FFCF>FEF3FFFF013F3FFFF01F7C07F67FJ'A&J%J"
MFCFF38FFFE7FCFF38FFFE75CE3FFF9F4BFJ"F"J"J#
O!3CCF7CF6FD7F":&J-:.G(E#
EFFC0F31F87FA0F80100F3CE0F80726703CC7F0F80100F3CE0F80726703CC7F383E01C99C0F31FFBF":&J.:.G(F"
FFFDE700F33F@7E67F3FCFF3DFCFE7F00379C03E67F3FCFF3DFCFE7F00379C03F7F3F9FC00DE7007F;&J"9"9%:#9"8&F#8&E"
FFE71C779FAF33B333F9C71EF3FBFF333F9C71FCEFFCCCFE71C7FBF=#J":"<":"9#;#F"<"F"
3E67A7C03F9CFF03FCF9FC03E7F;&J"9":#;"9#:"H#9#G"
FE073E601FA0339381CC0F39F81CE7FCE07BF;&J"9":#;#9":"H#9#G"
FCE73E67FFAFF3C339CCFFFCF39CF3FCCE77F;"J"E#J"H"
F9O 2732797C9BF>"J"
E7P+7F<%J#9";#:#9":$F";$E"
C71CF3DF@7E7B381C73E7BF8F71C73FCEC71CFFBF:'J.9/F)F"
E01C1121F81F@7F03F3FE1F01FCFF0F3330448700F03F3FE1F01FCFF0F33304487FC07F3FC3CCCC11217F:RJW#9W#FR"F"
>FCFFCFFF3FBFJ#
P3FD7FJ#
P3FFBFJ"
P47FJ"F"J"F"
O'FFFF8FFBFJ"
P47FJ"
P4BFJ$B"@$B"A"I"
GF3FFE7F9F9FFF3FCC07F:#J$9#@#=#9#E#8"I"
F81FAF27F27E3C7FC783F93F1E3C07FFCBF"9#J"J"J#J"
F7F3DFB7793B5CE3F67F"9#J#A"B#E"J"
FFE7FFGE5A7B4F2D3CF7BF:'J/8):5>*D"
EFFE0FCC787F5FC99C0F31E63F0FE1222263F0F9803CC7C0FC2787F096E0798F31F87F0911131F87CC72D381E63E07E13C3F843C1F83FCFE1F81E63F7F:'J5:5>*D"
CFFCE7C8733F6700DE700E01E67C632A601E679065A779C83DE79C733E316EF380700F33E3195300F33C832D3BCE41EF3CE399F1879CF39FCFCCFBCE41FBF;&J.8):-8)=+C#
F9F3C3F79F6CCFE71C638EF38F32A639EF386F9C33FE7BE779C79FF38E31C779C799531CF79C3FCE19FF3DF3BCE3CCEF3E67CFCFDE7FCE19FFD7F=#J,9"8%;,9"8%=":"8"D#
C7E7973E67CCF39F308679CF38EC73E679CF939F33E679CF98433CE79C7E39F33CE7CC0F9E3FFBF=$J"9"8/:#92>#9%E"
CFE01F7E0C088E79C039E666781CF3E073E601CCCF0601CF9C473CE01CF3333C0E79F039F300ECE73F807C0E77F>#J"9%8"9(;"9%8"9(>#9$F"
E7FF7CECFF9F39CFF39CF3CE73E67FCE767FCF9CE7F9CE79E739F33FECF33F9FF9CBF:"J"B%?"C%H"F"
E7<9E6679CF39CF3CE79CF33C7F:#J#A"8"@"A"8"J"
E3D9@F8E31C71718E38?BF:'J,9"8&:,9"8&=)F"
F01CE7CFF3DF79C71CE39E7BC03DDE79E7B71C78073DE01CE38E71CF3DE01EEF3CF3D38E3C039EF00CE39CF39FCFCF7387F:'J(8.9)9"8*=*E"
F83E0FCFF81F7C1121E43F03E339F039E67E7044F3C11C6781F19FCE0890F21F81F1981F382279E08E33C0F8CC07C1F83FCFE078227BF:QJ'Y%8'Z$=UD"
5FFFFFFF3FE7FFE7FFFFFFFFFFFF9FF3F/3FFFFF7FJ"
P4BFJ#J#J"
O%BCFF8DE7FA7FJ"J#J"
O%819C0FFABFJ$D">$D"J#
BFFFFFFFFFFFFFFFFAFD7FJ#
P3FFBFJ"
P47F";"8#J#>"I"H"8#G"
EF9FFC0F>FE7F039F3FF81FBF"9#9#J%<"J#9#G"
FFF03FFFCFEF81FFFF300=C07FFF9F7F:$J%9#>"J$J"
E7BFFFBFFFFFFE7F3DF3F=CF3FFF5BF:#J#J"
CFFFJE7FFO07F;(J2:-H%I"
FC1F26663FCFE1:F98FC1F07CC7807C3F98EFFE0FF3F83F31F07E63C3F84F31E0F3CE63F0383E3CF0BF:)J2:.G&H"
C7FF9F00201FCFCC:F8079CFE7C83E7F99F90CFFCE7F3F39F21E73E4399F38F21CE73CE41E31F3F3F39E67F7F:"8'J1:.I$H"
E133238FCFDE7F:E33E7E7C33E7FBCF87CFF9F3F3E7CF0FCF9E1FBCF7CF0F9F33CE19C79F9BEF3FBF:#8%J#9&<"9"8&9#H%I"
F87F27CFCF9E:F9F373E7F3CF8F1F013F3CE7CF1F39CF7F3F83CF7F:#;"J&<"9"8#8"9"H&I"
FE3F80?F3E7F00F9F3F3F7F003F79C0FF3FC7C0BF:#;#J#E"J"9#G#
FF1F9FFF@F3FF3F9CFCFFFFD7F;"J"J"I#
9FJE7J93FFBFJ#C#;#I"J"
O"E3D9E38FC71FB147F:#8&J%9*;-J$H"
CF3F239FCFCF7F9F8E79CFEF9EF9FF01CE7F3F39FE73E7F9EF00F3FCE700E79E0439E7BFBF:#8%J$9+;.H%H"
C07F243FCFE0:F90FC1F0FC0F9FF83E0FF3F83FF07E7FC0F8CF3FE0F84E79F19F3E7C703F7F:*JZ9Q"RFRG"
FFFFFFFFE7FFFFFFFF:0CFBFJ"
P47FJ#J"
O1F79FO!BFJ#J"
O1F03FO!7F>"J"J#J"
FF=FF8FFFFO!BF"J"
F7P37F"J"
FFP3BF<"8#I#>"=">"<#=#G"9#C#
9FFC0FFE7F03E7E7FE7FFE7FFCE07FFD7F:#9#J%9#D#J":"D#
F03FFFCF:F81FFFF3C07FFC07=01FEFFBF:$J%9#;#E"J#I"
E7BFFF7FFFFFFE7F3DFCE3FE3=3CFF7F:#J#;"F"J"
CFFF?E7FFCFF3O$BF;(E5:-H%F"
FC1F26663FCFE1?F98FC1F07CC7807C3F98EFFE0FF3F83F31CF381FC0E79E13CC783CF398FC2781FC0E79E13CC783CF398FC2E0F8F3C37F:)E59*8#H%F"
C7FF9F00201FCFCC?F8079CFE7C83E7F99F90CFFCE7F3F39F21CF7BCF8EE73CE3C8739CF39078C7F7BCF8EE73CE3C8739078CFCFCE799BF:"8'E59.I$F"
E133238FCFDE7F>E33E7E7C33E7FBCF87CFF9F3F3E7CF0FCEFFCF1FE67DF3C3E7CCF38671E7EFFCF1FE67DF3C3E7CCF38671EFE6FBC7F:#8%E#9&<#8&9#:)9#G"8#F"
F87F27CFCF9EF9F373E7F3CF8F1FC03FE4F9F3C78E730FFCF3FE4F9F3C7EE73E3D0F3CBF:#;"J&<'8"9";#8"8"8"I&F"
FE3F804F3E7F00F9F3FCE7C0F3FE1CF9EE7C01FFE3903FCFF1F007F:#;#J#>&B#8"J"9"F"
FF1F9FFF5F3FFCF39CF3FE0F39C0F93F3FBF;"J"="8#B"8"J#G"
9F?E733E4793C47;FE4F7FJ#>%;#;%<"J"G"
EE3D91FE638E371C7F1FE638E1C4C7BF:#8&D%959+8"I$E#
CF3F239FCFCF7FF8E79CFE8F9EF9FF01CE7F3F39F3FCE338F8EE71C03CFF39C039E7807E338F8EE71C03CFF39C080FCE79EFD7F:#8%E$959'8#8"I$E#
C07F243FCFE0F90FC19F0FC0F9FF83E0FF3F83F3FC07823C0E78E33CFF83E139E7C6707823C0E78E383E1C6F9F1C0FFBF:*EZ"R8R"RFRD"
FFFFFFFFE7FFFFFFFF6F33F7FJ"
P4BFJ#E#J"
O#FDE7DE7FL7F"J#E#J"
EFO"FC0FC0FFLBF"="H"J#E"J"
FFFFFF5FFFFFFM7FJ"
P4BFJ"
P47F=%J"@"J"I"
3FFFFC0FHF3F3=C0BF:":#J"J#8"I"
E7FFCFO!01=C07FFC7FJ"<"9"J#J"
O%FF38FF9CE3F6BFJ"J"J#
O,3C=CF6FD7F;&J):(J*C#
FC0F31F87FE98F0FC0F83E01F0FF0FC0F83E01F0F73C1F83FCFE1F81E63FFFBF;&J):(J*D"
FDE700F33FE90E679EFF3FF9E67E679EFF3FF9E67779CF39FCFCCFBCE41F7F;&J%8#9%8#J+D"
FFE71C779FE87EF39FF3EF339EF39FF3EF36CEF3E67CFCFDE7FCE19FBF=#J(:(J":"8"E"
3E67F8FCF387FF3FE3C03CF387FF3FE3C7C0F9E37F;&J)9)J#9%E"
FE073E601FE9FC03C3FF3FC7C0333C03C3FF3FC7C036CE73F807C0E7BF;&J(9)J#9$F"
FCE73E67FFFCFFE0FF3F8FCFF31CFFE0FF3F8FCFF6CF33F9FF9C7F;"J%;'J"F"
F9KFF87F3F939CFFF87F3F9?3CBF>"J$;"8$J"
E7IC7F3F338C7F3F3O"7F<%J#8$9$8$J)F"
C71CF3DFFE7BBE7FE7B3C67BBE7FE7B6CE39CF39FCFCF738BF:'J(9)J*E"
E01C1121F81FFF0380FF3E01F033E70380FF3E01F036C07C1F83FCFE0782277F:RJS9SJUD"
D6BF"J#
F7P2FD7F"J#
FFP2FFBFJ"
P47FJ"
P4BFJ"
P47FJ"
P4BFJ"
P47F:#J"J#J"
F81FO&81=E07F6BF:#J"J"J"
F3DFO&3D=CF77F:#J#J#J"
E7FFO%FE7F=9FFF6BF:'J):(J(F"
EFFE0FCC787FE03F81E63C3F87CC7F81E63C3F87CC77FE0798F0FE1F317F:'J*9)J)F"
CFFCE7C8733FDFE7BF1DE4399F33C833FF1DE4399F33C8368FFC7790E67CCF20BF;&J)8*J)E#
F9F3C3F79FE7FE3FE1FBCF79C33FF0FE3FE1FBCF79C336C3F8FF87EF3DE70CFD7F=#J)9)J)E#
C7E7F1FE7FE3F3CE79C73C3E7FE3F3CE79C736F0F9FF8FCF39E71CFFBF=$J#8&9"8&J)F"
CFE01FDFF0F7F00E01CF3F17F00E01CF36FC79FF9FC038073C7F>#J"9$:"9$J#8$G"
E7FFE833FE7FCF83FE7FC7FE39CFF9FFBF:"J"@"J"J"
E7JE1FC=FF77F:#J#@"J"J"
E3D9IF1E3E3=386BF:'J)9)J(G"
F01CE7CFF3DFDFEF1F1DE7F9EF3DCFE79F1DE7F9EF3DC79E7C779FE7BCF77F"9'J(:(J(G"
EFF83E0FCFF81FE03F81E7FC0F81C03F81E7FC0F81C780FE079FF03E07BF"9QJT8TJSF"
FFD67FJ"
P4BFJ"
P47FJ"
P4BFJ#
P3FD7FJ#
P3FFBFJ"
P47FJ"8"A%J"I"
O"FCF3FE7FFFF99C0BF:#J"J#8"I"
F81FO&81=C07FFC7F:#J%<":%J#J"
F3DFJFFFE7FFF3DFFFF3FFF5CE3F6BF:#J#J"J"
E7FFO%FE7F=CF77F:'J.:,I*D"
EFFE0FCC787F@FE07E1F31F03E0F80783E7E70FF0F98F81F07C03C1F3F3873C1F83FCFE1F81E63FBF:'J.9-I*D"
CFFCE7C8733F@FCF7CCF20E7BFCFE7FF3E3EE673FE679073DFE7F3FF9F1F73379CF39FCFCCFBCE41F7F;&J&:$8':$H+D"
F9F3C3F79FAFFDE70CE7FF3CEF3FF0FEF38673FF9E779CEF3E67CFCFDE7FCE19FBF=#J&;":&;"I":"8"E"
C7E7B3F9E71CE1FDCC3CF38E70FEEC0F9E37F=$J':$9&:$H#9%E"
CFE01F@FE1F8073CF0FF99C03F1C039E787FCCE01CE73F807C0E7BF>#J'<"9&<"H#9$E#
E7FF@FF079FF3CF83FFF8CFF9E7C17FCF33F9FF9CFD7F:"J"9":#:"9";"J"E#
E7FC3E1F83CFCF01E:3CFFBF"9#J"9":"?":"J"
F7E3D9EE3F1FCF8FEL7F"9'J&<#8';#H)F"
FFF01CE7CFF3DF@FDE3CF73CE7E7BFE79E7B9E7783F3DCE39CF39FCFCF738BF:'J$8)9&8&H*E"
F83E0FCFF81F@FC07E003FCFF0FF3FE7F0303F039E70187F9FF3F81C07C1F83FCFE0782277F:QJX8XHUD"
@BFJ"
P47FJ"
P4BFJ"
P47FJ"
P4BFJ"
P47FJ"
P4BFJ#9"C#9"J"9"<$8#
MF03F9FFC0FE7903F93FE07FFD7F:#J"A#;#J#;"=#8"9#
F81FGFFFC00FFCF6003FF3801FFEFFBF:#J#>$<#>$H#>#9#="
F3DF@FE7FF3FFFFFFCFFCFFFFF3FF3FFFF9FF7F:#J"
E7FFP.BF:'J(8):0E38"8"
EFFE0FCC787F<F807CC703CC7C003C03C1FC1E63E07F31C0F31F03FCFC0F00F07F0798F81FCC703CC7C0FF3F03C03C1FC1E63F9FC0F310F7F:'J(8):0F58"
CFFCE7C8733F<FE7FC8779C839E79F3FF9F9CE41CF7F21DE720E7BFCFDE7CFFE7E739073D48779C839EFF3F79F3FF9F9CE41F9FDE700FE7E67BF;&J&8"9%:)9%F(9+8"
F9F3C3F79F>C3FF9C339FF93E619CFFF0FFE70CE7FFCFFECF98673F3FF9C339FFF3FFF3E619F9FFE71C7E7EF37F=#J"8#=$:"8#>#F&="9$9"
C7E7?C77387639C3FF11CE1E70F7FF9C7387F393E7E7CBF=$J&8":$:&8":$F):%9"8"
CFE01F>CFF81CF3C381679E1FF3FE073CF0E099E787FF81CF3C3FF3F81F79F9FE07037F"=#J%8";#;(<"G(<#9"8"
EFE7FF?F39CF3E0399F07FCE73CF83FCFCEC139CF3E0FF3F39FFCE7FFBF"9"J"8%<";"8%<"F(="="
FFE7DE7F87F3E79C3F9FE1FCF9EF0FE79CF3F87F3E7F97F:#J"?">"?"J"B":"
E3D9FFCE3FFF84C7FEBF:'J$8"9$=$8"9%G$9"8#9)
F01CE7CFF3DF@1CF3BC719CE79DC73CEF9CE739E77871CF3B1FF9CEC71CFE7E7BFFFD7F:'J2;/F-8*
F83E0FCFF81F<FF0FCFF044F380FF3F04787F9FC1E79C07FC113CE03FCFC11E1FE7F079E701FF044F380FF3F04787F9FC1EFC1121FE7F03FFFFBF:QJZ9ZDZ8"
=0067FJ"
P4BFJ"
P47FJ"
P4BFJ"
P47FJ"
P4BFJ"
P47FJ%;&J";#D"
O$9FFE7FFCFCFFF3FFE7:3FFE7FBF:#J$J"J"
F81FO%FCFE7C<8177F:#J$;#8"J$;#D"
F3DFLFFFE79EE7FCF99C7FFFFFFFBF:#J"J#
E7FFOD9E6FD7F:'J(9(J-A#
EFFE0FCC787FF9FCC1FC2601CC74460FE1300E63F79F383E4CF0F98F81F07F0798FFBF:'J(8)J-A"
CFFCE7C8733FF9DCF9F8C79FC03FE54FCFC63CFE01F83F3E006679073DFE7E73907F7F;&J"8";&J*B"
F9F3C3F79FI1E73F8F3CFE39F:666F38673FFE7CF986BF"<#J%8"9$8"J%9"B"
F7C7E7GD8DF9F3EF310FCF9E7<4F38E70F8E7F"<$J">#J%9"B"
FFCFE01FFDAFF11A4039E7879EBF>#J"J%F"
E7FFO"39A4FF9E7C17F:"J#J"F"
E7KC21FMF0BF:#J%>#J#;"F"
E3D9JE73F9F1CF8E3:9E7FF87F:'J"<%J#8(C"
F01CE7CFF3DFI80BBFCFC03:9CFF67B9E778FE7E73BF:'J$<$J"9(C"
F83E0FCFF81FIC67C3CFE33E19817039E701FE7F077F:QJR9RJXA"
F7BFJ#
P3FD7FJ#
P3FFBFJ"
P47FJ"
P4BFJ"
P47FJ"
P4BFJ"8"J"8"F"
O0F3CF:FCF37F:#J"J#J"
F81FO&01=C07F6BF:#J"9%J#8%F"
F3DFO&3CFFF9FFFF6CF3FFFFE7FFF7F:#J"
E7FFP.BF:'J#:+J+C"
EFFE0FCC787FKFC79F07C0F83E01E0FE0F31F43C1F03E0F80783F83CC77F"9'J#:+J+C"
EFCFFCE7C8733FKFE73E739EFF3F9FFCFCE720F439CE7BFCFE7FF3F39C83BF":&J#:$:$J$:$B#
FFF9F3C3F79FKFF37CF99FF9F30CF433E67FE7CC33FD7F=#J"9%;"J$<"B#
C7E7M073DCF987F31573E61F73FFBF=$J"9%;"J%<"C"
CFE01FL8F03CF9C3F334C0F3E70FF37F>#J%J"8"J"
E7FFO"3FCF9E0F:CF834BF:"J";#J"J"
E7O#279F87=E147F:#J"<"J"J"
E3D9O"63C7=F14BF:'J#:#;#J#;#D"
F01CE7CFF3DFKFE73E73BCE735F9CEF39C7F:'J#:*J*D"
F83E0FCFF81FKFCF8F0780FF3FC3FCFE0F35FC1E03FCFF0FF3F83CBF:QJ#9VIVC"
KFFFF7FJ"
P4BFJ"
P47FJ"
P4BFJ#
P3FD7FJ#
P3FFBF$J"
FD556FP17F$J"8"J"8"F"
FEAAAFO-F3CF:FCF3BF'J"J#J"
FD556FFFF81FO&01=C07F67F'J"9%J#8%F"
FEAAAFFFF3DFO&3CFFF9FFFF6CF3FFFFE7FFFBF'J"
F5556FFFE7FFP.7F+J#:+J+C"
FEAAAFFFEFFE0FCC787FKFCFCF07C0F83E01E0FE0F31F43C1F03E0F80783F83CC7BF+J":+J+C"
FD556FFFCFFCE7C8733FL79E739EFF3F9FFCFCE720F439CE7BFCFE7FF3F39C837F$8&J";$:$J$:$C"
FEAAAFF9F3C3F79FKFECF99FF9F30CF433E67FE7CC33BF$:#J"9%;"J$<"C"
FD556FC7E7M7B3DCF987F31573E61F737F$:$J#9%;"J%<"C"
FEAAAFCFE01FKFF3303CF9C3F334C0F3E70FF3BF$;#J"9%J"8"I#
FD556FE7FFL373FCF9E0F:CF83FD7F&J";#J"I#
FEAAAFFFE7O#079F87=E1FFBF'J"<"J"J"
FD556FFFE3D9O"87C7=F147F+J":#;#J#;#D"
FEAAAFFFF01CE7CFF3DFL8FE73BCE735F9CEF39CBF+J":*J*D"
FD556FFFF83E0FCFF81FLCFF0780FF3FC3FCFE0F35FC1E03FCFF0FF3F83C7F$RJ"9VIVC"
FEAAAFLDFBF$J"J"
FD556FO%9FO+7F$J"J"
FEAAAFO%BFO+BF$J#J"
FD556FO$FE7FO+7F$J#J"
FEAAAFO$FFFFO+BF$J"
FD556FP17F$J"
FEAAAFP1BF$J#
FD556FP0FD7F$J#
EEAAAFP0FFBF$J"
FD556FP17F$J"
FEAAAFP1BF$J"
FD556FP17F$J"
FEAAAFP1BF$J"
FD556FP17F$J"
FEAAAFP1BF$J"
FD556FP17F$J"
FEAAAFP1BF$J"
FD556FP17F$J"
FEAAAFP1BF$J#
FD556FP0FD7F$J#
FEAAAFP0FFBF$J"
FD556FP17F$J"
FEAAAFP1BF$J"
FD556FP17F$J"
FEAAAFP1BF$J"
FD556FP17F$J"
FEAAAFP1BF$J"
F5556FP17F$J"
FEAAAFP1BF%J"
FD556F81P07F%J"
FEAAAF2DP0BF%J#
FD556F2FP/FD7F$J#
FEAAAFP0FFBF$J"
FD556FP17F%J"
FEAAAF8FP0BF%J"
FD556FC7P07F%J"
FEAAAFE3P0BF%J"
FD556FE9P07F$J"
FEAAAFP1BF$J"
FD556FP17F%J"
FEAAAF69P0BF%J"
FD556F03P07F%J"
FEAAAFEFP0FF%J"
F5556FFFP0BF$J"
F7FFEFP1FF"J"
FFP3BF"
F7J"
P4FF$J"
FFFFFFP1BF7"
DF7"J"
FFP2FF75
P4C924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924924925FFBF"z"
C0P25580
ENDBITMAP
%%EndBinary
45 63 567 729 C
FMENDPAGE
%%EndPage: "446" 6
%%Page: "447" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (APPENDIX G: X USER\325S GUIDE: OPEN LOOK EDITION) 265.78 693.79 S
0 9 Q
0.45 (447) 487.34 693.79 S
111 684 507 708 R
0.5 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 10 Q
7 X
(G) 531 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
4 10 Q
0 X
0 0 0 1 0 0 0 K
1.46 (XtInitialize) 147 374.34 P
1 F
0.61 (, among its other activities, creates a TopLevelShell widget. The name) 219 374.34 P
-0.45 (before the equals sign,) 147 362.04 P
4 F
-1.08 (top) 237.68 362.04 P
1 F
-0.45 (, is the name that the programmer will use to refer to this widget) 255.68 362.04 P
-0.36 (whenever he needs to use it in the application. This is completely irrelevant to the name the) 147 349.74 P
(widget publishes for itself as its instance name.) 147 337.44 T
0.4 (Next, the program begins to create the widgets in the application, using a function called) 147 319.14 P
4 F
-0.57 (XtCreateManagedWidget) 147 306.84 P
1 F
-0.24 (. The first widget to be created is the main application wid-) 273 306.84 P
(get, which in this case is a Form widget.) 147 294.54 T
4 8 Q
-0.16 (parent = XtCreateManagedWidget\050"form", formWidgetClass, top, ... \051;) 165 277.58 S
1 10 Q
0.75 (The first argument to) 147 261.24 P
4 F
1.79 (XtCreateManagedWidget) 237.19 261.24 P
1 F
0.75 ( is the instance name of the widget) 363.19 261.24 P
-0.13 (\050) 147 248.94 P
4 F
-0.32 (form) 150.33 248.94 P
1 F
-0.13 (\051\321this is the name that will be used to refer to it in resource files. The second argu-) 174.33 248.94 P
(ment is a symbol identifying which widget class this widget should be.) 147 236.64 T
-0.17 (Notice that the instance name is entirely arbitrary, and depends completely on the whim of) 147 218.34 P
-0.42 (the application programmer. Many applications that use only one instance of a widget class) 147 206.04 P
-0.27 (will give it an instance name that mirrors the class name, except in lower case, as was done) 147 193.74 P
0.79 (here. But you can see that the programmer could just as well have given the widget the) 147 181.44 P
-0.34 (instance name \322foo\323 or \322main\323 or \322grandma_moses.\323 The implication is that unless the cli-) 147 169.14 P
1.45 (ent\325s man page documents a widget instance name, you won\325t know what to use in a) 147 156.84 P
(resource file.) 147 144.54 T
1 8 Q
(1) 199.2 148.54 T
0 1 1 0 1 0 0 K
111 103 507 120.98 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
111 103 507 120.98 R
7 X
0 1 1 0 1 0 0 K
V
112.07 108.96 292.07 108.96 2 L
V
0.5 H
2 Z
0 X
N
45 63 567 729 C
0 0 0 1 0 0 0 K
1 8 Q
0 X
0 0 0 1 0 0 0 K
(1. As of R4, all of the MIT client reference pages do list the instance names of all the widgets in the application.) 147 97.67 T
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
3 9 Q
(Figure) 147 404.01 T
(G-) 177.01 404.01 T
(3. Anatomy of an X Toolkit application) 187.01 404.01 T
111 420.01 507 657 C
114 420.01 504 648.01 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 17 558 395 774 378 216 120 426.01 FMBEGINEPSF
%%BeginDocument: /home/darian/ian/book/vol3ol/art/3m.G.01.epsi
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 17 558 395 774
/InitDictCount countdictstack def
gsave
save
mark
newpath
/showpage {} def
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: FreeHand 3.1
%%Title: 3m.G.01
%%CreationDate: 11/20/92 3:09 PM
%%BoundingBox: 16.7 557.45 394.9 773.65
%%DocumentProcSets: FreeHand_header 3 1
%%DocumentSuppliedProcSets: FreeHand_header 3 1
%%ColorUsage: Color
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentFonts: Symbol
%%+Helvetica-Bold
%%+Helvetica
%%+Helvetica-Condensed-Bold
%%+Courier
%%+Helvetica-Condensed
%%DocumentNeededFonts: Symbol
%%+Helvetica-Bold
%%+Helvetica
%%+Helvetica-Condensed-Bold
%%+Courier
%%+Helvetica-Condensed
%%FHPathName: Chris:Illustrations:Vol.3M:..All 3M Figures:3m.G.01
%%EndComments
%%BeginProcSet: FreeHand_header 3 0
/FHIODict 30 dict def
FHIODict begin
/bdf{bind def}bind def
/d{setdash}bdf
/h{closepath}bdf
/H{}bdf
/J{setlinecap}bdf
/j{setlinejoin}bdf
/M{setmiterlimit}bdf
/n{newpath}bdf
/N{newpath}bdf
/q{gsave}bdf
/Q{grestore}bdf
/w{setlinewidth}bdf
/u{}bdf
/U{}bdf
/sepdef{
dup where not
{
FreeHandSepDict
}
if
3 1 roll exch put
}bdf
/`
{false setoverprint
end %. FreeHandDict
/-save0- save def
pop pop pop pop pop
concat
userdict begin
/showpage {} def
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
/languagelevel where {pop languagelevel 1 ne{false setstrokeadjust}if}if
} bdf
/~
{end
-save0- restore
FreeHandDict begin
}bdf
/FreeHandDict 191 dict def
FreeHandDict begin
/currentpacking where{pop true setpacking}if
/xdf{exch def}bdf
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/min{2 copy gt{exch}if pop}bdf
/max{2 copy lt{exch}if pop}bdf
/isLino statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse def
/dr{transform .25 sub round .25 add
exch .25 sub round .25 add exch itransform}bdf
/C{dr curveto}bdf
/L{dr lineto}bdf
/m{dr moveto}bdf
/printerRes
gsave
matrix defaultmatrix setmatrix
72 72 dtransform
abs exch abs
max
grestore
def
/maxsteps 256 def
/calcgraysteps {
currentscreen pop exch 
printerRes exch div exch
2 copy
sin mul round dup mul
3 1 roll
cos mul round dup mul
add 1 add
dup maxsteps gt {pop maxsteps} if
} bdf
/bottom -0 def
/delta -0 def
/frac -0 def
/left -0 def
/numsteps -0 def
/numsteps1 -0 def
/radius -0 def
/right -0 def
/top -0 def
/xt -0 def
/yt -0 def
/df currentflat def
/tempstr 1 string def
/clipflatness currentflat def
/inverted?
0 currenttransfer exec .5 ge def
/level2 
/languagelevel where {pop languagelevel 1 ne}{false}ifelse def
/colorexists
level2
{
statusdict/processcolors known
{statusdict/processcolors get exec}{1}ifelse
4 eq def
}
{systemdict/setcmykcolor known def}
ifelse
/tc1 [0 0 0 1] def
/tc2 [0 0 0 1] def
/fc [0 0 0 1] def
/sc [0 0 0 1] def
/concatprocs{
/packedarray where
{pop dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse
{
/proc2 exch cvlit def/proc1 exch cvlit def
proc1 aload pop proc2 aload pop
proc1 length proc2 length add packedarray cvx
}
{
/proc2 exch cvlit def/proc1 exch cvlit def
/newproc proc1 length proc2 length add array def
newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval
newproc cvx
}ifelse
}bdf
/storerect{/top xdf/right xdf/bottom xdf/left xdf}bdf
/rectpath{newpath left bottom m left top L
right top L right bottom L closepath}bdf
/i{dup 0 eq
{pop df dup}
{dup} ifelse
/clipflatness xdf setflat
}bdf
version cvr 38.0 le
{/setrgbcolor{
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
setrgbcolor}bdf}if
/gettint{0 get}bdf
/puttint{0 exch put}bdf
/vms {/vmsv save def} bdf
/vmr {vmsv restore} bdf
/vmrs{vmsv restore /vmsv save def}bdf
/eomode{
{/filler /eofill load def /clipper /eoclip load def}
{/filler /fill load def /clipper /clip load def}
ifelse
}bdf
/CD{/NF exch def{exch dup/FID ne 1 index/UniqueID ne and{exch NF 3 1 roll put}
{pop pop}ifelse}forall NF}bdf
/MN{1 index length/Len exch def
dup length Len add string dup
Len 4 -1 roll putinterval dup 0 4 -1 roll putinterval}bdf
/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch
{1 index MN cvn/NewN exch def cvn
findfont dup maxlength dict CD dup/FontName NewN put dup
/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf
/RF{dup FontDirectory exch known{pop 3 -1 roll pop}{RC}ifelse}bdf
/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
{exch pop findfont 3 -1 roll pop}{pop dup findfont dup maxlength dict CD dup dup
/Encoding exch /Encoding get 256 array copy 7 -1 roll {3 -1 roll dup 4 -2 roll put}forall put definefont}ifelse}bdf
userdict begin /BDFontDict 20 dict def end
BDFontDict begin
/bu{}def
/bn{}def
/setTxMode{av 70 ge{pop}if pop}def
/gm{m}def
/show{pop}def
/gr{pop}def
/fnt{pop pop pop}def
/fs{pop}def
/fz{pop}def
/lin{pop pop}def
end
/MacVec 256 array def
MacVec 0 /Helvetica findfont
/Encoding get 0 128 getinterval putinterval
MacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put
/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI
/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/US
MacVec 0 32 getinterval astore pop
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase
/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacVec 128 128 getinterval astore pop
/fps{
currentflat 
exch 
dup 0 le{pop 1}if
{
dup setflat 3 index stopped
{1.3 mul dup 3 index gt{pop setflat pop pop stop}if}
{exit}
ifelse
}loop
pop setflat pop pop
}bdf
/fp{100 currentflat fps}bdf
/clipper{clip}bdf
/W{/clipper load 100 clipflatness fps}bdf
end%. FreeHandDict
end%. FHIODict
%%EndProcSet
%%EndProlog
%%BeginSetup
FHIODict begin
FreeHandDict begin
16.7 557.45 394.9 773.65 storerect rectpath clip newpath
/onlyk{false}ndf
/ccmyk{dup 5 -1 roll sub 0 max exch}ndf
/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{5 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf
/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf
/setseparationgray{1 exch sub dup dup dup setcmykcolor}ndf
/setoverprint{pop}ndf
/currentoverprint false ndf
/colorimage{pop pop
[5 -1 roll/exec cvx 6 -1 roll/exec cvx 7 -1 roll/exec cvx 8 -1 roll/exec cvx
/cmykbufs2gray cvx]cvx image}
%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)
version cvr 47.1 le isLino and{userdict begin bdf end}{ndf}ifelse
/customcolorimage{
colorexists
{
aload pop pop 4 array astore
setimagecmyk
currentcolortransfer
{ik mul ik sub 1 add}concatprocs 4 1 roll
{iy mul iy sub 1 add}concatprocs 4 1 roll
{im mul im sub 1 add}concatprocs 4 1 roll
{ic mul ic sub 1 add}concatprocs 4 1 roll
setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{invbuf dup length magentabuf length ne
{dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def}if
dup magentabuf copy yellowbuf copy blackbuf copy pop}concatprocs
{magentabuf}{yellowbuf}{blackbuf}true 4 colorimage
}
{
pop image
}
ifelse
}ndf
/separationimage{image}ndf
/newcmykcustomcolor{6 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf
/inkoverprint false ndf
/setinkoverprint{pop}ndf
/overprintprocess{pop}ndf
/setspotcolor
{spots exch get 0 5 getinterval exch setcustomcolor}ndf
/currentcolortransfer{currenttransfer dup dup dup}ndf
/setcolortransfer{systemdict begin settransfer end pop pop pop}ndf
/getcmyk {
dup length 4 eq
{aload pop}
{aload pop spots exch get 0 4 getinterval aload pop 4
{4 index mul 4 1 roll}repeat 5 -1 roll pop} ifelse
}bdf
/setimagecmyk{
getcmyk/ik xdf /iy xdf /im xdf /ic xdf
}ndf
/autospread{pop}ndf
/fhsetspreadsize{pop}ndf
/fhsetspreadallow{pop}ndf
/strokeopf false def
/fillopf false def
/R{0 ne /strokeopf xdf}bdf
/O{0 ne /fillopf xdf}bdf
/filler{fill}bdf
/F{fc fhsetcolor fillopf setoverprint false autospread
gsave /filler load fp grestore false setoverprint}bdf
/f{closepath F}bdf
/S{sc fhsetcolor strokeopf setoverprint true autospread {stroke}fp false setoverprint}bdf
/s{closepath S}bdf
/B{fc fhsetcolor fillopf setoverprint gsave /filler load fp grestore
sc fhsetcolor strokeopf setoverprint true autospread {stroke}fp false setoverprint}bdf
/b{closepath B}bdf
/setcolorscreen where{pop}{/setcolorscreen{setscreen pop pop pop pop pop pop pop pop pop}bdf}ifelse
/fhsetcolor{dup length 4 eq
{aload overprintprocess setcmykcolor}
{aload 1 get spots exch get 5 get setinkoverprint setspotcolor}
ifelse
}ndf
/settextcolor{
dup fhsetcolor
textblackopf
{
dup length 4 eq
{onlyk{3 get 1.0 eq{true setinkoverprint}if}{pop}ifelse}
{pop}
ifelse
}
{pop}ifelse
}ndf
/ka{/fc xdf}bdf
/Ka{/sc xdf}bdf
/xa{/fc xdf} bdf
/Xa{/sc xdf} bdf
/bc2[0 0]def
/bc4[0 0 0 0]def
/absmax{2 copy abs exch abs gt{exch}if pop}bdf
/calcstep
{ {calcgraysteps}{maxsteps}ifelse
tc1 length 4 eq
{
0 1 3
{tc1 1 index get
tc2 3 -1 roll get
sub
}for
absmax absmax absmax
}
{
bc2 tc1 1 get 1 exch put
tc1 gettint tc2 gettint
sub abs
}
ifelse
mul abs round dup 0 eq{pop 1}if 
dup /numsteps xdf 1 sub dup 0 eq{pop 1}if /numsteps1 xdf
}bdf
/cblend{
tc1 length 4 eq
{
0 1 3
{bc4 exch
tc1 1 index get
tc2 2 index get
1 index sub
frac mul add put
}for bc4
}
{
bc2
tc1 gettint
tc2 gettint
1 index sub
frac mul add
puttint bc2
}
ifelse
fhsetcolor
}bdf
/logtaper{/frac frac 9 mul 1 add log def}bdf
FHIODict begin
/origmtx matrix currentmatrix def
/iminv false def
/invbuf{0 1 2 index length 1 sub{dup 2 index exch get 255 exch sub 2 index 3 1 roll put}for}bdf
/cmykbufs2gray{
dup length 0 1 3 -1 roll 1 sub
{4 index 1 index get
4 index 2 index get
4 index 3 index get
4 index 4 index get
255 exch sub ccmyk ccmyk ccmyk pop 5 mul exch 45 mul add exch 14 mul add -6 bitshift
2 index 3 1 roll put}for
4 1 roll pop pop pop
}bdf
end
/textopf false def
/textblackopf true def
/curtextmtx{}def
/otw .25 def
/msf{dup/curtextmtx xdf makefont setfont}bdf
/makesetfont/msf load def
/curtextheight{.707104 .707104 curtextmtx dtransform
dup mul exch dup mul add sqrt}bdf
/ta{1 index
{tempstr 0 2 index put tempstr 2 index
gsave exec grestore
tempstr stringwidth rmoveto
5 index eq{6 index 6 index rmoveto}if
3 index 3 index rmoveto
}forall 7{pop}repeat}bdf
/sts{settextcolor textopf setoverprint/ts{awidthshow}def exec false setoverprint}bdf
/stol{/xt currentlinewidth def 
setlinewidth settextcolor textopf setoverprint newpath
/ts{{false charpath stroke}ta}def exec
false setoverprint xt setlinewidth}bdf
/currentpacking where{pop false setpacking}if
/spots[1 0 0 0 (Process Cyan) false newcmykcustomcolor
0 1 0 0 (Process Magenta) false newcmykcustomcolor
0 0 1 0 (Process Yellow) false newcmykcustomcolor
0 0 0 1 (Process Black) false newcmykcustomcolor
0 0 0 0  (White) false
newcmykcustomcolor
]def
%%EndSetup
%%IncludeFont: Symbol
0 dict dup begin
end
/f0 /Symbol FF def
[] 0 d
3.863708 M
1 w
0 j
0 J
0 O
0 R
0 i
false eomode
[0 0 0 1] Ka
[0 0 0 1] ka
vms
u
true fhsetspreadallow
114.3164 717.3184 m
320.3164 717.3184 L
320.3164 626.3573 L
114.3164 626.3573 L
114.3164 717.3184 L
[0 0 0 0.2] ka
[0 0 0 1] Ka
0.5 w
b
U
vmr
vms
u
u
true fhsetspreadallow
99.3164 701.8184 m
305.3164 701.8184 L
305.3164 610.8573 L
99.3164 610.8573 L
99.3164 701.8184 L
[0 0 0 0] ka
[0 0 0 1] Ka
0.5 w
b
u
108.031 698.4573 m
120.8987 698.4573 L
124.094 698.4573 126.6842 695.8671 126.6842 692.6718 C
126.6842 691.2753 L
126.6842 688.08 124.094 685.4898 120.8987 685.4898 C
108.031 685.4898 L
104.8357 685.4898 102.2455 688.08 102.2455 691.2753 C
102.2455 692.6718 L
102.2455 695.8671 104.8357 698.4573 108.031 698.4573 C
s
U
u
135.9609 698.4573 m
156.3099 698.4573 L
159.5052 698.4573 162.0954 695.8671 162.0954 692.6718 C
162.0954 691.2753 L
162.0954 688.08 159.5052 685.4898 156.3099 685.4898 C
135.9609 685.4898 L
132.7657 685.4898 130.1755 688.08 130.1755 691.2753 C
130.1755 692.6718 L
130.1755 695.8671 132.7657 698.4573 135.9609 698.4573 C
s
U
u
171.3721 698.4573 m
182.2448 698.4573 L
185.4401 698.4573 188.0303 695.8671 188.0303 692.6718 C
188.0303 691.2753 L
188.0303 688.08 185.4401 685.4898 182.2448 685.4898 C
171.3721 685.4898 L
168.1768 685.4898 165.5866 688.08 165.5866 691.2753 C
165.5866 692.6718 L
165.5866 695.8671 168.1768 698.4573 171.3721 698.4573 C
s
U
u
225.9852 698.557 m
239.8504 698.557 L
243.0457 698.557 245.6359 695.9668 245.6359 692.7716 C
245.6359 691.375 L
245.6359 688.1798 243.0457 685.5896 239.8504 685.5896 C
225.9852 685.5896 L
222.7899 685.5896 220.1997 688.1798 220.1997 691.375 C
220.1997 692.7716 L
220.1997 695.9668 222.7899 698.557 225.9852 698.557 C
3.863693 M
[0 0 0 0.4] Ka
s
U
u
255.162 698.5571 m
268.5285 698.5571 L
271.7237 698.5571 274.314 695.9668 274.314 692.7716 C
274.314 691.2753 L
274.314 688.08 271.7237 685.4898 268.5285 685.4898 C
255.162 685.4898 L
251.9667 685.4898 249.3765 688.08 249.3765 691.2753 C
249.3765 692.7716 L
249.3765 695.9668 251.9667 698.5571 255.162 698.5571 C
3.863708 M
[0 0 0 1] Ka
s
U
vmrs
%%IncludeFont: Helvetica-Bold
MacVec 256 array copy
/f1 /|______Helvetica-Bold dup RF findfont def
{
f1 [7.979721 0 0 7.979721 0 0] makesetfont
106.488632 688.987244 m
0 0 32 0 0 (Quit) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Bold
MacVec 256 array copy
/f1 /|______Helvetica-Bold dup RF findfont def
{
f1 [7.979721 0 0 7.979721 0 0] makesetfont
134.165558 688.987244 m
0 0 32 0 0 (Delete) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Bold
MacVec 256 array copy
/f1 /|______Helvetica-Bold dup RF findfont def
{
f1 [7.979721 0 0 7.979721 0 0] makesetfont
168.607346 688.987244 m
0 0 32 0 0 (New) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Bold
MacVec 256 array copy
/f1 /|______Helvetica-Bold dup RF findfont def
{
f1 [7.979721 0 0 7.979721 0 0] makesetfont
224.274673 689.08699 m
0 0 32 0 0 (Next) ts
} 
[0 0 0 0.4]
sts
vmrs
%%IncludeFont: Helvetica-Bold
MacVec 256 array copy
/f1 /|______Helvetica-Bold dup RF findfont def
{
f1 [7.979721 0 0 7.979721 0 0] makesetfont
253.197342 688.987244 m
0 0 32 0 0 (Prev) ts
} 
[0 0 0 1]
sts
u
true fhsetspreadallow
197.3071 698.557 m
211.1724 698.557 L
214.3676 698.557 216.9578 695.9668 216.9578 692.7716 C
216.9578 691.375 L
216.9578 688.1798 214.3676 685.5896 211.1724 685.5896 C
197.3071 685.5896 L
194.1119 685.5896 191.5217 688.1798 191.5217 691.375 C
191.5217 692.7716 L
191.5217 695.9668 194.1119 698.557 197.3071 698.557 C
0.5 w
[0 0 0 1] Ka
s
U
vmrs
%%IncludeFont: Helvetica-Bold
MacVec 256 array copy
/f1 /|______Helvetica-Bold dup RF findfont def
{
f1 [7.979721 0 0 7.979721 0 0] makesetfont
194.925247 689.08699 m
0 0 32 0 0 (Save) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Bold
MacVec 256 array copy
/f1 /|______Helvetica-Bold dup RF findfont def
{
f1 [7.979721 0 0 7.979721 0 0] makesetfont
280.57579 688.987244 m
0 0 32 0 0 (1) ts
} 
[0 0 0 1]
sts
u
true fhsetspreadallow
277.8063 698.5599 m
287.7813 698.5599 L
287.7813 685.4926 L
277.8063 685.4926 L
277.8063 698.5599 L
0.4987 w
3.863693 M
[0 0 0 1] Ka
s
U
101.5007 681.593 m
301.3164 681.593 L
301.3164 613.6231 L
101.5007 613.6231 L
101.5007 681.593 L
0.5 w
3.863708 M
s
u
102.7842 680.6773 m
114.1842 680.6773 L
114.1842 632.6773 L
102.7842 632.6773 L
102.7842 680.6773 L
[0 0 0 0.4] ka
f
n
U
114.9842 681.3773 m
114.9842 613.6773 L
S
u
116.1842 626.1773 m
164.1842 626.1773 L
164.1842 614.7773 L
116.1842 614.7773 L
116.1842 626.1773 L
f
n
U
115.4842 626.9773 m
301.0107 626.9773 L
S
U
u
16.8 773.55 m
394.8 773.55 L
394.8 557.55 L
16.8 557.55 L
16.8 773.55 L
0.2 w
3.863693 M
s
U
q
[1 0 0 1 -22.300003 0.800003] concat
vms
u
121.6164 701.0184 m
136.6164 716.5184 L
0.5 w
[2 2 ] 0 d
S
327.6164 701.0184 m
342.6164 716.5184 L
S
327.6164 610.0573 m
342.6164 625.5573 L
S
[] 0 d
vmrs
%%IncludeFont: Helvetica
MacVec 256 array copy
/f2 /|______Helvetica dup RF findfont def
{
f2 [7.999985 0 0 7.999985 0 0] makesetfont
144.98172 669.184998 m
0 0 32 0 0 (\136) ts
} 
[0 0 0 1]
sts
U
vmr
Q
vmrs
%%IncludeFont: Helvetica-Condensed-Bold
MacVec 256 array copy
/f3 /|______Helvetica-Condensed-Bold dup RF findfont def
{
f3 [8 0 0 8 0 0] makesetfont
21.96492 690.106339 m
0 0 32 0 0 (Command widget) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Courier
MacVec 256 array copy
/f4 /|______Courier dup RF findfont def
{
f4 [8 0 0 8 0 0] makesetfont
78.638718 690.106339 m
0 0 32 0 0 () ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed
MacVec 256 array copy
/f5 /|______Helvetica-Condensed dup RF findfont def
{
f5 [8 0 0 8 0 0] makesetfont
21.96492 680.506363 m
0 0 32 0 0 (instance name: quit) ts
21.96492 670.906387 m
0 0 32 0 0 (class name: Command) ts
} 
[0 0 0 1]
sts
true fhsetspreadallow
105.5 693.5 m
79.5 693.5 L
0.5 w
[0 0 0 1] Ka
S
vmrs
%%IncludeFont: Helvetica-Condensed-Bold
MacVec 256 array copy
/f3 /|______Helvetica-Condensed-Bold dup RF findfont def
{
f3 [8 0 0 8 0 0] makesetfont
21.96492 646.306351 m
0 0 32 0 0 (text widget) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Courier
MacVec 256 array copy
/f4 /|______Courier dup RF findfont def
{
f4 [8 0 0 8 0 0] makesetfont
57.742233 646.306351 m
0 0 32 0 0 () ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed
MacVec 256 array copy
/f5 /|______Helvetica-Condensed dup RF findfont def
{
f5 [8 0 0 8 0 0] makesetfont
21.96492 636.706375 m
0 0 32 0 0 (instance name: text) ts
21.96492 627.1064 m
0 0 32 0 0 (class name: T) ts
64.675797 627.1064 m
0 0 32 0 0 (ext) ts
} 
[0 0 0 1]
sts
true fhsetspreadallow
121.5 649.7 m
61 649.7 L
0.5 w
[0 0 0 1] Ka
S
vmrs
%%IncludeFont: Helvetica-Condensed
MacVec 256 array copy
/f5 /|______Helvetica-Condensed dup RF findfont def
{
f5 [8 0 0 8 0 0] makesetfont
106.46492 596.606339 m
0 0 32 0 0 (Not a scrollbar widget. ) ts
106.46492 587.006363 m
0 0 32 0 0 (These scrollbars are ) ts
106.46492 577.406387 m
0 0 32 0 0 (implemented as part of ) ts
106.46492 567.806427 m
0 0 32 0 0 (the T) ts
121.64653 567.806427 m
0 0 32 0 0 (ext widget class.) ts
} 
[0 0 0 1]
sts
true fhsetspreadallow
221 619 m
221 599 L
179.5 599 L
0.5 w
[0 0 0 1] Ka
S
vmrs
%%IncludeFont: Helvetica-Condensed-Bold
MacVec 256 array copy
/f3 /|______Helvetica-Condensed-Bold dup RF findfont def
{
f3 [8 0 0 8 0 0] makesetfont
322.46492 619.106339 m
0 0 32 0 0 (form widget) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Courier
MacVec 256 array copy
/f4 /|______Courier dup RF findfont def
{
f4 [8 0 0 8 0 0] makesetfont
361.353577 619.106339 m
0 0 32 0 0 () ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed
MacVec 256 array copy
/f5 /|______Helvetica-Condensed dup RF findfont def
{
f5 [8 0 0 8 0 0] makesetfont
322.46492 609.506363 m
0 0 32 0 0 (instance name: form) ts
322.46492 599.906387 m
0 0 32 0 0 (class name: Form) ts
} 
[0 0 0 1]
sts
true fhsetspreadallow
320 622 m
294 622 L
0.5 w
[0 0 0 1] Ka
S
vmrs
%%IncludeFont: Helvetica-Condensed-Bold
MacVec 256 array copy
/f3 /|______Helvetica-Condensed-Bold dup RF findfont def
{
f3 [8 0 0 8 0 0] makesetfont
115.46492 746.606339 m
0 0 32 0 0 (Command widget) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Courier
MacVec 256 array copy
/f4 /|______Courier dup RF findfont def
{
f4 [8 0 0 8 0 0] makesetfont
172.138718 746.606339 m
0 0 32 0 0 () ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed
MacVec 256 array copy
/f5 /|______Helvetica-Condensed dup RF findfont def
{
f5 [8 0 0 8 0 0] makesetfont
115.46492 737.006363 m
0 0 32 0 0 (instance name: next) ts
115.46492 727.406387 m
0 0 32 0 0 (class name: Command) ts
} 
[0 0 0 1]
sts
true fhsetspreadallow
205.5 697 m
205.5 749.5 L
175 749.5 L
0.5 w
[0 0 0 1] Ka
S
251.5 713 m
251.5 749.5 L
282 749.5 L
S
vmrs
%%IncludeFont: Helvetica-Condensed-Bold
MacVec 256 array copy
/f3 /|______Helvetica-Condensed-Bold dup RF findfont def
{
f3 [8 0 0 8 0 0] makesetfont
288.46492 746.606339 m
0 0 32 0 0 (invisible shell widget) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Courier
MacVec 256 array copy
/f4 /|______Courier dup RF findfont def
{
f4 [8 0 0 8 0 0] makesetfont
358.234406 746.606339 m
0 0 32 0 0 () ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed
MacVec 256 array copy
/f5 /|______Helvetica-Condensed dup RF findfont def
{
f5 [8 0 0 8 0 0] makesetfont
288.46492 737.006363 m
0 0 32 0 0 (instance name: xclipboard) ts
288.46492 727.406387 m
0 0 32 0 0 (class name: XClipboard) ts
} 
[0 0 0 1]
sts
U
vmr
%%Trailer
end  % FreeHandDict
end  % FHIODict
countdictstack InitDictCount sub { end } repeat
cleartomark
restore
grestore

%%EndDocument
FMENDEPSF
111 420.01 507 657 C
45 63 567 729 C
FMENDPAGE
%%EndPage: "447" 7
%%Page: "448" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (448) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 10 Q
7 X
(G) 74.62 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
-0.38 (The class name, on the other hand, is a part of the definition of a widget\325s class. It is always) 141 650.33 P
(the same.) 141 638.03 T
-0.43 (The third argument is the widget\325s parent\321the geometry-managing widget that this widget) 141 619.73 P
-0.2 (will be displayed inside, and which will control its size and position. Notice that the parent) 141 607.43 P
-0.06 (of the form is) 141 595.13 P
4 F
-0.15 (top) 197.42 595.13 P
1 F
-0.06 (\321the shell widget created by) 215.42 595.13 P
4 F
-0.15 (XtInitialize) 334.81 595.13 P
1 F
-0.06 (. As noted earlier, Shell) 406.81 595.13 P
-0.04 (widgets take just one child, and resize themselves so they fit completely behind that child,) 141 582.83 P
(and are invisible.) 141 570.53 T
0.15 (Remember, though, that the program\325s internal name for the shell widget is not important) 141 552.23 P
0.6 (when it comes to resource specifications. The Shell widget takes its \322resource name and) 141 539.93 P
(class\323 from the) 141 527.63 T
4 F
(XtInitialize) 204.04 527.63 T
1 F
( call.) 276.04 527.63 T
0.39 (If you\325re following the flow of the argument, you can see that to refer to this widget in a) 141 509.33 P
(resource file, you could use any of the following resource specifications:) 141 497.03 T
4 9 Q
-0.22 (xclipboard.form) 141 479.4 S
5 F
-0.74 -0.22 (instance name for both the shell widget and form widget) 218.62 479.4 B
4 F
-0.22 (XClipboard.Form) 141 468.4 S
5 F
-0.22 (class name for both the shell widget and form widget) 218.62 468.4 S
4 F
-0.22 (XClipboard.form) 141 457.4 S
5 F
-1.15 -0.22 (class name for the shell, and instance name for the form) 218.62 457.4 B
4 F
-0.22 (xclipboard.Form) 141 446.4 S
5 F
-1.15 -0.22 (instance name for the shell, and class name for the form) 218.62 446.4 B
1 10 Q
(as well as any analogous loose bindings.) 141 428.73 T
-0.07 (The) 141 410.43 P
4 F
-0.16 (form) 158.98 410.43 P
1 F
-0.07 ( widget \050named \322parent\323 for internal reference within the application\051 is used in) 182.98 410.43 P
(turn as the parent of the various command widgets and the text widget:) 141 398.13 T
4 8 Q
-0.16 (quit = XtCreateManagedWidget\050"quit", commandWidgetClass, parent, ... \051;) 159 381.17 S
-0.16 (delete = XtCreateManagedWidget\050"delete", commandWidgetClass, parent,) 159 372.17 S
-0.16 (... \051;) 159 363.17 S
-0.16 (new = XtCreateManagedWidget\050"new", commandWidgetClass, parent, ... \051;) 159 354.17 S
-0.16 (nextButton = XtCreateManagedWidget\050"next", commandWidgetClass, parent,) 159 345.17 S
-0.16 (... \051;) 213 336.17 S
-0.16 (prevButton = XtCreateManagedWidget\050"prev", commandWidgetClass, parent,) 159 327.17 S
-0.16 (... \051;) 213 318.17 S
-0.16 (text = XtCreateManagedWidget\050"text", textWidgetClass, parent, ... \051;) 159 309.17 S
1 10 Q
0.58 (This \322parent-child relationship\323 between composite widgets and their children is what is) 141 292.83 P
0.39 (expressed in the instance hierarchy of the widget. So, for example, the Command widget) 141 280.53 P
0.28 (instance named) 141 268.23 P
4 F
0.68 (quit) 206 268.23 P
1 F
0.28 ( is a child of the Form widget instance named) 230 268.23 P
4 F
0.68 (form) 417.82 268.23 P
1 F
0.28 (, which in turn) 441.82 268.23 P
-0.11 (is a child of a Shell widget, which takes as its name the application name) 141 255.93 P
4 F
-0.27 (xclipboard) 433.72 255.93 P
1 F
-0.11 (.) 493.72 255.93 P
0 1 1 0 1 0 0 K
0 20 Q
0 1 1 0 1 0 0 K
(G.3  What all this Means) 105 223.67 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
-0.35 (The fully-specified instance name of any widget in an application is determined by the par-) 141 204.33 P
1.35 (ent-child relationships of every widget in the application. First, there is always a shell) 141 192.03 P
-0.37 (widget, which takes as its name the application name. Then, there are one or more compos-) 141 179.73 P
-0.38 (ite widgets, which contain other widgets. Finally, at the end of the chain, you have a simple) 141 167.43 P
0.99 (widget, with the resources it defines, as well as the resources it inherits from its super-) 141 155.13 P
(classes.) 141 142.83 T
-0.31 (Don\325t confuse the class names of the widgets in the instance hierarchy with the class inher-) 141 124.53 P
(itance hierarchy of each widget. Figure) 141 112.23 T
(G-) 300.12 112.23 T
(4 tries to make the relationships clear.) 310.67 112.23 T
FMENDPAGE
%%EndPage: "448" 8
%%Page: "449" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (APPENDIX G: X USER\325S GUIDE: OPEN LOOK EDITION) 265.78 693.79 S
0 9 Q
0.45 (449) 487.34 693.79 S
111 684 507 708 R
0.5 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 10 Q
7 X
(G) 531 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
0.59 (In Figure) 147 374.34 P
0.59 (G-) 187.03 374.34 P
0.59 (4, the) 197.58 374.34 P
4 F
1.42 (quit) 223.48 374.34 P
1 F
0.59 ( widget gets its instance name from the relationship  of widgets) 247.48 374.34 P
-0.07 (within the application. But it gets its resources from the class hierarchy of the widgets that) 147 362.04 P
(the programmer used to develop the) 147 349.74 T
4 F
(Command) 293.64 349.74 T
1 F
( widget class.) 335.64 349.74 T
-0.15 (Remember that the instance names of the widgets are completely arbitrary;  even though it) 147 331.44 P
-0.5 (is not unusual to see a Form widget with the  instance name) 147 319.14 P
4 F
-1.19 (form) 381.94 319.14 P
1 F
-0.5 (, there is nothing required) 405.94 319.14 P
0.4 (about this. As a result, you need to look at the documentation for the application, not the) 147 306.84 P
(widget, to find out the appropriate instance names.) 147 294.54 T
-0.07 (The resources that a given widget class has are the result of its class inheritance hierarchy,) 147 276.24 P
1.42 (which is defined by the widget programmer who originally designed the widget class.) 147 263.94 P
0.63 (Thus, when you want to set resources for a widget like Command, you need to look not) 147 251.64 P
-0.15 (only in the section of this appendix that describes Command and its resources, but also the) 147 239.34 P
(sections on each of its superclasses.) 147 227.04 T
0 1 1 0 1 0 0 K
0 20 Q
0 1 1 0 1 0 0 K
(G.4  Complications) 111 194.78 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
1.51 (There are a number of provisos that modify this \050hopefully by now clear and simple\051) 147 175.44 P
(picture:) 147 163.14 T
6 3.2 Q
(n) 147 146.44 T
1 10 Q
0.11 (Even though a widget inherits a resource, it may not use it. For example, the Command) 156 144.84 P
0.5 0.1 (widget class inherits the) 156 132.54 B
4 F
1.2 0.1 (borderWidth) 259.37 132.54 B
1 F
0.5 0.1 ( resource from the Core widget class, but it) 326.42 132.54 B
-0.04 (does not actually use this information to redraw its border if you change the resource. A) 156 120.24 P
-0.12 (resource is just data you provide to the widget. Whether or not the widget does anything) 156 107.94 P
3 9 Q
(Figure) 147 404.01 T
(G-) 177.01 404.01 T
(4. Resource names and class inheritance) 187.01 404.01 T
111 420.01 507 657 C
114 420.01 504 648.01 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 17 558 395 774 378 216 120 426.01 FMBEGINEPSF
%%BeginDocument: /home/darian/ian/book/vol3ol/art/3m.G.02.epsi
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 17 558 395 774
/InitDictCount countdictstack def
gsave
save
mark
newpath
/showpage {} def
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: FreeHand 3.1
%%Title: 3m.G.02
%%CreationDate: 11/20/92 3:10 PM
%%BoundingBox: 16.7 557.45 394.9 773.65
%%DocumentProcSets: FreeHand_header 3 1
%%DocumentSuppliedProcSets: FreeHand_header 3 1
%%ColorUsage: Color
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentFonts: Symbol
%%+Helvetica-Condensed-BoldObl
%%+Helvetica-Condensed
%%+Helvetica-Bold
%%+Helvetica
%%DocumentNeededFonts: Symbol
%%+Helvetica-Condensed-BoldObl
%%+Helvetica-Condensed
%%+Helvetica-Bold
%%+Helvetica
%%FHPathName: Chris:Illustrations:Vol.3M:..All 3M Figures:3m.G.02
%%EndComments
%%BeginProcSet: FreeHand_header 3 0
/FHIODict 30 dict def
FHIODict begin
/bdf{bind def}bind def
/d{setdash}bdf
/h{closepath}bdf
/H{}bdf
/J{setlinecap}bdf
/j{setlinejoin}bdf
/M{setmiterlimit}bdf
/n{newpath}bdf
/N{newpath}bdf
/q{gsave}bdf
/Q{grestore}bdf
/w{setlinewidth}bdf
/u{}bdf
/U{}bdf
/sepdef{
dup where not
{
FreeHandSepDict
}
if
3 1 roll exch put
}bdf
/`
{false setoverprint
end %. FreeHandDict
/-save0- save def
pop pop pop pop pop
concat
userdict begin
/showpage {} def
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
/languagelevel where {pop languagelevel 1 ne{false setstrokeadjust}if}if
} bdf
/~
{end
-save0- restore
FreeHandDict begin
}bdf
/FreeHandDict 191 dict def
FreeHandDict begin
/currentpacking where{pop true setpacking}if
/xdf{exch def}bdf
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/min{2 copy gt{exch}if pop}bdf
/max{2 copy lt{exch}if pop}bdf
/isLino statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse def
/dr{transform .25 sub round .25 add
exch .25 sub round .25 add exch itransform}bdf
/C{dr curveto}bdf
/L{dr lineto}bdf
/m{dr moveto}bdf
/printerRes
gsave
matrix defaultmatrix setmatrix
72 72 dtransform
abs exch abs
max
grestore
def
/maxsteps 256 def
/calcgraysteps {
currentscreen pop exch 
printerRes exch div exch
2 copy
sin mul round dup mul
3 1 roll
cos mul round dup mul
add 1 add
dup maxsteps gt {pop maxsteps} if
} bdf
/bottom -0 def
/delta -0 def
/frac -0 def
/left -0 def
/numsteps -0 def
/numsteps1 -0 def
/radius -0 def
/right -0 def
/top -0 def
/xt -0 def
/yt -0 def
/df currentflat def
/tempstr 1 string def
/clipflatness currentflat def
/inverted?
0 currenttransfer exec .5 ge def
/level2 
/languagelevel where {pop languagelevel 1 ne}{false}ifelse def
/colorexists
level2
{
statusdict/processcolors known
{statusdict/processcolors get exec}{1}ifelse
4 eq def
}
{systemdict/setcmykcolor known def}
ifelse
/tc1 [0 0 0 1] def
/tc2 [0 0 0 1] def
/fc [0 0 0 1] def
/sc [0 0 0 1] def
/concatprocs{
/packedarray where
{pop dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse
{
/proc2 exch cvlit def/proc1 exch cvlit def
proc1 aload pop proc2 aload pop
proc1 length proc2 length add packedarray cvx
}
{
/proc2 exch cvlit def/proc1 exch cvlit def
/newproc proc1 length proc2 length add array def
newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval
newproc cvx
}ifelse
}bdf
/storerect{/top xdf/right xdf/bottom xdf/left xdf}bdf
/rectpath{newpath left bottom m left top L
right top L right bottom L closepath}bdf
/i{dup 0 eq
{pop df dup}
{dup} ifelse
/clipflatness xdf setflat
}bdf
version cvr 38.0 le
{/setrgbcolor{
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
setrgbcolor}bdf}if
/gettint{0 get}bdf
/puttint{0 exch put}bdf
/vms {/vmsv save def} bdf
/vmr {vmsv restore} bdf
/vmrs{vmsv restore /vmsv save def}bdf
/eomode{
{/filler /eofill load def /clipper /eoclip load def}
{/filler /fill load def /clipper /clip load def}
ifelse
}bdf
/CD{/NF exch def{exch dup/FID ne 1 index/UniqueID ne and{exch NF 3 1 roll put}
{pop pop}ifelse}forall NF}bdf
/MN{1 index length/Len exch def
dup length Len add string dup
Len 4 -1 roll putinterval dup 0 4 -1 roll putinterval}bdf
/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch
{1 index MN cvn/NewN exch def cvn
findfont dup maxlength dict CD dup/FontName NewN put dup
/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf
/RF{dup FontDirectory exch known{pop 3 -1 roll pop}{RC}ifelse}bdf
/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
{exch pop findfont 3 -1 roll pop}{pop dup findfont dup maxlength dict CD dup dup
/Encoding exch /Encoding get 256 array copy 7 -1 roll {3 -1 roll dup 4 -2 roll put}forall put definefont}ifelse}bdf
userdict begin /BDFontDict 20 dict def end
BDFontDict begin
/bu{}def
/bn{}def
/setTxMode{av 70 ge{pop}if pop}def
/gm{m}def
/show{pop}def
/gr{pop}def
/fnt{pop pop pop}def
/fs{pop}def
/fz{pop}def
/lin{pop pop}def
end
/MacVec 256 array def
MacVec 0 /Helvetica findfont
/Encoding get 0 128 getinterval putinterval
MacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put
/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI
/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/US
MacVec 0 32 getinterval astore pop
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase
/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacVec 128 128 getinterval astore pop
/fps{
currentflat 
exch 
dup 0 le{pop 1}if
{
dup setflat 3 index stopped
{1.3 mul dup 3 index gt{pop setflat pop pop stop}if}
{exit}
ifelse
}loop
pop setflat pop pop
}bdf
/fp{100 currentflat fps}bdf
/clipper{clip}bdf
/W{/clipper load 100 clipflatness fps}bdf
end%. FreeHandDict
end%. FHIODict
%%EndProcSet
%%EndProlog
%%BeginSetup
FHIODict begin
FreeHandDict begin
16.7 557.45 394.9 773.65 storerect rectpath clip newpath
/onlyk{false}ndf
/ccmyk{dup 5 -1 roll sub 0 max exch}ndf
/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{5 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf
/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf
/setseparationgray{1 exch sub dup dup dup setcmykcolor}ndf
/setoverprint{pop}ndf
/currentoverprint false ndf
/colorimage{pop pop
[5 -1 roll/exec cvx 6 -1 roll/exec cvx 7 -1 roll/exec cvx 8 -1 roll/exec cvx
/cmykbufs2gray cvx]cvx image}
%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)
version cvr 47.1 le isLino and{userdict begin bdf end}{ndf}ifelse
/customcolorimage{
colorexists
{
aload pop pop 4 array astore
setimagecmyk
currentcolortransfer
{ik mul ik sub 1 add}concatprocs 4 1 roll
{iy mul iy sub 1 add}concatprocs 4 1 roll
{im mul im sub 1 add}concatprocs 4 1 roll
{ic mul ic sub 1 add}concatprocs 4 1 roll
setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{invbuf dup length magentabuf length ne
{dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def}if
dup magentabuf copy yellowbuf copy blackbuf copy pop}concatprocs
{magentabuf}{yellowbuf}{blackbuf}true 4 colorimage
}
{
pop image
}
ifelse
}ndf
/separationimage{image}ndf
/newcmykcustomcolor{6 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf
/inkoverprint false ndf
/setinkoverprint{pop}ndf
/overprintprocess{pop}ndf
/setspotcolor
{spots exch get 0 5 getinterval exch setcustomcolor}ndf
/currentcolortransfer{currenttransfer dup dup dup}ndf
/setcolortransfer{systemdict begin settransfer end pop pop pop}ndf
/getcmyk {
dup length 4 eq
{aload pop}
{aload pop spots exch get 0 4 getinterval aload pop 4
{4 index mul 4 1 roll}repeat 5 -1 roll pop} ifelse
}bdf
/setimagecmyk{
getcmyk/ik xdf /iy xdf /im xdf /ic xdf
}ndf
/autospread{pop}ndf
/fhsetspreadsize{pop}ndf
/fhsetspreadallow{pop}ndf
/strokeopf false def
/fillopf false def
/R{0 ne /strokeopf xdf}bdf
/O{0 ne /fillopf xdf}bdf
/filler{fill}bdf
/F{fc fhsetcolor fillopf setoverprint false autospread
gsave /filler load fp grestore false setoverprint}bdf
/f{closepath F}bdf
/S{sc fhsetcolor strokeopf setoverprint true autospread {stroke}fp false setoverprint}bdf
/s{closepath S}bdf
/B{fc fhsetcolor fillopf setoverprint gsave /filler load fp grestore
sc fhsetcolor strokeopf setoverprint true autospread {stroke}fp false setoverprint}bdf
/b{closepath B}bdf
/setcolorscreen where{pop}{/setcolorscreen{setscreen pop pop pop pop pop pop pop pop pop}bdf}ifelse
/fhsetcolor{dup length 4 eq
{aload overprintprocess setcmykcolor}
{aload 1 get spots exch get 5 get setinkoverprint setspotcolor}
ifelse
}ndf
/settextcolor{
dup fhsetcolor
textblackopf
{
dup length 4 eq
{onlyk{3 get 1.0 eq{true setinkoverprint}if}{pop}ifelse}
{pop}
ifelse
}
{pop}ifelse
}ndf
/ka{/fc xdf}bdf
/Ka{/sc xdf}bdf
/xa{/fc xdf} bdf
/Xa{/sc xdf} bdf
/bc2[0 0]def
/bc4[0 0 0 0]def
/absmax{2 copy abs exch abs gt{exch}if pop}bdf
/calcstep
{ {calcgraysteps}{maxsteps}ifelse
tc1 length 4 eq
{
0 1 3
{tc1 1 index get
tc2 3 -1 roll get
sub
}for
absmax absmax absmax
}
{
bc2 tc1 1 get 1 exch put
tc1 gettint tc2 gettint
sub abs
}
ifelse
mul abs round dup 0 eq{pop 1}if 
dup /numsteps xdf 1 sub dup 0 eq{pop 1}if /numsteps1 xdf
}bdf
/cblend{
tc1 length 4 eq
{
0 1 3
{bc4 exch
tc1 1 index get
tc2 2 index get
1 index sub
frac mul add put
}for bc4
}
{
bc2
tc1 gettint
tc2 gettint
1 index sub
frac mul add
puttint bc2
}
ifelse
fhsetcolor
}bdf
/logtaper{/frac frac 9 mul 1 add log def}bdf
FHIODict begin
/origmtx matrix currentmatrix def
/iminv false def
/invbuf{0 1 2 index length 1 sub{dup 2 index exch get 255 exch sub 2 index 3 1 roll put}for}bdf
/cmykbufs2gray{
dup length 0 1 3 -1 roll 1 sub
{4 index 1 index get
4 index 2 index get
4 index 3 index get
4 index 4 index get
255 exch sub ccmyk ccmyk ccmyk pop 5 mul exch 45 mul add exch 14 mul add -6 bitshift
2 index 3 1 roll put}for
4 1 roll pop pop pop
}bdf
end
/textopf false def
/textblackopf true def
/curtextmtx{}def
/otw .25 def
/msf{dup/curtextmtx xdf makefont setfont}bdf
/makesetfont/msf load def
/curtextheight{.707104 .707104 curtextmtx dtransform
dup mul exch dup mul add sqrt}bdf
/ta{1 index
{tempstr 0 2 index put tempstr 2 index
gsave exec grestore
tempstr stringwidth rmoveto
5 index eq{6 index 6 index rmoveto}if
3 index 3 index rmoveto
}forall 7{pop}repeat}bdf
/sts{settextcolor textopf setoverprint/ts{awidthshow}def exec false setoverprint}bdf
/stol{/xt currentlinewidth def 
setlinewidth settextcolor textopf setoverprint newpath
/ts{{false charpath stroke}ta}def exec
false setoverprint xt setlinewidth}bdf
/currentpacking where{pop false setpacking}if
/spots[1 0 0 0 (Process Cyan) false newcmykcustomcolor
0 1 0 0 (Process Magenta) false newcmykcustomcolor
0 0 1 0 (Process Yellow) false newcmykcustomcolor
0 0 0 1 (Process Black) false newcmykcustomcolor
0 0 0 0  (White) false
newcmykcustomcolor
]def
%%EndSetup
%%IncludeFont: Symbol
0 dict dup begin
end
/f0 /Symbol FF def
[] 0 d
3.863708 M
1 w
0 j
0 J
0 O
0 R
0 i
false eomode
[0 0 0 1] Ka
[0 0 0 1] ka
vms
u
u
true fhsetspreadallow
16.8 773.55 m
394.8 773.55 L
394.8 557.55 L
16.8 557.55 L
16.8 773.55 L
0.2 w
3.863693 M
[0 0 0 1] Ka
s
U
U
vmr
vms
u
q
[1 0 0 1 5.199997 0] concat
vms
u
u
true fhsetspreadallow
25.9 769 m
160.9 769 L
160.9 562 L
25.9 562 L
25.9 769 L
[0 0 0 0] ka
[0 0 0 1] Ka
0.5 w
b
U
q
[1 0 0 1 4.5 1.800003] concat
vms
u
44.9 642.7 m
44.9 619 L
40.4 619 L
49.4 610 L
58.4 619 L
53.9 619 L
53.9 642.7 L
44.9 642.7 L
[0 0 0 0.6] ka
f
n
65.3 753 m
83.9 753 L
83.9 760 L
83.9 719.5 L
S
65.3 648.6 m
83.9 648.6 L
83.9 655.6 L
83.9 619.1 L
S
65.3 596.9 m
83.9 596.9 L
83.9 603.9 L
83.9 567.4 L
S
44.9 693.1 m
44.9 669.4 L
40.4 669.4 L
49.4 660.4 L
58.4 669.4 L
53.9 669.4 L
53.9 693.1 L
44.9 693.1 L
f
n
44.9 743.5 m
44.9 719.8 L
40.4 719.8 L
49.4 710.8 L
58.4 719.8 L
53.9 719.8 L
53.9 743.5 L
44.9 743.5 L
f
n
vmrs
%%IncludeFont: Helvetica-Condensed-BoldObl
MacVec 256 array copy
/f1 /|______Helvetica-Condensed-BoldObl dup RF findfont def
{
f1 [8.999985 0 0 8.999985 0 0] makesetfont
40.364914 750.576782 m
0 0 32 0 0 (Core) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed-BoldObl
MacVec 256 array copy
/f1 /|______Helvetica-Condensed-BoldObl dup RF findfont def
{
f1 [8.999985 0 0 8.999985 0 0] makesetfont
36.364914 699.176788 m
0 0 32 0 0 (Simple) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed-BoldObl
MacVec 256 array copy
/f1 /|______Helvetica-Condensed-BoldObl dup RF findfont def
{
f1 [8.999985 0 0 8.999985 0 0] makesetfont
39.164917 646.976791 m
0 0 32 0 0 (Label) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed-BoldObl
MacVec 256 array copy
/f1 /|______Helvetica-Condensed-BoldObl dup RF findfont def
{
f1 [8.999985 0 0 8.999985 0 0] makesetfont
30.864914 593.976791 m
0 0 32 0 0 (Command) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed
MacVec 256 array copy
/f2 /|______Helvetica-Condensed dup RF findfont def
{
f2 [7 0 0 7 0 0] makesetfont
89.864914 650.09314 m
0 0 32 0 0 (label) ts
89.864914 643.09314 m
0 0 32 0 0 (font) ts
89.864914 636.093155 m
0 0 32 0 0 (justify) ts
89.864914 629.093155 m
0 0 32 0 0 (.) ts
89.864914 622.093155 m
0 0 32 0 0 (.) ts
89.864914 615.09317 m
0 0 32 0 0 () ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed
MacVec 256 array copy
/f2 /|______Helvetica-Condensed dup RF findfont def
{
f2 [7 0 0 7 0 0] makesetfont
89.864914 754.493149 m
0 0 32 0 0 (background) ts
89.864914 747.493149 m
0 0 32 0 0 (translations) ts
89.864914 740.493164 m
0 0 32 0 0 (width ) ts
89.864914 733.493164 m
0 0 32 0 0 (height) ts
89.864914 726.493164 m
0 0 32 0 0 (.) ts
89.864914 719.493179 m
0 0 32 0 0 (.) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Condensed
MacVec 256 array copy
/f2 /|______Helvetica-Condensed dup RF findfont def
{
f2 [7 0 0 7 0 0] makesetfont
89.864914 597.893143 m
0 0 32 0 0 (shapeStyle) ts
89.864914 590.893143 m
0 0 32 0 0 (cornerRoundPer) ts
135.202515 590.893143 m
0 0 32 0 0 (cent) ts
89.864914 583.893158 m
0 0 32 0 0 (highlightThickness) ts
89.864914 576.893158 m
0 0 32 0 0 (.) ts
89.864914 569.893158 m
0 0 32 0 0 (.) ts
} 
[0 0 0 1]
sts
U
vmr
Q
U
vmr
Q
u
true fhsetspreadallow
182.3164 704.9158 m
388.3164 704.9158 L
388.3164 613.9547 L
182.3164 613.9547 L
182.3164 704.9158 L
[0 0 0 0] ka
[0 0 0 1] Ka
0.5 w
b
u
191.031 701.5547 m
203.8987 701.5547 L
207.094 701.5547 209.6842 698.9644 209.6842 695.7692 C
209.6842 694.3727 L
209.6842 691.1774 207.094 688.5872 203.8987 688.5872 C
191.031 688.5872 L
187.8357 688.5872 185.2455 691.1774 185.2455 694.3727 C
185.2455 695.7692 L
185.2455 698.9644 187.8357 701.5547 191.031 701.5547 C
s
U
u
218.9609 701.5547 m
239.3099 701.5547 L
242.5052 701.5547 245.0954 698.9644 245.0954 695.7692 C
245.0954 694.3727 L
245.0954 691.1774 242.5052 688.5872 239.3099 688.5872 C
218.9609 688.5872 L
215.7657 688.5872 213.1755 691.1774 213.1755 694.3727 C
213.1755 695.7692 L
213.1755 698.9644 215.7657 701.5547 218.9609 701.5547 C
s
U
u
254.3721 701.5547 m
265.2448 701.5547 L
268.4401 701.5547 271.0303 698.9644 271.0303 695.7692 C
271.0303 694.3727 L
271.0303 691.1774 268.4401 688.5872 265.2448 688.5872 C
254.3721 688.5872 L
251.1768 688.5872 248.5866 691.1774 248.5866 694.3727 C
248.5866 695.7692 L
248.5866 698.9644 251.1768 701.5547 254.3721 701.5547 C
s
U
u
308.9852 701.6544 m
322.8504 701.6544 L
326.0457 701.6544 328.6359 699.0642 328.6359 695.8689 C
328.6359 694.4724 L
328.6359 691.2771 326.0457 688.6869 322.8504 688.6869 C
308.9852 688.6869 L
305.7899 688.6869 303.1997 691.2771 303.1997 694.4724 C
303.1997 695.8689 L
303.1997 699.0642 305.7899 701.6544 308.9852 701.6544 C
3.863693 M
[0 0 0 0.4] Ka
s
U
u
338.162 701.6544 m
351.5285 701.6544 L
354.7237 701.6544 357.314 699.0642 357.314 695.8689 C
357.314 694.3727 L
357.314 691.1774 354.7237 688.5872 351.5285 688.5872 C
338.162 688.5872 L
334.9667 688.5872 332.3765 691.1774 332.3765 694.3727 C
332.3765 695.8689 L
332.3765 699.0642 334.9667 701.6544 338.162 701.6544 C
3.863708 M
[0 0 0 1] Ka
s
U
vmrs
%%IncludeFont: Helvetica-Bold
MacVec 256 array copy
/f3 /|______Helvetica-Bold dup RF findfont def
{
f3 [7.979721 0 0 7.979721 0 0] makesetfont
189.488632 692.08461 m
0 0 32 0 0 (Quit) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Bold
MacVec 256 array copy
/f3 /|______Helvetica-Bold dup RF findfont def
{
f3 [7.979721 0 0 7.979721 0 0] makesetfont
217.165558 692.08461 m
0 0 32 0 0 (Delete) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Bold
MacVec 256 array copy
/f3 /|______Helvetica-Bold dup RF findfont def
{
f3 [7.979721 0 0 7.979721 0 0] makesetfont
251.607346 692.08461 m
0 0 32 0 0 (New) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Bold
MacVec 256 array copy
/f3 /|______Helvetica-Bold dup RF findfont def
{
f3 [7.979721 0 0 7.979721 0 0] makesetfont
307.274673 692.184357 m
0 0 32 0 0 (Next) ts
} 
[0 0 0 0.4]
sts
vmrs
%%IncludeFont: Helvetica-Bold
MacVec 256 array copy
/f3 /|______Helvetica-Bold dup RF findfont def
{
f3 [7.979721 0 0 7.979721 0 0] makesetfont
336.197342 692.08461 m
0 0 32 0 0 (Prev) ts
} 
[0 0 0 1]
sts
u
true fhsetspreadallow
280.3071 701.6544 m
294.1724 701.6544 L
297.3676 701.6544 299.9578 699.0642 299.9578 695.8689 C
299.9578 694.4724 L
299.9578 691.2771 297.3676 688.6869 294.1724 688.6869 C
280.3071 688.6869 L
277.1119 688.6869 274.5217 691.2771 274.5217 694.4724 C
274.5217 695.8689 L
274.5217 699.0642 277.1119 701.6544 280.3071 701.6544 C
0.5 w
[0 0 0 1] Ka
s
U
vmrs
%%IncludeFont: Helvetica-Bold
MacVec 256 array copy
/f3 /|______Helvetica-Bold dup RF findfont def
{
f3 [7.979721 0 0 7.979721 0 0] makesetfont
277.925247 692.184357 m
0 0 32 0 0 (Save) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica-Bold
MacVec 256 array copy
/f3 /|______Helvetica-Bold dup RF findfont def
{
f3 [7.979721 0 0 7.979721 0 0] makesetfont
363.57579 692.08461 m
0 0 32 0 0 (1) ts
} 
[0 0 0 1]
sts
u
true fhsetspreadallow
360.8063 701.6573 m
370.7813 701.6573 L
370.7813 688.59 L
360.8063 688.59 L
360.8063 701.6573 L
0.4987 w
3.863693 M
[0 0 0 1] Ka
s
U
184.5007 684.6903 m
384.3164 684.6903 L
384.3164 616.7204 L
184.5007 616.7204 L
184.5007 684.6903 L
0.5 w
3.863708 M
s
u
185.7842 683.7746 m
197.1842 683.7746 L
197.1842 635.7746 L
185.7842 635.7746 L
185.7842 683.7746 L
[0 0 0 0.4] ka
f
n
U
197.9842 684.4746 m
197.9842 616.7746 L
S
u
199.1842 629.2746 m
247.1842 629.2746 L
247.1842 617.8746 L
199.1842 617.8746 L
199.1842 629.2746 L
f
n
U
198.4842 630.0746 m
384.0107 630.0746 L
S
U
U
vmr
vms
u
vmrs
%%IncludeFont: Helvetica
MacVec 256 array copy
/f4 /|______Helvetica dup RF findfont def
{
f4 [7.999985 0 0 7.999985 0 0] makesetfont
203.181717 670.285004 m
0 0 32 0 0 (\136) ts
} 
[0 0 0 1]
sts
true fhsetspreadallow
211 715.8 m
197 715.8 L
197 700.8 L
0.5 w
[0 0 0 1] Ka
S
vmrs
%%IncludeFont: Helvetica-Condensed
MacVec 256 array copy
/f2 /|______Helvetica-Condensed dup RF findfont def
{
f2 [8 0 0 8 0 0] makesetfont
214.46492 713.406342 m
0 0 32 0 0 (xclipboard.form.quit.label: Quit) ts
} 
[0 0 0 1]
sts
U
vmr
%%Trailer
end  % FreeHandDict
end  % FHIODict
countdictstack InitDictCount sub { end } repeat
cleartomark
restore
grestore

%%EndDocument
FMENDEPSF
111 420.01 507 657 C
45 63 567 729 C
FMENDPAGE
%%EndPage: "449" 9
%%Page: "450" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (450) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 10 Q
7 X
(G) 74.62 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
-0.47 (with that data is up to its designer. If you set a resource and nothing seems to happen, you) 150 650.33 P
0.27 (might have done something wrong...but you might also have set the resource correctly,) 150 638.03 P
(and the widget simply chose to ignore it.) 150 625.73 T
6 3.2 Q
(n) 141 609.03 T
1 10 Q
-0.31 (Even when a widget does use a resource, you can\325t necessarily set it from a resource file.) 150 607.43 P
(There are two reasons for this:) 150 595.13 T
6 3.2 Q
(n) 141 578.43 T
1 10 Q
0.5 0.01 (The programmer has the option to \322hardcode\323 the value of a resource when creating a) 150 576.83 B
(widget. If he does this, all resource specifications for that resource are ignored.) 150 564.53 T
6 3.2 Q
(n) 141 547.83 T
1 10 Q
-0.46 (Some resources are designed only for programmer use. Some of these can\325t ever be spec-) 150 546.23 P
0.5 0.11 (ified in a resource file, since the data type of the resource isn\325t a text string, and the) 150 533.93 B
0.44 (Toolkit doesn\325t provide any automatic conversion. \050Things like colors or can be speci-) 150 521.63 P
0.35 (fied in resource files, even though a color name is not actually the color itself, because) 150 509.33 P
(the X Toolkit automatically converts a color name to the appropriate internal format\051.) 150 497.03 T
-0.07 (The following pages document only resources that are theoretically settable from resource) 141 478.73 P
-0.03 (files. \050That is, if no converter exists, we\325ve assumed that the resource is only for program-) 141 466.43 P
0.17 (mer use and have deleted it from the list.\051 However, there are many other resources listed) 141 454.13 P
-0.2 (that are most likely hardcoded by the programmer. Unfortunately, there is no way to tell in) 141 441.83 P
(advance whether they will or will not be hardcoded in a particular application.) 141 429.53 T
0.88 (The \322default values\323 listed for each widget resource may or may not apply to an actual) 141 411.23 P
-0.08 (application. These are the default values for the widget. An application can override them,) 141 398.93 P
0.13 (either in the program code, or in an application defaults file. But inasmuch as the defaults) 141 386.63 P
(are reasonable, they will usually be unchanged.) 141 374.33 T
-0.25 (With this background, you\325re now ready to navigate the widget reference information con-) 141 356.03 P
0.93 (tained in the next two appendices. For each widget \050or gadget\051 in the) 141 343.73 P
1 9 Q
0.84 (OLIT) 430.32 343.73 P
1 10 Q
0.93 ( and Athena) 450.81 343.73 P
0.04 (widget sets, we give a brief description, a summary of its class hierarchy, a list of the new) 141 331.43 P
(resources it defines, and its default translations and actions, if any.) 141 319.13 T
3.86 (Commercial X Toolkit-based applications should document all of the appropriate) 141 300.83 P
(resources for the) 141 288.53 T
1 9 Q
(OLIT) 210.14 288.53 T
1 10 Q
(  Motif widgets they use.) 230.63 288.53 T
FMENDPAGE
%%EndPage: "450" 10
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 10
%%DocumentFonts: Helvetica-Narrow-BoldOblique
%%+ Times-Roman
%%+ Times-Italic
%%+ Helvetica-Bold
%%+ Courier
%%+ Courier-Oblique
%%+ ZapfDingbats
%%EOF
