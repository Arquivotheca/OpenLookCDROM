%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{1 dict dup /PageSize [paperwidth paperheight]put setpagedevice}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 {1 dict dup /ManualFeed manualfeed put setpagedevice } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 24 FMDOCUMENT
0 0 /Helvetica-Narrow-BoldOblique FMFONTDEFINE
1 0 /Times-Roman FMFONTDEFINE
2 0 /Times-Italic FMFONTDEFINE
3 0 /Helvetica-Bold FMFONTDEFINE
4 0 /Courier FMFONTDEFINE
5 0 /Times-Bold FMFONTDEFINE
6 0 /Courier-Bold FMFONTDEFINE
7 0 /Courier-BoldOblique FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "283" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (CHAPTER 11: COMMAND LINE OPTIONS) 315.48 693.79 S
0 9 Q
0.45 (283) 487.34 693.79 S
111 684 507 708 R
0.2 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 10 Q
7 X
(11) 531 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
0 0 0 0 1 1 1 K
1 10 Q
7 X
(Chapter) 138 719.33 T
(11COMMAND LINE OPTIONS) 172.16 719.33 T
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 16 Q
0 X
0 1 1 0 1 0 0 K
(CHAPTER) 110 633.83 T
(11) 177.06 633.83 T
0 0 0 1 0 0 0 K
0 35 Q
0 0 0 1 0 0 0 K
(Command Line Options) 144.5 573.5 T
1 10 Q
-0.21 (This chapter describes command line options that are common to most clients. Some argu-) 147 434.33 P
0.5 (ments to command line options can also be specified as the values of resource variables,) 147 422.03 P
0.26 (described in Chapter 12,) 147 409.73 P
2 F
0.26 (Setting Resources) 248.3 409.73 P
1 F
0.26 (. For example, the format of a geometry string) 319.94 409.73 P
-0.24 (or a color specification is the same whether it is specified as an argument to an option or as) 147 397.43 P
(the value of a resource definition.) 147 385.13 T
0.37 (As explained in Chapter 3,) 147 366.83 P
2 F
0.37 (Opening Additional Windows) 258.29 366.83 P
1 F
0.37 (, The X Window System allows) 377.37 366.83 P
0.23 (the user to specify numerous \050very numerous!\051 command line options when starting most) 147 354.53 P
-0.31 (clients. In order to know for sure what options a given client will accept, you need to check) 147 342.23 P
-0.21 (its reference page in Part Three. However, there are many \322generic\323 options. In addition to) 147 329.93 P
0.6 (certain client-specific options, all applications built with the MIT X Toolkit \050or a toolkit) 147 317.63 P
-0.49 (based on the Xt Intrinsics, such as OLIT, the) 147 305.33 P
1 9 Q
-0.44 (OPEN LOOK) 323.94 305.33 P
1 10 Q
-0.49 ( Intrinsics Toolkit, or OSF/Motif\051) 374.24 305.33 P
0.72 (accept certain standard options, which are listed in Table) 147 293.03 P
0.72 (11-) 382.72 293.03 P
0.72 (1. Programs built using the) 396.05 293.03 P
-0.12 (XView toolkit accept most of these options, as well as certain XView-specific options and) 147 280.73 P
-0.05 (some \322-W\323 short forms shown in Table) 147 268.43 P
-0.05 (11-) 306.98 268.43 P
-0.05 (2, \322XView Generic Options\323. Some non-Tool-) 320.31 268.43 P
-0.1 (kit applications may also recognize some or all of these options. The first column contains) 147 256.13 P
0.44 (the name of the option, the second the name of the resource to which it corresponds \050see) 147 243.83 P
(Chapter 12,) 147 231.53 T
2 F
(Setting Resources) 196.16 231.53 T
1 F
(\051, and the third a brief description of what the option does.) 267.54 231.53 T
-0.32 (This chapter discusses some of the more commonly used generic options and demonstrates) 147 213.23 P
0.25 (how to use them. \050For the syntax of the other X Toolkit options, see the) 147 200.93 P
2 F
0.25 (X) 439.32 200.93 P
1 F
0.25 ( reference page) 445.43 200.93 P
(in Part Three of this guide; for the XView options, see the) 147 188.63 T
2 F
(xview) 381.69 188.63 T
1 F
( reference page.\051) 404.46 188.63 T
3 9 Q
(Table) 146.19 167.3 T
(11-) 172.2 167.3 T
(1. MIT Toolkit and OLIT Standard Options) 185.21 167.3 T
(Flag) 116.19 144.3 T
(Long Flag) 159.39 144.3 T
(Resource) 245.79 144.3 T
(Description) 317.79 144.3 T
4 10 Q
-0.25 (-bg) 116.19 122.63 S
-0.25 (-background) 159.39 122.63 S
1 F
-0.25 (background) 245.79 122.63 S
-0.25 (Background color of window.) 317.79 122.63 S
4 F
-0.25 (-bd) 116.19 102.63 S
-0.25 (-bordercolor) 159.39 102.63 S
1 F
-0.25 (borderColor) 245.79 102.63 S
-0.25 (Color of window border.) 317.79 102.63 S
153.39 159.3 153.39 95.05 2 L
V
0.5 H
0 Z
N
239.79 159.3 239.79 95.05 2 L
V
N
311.79 159.3 311.79 95.05 2 L
V
N
110.19 158.3 507.81 158.3 2 L
V
2 H
N
110.19 135.3 507.81 135.3 2 L
V
N
110.19 115.3 507.81 115.3 2 L
V
0.5 H
N
110.19 95.3 507.81 95.3 2 L
V
N
FMENDPAGE
%%EndPage: "283" 1
%%Page: "284" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (284) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 10 Q
7 X
(11) 71.88 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
0.73 (Though all Toolkit options are preceded by a minus sign, client-specific options may or) 141 214.23 P
0.2 (may not require one. See the reference page for each client in Part Three of this guide for) 141 201.93 P
(the syntax of all options.) 141 189.63 T
4 F
-0.25 (-bw) 110.19 606.33 S
-0.25 (-borderwidth) 153.39 606.33 S
1 F
-0.25 (borderWidth) 239.79 606.33 S
-0.25 (Border width of window in pixels.) 311.79 606.33 S
4 F
-0.25 (-display) 153.39 586.33 S
1 F
-0.25 (display) 239.79 586.33 S
-0.25 (Display on which to run client.) 311.79 586.33 S
4 F
-0.25 (-fn) 110.19 566.33 S
-0.25 (-font) 153.39 566.33 S
1 F
-0.25 (font) 239.79 566.33 S
-0.25 (Font for text display.) 311.79 566.33 S
4 F
-0.25 (-fg) 110.19 546.33 S
-0.25 (-foreground) 153.39 546.33 S
1 F
-0.25 (foreground) 239.79 546.33 S
-0.25 (Foreground \050drawing or text\051 color of window.) 311.79 546.33 S
4 F
-0.25 (-geometry) 153.39 526.33 S
1 F
-0.25 (geometry) 239.79 526.33 S
-0.25 (Geometry string for window size and placement.) 311.79 526.33 S
4 F
-0.25 (-iconic) 153.39 506.33 S
1 F
-0.25 (Start the application in iconified form.) 311.79 506.33 S
4 F
-0.25 (-name) 153.39 486.33 S
1 F
-0.25 (name) 239.79 486.33 S
-0.25 (Specify a name for the application being run.) 311.79 486.33 S
4 F
-0.25 (-rv) 110.19 466.33 S
-0.25 (-reverse) 153.39 466.33 S
1 F
-0.25 (reverseVideo) 239.79 466.33 S
-0.25 (Reverse foreground and background colors.) 311.79 466.33 S
4 F
-0.25 (+rv) 110.19 446.33 S
1 F
-0.25 (reverseVideo) 239.79 446.33 S
-0.25 (Don\325t reverse foreground and background.) 311.79 446.33 S
4 F
-0.25 (-) 153.39 426.33 S
-0.25 (selection-) 153.39 414.03 S
-0.25 (Timeout) 153.39 401.73 S
1 F
-0.25 (selectionTim-) 239.79 426.33 S
-0.25 (eout) 239.79 414.03 S
-0.25 (Time-out in milliseconds within which two) 311.79 426.33 S
-0.25 (communicating applications must respond to) 311.79 414.03 S
-0.25 (one another for a selection request.) 311.79 401.73 S
4 F
-0.25 (-synchronous) 153.39 381.73 S
1 F
-0.25 (synchronous) 239.79 381.73 S
-0.25 (Enable synchronous debug mode.) 311.79 381.73 S
4 F
-0.25 (+synchronous) 153.39 361.73 S
1 F
-0.25 (synchronous) 239.79 361.73 S
-0.25 (Disable synchronous debug mode.) 311.79 361.73 S
4 F
-0.25 (-title) 153.39 341.73 S
1 F
-0.25 (title) 239.79 341.73 S
-0.25 (Specify a window title \050e.g., to be displayed in a) 311.79 341.73 S
-0.25 (titlebar\051.) 311.79 329.43 S
4 F
-0.25 (-xnllanguage) 153.39 309.43 S
1 F
-0.25 (xnlLanguage) 239.79 309.43 S
-0.25 (The language, territory, and code set for) 311.79 309.43 S
-0.25 (National Language Support; this information) 311.79 297.13 S
-0.25 (helps resolve resource and other filenames.) 311.79 284.83 S
4 F
-0.25 (-xrm) 110.19 264.83 S
1 F
-0.25 ( value of next) 239.79 264.83 S
-0.25 (argument) 239.79 252.53 S
-0.25 (Next argument is a quoted string containing a) 311.79 264.83 S
-0.25 (resource manager specification, as described in) 311.79 252.53 S
-0.25 (Chapter 12,) 311.79 240.23 S
2 F
-0.25 (Setting Resources) 357.95 240.23 S
1 F
-0.25 (.) 425.08 240.23 S
3 9 Q
(Table) 140.19 651 T
(11-) 166.2 651 T
(1. MIT Toolkit and OLIT Standard Options) 179.21 651 T
(Flag) 110.19 628 T
(Long Flag) 153.39 628 T
(Resource) 239.79 628 T
(Description) 311.79 628 T
147.39 643 147.39 232.65 2 L
V
0.5 H
0 Z
N
233.79 643 233.79 232.65 2 L
V
N
305.79 643 305.79 232.65 2 L
V
N
104.19 642 501.81 642 2 L
V
2 H
N
104.19 619 501.81 619 2 L
V
N
104.19 599 501.81 599 2 L
V
0.5 H
N
104.19 579 501.81 579 2 L
V
N
104.19 559 501.81 559 2 L
V
N
104.19 539 501.81 539 2 L
V
N
104.19 519 501.81 519 2 L
V
N
104.19 499 501.81 499 2 L
V
N
104.19 479 501.81 479 2 L
V
N
104.19 459 501.81 459 2 L
V
N
104.19 439 501.81 439 2 L
V
N
104.19 394.4 501.81 394.4 2 L
V
N
104.19 374.4 501.81 374.4 2 L
V
N
104.19 354.4 501.81 354.4 2 L
V
N
104.19 322.1 501.81 322.1 2 L
V
N
104.19 277.5 501.81 277.5 2 L
V
N
104.19 232.9 501.81 232.9 2 L
V
N
FMENDPAGE
%%EndPage: "284" 2
%%Page: "285" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (CHAPTER 11: COMMAND LINE OPTIONS) 315.48 693.79 S
0 9 Q
0.45 (285) 487.34 693.79 S
111 684 507 708 R
0.5 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 10 Q
7 X
(11) 531 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
0.64 (Here are the XView options. Most are preceded by a minus sign, but a few may be pre-) 147 650.33 P
(ceded by a plus sign to have the opposite effect.) 147 638.03 T
3 9 Q
(Table) 152.23 616.7 T
(11-) 178.24 616.7 T
(2. XView Generic Options) 191.24 616.7 T
(Flag) 122.23 593.7 T
(Long Flag) 182.34 593.7 T
(Argument Type) 286.02 593.7 T
(Description) 373.14 593.7 T
4 10 Q
-0.25 (-WH) 122.23 572.03 S
-0.25 (-help) 182.34 572.03 S
1 F
-0.25 (Print this table.) 373.14 572.03 S
4 F
-0.25 (-Ww) 122.23 552.03 S
-0.25 (-width) 182.34 552.03 S
1 F
-0.25 (columns) 286.02 552.03 S
-0.25 (Window width in pixels) 373.14 552.03 S
4 F
-0.25 (-Wh) 122.23 532.03 S
-0.25 (-height) 182.34 532.03 S
1 F
-0.25 (lines) 286.02 532.03 S
-0.25 (Window height in pixels) 373.14 532.03 S
4 F
-0.25 (-Ws) 122.23 512.03 S
-0.25 (-size) 182.34 512.03 S
1 F
-0.25 (x y) 286.02 512.03 S
-0.25 (\050combination of above\051) 373.14 512.03 S
4 F
-0.25 (-Wp) 122.23 492.03 S
-0.25 (-position) 182.34 492.03 S
1 F
-0.25 (x y) 286.02 492.03 S
-0.25 (Position of top left window) 373.14 492.03 S
-0.25 (corner) 373.14 479.73 S
4 F
-0.25 (-geometry) 182.34 459.73 S
1 F
-0.25 (X geometry) 286.02 459.73 S
-0.25 (X-style size, location) 373.14 459.73 S
4 F
-0.25 (-WP) 122.23 439.73 S
-0.25 (-icon_position) 182.34 439.73 S
1 F
-0.25 (x y) 286.02 439.73 S
-0.25 (Icon location) 373.14 439.73 S
4 F
-0.25 (-Wl) 122.23 419.73 S
-0.25 (-label) 182.34 419.73 S
1 F
-0.25 (string) 286.02 419.73 S
-0.25 (Window Label) 373.14 419.73 S
4 F
-0.25 (-title) 182.34 399.73 S
1 F
-0.25 (string) 286.02 399.73 S
-0.25 (Same as -label) 373.14 399.73 S
4 F
-0.25 (-name) 182.34 379.73 S
1 F
-0.25 (string) 286.02 379.73 S
-0.25 (Set application instance name) 373.14 379.73 S
-0.25 (to string) 373.14 367.43 S
4 F
-0.25 (-Wi) 122.23 347.43 S
-0.25 (-iconic) 182.34 347.43 S
1 F
-0.25 (Start up iconified) 286.02 347.43 S
4 F
-0.25 (+Wi) 122.23 327.43 S
-0.25 (+iconic) 182.34 327.43 S
1 F
-0.25 (Start up open) 286.02 327.43 S
4 F
-0.25 (-Wt) 122.23 307.43 S
-0.25 (-font or -fn) 182.34 307.43 S
1 F
-0.25 (font name) 286.02 307.43 S
-0.25 (Normal font name) 373.14 307.43 S
4 F
-0.25 (-Wx) 122.23 287.43 S
-0.25 (-scale) 182.34 287.43 S
1 F
-0.25 (small | medium |) 286.02 287.43 S
-0.25 (large | extra_large) 286.02 275.13 S
-0.25 (Relative size) 373.14 287.43 S
4 F
-0.25 (-Wf) 122.23 255.13 S
-0.25 (-) 182.34 255.13 S
-0.25 (foreground_col) 188.09 255.13 S
-0.25 (or) 182.34 242.83 S
1 F
-0.25 (red green blue) 286.02 255.13 S
-0.25 (0-255, 0=no color; 255=full) 373.14 255.13 S
-0.25 (color) 373.14 242.83 S
4 F
-0.25 (-fg) 122.23 222.83 S
-0.25 (-foreground) 182.34 222.83 S
1 F
-0.25 (color name) 286.02 222.83 S
-0.25 (X Color specification) 373.14 222.83 S
4 F
-0.25 (-Wb) 122.23 202.83 S
-0.25 (-) 182.34 202.83 S
-0.25 (background_colo) 182.34 190.53 S
-0.25 (r) 182.34 178.23 S
1 F
-0.25 (red green blue) 286.02 202.83 S
-0.25 (same as -Wf) 373.14 202.83 S
4 F
-0.25 (-bg) 122.23 158.23 S
-0.25 (-background) 182.34 158.23 S
1 F
-0.25 (color name) 286.02 158.23 S
-0.25 (same as -fg) 373.14 158.23 S
4 F
-0.25 (-rv) 122.23 138.23 S
-0.25 (-reverse) 182.34 138.23 S
1 F
-0.25 (Reverse -fg and -bg colors) 373.14 138.23 S
4 F
-0.25 (+rv) 122.23 118.23 S
-0.25 (+reverse) 182.34 118.23 S
1 F
-0.25 (Don\325t reverse colors) 373.14 118.23 S
4 F
-0.25 (-WI) 122.23 98.23 S
-0.25 (-) 182.34 98.23 S
-0.25 (icon_image) 188.09 98.23 S
1 F
-0.25 (filename) 286.02 98.23 S
-0.25 (Take icon image from file) 373.14 98.23 S
176.34 608.7 176.34 90.65 2 L
V
0.5 H
0 Z
N
280.02 608.7 280.02 90.65 2 L
V
N
367.14 608.7 367.14 90.65 2 L
V
N
116.23 607.7 501.77 607.7 2 L
V
2 H
N
116.23 584.7 501.77 584.7 2 L
V
N
116.23 564.7 501.77 564.7 2 L
V
0.5 H
N
116.23 544.7 501.77 544.7 2 L
V
N
116.23 524.7 501.77 524.7 2 L
V
N
116.23 504.7 501.77 504.7 2 L
V
N
116.23 472.4 501.77 472.4 2 L
V
N
116.23 452.4 501.77 452.4 2 L
V
N
116.23 432.4 501.77 432.4 2 L
V
N
116.23 412.4 501.77 412.4 2 L
V
N
116.23 392.4 501.77 392.4 2 L
V
N
116.23 360.1 501.77 360.1 2 L
V
N
116.23 340.1 501.77 340.1 2 L
V
N
116.23 320.1 501.77 320.1 2 L
V
N
116.23 300.1 501.77 300.1 2 L
V
N
116.23 267.8 501.77 267.8 2 L
V
N
116.23 235.5 501.77 235.5 2 L
V
N
116.23 215.5 501.77 215.5 2 L
V
N
116.23 170.9 501.77 170.9 2 L
V
N
116.23 150.9 501.77 150.9 2 L
V
N
116.23 130.9 501.77 130.9 2 L
V
N
116.23 110.9 501.77 110.9 2 L
V
N
116.23 90.9 501.77 90.9 2 L
V
N
FMENDPAGE
%%EndPage: "285" 3
%%Page: "286" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (286) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 10 Q
7 X
(11) 71.88 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
4 10 Q
0 X
0 0 0 1 0 0 0 K
-0.25 (-WL) 116.23 606.33 S
-0.25 (-icon_label) 176.34 606.33 S
1 F
-0.25 (string) 280.02 606.33 S
-0.25 (Label when iconified) 367.14 606.33 S
4 F
-0.25 (-WT) 116.23 586.33 S
-0.25 (-icon_font) 176.34 586.33 S
1 F
-0.25 (font name) 280.02 586.33 S
-0.25 (Name of font for -WL) 367.14 586.33 S
4 F
-0.25 (-Wr) 116.23 566.33 S
-0.25 (-display) 176.34 566.33 S
1 F
-0.25 (server_name:screen) 280.02 566.33 S
-0.25 (X display name) 367.14 566.33 S
4 F
-0.25 (-visual) 176.34 546.33 S
1 F
-0.25 (StaticGray | Gray-) 280.02 546.33 S
-0.25 (Scale | StaticColor) 280.02 534.03 S
-0.25 (| PseudoColor|) 280.02 521.73 S
-0.25 (TrueColor |) 280.02 509.43 S
-0.25 (DirectColor) 280.02 497.13 S
-0.25 (\322Visual\323 to use) 367.14 546.33 S
4 F
-0.25 (-depth) 116.23 477.13 S
-0.25 (depth) 176.34 477.13 S
1 F
-0.25 (1-24) 280.02 477.13 S
-0.25 (Depth of visual to use) 367.14 477.13 S
4 F
-0.25 (-Wdr) 116.23 457.13 S
-0.25 (-) 176.34 457.13 S
-0.25 (disable_retain) 182.09 457.13 S
-0.25 (ed) 176.34 444.83 S
1 F
-0.25 (Turn off \322retained\323 hint) 367.14 457.13 S
4 F
-0.25 (-Wdxio) 116.23 424.83 S
-0.25 (-) 176.34 424.83 S
-0.25 (disable_xio_er) 182.09 424.83 S
-0.25 (ror_handler) 176.34 412.53 S
1 F
-0.25 (Turn off XLib I/O handling) 367.14 424.83 S
4 F
-0.25 (-Wfsdb) 116.23 392.53 S
-0.25 (-) 176.34 392.53 S
-0.25 (fullscreen-) 182.09 392.53 S
-0.25 (debug) 176.34 380.23 S
1 F
-0.25 (For debugging; avoid) 367.14 392.53 S
-0.25 (screengrabs) 367.14 380.23 S
4 F
-0.25 (-) 116.23 360.23 S
-0.25 (Wfsdbs) 121.98 360.23 S
-0.25 (-) 176.34 360.23 S
-0.25 (fullscreende-) 182.09 360.23 S
-0.25 (bugserver) 176.34 347.93 S
1 F
-0.25 (Avoid server grabs only) 367.14 360.23 S
4 F
-0.25 (-) 116.23 327.93 S
-0.25 (Wfsdbp) 121.98 327.93 S
-0.25 (-) 176.34 327.93 S
-0.25 (fullscreende-) 182.09 327.93 S
-0.25 (bugptr) 176.34 315.63 S
1 F
-0.25 (Avoid pointer \050mouse\051 grabs) 367.14 327.93 S
-0.25 (only) 367.14 315.63 S
4 F
-0.25 (-Wfsdbk) 116.23 295.63 S
-0.25 (-) 176.34 295.63 S
-0.25 (fullscreende-) 176.34 283.33 S
-0.25 (bugkbd) 176.34 271.03 S
1 F
-0.25 (Avoid keyboard grabs only) 367.14 295.63 S
4 F
-0.25 (-WS) 116.23 251.03 S
-0.25 (-) 176.34 251.03 S
-0.25 (defeateventse-) 176.34 238.73 S
-0.25 (curity) 176.34 226.43 S
1 F
-0.25 (Turn off XLib event security) 367.14 251.03 S
-0.25 (\050don\325t!\051) 367.14 238.73 S
4 F
-0.25 (-sync) 116.23 206.43 S
-0.25 (-synchronous) 176.34 206.43 S
1 F
-0.25 (Force a synchronous XLib) 367.14 206.43 S
-0.25 (connection) 367.14 194.13 S
4 F
-0.25 (+sync) 116.23 174.13 S
-0.25 (+synchronous) 176.34 174.13 S
1 F
-0.25 (Make an asynchronous XLib) 367.14 174.13 S
-0.25 (connection) 367.14 161.83 S
4 F
-0.25 (-Wd) 116.23 141.83 S
-0.25 (-default) 176.34 141.83 S
1 F
-0.25 (resource value) 280.02 141.83 S
-0.25 (Set the X resource to value) 367.14 141.83 S
4 F
-0.25 (-xrm) 176.34 121.83 S
1 F
-0.25 (resource:value) 280.02 121.83 S
-0.25 (Set the X resource to value) 367.14 121.83 S
4 F
-0.25 (-) 176.34 101.83 S
-0.25 (lc_basiclocale) 182.09 101.83 S
1 F
-0.25 (locale) 280.02 101.83 S
-0.25 (Set basic locale to locale) 367.14 101.83 S
3 9 Q
(Table) 146.23 651 T
(11-) 172.24 651 T
(2. XView Generic Options) 185.24 651 T
(Flag) 116.23 628 T
(Long Flag) 176.34 628 T
(Argument Type) 280.02 628 T
(Description) 367.14 628 T
170.34 643 170.34 94.25 2 L
V
0.5 H
0 Z
N
274.02 643 274.02 94.25 2 L
V
N
361.14 643 361.14 94.25 2 L
V
N
110.23 642 495.77 642 2 L
V
2 H
N
110.23 619 495.77 619 2 L
V
N
110.23 599 495.77 599 2 L
V
0.5 H
N
110.23 579 495.77 579 2 L
V
N
110.23 559 495.77 559 2 L
V
N
110.23 489.8 495.77 489.8 2 L
V
N
110.23 469.8 495.77 469.8 2 L
V
N
110.23 437.5 495.77 437.5 2 L
V
N
110.23 405.2 495.77 405.2 2 L
V
N
110.23 372.9 495.77 372.9 2 L
V
N
110.23 340.6 495.77 340.6 2 L
V
N
110.23 308.3 495.77 308.3 2 L
V
N
110.23 263.7 495.77 263.7 2 L
V
N
110.23 219.1 495.77 219.1 2 L
V
N
110.23 186.8 495.77 186.8 2 L
V
N
110.23 154.5 495.77 154.5 2 L
V
N
110.23 134.5 495.77 134.5 2 L
V
N
110.23 114.5 495.77 114.5 2 L
V
N
110.23 94.5 495.77 94.5 2 L
V
N
FMENDPAGE
%%EndPage: "286" 4
%%Page: "287" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (CHAPTER 11: COMMAND LINE OPTIONS) 315.48 693.79 S
0 9 Q
0.45 (287) 487.34 693.79 S
111 684 507 708 R
0.5 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 10 Q
7 X
(11) 531 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
-0.26 (One very useful option is) 147 520.33 P
4 F
-0.62 (-help) 249.3 520.33 P
1 F
-0.26 (, which prints the list of options that a given program will) 279.3 520.33 P
(accept, similar to the above table.) 147 508.03 T
1 8 Q
(\240) 281.14 512.03 T
1 10 Q
0.17 (Perhaps the next-most useful options are) 147 489.73 P
4 F
0.42 (-display) 313.03 489.73 P
1 F
0.17 ( and) 361.03 489.73 P
4 F
0.42 (-geometry) 380.82 489.73 P
1 F
0.17 (, which allow you) 434.82 489.73 P
-0.26 (to specify the display on which a client window should appear, and the size and position of) 147 477.43 P
2.17 (that window, respectively. See Chapter 3,) 147 465.13 P
2 F
2.17 (Opening Additional Windows) 329.16 465.13 P
1 F
2.17 (, for detailed) 451.84 465.13 P
0.14 (instructions on using these options. In the remainder of this chapter we\325ll discuss some of) 147 452.83 P
(the other useful Toolkit options.) 147 440.53 T
0.14 (An option that lets you specify any X Resource for which there is no command line argu-) 147 422.23 P
0.67 (ment is) 147 409.93 P
4 F
1.54 -0.25 (-xrm) 180.01 409.93 B
1 F
0.67 (, which takes an argument of the form) 203.01 409.93 P
2 F
0.67 (resource:value) 363.08 409.93 P
1 F
0.67 (\050XView clients also) 426.23 409.93 P
0.23 (accept -Wd or -default, which takes two arguments, a resource and a value\051. The two fol-) 147 397.63 P
(lowing forms are equivalent:) 147 385.33 T
4 8 Q
-0.16 (cmdtool -xrm \322OpenWindows.ScrollbarPlacement:right\323) 165 368.37 S
-0.16 (cmdtool -Wd \322OpenWindows.ScrollbarPlacement:right\323) 165 359.37 S
1 10 Q
-0.25 (In either case, the quotes are recommended to prevent the shell from trying to interpret any) 147 343.03 P
(asterisk \050\322*\323\051 or other special characters.) 147 330.73 T
0 1 1 0 1 0 0 K
0 20 Q
0 1 1 0 1 0 0 K
(1) 111 298.47 T
(1.1  W) 118.92 298.47 T
(indow T) 166.18 298.47 T
(itle and Application Name) 228.02 298.47 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
-0.15 (The name of the program \050as known to the server\051 and the title of the window can be spec-) 147 279.13 P
0.3 (ified on the command line. The) 147 266.83 P
4 F
0.73 (-title) 276.86 266.83 P
1 F
0.3 ( option allows you to specify a text string as the) 312.86 266.83 P
0.34 (title of the application\325s window. If your application has a titlebar or if the window man-) 147 254.53 P
-0.39 (ager you are using puts titlebars on windows, this string will appear in the titlebar. Window) 147 242.23 P
(titles can be useful in distinguishing multiple instances of the same application.) 147 229.93 T
0.13 (The) 147 211.63 P
4 F
0.32 (-name) 165.18 211.63 P
1 F
0.13 ( option actually changes the name by which the server identifies the program.) 195.18 211.63 P
0.52 (Changing the name of the application itself \050with the) 147 199.33 P
4 F
1.25 (-name) 365.26 199.33 P
1 F
0.52 ( option\051 affects the way the) 395.26 199.33 P
-0.09 (application interprets resource files. This option is discussed further in Chapter 12,) 147 187.03 P
2 F
-0.09 (Setting) 479.22 187.03 P
-0.48 (Resources) 147 174.73 P
1 F
-0.48 (. If a name string is defined for an application, that string will appear as the appli-) 188.1 174.73 P
(cation name in its icon.) 147 162.43 T
0 1 1 0 1 0 0 K
111 113 507 130.98 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
111 113 507 130.98 R
7 X
0 1 1 0 1 0 0 K
V
112.07 118.96 292.07 118.96 2 L
V
0.5 H
2 Z
0 X
N
45 63 567 729 C
0 0 0 1 0 0 0 K
1 8 Q
0 X
0 0 0 1 0 0 0 K
0.7 (\240) 147 107.67 P
0.7 (Indeed, my one complaint about the standard OpenWindows clients is that they only print the generic help;) 153 107.67 P
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
(many of those that accept additional command line arguments don\325t display them when) 147 97.67 T
5 F
(-help) 428.97 97.67 T
1 F
( is given.) 446.3 97.67 T
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
4 10 Q
-0.25 (-lc_displaylang) 182.34 606.33 S
1 F
-0.25 (locale) 286.02 606.33 S
-0.25 ( Set display language to locale) 373.14 606.33 S
4 F
-0.25 (-) 182.34 586.33 S
-0.25 (lc_inputlang) 188.09 586.33 S
1 F
-0.25 (locale) 286.02 586.33 S
-0.25 ( Set input language to locale) 373.14 586.33 S
4 F
-0.25 (-) 182.34 566.33 S
-0.25 (lc_numeric) 188.09 566.33 S
1 F
-0.25 (locale) 286.02 566.33 S
-0.25 ( Set numeric format to locale) 373.14 566.33 S
4 F
-0.25 (-) 182.34 546.33 S
-0.25 (lc_timeformat) 188.09 546.33 S
1 F
-0.25 (locale) 286.02 546.33 S
-0.25 ( Set time format to locale) 373.14 546.33 S
3 9 Q
(Table) 152.23 651 T
(11-) 178.24 651 T
(2. XView Generic Options) 191.24 651 T
(Flag) 122.23 628 T
(Long Flag) 182.34 628 T
(Argument Type) 286.02 628 T
(Description) 373.14 628 T
176.34 643 176.34 538.75 2 L
V
0.5 H
0 Z
N
280.02 643 280.02 538.75 2 L
V
N
367.14 643 367.14 538.75 2 L
V
N
116.23 642 501.77 642 2 L
V
2 H
N
116.23 619 501.77 619 2 L
V
N
116.23 599 501.77 599 2 L
V
0.5 H
N
116.23 579 501.77 579 2 L
V
N
116.23 559 501.77 559 2 L
V
N
116.23 539 501.77 539 2 L
V
N
FMENDPAGE
%%EndPage: "287" 5
%%Page: "288" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (288) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 10 Q
7 X
(11) 71.88 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
0.05 (If you display information about currently running windows using the) 141 650.33 P
2 F
0.05 (xwininfo) 423.67 650.33 P
1 F
0.05 ( or) 458.12 650.33 P
2 F
0.05 (xlswins) 471.55 650.33 P
1 F
0.2 (client, title strings will appear in parentheses after the associated window ID numbers. \050If) 141 638.03 P
(there is no title string but there is a name string, the name string will be displayed.\051) 141 625.73 T
0.32 (You can also use the) 141 607.43 P
2 F
0.32 (xwininfo) 227.86 607.43 P
1 F
0.32 ( client to request information about a particular window by) 262.31 607.43 P
0.02 (title, or name, if no title string is defined, using that application\325s own) 141 595.13 P
4 F
0.05 (-name) 423.46 595.13 P
1 F
0.02 ( option. See) 453.46 595.13 P
-0.01 (the) 141 582.83 P
2 F
-0.01 (xlswins) 155.71 582.83 P
1 F
-0.01 ( and) 185.16 582.83 P
2 F
-0.01 (xwininfo) 204.57 582.83 P
1 F
-0.01 ( reference pages in Part Three of this guide and the section \322Win-) 239.02 582.83 P
-0.15 (dow and Display Information Clients\323 in Chapter 8,) 141 570.53 P
2 F
-0.15 (Other Standard Clients) 350.08 570.53 P
1 F
-0.15 (, to learn more) 443.12 570.53 P
(about these clients.) 141 558.23 T
0 1 1 0 1 0 0 K
0 20 Q
0 1 1 0 1 0 0 K
(1) 105 525.97 T
(1.2  Starting a Client W) 112.92 525.97 T
(indow as an Icon) 290.5 525.97 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
-0.24 (The) 141 506.63 P
4 F
-0.58 (-iconic) 158.81 506.63 P
1 F
-0.24 ( command line option starts the client window in iconified form. To start an) 200.81 506.63 P
2 F
(xterm) 141 494.33 T
1 F
( window as an icon, type:) 163.77 494.33 T
4 8 Q
-0.16 (% xterm -iconic &) 159 477.37 S
1 10 Q
(XView clients accept the alternate form) 141 461.03 T
4 F
-0.25 ( -) 300.12 461.03 S
-0.25 (Wi, for example,) 311.62 461.03 S
4 8 Q
-0.16 (% cmdtool -Wi &) 159 444.07 S
1 10 Q
0.17 (This can be especially useful for starting a login terminal emulator window. As described) 141 427.73 P
0.23 (in Chapter 3,) 141 415.43 P
2 F
0.23 (Opening Additional Windows) 196.13 415.43 P
1 F
0.23 (, terminating the login) 314.94 415.43 P
2 F
0.23 (xterm) 407.26 415.43 P
1 F
0.23 ( window may kill) 430.02 415.43 P
0.13 (the X server and all other clients that are running. It\325s always possible to terminate a win-) 141 403.13 P
0.09 (dow inadvertently by selecting the wrong menu option or typing the wrong key sequence.) 141 390.83 P
0.08 (If your login) 141 378.53 P
2 F
0.08 (xterm) 194.28 378.53 P
1 F
0.08 ( window is automatically iconified at start-up, you are far less likely to) 217.05 378.53 P
(terminate the window inadvertently and end your X session.) 141 366.23 T
1.19 (All toolkits let you specify the location of the main window on the command line, for) 141 347.93 P
-0.03 (example using the) 141 335.63 P
4 F
-0.06 -0.25 (-) 216.19 335.63 B
-0.06 -0.25 (geometry) 221.94 335.63 B
1 F
-0.03 ( command line argument. XView clients also allow you to) 267.94 335.63 P
-0.35 (specify the size and position of the icon on the command line. Unfortunately, the X Toolkit) 141 323.33 P
-0.22 (does not allow this. For most such clients, the size and position of the icon can be set using) 141 311.03 P
0.5 (resource variables in an) 141 298.73 P
2 F
0.5 (.Xdefaults) 241.03 298.73 P
1 F
0.5 ( or other resource file. \050Setting the icon geometry in a) 281.31 298.73 P
-0.37 (resource file is highly recommended if you are starting the login) 141 286.43 P
2 F
-0.37 (xterm) 396.65 286.43 P
1 F
-0.37 ( window as an icon.\051) 419.42 286.43 P
0.01 (See the appropriate client reference pages in Part Three of this guide for a complete list of) 141 274.13 P
0.09 (available resources. Refer to Chapter 12,) 141 261.83 P
2 F
0.09 (Setting Resources) 307.05 261.83 P
1 F
0.09 (, for instructions on how to set) 378.52 261.83 P
(resources.) 141 249.53 T
0 1 1 0 1 0 0 K
0 20 Q
0 1 1 0 1 0 0 K
(1) 105 217.27 T
(1.3  Specifying Fonts on the Command Line) 112.92 217.27 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
-0.02 (Many clients allow you to specify the font to be used when displaying text in the window.) 141 197.93 P
-0.26 (\050These are known as) 141 185.63 P
2 F
-0.26 (screen fonts) 224.94 185.63 P
1 F
-0.26 ( and are not to be confused with) 272.73 185.63 P
2 F
-0.26 (printer fonts) 401.21 185.63 P
1 F
-0.26 (.\051 For clients) 450.68 185.63 P
0.06 (written with either toolkit \050OLIT or XView\051, the option to set the display font is) 141 173.33 P
4 F
0.14 (-fn) 464.05 173.33 P
1 F
0.06 (. For) 482.05 173.33 P
(example, the command line:) 141 161.03 T
4 8 Q
-0.16 (%) 159 144.07 S
6 10 Q
-0.2 (cmdtool -fn) 168.28 144.07 S
7 F
-0.2 (fixed) 237.88 144.07 S
6 F
-0.2 ( &) 266.89 144.07 S
1 F
(creates an) 141 127.73 T
2 F
(xterm) 183.2 127.73 T
1 F
( window in which text will be displayed with the font named) 205.97 127.73 T
7 F
(fixed) 451.51 127.73 T
1 F
(.) 481.51 127.73 T
-0.2 (Chapter 10,) 141 109.43 P
2 F
-0.2 (X11, OPEN LOOK and OpenWindows Font Specification) 189.76 109.43 P
1 F
-0.2 (, describes the avail-) 419.4 109.43 P
(able screen fonts and font naming conventions. See also) 141 97.13 T
2 F
(xlsfonts) 367.63 97.13 T
1 F
(.) 398.19 97.13 T
FMENDPAGE
%%EndPage: "288" 6
%%Page: "289" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (CHAPTER 11: COMMAND LINE OPTIONS) 315.48 693.79 S
0 9 Q
0.45 (289) 487.34 693.79 S
111 684 507 708 R
0.5 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 10 Q
7 X
(11) 531 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 20 Q
0 X
0 1 1 0 1 0 0 K
(1) 111 643.67 T
(1.4  Reverse V) 118.92 643.67 T
(ideo) 229.56 643.67 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
3.25 (There are three options to control whether the application will display in reverse) 147 624.33 P
3.39 (video\321that is, with the foreground and background colors reversed. The) 147 612.03 P
4 F
8.15 (-) 474.77 612.03 P
8.15 (rv) 480.77 612.03 P
1 F
3.39 ( or) 492.77 612.03 P
4 F
(-) 147 599.73 T
(reverse) 153 599.73 T
1 F
( option is used to request reverse video.) 195 599.73 T
0.27 (The) 147 581.43 P
4 F
0.64 (+rv) 165.32 581.43 P
1 F
0.27 ( option is used to override any reverse video request that might be specified in a) 183.32 581.43 P
-0.4 (resource file. \050See Chapter 12,) 147 569.13 P
2 F
-0.4 (Setting Resources) 269.12 569.13 P
1 F
-0.4 (.\051 This is important, because not all clients) 340.1 569.13 P
1.04 (handle reverse video correctly, and even those that do usually do so only on black and) 147 556.83 P
(white displays.) 147 544.53 T
0 1 1 0 1 0 0 K
0 20 Q
0 1 1 0 1 0 0 K
(1) 111 512.27 T
(1.5  Specifying Color) 118.92 512.27 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
0.22 (Many clients have options that allow you to specify the color of the window background,) 147 492.93 P
1.05 (foreground \050the color in which text or graphic elements will be displayed\051, and border.) 147 480.63 P
(These options generally have the form:) 147 468.33 T
(\320) 147 450.03 T
4 F
(bg) 152 450.03 T
7 F
(color) 170 450.03 T
1 F
( Sets the background color.) 200 450.03 T
(\320) 147 432.53 T
4 F
(fg) 152 432.53 T
7 F
(color) 170 432.53 T
1 F
( Sets the foreground color.) 200 432.53 T
(\320) 147 415.03 T
4 F
(bd) 152 415.03 T
7 F
(color) 170 415.03 T
1 F
( Sets the border color.) 200 415.03 T
0.22 (By default, the background of an application window is usually white and the foreground) 147 397.53 P
1.35 (black, even on color workstations. You can specify a new color using either the color) 147 385.23 P
0.43 (names listed in a system file called) 147 372.93 P
2 F
0.43 (rgb.txt) 291.97 372.93 P
1 F
0.43 ( \050described later\051 or hexadecimal values repre-) 318.36 372.93 P
1.32 (senting colors. The hexadecimal format is described in the section) 147 360.63 P
2 F
1.32 (Hexadecimal Color) 427.08 360.63 P
(Specification) 147 348.33 T
1 F
( later in this chapter.) 199.22 348.33 T
-0.39 (Many X Toolkit clients accept a) 147 330.03 P
4 F
-0.93 (-bd) 275.77 330.03 P
1 F
-0.39 ( option that is intended to specify the color of the win-) 293.77 330.03 P
0.42 (dow border. However, under) 147 317.73 P
1 9 Q
0.38 (OPEN LOOK) 266.42 317.73 P
1 10 Q
0.42 ( using the) 317.54 317.73 P
1 9 Q
0.38 (OPEN LOOK) 360.19 317.73 P
1 10 Q
0.42 ( Window Manager, this) 411.31 317.73 P
0.03 (customization is generally useless: the) 147 305.43 P
2 F
0.03 (olwm) 302.98 305.43 P
1 F
0.03 ( frame effectively replaces most window bor-) 324.64 305.43 P
1 (ders. As an alternative, you can change the color of all windows\325 frames by specifying) 147 293.13 P
0.6 (resources for) 147 280.83 P
2 F
0.6 (olwm) 202.62 280.83 P
1 F
0.6 ( in a) 224.29 280.83 P
2 F
0.6 (.Xdefaults) 246.64 280.83 P
1 F
0.6 ( or) 286.92 280.83 P
2 F
0.6 (.) 302.28 280.83 P
0.6 (Xresources) 305.61 280.83 P
1 F
0.6 ( file in your home directory. For more) 350.6 280.83 P
-0.38 (information, see Chapter 13,) 147 268.53 P
2 F
-0.38 (Customizing olwm) 262.13 268.53 P
1 F
-0.38 (, and the) 335.93 268.53 P
2 F
-0.38 (olwm) 371.45 268.53 P
1 F
-0.38 ( reference page in Part Three) 393.12 268.53 P
(of this guide.) 147 256.23 T
-0.32 (In the next section, we\325ll take a look at some of the color names you can use. For now, let\325s) 147 237.93 P
-0.24 (consider the syntax of a command line specifying an) 147 225.63 P
2 F
-0.24 (xterm) 357.86 225.63 P
1 F
-0.24 ( to be displayed in three colors:) 380.64 225.63 P
4 8 Q
-0.16 (%) 165 208.67 S
6 10 Q
-0.2 (xterm -bg lightblue -fg darkslategrey -bd plum &) 174.28 208.67 S
1 F
0.73 (This command creates an) 147 192.33 P
2 F
0.73 (xterm) 254.35 192.33 P
1 F
0.73 ( window with a background of light blue, foreground of) 277.12 192.33 P
(dark slate gray, and window border of plum.) 147 180.03 T
-0.17 (At the command line, a color name should be typed as a single word \050for example,) 147 161.73 P
4 F
-0.41 (dark-) 477 161.73 P
0.57 (slategray) 147 149.43 P
1 F
0.24 (\051. However, you can type the words that make up a color name separately if) 201 149.43 P
(you enclose them in quotes, as in the command line:) 147 137.13 T
4 8 Q
-0.16 (%) 165 120.17 S
6 10 Q
-0.2 (xterm -bg "light blue" -fg "dark slate grey" -bd plum &) 174.28 120.17 S
FMENDPAGE
%%EndPage: "289" 7
%%Page: "290" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (290) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 10 Q
7 X
(11) 71.88 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
0 (As we\325ll see, the) 141 650.33 P
2 F
0 (rgb.txt) 210.17 650.33 P
1 F
0 ( file contains variants of the same color name \050for example, \322navy) 236.56 650.33 P
-0.33 (blue\323 and \322navyblue,\323 or \322grey\323 and \322gray\323\051 to allow a range of spelling, spacing, and cap-) 141 638.03 P
(italization on the command line.) 141 625.73 T
0.14 (Some clients allow additional options to specify color for other elements, such as the cur-) 141 607.43 P
-0.25 (sor, highlighting, and so on. See the appropriate client reference pages in Part Three of this) 141 595.13 P
(guide for details.) 141 582.83 T
0.02 (To see how a given color looks \322in the large\323, you can put it onto your root window using) 141 564.53 P
(the) 141 552.23 T
2 F
(xsetroot) 155.72 552.23 T
1 F
( client described in Chapter 14,) 187.94 552.23 T
2 F
(Customization Clients) 315.42 552.23 T
1 F
(. For example,) 404.05 552.23 T
4 8 Q
-0.16 (%) 159 535.27 S
6 F
-0.16 (xsetroot -solid \322light sea green\323) 168.28 535.27 S
0 1 1 0 1 0 0 K
0 13.3 Q
0 1 1 0 1 0 0 K
(1) 141 516.73 T
(1.5.1  The rgb.txt File) 146.27 516.73 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
-0.38 (The) 141 499.63 P
2 F
-0.38 (rgb.txt) 158.66 499.63 P
1 F
-0.38 ( file, usually located in) 185.05 499.63 P
2 F
-0.38 (/usr/lib/X11) 277.01 499.63 P
1 F
-0.38 (, is supplied with the standard distribution of) 324.8 499.63 P
(X and consists of predefined colors assigned to specific text names.) 141 487.33 T
-0.42 (A corresponding compiled database lives in two files called) 141 469.03 P
2 F
-0.42 (rgb.dir) 378.54 469.03 P
1 F
-0.42 ( and) 406.6 469.03 P
2 F
-0.42 (rgb.pag) 425.19 469.03 P
1 F
-0.42 (. This data-) 456.58 469.03 P
-0.43 (base contains the definitions used by the server; this machine-readable file serves as a color) 141 456.73 P
1.69 (name database and is discussed more fully in  The) 141 444.43 P
2 F
1.69 (rgb.txt) 361.21 444.43 P
1 F
1.69 ( file is the human-readable) 387.6 444.43 P
(equivalent.) 141 432.13 T
0 1 1 0 1 0 0 K
0 13.3 Q
0 1 1 0 1 0 0 K
(1) 141 411.63 T
(1.5.2  X1) 146.27 411.63 T
(1 Release 4 Color Names) 189.13 411.63 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
0.4 (The default) 141 394.53 P
2 F
0.4 (rgb.txt) 190.12 394.53 P
1 F
0.4 ( file shipped with Release 4 of X contains 738 color name definitions.) 216.51 394.53 P
0.38 (This number is slightly deceptive, since a number of the color names are merely variants) 141 382.23 P
(of another color name \050differing only in spelling, spacing, and capitalization\051.) 141 369.93 T
-0.18 (Still, the number of colors available in Release 4 is more than double the number available) 141 351.63 P
0 (in Release 3. Some of the Release 4 colors are entirely new \050such as snow and misty rose\051) 141 339.33 P
(but many are just slightly different shades of colors available in prior releases.) 141 327.03 T
0.17 (For example, the Release 3) 141 308.73 P
2 F
0.17 (rgb.txt) 252.95 308.73 P
1 F
0.17 ( file includes the color sea green. The Release 4) 279.34 308.73 P
2 F
0.17 (rgb.txt) 474.61 308.73 P
1 F
(file offers several shades of that color:) 141 296.43 T
4 9 Q
-0.22 (light sea green) 141 278.8 S
-0.22 (sea green medium) 141 267.8 S
-0.22 (sea green dark) 141 256.8 S
-0.22 (sea green) 141 245.8 S
-0.22 (SeaGreen1) 141 234.8 S
-0.22 (SeaGreen2) 141 223.8 S
-0.22 (SeaGreen3) 141 212.8 S
-0.22 (SeaGreen4) 141 201.8 S
-0.22 (DarkSeaGreen1) 141 190.8 S
-0.22 (DarkSeaGreen2) 141 179.8 S
-0.22 (DarkSeaGreen3) 141 168.8 S
-0.22 (DarkSeaGreen4) 141 157.8 S
1 10 Q
0.04 (Each of these names corresponds to a color definition. \050This list does not include the vari-) 141 140.13 P
0.15 (ants SeaGreen, LightSeaGreen, MediumSeaGreen, and DarkSeaGreen, which also appear) 141 127.83 P
0.04 (in the file.\051 As you can see, some of these shades are distinguished in the fairly traditional) 141 115.53 P
FMENDPAGE
%%EndPage: "290" 8
%%Page: "291" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (CHAPTER 11: COMMAND LINE OPTIONS) 315.48 693.79 S
0 9 Q
0.45 (291) 487.34 693.79 S
111 684 507 708 R
0.5 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 10 Q
7 X
(11) 531 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
-0.17 (way of being called \322light,\323 \322medium,\323 and \322dark.\323 The light, medium, and dark shades of) 147 650.33 P
(a color can probably be distinguished from one another on virtually any monitor.) 147 638.03 T
-0.08 (Beyond this distinction, there are what might be termed \322sub-shades\323: gradations of a par-) 147 619.73 P
1.21 (ticular shade identified by number \050SeaGreen1, SeaGreen2, etc.\051. Numerically adjacent) 147 607.43 P
1.13 (sub-shades of a color may not be clearly distinguishable on all monitors. For example,) 147 595.13 P
-0.25 (SeaGreen1 and 2 may look very much the same. \050You certainly would not choose to create) 147 582.83 P
0.59 (a window with a SeaGreen1 background and SeaGreen2 foreground! On the other hand,) 147 570.53 P
0.12 (sub-shades a couple of numbers apart are probably sufficiently different to be used on the) 147 558.23 P
(same window.\051) 147 545.93 T
-0.07 (By supplying many different shades of a single, already fairly precise color like sea green,) 147 527.63 P
0.72 (X developers have tried to provide definitions that work well on a variety of commonly) 147 515.33 P
(used monitors.) 147 503.03 T
1 8 Q
(\240) 205.89 507.03 T
1 10 Q
0.52 (You may have to experiment to determine which colors \050or shades\051 display best on your) 147 484.73 P
(monitor.) 147 472.43 T
0.04 (The color names in the Release 4) 147 454.13 P
2 F
0.04 (rgb.txt) 282.52 454.13 P
1 F
0.04 ( file are too numerous to list here. Although there) 308.91 454.13 P
-0.4 (are no literal dividers within the file, it can roughly be considered to fall into three sections:) 147 441.83 P
5 F
(Section 1:) 147 423.53 T
1 F
-0.41 ( A standard spectrum of colors, many available in or similar to colors in Release) 191.44 423.53 P
-0.09 (3 \050such as sea green\051. These colors seem to be ordered roughly as: off-whites and) 183 412.03 P
-0.09 (other pale colors, greys, blues, greens, yellows, browns, oranges, pinks, reds, and) 183 400.53 P
(purples.) 183 389.03 T
5 F
(Section 2:) 147 371.53 T
1 F
0.62 0.06 ( Sub-shades of Section 1 colors \050such as SeaGreen 1 through 4\051. These sub-) 191.44 371.53 B
(shades make up the largest part of the file.) 183 360.03 T
5 F
(Section 3:) 147 342.53 T
1 F
-0.08 ( One hundred and one additional shades of grey, numbered 0 through 100 \050also) 191.44 342.53 P
0.22 (available in Release 3\051. This large number of precisely graduated grays provides) 183 331.03 P
(a wide variety of shading for monochrome screens.) 183 319.53 T
0.28 (Rather than list every color in the) 147 302.03 P
2 F
0.28 (rgb.txt) 285.35 302.03 P
1 F
0.28 ( file, we\325ve compiled this table of representative) 311.73 302.03 P
0.12 (colors. We\325ve chosen some of the more esoteric color names. Naturally all of the primary) 147 289.73 P
(and secondary colors are also available.) 147 277.43 T
6 9 Q
-0.22 (Section 1:) 147 259.8 S
4 F
-1.15 -0.22 (ghost white peach puff lavender blush lemon chiffon slate grey midnight) 147 248.8 B
-1.62 -0.22 (blue cornflower blue medium slate blue dodger blue powder blue turquoise) 147 237.8 B
-0.22 (pale green lawn green chartreuse olive drab lime green khaki light) 147 226.8 S
-0.68 -0.22 (yellow goldenrod indian red sienna sandy brown salmon coral tomato hot) 147 215.8 B
-0.22 (pink maroon violet red magenta medium orchid blue violet purple) 147 204.8 S
6 F
-0.22 (Section 2:) 147 193.8 S
4 F
-0.5 -0.22 (snow1 - 4 bisque1 - 4 cornsilk1 - 4 honeydew1 -4 azure1 - 4 SteelBlue1) 147 182.8 B
-0.53 -0.22 (- 4 DeepSkyBlue1 - 4 LightCyan1 - 4 PaleTurquoise1 - 4 aquamarine1 - 4) 147 171.8 B
-1.05 -0.22 (PaleGreen1 - 4 DarkOliveGreen1 - 4 SpringGreen1 -4 gold1 - 4 RosyBrown1) 147 160.8 B
-0.22 (- 4 burlywood1 - 4 chocolate1 - 4 firebrick1 - 4 DarkOrange1 - 4) 147 149.8 S
-1.27 -0.22 (OrangeRed1 - 4 DeepPink1 - 4 PaleVioletRed1 - 4 plum1 - 4 DarkOrchid1 - 4) 147 138.8 B
0 1 1 0 1 0 0 K
111 113 507 130.98 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
111 113 507 130.98 R
7 X
0 1 1 0 1 0 0 K
V
112.07 118.96 292.07 118.96 2 L
V
0.5 H
2 Z
0 X
N
45 63 567 729 C
0 0 0 1 0 0 0 K
1 8 Q
0 X
0 0 0 1 0 0 0 K
0.19 (\240) 147 107.67 P
0.19 (The color database shipped with prior releases of X was originally designed to display optimally on the vt240) 153 107.67 P
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
(series terminals manufactured by Digital Equipment Corporation.) 147 97.67 T
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "291" 9
%%Page: "292" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (292) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 10 Q
7 X
(11) 71.88 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
6 9 Q
0 X
0 0 0 1 0 0 0 K
-0.22 (Section 3:) 141 651 S
4 F
-0.22 (grey0 \050gray0\051  through grey100 \050gray100\051) 141 640 S
1 10 Q
-0.14 (If you want to look more closely at the) 141 622.33 P
2 F
-0.14 (rgb.txt) 297.18 622.33 P
1 F
-0.14 ( file, you can open it with any text editor. As) 323.57 622.33 P
0.44 (an alternative, you can display the contents of the file using the) 141 610.03 P
2 F
0.44 (showrgb) 401.5 610.03 P
1 F
0.44 ( client.) 435.95 610.03 P
2 F
0.44 (showrgb) 466.55 610.03 P
1 F
-0.03 (seems to do nothing more than) 141 597.73 P
2 F
-0.03 (cat) 266.36 597.73 P
1 F
-0.03 ( \0501\051 the file to your terminal window; in fact, it consults) 278.58 597.73 P
0.02 (the database \050dbm\051 version of the file. Given the size of the file, you should pipe the com-) 141 585.43 P
(mand\325s output to a paging program, such as) 141 573.13 T
2 F
(pg) 318.48 573.13 T
1 F
( \0501\051 or) 328.48 573.13 T
2 F
(more) 355.97 573.13 T
1 F
( \0501\051, as shown below:) 376.52 573.13 T
4 8 Q
-0.16 (%) 159 556.17 S
6 10 Q
-0.2 (showrgb | more) 168.28 556.17 S
1 F
-0.33 (See Volume Eight,) 141 539.83 P
2 F
-0.33 (X Window System Administrator\325s Guide) 218.35 539.83 P
1 F
-0.33 (, for information on customiz-) 381.48 539.83 P
(ing color name definitions.) 141 527.53 T
0.06 (Keep in mind that colors look different on different monitors. The) 141 509.23 P
2 F
0.06 (xcol) 408.33 509.23 P
1 F
0.06 ( and) 424.99 509.23 P
2 F
0.06 (xcoloredit) 444.56 509.23 P
1 F
0.06 ( cli-) 485.11 509.23 P
0.19 (ents, from the user-contributed distribution, allow you to display the colors defined in the) 141 496.93 P
2 F
0.06 (rgb.txt) 141 484.63 P
1 F
0.06 ( file.) 167.39 484.63 P
2 F
0.06 (xcol) 188.33 484.63 P
1 F
0.06 ( can also edit the color specifications in a resource file. See the) 204.99 484.63 P
2 F
0.06 (xcol) 459.56 484.63 P
1 F
0.06 ( client) 476.22 484.63 P
(reference page in Part Three of this guide.) 141 472.33 T
0 1 1 0 1 0 0 K
0 13.3 Q
0 1 1 0 1 0 0 K
(1) 141 451.83 T
(1.5.3  Alternative MIT X1) 146.27 451.83 T
(1 Release 4 and 5 Color Databases) 270.34 451.83 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
0.95 (In addition to the standard color database described previously, Release 4 also includes) 141 434.73 P
0.39 (three other databases your system administrator can compile. These files can be found in) 141 422.43 P
(the general release in the directory) 141 410.13 T
2 F
(./rgb/others) 282.34 410.13 T
1 F
(.) 329.29 410.13 T
2 F
(raveling.txt) 141 391.83 T
1 F
-0.64 ( Designed by Paul Raveling, this database rivals the default database in size and) 189.33 391.83 P
(scope but was tuned to display optimally on Hewlett-Packard monitors.) 177 380.33 T
2 F
(thomas.txt) 141 362.83 T
1 F
-0.44 ( Based on the Release 3 database, this file has been modified by John Thomas of) 184.89 362.83 P
(Tektronix to approximate the colors in a box of Crayola Crayons.) 177 351.33 T
2 F
(old-rgb.txt) 141 333.83 T
1 F
( This is nothing more than the Release 3 database.) 186 333.83 T
0 1 1 0 1 0 0 K
0 13.3 Q
0 1 1 0 1 0 0 K
(1) 141 314.13 T
(1.5.4  MIT X1) 146.27 314.13 T
(1R5 Color Extensions) 210.95 314.13 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
-0.06 (The MIT X11 Release 5 system contains numerous extensions for color editing and speci-) 141 297.03 P
0.5 (fication. These are not described here yet.. If your system supports them, you will find a) 141 284.73 P
(full discussion in Volume Eight,) 141 272.43 T
2 F
(X Window System Administrator\325s Guide) 273.23 272.43 T
1 F
(.) 437.67 272.43 T
0 1 1 0 1 0 0 K
0 13.3 Q
0 1 1 0 1 0 0 K
(1) 141 251.93 T
(1.5.5  Hexadecimal Color Speci\336cation) 146.27 251.93 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
0.26 (You can specify colors more exactly than is possible with the names in the) 141 234.83 P
2 F
0.26 (rgb.txt) 445.75 234.83 P
1 F
0.26 ( file by) 472.14 234.83 P
0.22 (using a hexadecimal color string. You probably won\325t use this method unless you require) 141 222.53 P
0.66 (a color not available by using a color name. In order to understand how this works, you) 141 210.23 P
(may need a little background on how color is implemented on most workstations.) 141 197.93 T
0 1 1 0 1 0 0 K
0 10.5 Q
0 1 1 0 1 0 0 K
(1) 141 179.3 T
(1.5.5.1  The RGB Color Model) 145.16 179.3 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
-0.12 (Most color displays on the market today are based on the RGB color model. Each pixel on) 141 163.13 P
0.16 (the screen is actually made up of three phosphors: one red, one green, and one blue. Each) 141 150.83 P
0.07 (of these three phosphors is excited by a separate electron beam. When all three phosphors) 141 138.53 P
-0.39 (are fully illuminated, the pixel appears white to the human eye. When all three are dark, the) 141 126.23 P
0.62 (pixel appears black. When the illumination of each primary color varies, the three phos-) 141 113.93 P
FMENDPAGE
%%EndPage: "292" 10
%%Page: "293" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (CHAPTER 11: COMMAND LINE OPTIONS) 315.48 693.79 S
0 9 Q
0.45 (293) 487.34 693.79 S
111 684 507 708 R
0.5 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 10 Q
7 X
(11) 531 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
0.34 (phors generate a subtractive color. For example, equal portions of red and green, with no) 147 650.33 P
(admixture of blue, makes yellow.) 147 638.03 T
-0.22 (As you might guess, the intensity of each primary color is controlled by a three-part digital) 147 619.73 P
0.37 (value\321and it is the exact makeup of this value that the hexadecimal specification allows) 147 607.43 P
(you to set.) 147 595.13 T
-0.12 (Depending on the underlying hardware, different servers may use a larger or smaller num-) 147 576.83 P
0.46 (ber of bits \050from 4 to 16\051 to describe the intensity of each primary. To insulate you from) 147 564.53 P
-0.33 (this variation, most clients are designed to take color values containing anywhere from 4 to) 147 552.23 P
-0.14 (16 bits \0501 to 4 hex digits\051, and the server then scales them to the hardware. As a result, you) 147 539.93 P
(can specify hexadecimal values in any one of these formats:) 147 527.63 T
4 8 Q
-0.16 (#RGB #RRGGBB #RRRGGGBBB #RRRRGGGGBBBB) 165 510.67 S
1 10 Q
0.4 (where R, G, and B represent single hexadecimal digits and determine the intensity of the) 147 494.33 P
(red, green, and blue primaries that make up each color.) 147 482.03 T
-0.01 (When fewer than four digits are used, they represent the most significant bits of the value.) 147 463.73 P
(For example,) 147 451.43 T
4 F
(#3a6) 202.27 451.43 T
1 F
( is the same as) 226.27 451.43 T
4 F
(#3000a0006000) 286.54 451.43 T
1 F
(.) 364.54 451.43 T
1 8 Q
(\240) 367.04 455.43 T
1 10 Q
0.24 (What this means concretely is perhaps best illustrated by looking at the values that corre-) 147 433.13 P
-0.38 (spond to some colors in the color name database. We\325ll use 8-bit values\321two hexadecimal) 147 420.83 P
0.35 (digits for each primary. These definitions are the hexadecimal equivalents of the decimal) 147 408.53 P
(values for some of the colors found in the) 147 396.23 T
2 F
(rgb.txt) 316.14 396.23 T
1 F
( file:) 342.53 396.23 T
4 9 Q
-0.22 (#000000 black) 147 378.6 S
-0.22 (#FFFFFF white) 147 367.6 S
-0.22 (#FF0000 red) 147 356.6 S
-0.22 (#00FF00 green) 147 345.6 S
-0.22 (#0000FF blue) 147 334.6 S
-0.22 (#FFFF00 yellow) 147 323.6 S
-0.22 (#00FFFF cyan) 147 312.6 S
-0.22 (#FF00FF magenta) 147 301.6 S
-0.22 (#5F9EA0 cadet blue) 147 290.6 S
-0.22 (#6495ED cornflower blue) 147 279.6 S
-0.22 (#ADD8E6 light blue) 147 268.6 S
-0.22 (#B0C4DE light steel blue) 147 257.6 S
-0.22 (#0000CD medium blue) 147 246.6 S
-0.22 (#000080 navy blue) 147 235.6 S
-0.22 (#87CEED sky blue) 147 224.6 S
-0.22 (#6A5ACE slate blue) 147 213.6 S
-0.22 (#4682B4 steel blue) 147 202.6 S
1 10 Q
0.06 (As you can see from the colors previously given, pure red, green, and blue result from the) 147 184.93 P
0.71 (corresponding bits being turned on fully. All primaries off yields black, while all nearly) 147 172.63 P
0.13 (full on gives white. Yellow, cyan, and magenta can be created by pairing two of the other) 147 160.33 P
1.16 (primaries at full intensity. The various shades of blue shown previously are created by) 147 148.03 P
(varying the intensity of each primary\321sometimes in unexpected ways.) 147 135.73 T
0 1 1 0 1 0 0 K
111 113 507 130.98 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
111 113 507 130.98 R
7 X
0 1 1 0 1 0 0 K
V
112.07 118.96 292.07 118.96 2 L
V
0.5 H
2 Z
0 X
N
45 63 567 729 C
0 0 0 1 0 0 0 K
1 8 Q
0 X
0 0 0 1 0 0 0 K
-0.26 (\240) 147 107.67 P
-0.26 (If you are unfamiliar with hexadecimal numbering, see the Glossary for a brief explanation, or a basic computer) 153 107.67 P
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
(textbook for a more extended discussion.) 147 97.67 T
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "293" 11
%%Page: "294" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (294) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 10 Q
7 X
(11) 71.88 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
-0.13 (The bottom line here is that if you don\325t intimately know the physics of color, the best you) 141 650.33 P
0.17 (can do is look up existing colors from the color name database and experiment with them) 141 638.03 P
-0.23 (by varying one or more of the primaries till you find a color you like. Unless you need pre-) 141 625.73 P
(cise colors, you are probably better off using color names.) 141 613.43 T
0 1 1 0 1 0 0 K
0 10.5 Q
0 1 1 0 1 0 0 K
(1) 141 594.8 T
(1.5.5.2  How Many Colors are Available?) 145.16 594.8 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
1.43 (The number of distinct colors available on the screen at any one time depends on the) 141 578.63 P
0.56 (amount of memory available for color specification. \050The) 141 566.33 P
2 F
0.56 (xdpyinfo) 377.94 566.33 P
1 F
0.56 ( client provides infor-) 412.38 566.33 P
0.12 (mation about a display, including the number of colors available at one time. See Chapter) 141 554.03 P
0.21 (8,) 141 541.73 P
2 F
0.21 (Other Standard Clients) 151.21 541.73 P
1 F
0.21 (, and the) 244.96 541.73 P
2 F
0.21 (xdpyinfo) 282.25 541.73 P
1 F
0.21 ( reference page in Part Three of this guide for) 316.69 541.73 P
0.2 (details. As well, the Sun OpenWindows server lets you control the number of colors with) 141 529.43 P
(its) 141 517.13 T
5 F
(-cubesize) 152.95 517.13 T
1 F
( command line argument; see the) 191.83 517.13 T
2 F
(OpenWindows Server Guide) 326.81 517.13 T
1 F
( for details.\051) 440.68 517.13 T
-0.21 (A color display uses multiple bits per pixel \050also referred to as multiple planes or the) 141 498.83 P
2 F
-0.21 (depth) 478.78 498.83 P
1 F
-0.01 (of the display\051 to select colors. Programs that draw in color use the value of these bits as a) 141 486.53 P
-0.39 (pointer to a lookup table called a) 141 474.23 P
2 F
-0.39 (colormap) 271.87 474.23 P
1 F
-0.39 (, in which each entry \050or) 310.2 474.23 P
2 F
-0.39 (colorcell) 408.12 474.23 P
1 F
-0.39 (\051   contains the) 443.67 474.23 P
-0.26 (RGB values for a particular color.* As shown in Figure) 141 461.93 P
-0.26 (11-) 363.39 461.93 P
-0.26 (1, any given pixel value is used) 376.72 461.93 P
-0.01 (as an index into this table\321for example, a pixel value of 16 will select the 16th colorcell.) 141 449.63 P
0.58 (Why is this technical detail important? Because it explains several issues that you might) 141 154.34 P
(encounter in working with color displays.) 141 142.04 T
1 8 Q
(\240) 307.65 146.04 T
1 10 Q
0.26 (First, the range of colors possible on the display is a function of the number of bits avail-) 141 123.74 P
0.43 (able in the colormap for RGB specification. If 8 bits are available for each primary, then) 141 111.44 P
3 9 Q
(Figure) 141 186.31 T
(11-) 171.01 186.31 T
(1. Multiple planes used to index a colormap) 184.01 186.31 T
105 202.31 501 430.3 C
108 202.31 498 421.31 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 17 54 395 261 378 207 114 208.31 FMBEGINEPSF
%%BeginDocument: /home/darian/ian/book/vol3ol/art/3m.12.02.epsi
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 17 54 395 261
/InitDictCount countdictstack def
gsave
save
mark
newpath
/showpage {} def
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: FreeHand 3.1
%%Title: 3m.12.02
%%CreationDate: 11/18/92 1:43 PM
%%BoundingBox: 16.65 53.35 395.15 260.85
%%DocumentProcSets: FreeHand_header 3 1
%%DocumentSuppliedProcSets: FreeHand_header 3 1
%%ColorUsage: Color
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentFonts: Symbol
%%+Helvetica
%%DocumentNeededFonts: Symbol
%%+Helvetica
%%FHPathName: Illustrations:Vol.3M:..All 3M Figures:3m.12.02
%%EndComments
%%BeginProcSet: FreeHand_header 3 0
/FHIODict 30 dict def
FHIODict begin
/bdf{bind def}bind def
/d{setdash}bdf
/h{closepath}bdf
/H{}bdf
/J{setlinecap}bdf
/j{setlinejoin}bdf
/M{setmiterlimit}bdf
/n{newpath}bdf
/N{newpath}bdf
/q{gsave}bdf
/Q{grestore}bdf
/w{setlinewidth}bdf
/u{}bdf
/U{}bdf
/sepdef{
dup where not
{
FreeHandSepDict
}
if
3 1 roll exch put
}bdf
/`
{false setoverprint
end %. FreeHandDict
/-save0- save def
pop pop pop pop pop
concat
userdict begin
/showpage {} def
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
/languagelevel where {pop languagelevel 1 ne{false setstrokeadjust}if}if
} bdf
/~
{end
-save0- restore
FreeHandDict begin
}bdf
/FreeHandDict 191 dict def
FreeHandDict begin
/currentpacking where{pop true setpacking}if
/xdf{exch def}bdf
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/min{2 copy gt{exch}if pop}bdf
/max{2 copy lt{exch}if pop}bdf
/isLino statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse def
/dr{transform .25 sub round .25 add
exch .25 sub round .25 add exch itransform}bdf
/C{dr curveto}bdf
/L{dr lineto}bdf
/m{dr moveto}bdf
/printerRes
gsave
matrix defaultmatrix setmatrix
72 72 dtransform
abs exch abs
max
grestore
def
/maxsteps 256 def
/calcgraysteps {
currentscreen pop exch 
printerRes exch div exch
2 copy
sin mul round dup mul
3 1 roll
cos mul round dup mul
add 1 add
dup maxsteps gt {pop maxsteps} if
} bdf
/bottom -0 def
/delta -0 def
/frac -0 def
/left -0 def
/numsteps -0 def
/numsteps1 -0 def
/radius -0 def
/right -0 def
/top -0 def
/xt -0 def
/yt -0 def
/df currentflat def
/tempstr 1 string def
/clipflatness currentflat def
/inverted?
0 currenttransfer exec .5 ge def
/level2 
/languagelevel where {pop languagelevel 1 ne}{false}ifelse def
/colorexists
level2
{
statusdict/processcolors known
{statusdict/processcolors get exec}{1}ifelse
4 eq def
}
{systemdict/setcmykcolor known def}
ifelse
/tc1 [0 0 0 1] def
/tc2 [0 0 0 1] def
/fc [0 0 0 1] def
/sc [0 0 0 1] def
/concatprocs{
/packedarray where
{pop dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse
{
/proc2 exch cvlit def/proc1 exch cvlit def
proc1 aload pop proc2 aload pop
proc1 length proc2 length add packedarray cvx
}
{
/proc2 exch cvlit def/proc1 exch cvlit def
/newproc proc1 length proc2 length add array def
newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval
newproc cvx
}ifelse
}bdf
/storerect{/top xdf/right xdf/bottom xdf/left xdf}bdf
/rectpath{newpath left bottom m left top L
right top L right bottom L closepath}bdf
/i{dup 0 eq
{pop df dup}
{dup} ifelse
/clipflatness xdf setflat
}bdf
version cvr 38.0 le
{/setrgbcolor{
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
setrgbcolor}bdf}if
/gettint{0 get}bdf
/puttint{0 exch put}bdf
/vms {/vmsv save def} bdf
/vmr {vmsv restore} bdf
/vmrs{vmsv restore /vmsv save def}bdf
/eomode{
{/filler /eofill load def /clipper /eoclip load def}
{/filler /fill load def /clipper /clip load def}
ifelse
}bdf
/CD{/NF exch def{exch dup/FID ne 1 index/UniqueID ne and{exch NF 3 1 roll put}
{pop pop}ifelse}forall NF}bdf
/MN{1 index length/Len exch def
dup length Len add string dup
Len 4 -1 roll putinterval dup 0 4 -1 roll putinterval}bdf
/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch
{1 index MN cvn/NewN exch def cvn
findfont dup maxlength dict CD dup/FontName NewN put dup
/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf
/RF{dup FontDirectory exch known{pop 3 -1 roll pop}{RC}ifelse}bdf
/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
{exch pop findfont 3 -1 roll pop}{pop dup findfont dup maxlength dict CD dup dup
/Encoding exch /Encoding get 256 array copy 7 -1 roll {3 -1 roll dup 4 -2 roll put}forall put definefont}ifelse}bdf
userdict begin /BDFontDict 20 dict def end
BDFontDict begin
/bu{}def
/bn{}def
/setTxMode{av 70 ge{pop}if pop}def
/gm{m}def
/show{pop}def
/gr{pop}def
/fnt{pop pop pop}def
/fs{pop}def
/fz{pop}def
/lin{pop pop}def
end
/MacVec 256 array def
MacVec 0 /Helvetica findfont
/Encoding get 0 128 getinterval putinterval
MacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put
/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI
/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/US
MacVec 0 32 getinterval astore pop
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase
/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacVec 128 128 getinterval astore pop
/fps{
currentflat 
exch 
dup 0 le{pop 1}if
{
dup setflat 3 index stopped
{1.3 mul dup 3 index gt{pop setflat pop pop stop}if}
{exit}
ifelse
}loop
pop setflat pop pop
}bdf
/fp{100 currentflat fps}bdf
/clipper{clip}bdf
/W{/clipper load 100 clipflatness fps}bdf
end%. FreeHandDict
end%. FHIODict
%%EndProcSet
%%EndProlog
%%BeginSetup
FHIODict begin
FreeHandDict begin
16.65 53.35 395.15 260.85 storerect rectpath clip newpath
/onlyk{false}ndf
/ccmyk{dup 5 -1 roll sub 0 max exch}ndf
/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{5 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf
/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf
/setseparationgray{1 exch sub dup dup dup setcmykcolor}ndf
/setoverprint{pop}ndf
/currentoverprint false ndf
/colorimage{pop pop
[5 -1 roll/exec cvx 6 -1 roll/exec cvx 7 -1 roll/exec cvx 8 -1 roll/exec cvx
/cmykbufs2gray cvx]cvx image}
%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)
version cvr 47.1 le isLino and{userdict begin bdf end}{ndf}ifelse
/customcolorimage{
colorexists
{
aload pop pop 4 array astore
setimagecmyk
currentcolortransfer
{ik mul ik sub 1 add}concatprocs 4 1 roll
{iy mul iy sub 1 add}concatprocs 4 1 roll
{im mul im sub 1 add}concatprocs 4 1 roll
{ic mul ic sub 1 add}concatprocs 4 1 roll
setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{invbuf dup length magentabuf length ne
{dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def}if
dup magentabuf copy yellowbuf copy blackbuf copy pop}concatprocs
{magentabuf}{yellowbuf}{blackbuf}true 4 colorimage
}
{
pop image
}
ifelse
}ndf
/separationimage{image}ndf
/newcmykcustomcolor{6 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf
/inkoverprint false ndf
/setinkoverprint{pop}ndf
/overprintprocess{pop}ndf
/setspotcolor
{spots exch get 0 5 getinterval exch setcustomcolor}ndf
/currentcolortransfer{currenttransfer dup dup dup}ndf
/setcolortransfer{systemdict begin settransfer end pop pop pop}ndf
/getcmyk {
dup length 4 eq
{aload pop}
{aload pop spots exch get 0 4 getinterval aload pop 4
{4 index mul 4 1 roll}repeat 5 -1 roll pop} ifelse
}bdf
/setimagecmyk{
getcmyk/ik xdf /iy xdf /im xdf /ic xdf
}ndf
/autospread{pop}ndf
/fhsetspreadsize{pop}ndf
/fhsetspreadallow{pop}ndf
/strokeopf false def
/fillopf false def
/R{0 ne /strokeopf xdf}bdf
/O{0 ne /fillopf xdf}bdf
/filler{fill}bdf
/F{fc fhsetcolor fillopf setoverprint false autospread
gsave /filler load fp grestore false setoverprint}bdf
/f{closepath F}bdf
/S{sc fhsetcolor strokeopf setoverprint true autospread {stroke}fp false setoverprint}bdf
/s{closepath S}bdf
/B{fc fhsetcolor fillopf setoverprint gsave /filler load fp grestore
sc fhsetcolor strokeopf setoverprint true autospread {stroke}fp false setoverprint}bdf
/b{closepath B}bdf
/setcolorscreen where{pop}{/setcolorscreen{setscreen pop pop pop pop pop pop pop pop pop}bdf}ifelse
/fhsetcolor{dup length 4 eq
{aload overprintprocess setcmykcolor}
{aload 1 get spots exch get 5 get setinkoverprint setspotcolor}
ifelse
}ndf
/settextcolor{
dup fhsetcolor
textblackopf
{
dup length 4 eq
{onlyk{3 get 1.0 eq{true setinkoverprint}if}{pop}ifelse}
{pop}
ifelse
}
{pop}ifelse
}ndf
/ka{/fc xdf}bdf
/Ka{/sc xdf}bdf
/xa{/fc xdf} bdf
/Xa{/sc xdf} bdf
/bc2[0 0]def
/bc4[0 0 0 0]def
/absmax{2 copy abs exch abs gt{exch}if pop}bdf
/calcstep
{ {calcgraysteps}{maxsteps}ifelse
tc1 length 4 eq
{
0 1 3
{tc1 1 index get
tc2 3 -1 roll get
sub
}for
absmax absmax absmax
}
{
bc2 tc1 1 get 1 exch put
tc1 gettint tc2 gettint
sub abs
}
ifelse
mul abs round dup 0 eq{pop 1}if 
dup /numsteps xdf 1 sub dup 0 eq{pop 1}if /numsteps1 xdf
}bdf
/cblend{
tc1 length 4 eq
{
0 1 3
{bc4 exch
tc1 1 index get
tc2 2 index get
1 index sub
frac mul add put
}for bc4
}
{
bc2
tc1 gettint
tc2 gettint
1 index sub
frac mul add
puttint bc2
}
ifelse
fhsetcolor
}bdf
/logtaper{/frac frac 9 mul 1 add log def}bdf
FHIODict begin
/origmtx matrix currentmatrix def
/iminv false def
/invbuf{0 1 2 index length 1 sub{dup 2 index exch get 255 exch sub 2 index 3 1 roll put}for}bdf
/cmykbufs2gray{
dup length 0 1 3 -1 roll 1 sub
{4 index 1 index get
4 index 2 index get
4 index 3 index get
4 index 4 index get
255 exch sub ccmyk ccmyk ccmyk pop 5 mul exch 45 mul add exch 14 mul add -6 bitshift
2 index 3 1 roll put}for
4 1 roll pop pop pop
}bdf
end
/textopf false def
/textblackopf true def
/curtextmtx{}def
/otw .25 def
/msf{dup/curtextmtx xdf makefont setfont}bdf
/makesetfont/msf load def
/curtextheight{.707104 .707104 curtextmtx dtransform
dup mul exch dup mul add sqrt}bdf
/ta{1 index
{tempstr 0 2 index put tempstr 2 index
gsave exec grestore
tempstr stringwidth rmoveto
5 index eq{6 index 6 index rmoveto}if
3 index 3 index rmoveto
}forall 7{pop}repeat}bdf
/sts{settextcolor textopf setoverprint/ts{awidthshow}def exec false setoverprint}bdf
/stol{/xt currentlinewidth def 
setlinewidth settextcolor textopf setoverprint newpath
/ts{{false charpath stroke}ta}def exec
false setoverprint xt setlinewidth}bdf
/s8 8 string def
/pattnt 1 def
/patcol[]def
/pa{1 0 matrix defaultmatrix dtransform exch atan}bdf
/por{1 0 dtransform 0 eq exch 0 ne and}bdf
/patcolor{/pattnt xdf
dup length array copy/patcol xdf
colorexists
{/pattnt 1 pattnt sub def
patcol length 4 eq
{0 1 3{patcol exch 2 copy
get .25 lt{0}{pattnt}ifelse put}for}
{patcol dup gettint .25 lt{0}{pattnt}ifelse puttint}ifelse
patcol fhsetcolor}
{patcol fhsetcolor currentgray 1 ne{pattnt systemdict /setgray get exec}if}ifelse}bdf
/pat{3 1 roll s8 copy pop 9.375 pa por not{-90. add}if
{1 add 4 mul cvi s8 exch get exch
1 add 4 mul cvi 7 sub bitshift 1 and inverted?{1 exch sub}if}setscreen
inverted? 
systemdict begin{}settransfer end
{.9921875 exch sub}if patcolor
}bdf
/pF{gsave fc pat /filler load fp grestore}bdf
/pf{closepath pF}bdf
/pS{gsave sc pat {stroke}fp grestore newpath}bdf
/ps{closepath pS}bdf
/currentpacking where{pop false setpacking}if
/spots[1 0 0 0 (Process Cyan) false newcmykcustomcolor
0 1 0 0 (Process Magenta) false newcmykcustomcolor
0 0 1 0 (Process Yellow) false newcmykcustomcolor
0 0 0 1 (Process Black) false newcmykcustomcolor
0 0 0 0  (White) false
newcmykcustomcolor
]def
%%EndSetup
%%IncludeFont: Symbol
0 dict dup begin
end
/f0 /Symbol FF def
[] 0 d
3.863708 M
1 w
0 j
0 J
0 O
0 R
0 i
false eomode
[0 0 0 1] Ka
[0 0 0 1] ka
vms
u
u
true fhsetspreadallow
16.9 260.6 m
394.9 260.6 L
394.9 53.6 L
16.9 53.6 L
16.9 260.6 L
0.5 w
3.863693 M
[0 0 0 1] Ka
s
U
q
[1 0 0 1 -93.100006 -479.399994] concat
vms
u
q
[1 0 0 1 85 84.899994] concat
vms
u
u
157.1084 624.1698 m
186.632 624.1698 L
186.632 594.6463 L
157.1084 594.6463 L
157.1084 624.1698 L
[0 0 0 0] ka
b
U
u
180.8913 598.3367 m
183.7616 598.3367 L
183.7616 595.4664 L
180.8913 595.4664 L
180.8913 598.3367 L
b
U
U
vmr
Q
q
[1 0 0 1 85 84.899994] concat
vms
u
u
152.5979 619.6593 m
182.1214 619.6593 L
182.1214 590.1357 L
152.5979 590.1357 L
152.5979 619.6593 L
[0 0 0 0] ka
b
U
u
176.3808 593.8262 m
179.2511 593.8262 L
179.2511 590.9558 L
176.3808 590.9558 L
176.3808 593.8262 L
b
U
U
vmr
Q
q
[1 0 0 1 85 84.899994] concat
vms
u
u
148.0873 615.1487 m
177.6109 615.1487 L
177.6109 585.6252 L
148.0873 585.6252 L
148.0873 615.1487 L
[0 0 0 0] ka
b
U
u
171.8702 589.3156 m
174.7406 589.3156 L
174.7406 586.4453 L
171.8702 586.4453 L
171.8702 589.3156 L
b
U
U
vmr
Q
q
[1 0 0 1 85 84.899994] concat
vms
u
u
143.5768 610.6382 m
173.1004 610.6382 L
173.1004 581.1146 L
143.5768 581.1146 L
143.5768 610.6382 L
[0 0 0 0] ka
b
U
u
167.3597 584.8051 m
170.23 584.8051 L
170.23 581.9347 L
167.3597 581.9347 L
167.3597 584.8051 L
b
U
U
vmr
Q
q
[1 0 0 1 85 84.899994] concat
vms
u
u
139.0663 606.1277 m
168.5898 606.1277 L
168.5898 576.6041 L
139.0663 576.6041 L
139.0663 606.1277 L
[0 0 0 0] ka
b
U
u
162.8491 580.2945 m
165.7195 580.2945 L
165.7195 577.4242 L
162.8491 577.4242 L
162.8491 580.2945 L
b
U
U
vmr
Q
q
[1 0 0 1 85 84.899994] concat
vms
u
u
134.5557 601.6171 m
164.0793 601.6171 L
164.0793 572.0936 L
134.5557 572.0936 L
134.5557 601.6171 L
[0 0 0 0] ka
b
U
u
158.3386 575.784 m
161.2089 575.784 L
161.2089 572.9137 L
158.3386 572.9137 L
158.3386 575.784 L
b
U
U
vmr
Q
q
vms
u
u
215.0452 682.0066 m
244.5687 682.0066 L
244.5687 652.483 L
215.0452 652.483 L
215.0452 682.0066 L
[0 0 0 0] ka
b
U
u
238.828 656.1734 m
241.6984 656.1734 L
241.6984 653.3031 L
238.828 653.3031 L
238.828 656.1734 L
b
U
U
vmr
Q
q
[1 0 0 1 85 84.899994] concat
vms
u
u
125.5346 592.596 m
155.0582 592.596 L
155.0582 563.0725 L
125.5346 563.0725 L
125.5346 592.596 L
[0 0 0 0] ka
b
U
u
149.3175 566.7629 m
152.1878 566.7629 L
152.1878 563.8926 L
149.3175 563.8926 L
149.3175 566.7629 L
b
U
U
vmr
Q
U
vmr
Q
q
[1 0 0 1 -93.100006 -479.399994] concat
vms
u
q
[1 0 0 1 42.5 42.399994] concat
vms
u
u
157.1084 624.1698 m
186.632 624.1698 L
186.632 594.6463 L
157.1084 594.6463 L
157.1084 624.1698 L
[0 0 0 0] ka
b
U
u
180.8913 598.3367 m
183.7616 598.3367 L
183.7616 595.4664 L
180.8913 595.4664 L
180.8913 598.3367 L
b
U
U
vmr
Q
q
[1 0 0 1 42.5 42.399994] concat
vms
u
u
152.5979 619.6593 m
182.1214 619.6593 L
182.1214 590.1357 L
152.5979 590.1357 L
152.5979 619.6593 L
[0 0 0 0] ka
b
U
u
176.3808 593.8262 m
179.2511 593.8262 L
179.2511 590.9558 L
176.3808 590.9558 L
176.3808 593.8262 L
b
U
U
vmr
Q
q
[1 0 0 1 42.5 42.399994] concat
vms
u
u
148.0873 615.1487 m
177.6109 615.1487 L
177.6109 585.6252 L
148.0873 585.6252 L
148.0873 615.1487 L
[0 0 0 0] ka
b
U
u
171.8702 589.3156 m
174.7406 589.3156 L
174.7406 586.4453 L
171.8702 586.4453 L
171.8702 589.3156 L
b
U
U
vmr
Q
q
[1 0 0 1 42.5 42.399994] concat
vms
u
u
143.5768 610.6382 m
173.1004 610.6382 L
173.1004 581.1146 L
143.5768 581.1146 L
143.5768 610.6382 L
[0 0 0 0] ka
b
U
u
167.3597 584.8051 m
170.23 584.8051 L
170.23 581.9347 L
167.3597 581.9347 L
167.3597 584.8051 L
b
U
U
vmr
Q
q
[1 0 0 1 42.5 42.399994] concat
vms
u
u
139.0663 606.1277 m
168.5898 606.1277 L
168.5898 576.6041 L
139.0663 576.6041 L
139.0663 606.1277 L
[0 0 0 0] ka
b
U
u
162.8491 580.2945 m
165.7195 580.2945 L
165.7195 577.4242 L
162.8491 577.4242 L
162.8491 580.2945 L
b
U
U
vmr
Q
q
[1 0 0 1 42.5 42.399994] concat
vms
u
u
134.5557 601.6171 m
164.0793 601.6171 L
164.0793 572.0936 L
134.5557 572.0936 L
134.5557 601.6171 L
[0 0 0 0] ka
b
U
u
158.3386 575.784 m
161.2089 575.784 L
161.2089 572.9137 L
158.3386 572.9137 L
158.3386 575.784 L
b
U
U
vmr
Q
q
vms
u
u
172.5452 639.5066 m
202.0687 639.5066 L
202.0687 609.983 L
172.5452 609.983 L
172.5452 639.5066 L
[0 0 0 0] ka
b
U
u
196.328 613.6734 m
199.1984 613.6734 L
199.1984 610.8031 L
196.328 610.8031 L
196.328 613.6734 L
b
U
U
vmr
Q
q
[1 0 0 1 42.5 42.399994] concat
vms
u
u
125.5346 592.596 m
155.0582 592.596 L
155.0582 563.0725 L
125.5346 563.0725 L
125.5346 592.596 L
[0 0 0 0] ka
b
U
u
149.3175 566.7629 m
152.1878 566.7629 L
152.1878 563.8926 L
149.3175 563.8926 L
149.3175 566.7629 L
b
U
U
vmr
Q
U
vmr
Q
168.8 159.5 m
168.8 168.6 L
205.2 205 L
214.3 205 L
214.3 195.9 L
177.9 159.5 L
168.8 159.5 L
[0 0 0 0] ka
b
u
168.7652 168.4654 m
177.8776 168.4654 L
177.8776 159.3531 L
168.7652 159.3531 L
168.7652 168.4654 L
b
U
126.3 116.9 m
126.3 126 L
162.8 162.4 L
171.9 162.4 L
171.9 153.4 L
135.4 116.9 L
126.3 116.9 L
b
u
126.2405 125.9407 m
135.3529 125.9407 L
135.3529 116.8284 L
126.2405 116.8284 L
126.2405 125.9407 L
b
U
83.7 74.4 m
83.7 83.5 L
120.2 120 L
129.3 120 L
129.3 110.9 L
92.8 74.4 L
83.7 74.4 L
b
208.4 177.3 m
223.7 177.3 L
223.7 204.3 L
239.9 204.3 L
0.9 w
S
q
[0.314987 0 0 0.314987 143.175522 -14.662979] concat
vms
u
308 695 m
290 704 L
290 704 294 698.8411 294 695 C
294 691.1589 290 686 290 686 C
308 695 L
[0 0 0 1] ka
0.2 w
b
U
vmr
Q
169.7 137.7 m
223.7 137.7 L
223.7 172.3 L
239.9 172.3 L
S
q
[0.314987 0 0 0.314987 143.175522 -46.612762] concat
vms
u
308 695 m
290 704 L
290 704 294 698.8411 294 695 C
294 691.1589 290 686 290 686 C
308 695 L
[0 0 0 1] ka
0.2 w
b
U
vmr
Q
124.7 93.6 m
223.7 93.6 L
223.7 108 L
239.9 108 L
S
q
[0.314987 0 0 0.314987 143.175522 -110.962326] concat
vms
u
308 695 m
290 704 L
290 704 294 698.8411 294 695 C
294 691.1589 290 686 290 686 C
308 695 L
[0 0 0 1] ka
0.2 w
b
U
vmr
Q
vmrs
%%IncludeFont: Helvetica
MacVec 256 array copy
/f1 /|______Helvetica dup RF findfont def
{
f1 [4.556168 0 0 4.556168 0 0] makesetfont
93.992203 79.254395 m
0 0 32 0 0 (0) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica
MacVec 256 array copy
/f1 /|______Helvetica dup RF findfont def
{
f1 [4.556168 0 0 4.556168 0 0] makesetfont
98.548416 83.810608 m
0 0 32 0 0 (0) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica
MacVec 256 array copy
/f1 /|______Helvetica dup RF findfont def
{
f1 [4.556168 0 0 4.556168 0 0] makesetfont
103.104645 88.366837 m
0 0 32 0 0 (0) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica
MacVec 256 array copy
/f1 /|______Helvetica dup RF findfont def
{
f1 [4.556168 0 0 4.556168 0 0] makesetfont
107.660858 92.92305 m
0 0 32 0 0 (0) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica
MacVec 256 array copy
/f1 /|______Helvetica dup RF findfont def
{
f1 [4.556168 0 0 4.556168 0 0] makesetfont
112.217072 97.479263 m
0 0 32 0 0 (1) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica
MacVec 256 array copy
/f1 /|______Helvetica dup RF findfont def
{
f1 [4.556168 0 0 4.556168 0 0] makesetfont
116.7733 102.035492 m
0 0 32 0 0 (1) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica
MacVec 256 array copy
/f1 /|______Helvetica dup RF findfont def
{
f1 [4.556168 0 0 4.556168 0 0] makesetfont
121.329514 106.591705 m
0 0 32 0 0 (1) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica
MacVec 256 array copy
/f1 /|______Helvetica dup RF findfont def
{
f1 [4.556168 0 0 4.556168 0 0] makesetfont
125.885742 111.147919 m
0 0 32 0 0 (0) ts
} 
[0 0 0 1]
sts
true fhsetspreadallow
0.2 w
3.863693 M
[0 0 0 1] Ka
S
88.2 88 m
97.4 88 L
97.4 78.9 L
0.5 w
S
92.8 92.6 m
102 92.6 L
102 83.5 L
S
97.4 97.1 m
106.5 97.1 L
106.5 88 L
S
102 101.7 m
111.1 101.7 L
111.1 92.6 L
S
106.5 106.3 m
115.6 106.3 L
115.6 97.1 L
S
111.1 110.9 m
120.2 110.9 L
120.2 101.7 L
S
115.6 115.4 m
124.7 115.4 L
124.7 106.3 L
S
129.3 120 m
92.8 83.5 L
S
u
83.7158 83.416 m
92.8281 83.416 L
92.8281 74.3037 L
83.7158 74.3037 L
83.7158 83.416 L
[0 0 0 0] ka
b
U
vmrs
%%IncludeFont: Helvetica
MacVec 256 array copy
/f1 /|______Helvetica dup RF findfont def
{
f1 [4.556168 0 0 4.556168 0 0] makesetfont
136.516907 121.779099 m
0 0 32 0 0 (0) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica
MacVec 256 array copy
/f1 /|______Helvetica dup RF findfont def
{
f1 [4.556168 0 0 4.556168 0 0] makesetfont
141.073135 126.335327 m
0 0 32 0 0 (0) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica
MacVec 256 array copy
/f1 /|______Helvetica dup RF findfont def
{
f1 [4.556168 0 0 4.556168 0 0] makesetfont
145.629349 130.891541 m
0 0 32 0 0 (0) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica
MacVec 256 array copy
/f1 /|______Helvetica dup RF findfont def
{
f1 [4.556168 0 0 4.556168 0 0] makesetfont
150.185577 135.447754 m
0 0 32 0 0 (0) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica
MacVec 256 array copy
/f1 /|______Helvetica dup RF findfont def
{
f1 [4.556168 0 0 4.556168 0 0] makesetfont
154.741791 140.003983 m
0 0 32 0 0 (1) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica
MacVec 256 array copy
/f1 /|______Helvetica dup RF findfont def
{
f1 [4.556168 0 0 4.556168 0 0] makesetfont
159.298004 144.560196 m
0 0 32 0 0 (1) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica
MacVec 256 array copy
/f1 /|______Helvetica dup RF findfont def
{
f1 [4.556168 0 0 4.556168 0 0] makesetfont
163.854233 149.116425 m
0 0 32 0 0 (1) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica
MacVec 256 array copy
/f1 /|______Helvetica dup RF findfont def
{
f1 [4.556168 0 0 4.556168 0 0] makesetfont
168.410446 153.672638 m
0 0 32 0 0 (0) ts
} 
[0 0 0 1]
sts
true fhsetspreadallow
0.2 w
3.863693 M
[0 0 0 1] Ka
S
130.8 130.5 m
140 130.5 L
140 121.4 L
0.5 w
S
135.4 135.1 m
144.6 135.1 L
144.6 126 L
S
140 139.6 m
149.1 139.6 L
149.1 130.5 L
S
144.6 144.2 m
153.7 144.2 L
153.7 135.1 L
S
149.1 148.8 m
158.2 148.8 L
158.2 139.6 L
S
153.7 153.4 m
162.8 153.4 L
162.8 144.2 L
S
158.2 157.9 m
167.3 157.9 L
167.3 148.8 L
S
171.9 162.4 m
135.4 126 L
S
vmrs
%%IncludeFont: Helvetica
MacVec 256 array copy
/f1 /|______Helvetica dup RF findfont def
{
f1 [4.556168 0 0 4.556168 0 0] makesetfont
179.041626 164.303818 m
0 0 32 0 0 (0) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica
MacVec 256 array copy
/f1 /|______Helvetica dup RF findfont def
{
f1 [4.556168 0 0 4.556168 0 0] makesetfont
183.597839 168.860031 m
0 0 32 0 0 (0) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica
MacVec 256 array copy
/f1 /|______Helvetica dup RF findfont def
{
f1 [4.556168 0 0 4.556168 0 0] makesetfont
188.154068 173.41626 m
0 0 32 0 0 (0) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica
MacVec 256 array copy
/f1 /|______Helvetica dup RF findfont def
{
f1 [4.556168 0 0 4.556168 0 0] makesetfont
192.710281 177.972473 m
0 0 32 0 0 (0) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica
MacVec 256 array copy
/f1 /|______Helvetica dup RF findfont def
{
f1 [4.556168 0 0 4.556168 0 0] makesetfont
197.26651 182.528687 m
0 0 32 0 0 (1) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica
MacVec 256 array copy
/f1 /|______Helvetica dup RF findfont def
{
f1 [4.556168 0 0 4.556168 0 0] makesetfont
201.822723 187.084915 m
0 0 32 0 0 (1) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica
MacVec 256 array copy
/f1 /|______Helvetica dup RF findfont def
{
f1 [4.556168 0 0 4.556168 0 0] makesetfont
206.378937 191.641129 m
0 0 32 0 0 (1) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica
MacVec 256 array copy
/f1 /|______Helvetica dup RF findfont def
{
f1 [4.556168 0 0 4.556168 0 0] makesetfont
210.935165 196.197342 m
0 0 32 0 0 (0) ts
} 
[0 0 0 1]
sts
true fhsetspreadallow
0.2 w
3.863693 M
[0 0 0 1] Ka
S
173.3 173.1 m
182.5 173.1 L
182.5 164 L
0.5 w
S
177.9 177.7 m
187.1 177.7 L
187.1 168.6 L
S
182.5 182.2 m
191.6 182.2 L
191.6 173.1 L
S
187.1 186.7 m
196.2 186.7 L
196.2 177.7 L
S
191.6 191.3 m
200.7 191.3 L
200.7 182.2 L
S
196.2 195.9 m
205.2 195.9 L
205.2 186.7 L
S
200.7 200.4 m
209.7 200.4 L
209.7 191.3 L
S
214.3 205 m
177.9 168.6 L
S
q
[1 0 0 1 -93.100006 -479.399994] concat
vms
u
q
vms
u
u
157.1084 624.1698 m
186.632 624.1698 L
186.632 594.6463 L
157.1084 594.6463 L
157.1084 624.1698 L
[0 0 0 0] ka
b
U
u
180.8913 598.3367 m
183.7616 598.3367 L
183.7616 595.4664 L
180.8913 595.4664 L
180.8913 598.3367 L
b
U
U
vmr
Q
q
vms
u
u
152.5979 619.6593 m
182.1214 619.6593 L
182.1214 590.1357 L
152.5979 590.1357 L
152.5979 619.6593 L
[0 0 0 0] ka
b
U
u
176.3808 593.8262 m
179.2511 593.8262 L
179.2511 590.9558 L
176.3808 590.9558 L
176.3808 593.8262 L
b
U
U
vmr
Q
q
vms
u
u
148.0873 615.1487 m
177.6109 615.1487 L
177.6109 585.6252 L
148.0873 585.6252 L
148.0873 615.1487 L
[0 0 0 0] ka
b
U
u
171.8702 589.3156 m
174.7406 589.3156 L
174.7406 586.4453 L
171.8702 586.4453 L
171.8702 589.3156 L
b
U
U
vmr
Q
q
vms
u
u
143.5768 610.6382 m
173.1004 610.6382 L
173.1004 581.1146 L
143.5768 581.1146 L
143.5768 610.6382 L
[0 0 0 0] ka
b
U
u
167.3597 584.8051 m
170.23 584.8051 L
170.23 581.9347 L
167.3597 581.9347 L
167.3597 584.8051 L
b
U
U
vmr
Q
q
vms
u
u
139.0663 606.1277 m
168.5898 606.1277 L
168.5898 576.6041 L
139.0663 576.6041 L
139.0663 606.1277 L
[0 0 0 0] ka
b
U
u
162.8491 580.2945 m
165.7195 580.2945 L
165.7195 577.4242 L
162.8491 577.4242 L
162.8491 580.2945 L
b
U
U
vmr
Q
q
vms
u
u
134.5557 601.6171 m
164.0793 601.6171 L
164.0793 572.0936 L
134.5557 572.0936 L
134.5557 601.6171 L
[0 0 0 0] ka
b
U
u
158.3386 575.784 m
161.2089 575.784 L
161.2089 572.9137 L
158.3386 572.9137 L
158.3386 575.784 L
b
U
U
vmr
Q
q
vms
u
u
130.0452 597.1066 m
159.5687 597.1066 L
159.5687 567.583 L
130.0452 567.583 L
130.0452 597.1066 L
[0 0 0 0] ka
b
U
u
153.828 571.2735 m
156.6984 571.2735 L
156.6984 568.4031 L
153.828 568.4031 L
153.828 571.2735 L
b
U
U
vmr
Q
q
vms
u
u
125.5346 592.596 m
155.0582 592.596 L
155.0582 563.0725 L
125.5346 563.0725 L
125.5346 592.596 L
[0 0 0 0] ka
b
U
u
149.3175 566.7629 m
152.1878 566.7629 L
152.1878 563.8926 L
149.3175 563.8926 L
149.3175 566.7629 L
b
U
U
vmr
Q
U
vmr
Q
242.9 95.4 m
242.9 224.5 L
242.9 224.5 249.7 218.2 252 218.2 C
255.5 218.2 264.3 222.7 268.2 222.7 C
277.9 222.7 279.4 221.4 279.4 221.4 C
279.4 95.4 L
242.9 95.4 L
[0 0 0 0] ka
b
242.9 95.4 m
279.4 95.4 L
S
242.9 103.5 m
279.4 103.5 L
S
242.9 111.6 m
279.4 111.6 L
S
242.9 119.7 m
279.4 119.7 L
S
242.9 127.8 m
279.4 127.8 L
S
242.9 135.9 m
279.4 135.9 L
S
242.9 144 m
279.4 144 L
S
242.9 152.1 m
279.4 152.1 L
S
242.9 160.2 m
279.4 160.2 L
S
242.9 168.3 m
279.4 168.3 L
S
242.9 176.4 m
279.4 176.4 L
S
242.9 184.5 m
279.4 184.5 L
S
242.9 192.6 m
279.4 192.6 L
S
242.9 200.7 m
279.4 200.7 L
S
242.9 208.8 m
279.4 208.8 L
S
242.9 216.9 m
279.4 216.9 L
S
255.1 95.4 m
255.1 218.7 L
S
267.2 95.4 m
267.2 222.3 L
S
vmrs
U
vmr
vms
u
true fhsetspreadallow
1.3 w
3.863693 M
[0 0 0 1] Ka
S
U
vmr
vms
u
vmrs
%%IncludeFont: Helvetica
MacVec 256 array copy
/f1 /|______Helvetica dup RF findfont def
{
f1 [8 0 0 8 0 0] makesetfont
139.899994 243.748505 m
0 0 32 0 0 (Frame ) ts
139.899994 235.748505 m
0 0 32 0 0 (Buf) ts
151.763275 235.748505 m
0 0 32 0 0 (fer) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica
MacVec 256 array copy
/f1 /|______Helvetica dup RF findfont def
{
f1 [8 0 0 8 0 0] makesetfont
193.899994 218.748505 m
0 0 32 0 0 (Pixel ) ts
193.899994 210.748505 m
0 0 32 0 0 (V) ts
198.644135 210.748505 m
0 0 32 0 0 (alues) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica
MacVec 256 array copy
/f1 /|______Helvetica dup RF findfont def
{
f1 [8 0 0 8 0 0] makesetfont
364.699997 96.548508 m
0 0 32 0 0 (blue) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica
MacVec 256 array copy
/f1 /|______Helvetica dup RF findfont def
{
f1 [7.199951 0 0 7.199951 0 0] makesetfont
243.54982 241.333191 m
0 0 32 0 0 (Colormap) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica
MacVec 256 array copy
/f1 /|______Helvetica dup RF findfont def
{
f1 [7.208496 0 0 6.043945 0 0] makesetfont
281.37854 218.03479 m
0 0 32 0 0 (16) ts
281.37854 209.980133 m
0 0 32 0 0 (15) ts
281.37854 201.925476 m
0 0 32 0 0 (14) ts
281.37854 193.870819 m
0 0 32 0 0 (13) ts
281.37854 185.816162 m
0 0 32 0 0 (12) ts
281.911774 177.761505 m
0 0 32 0 0 (1) ts
285.385788 177.761505 m
0 0 32 0 0 (1) ts
281.37854 169.706848 m
0 0 32 0 0 (10) ts
285.385788 161.652191 m
0 0 32 0 0 (9) ts
285.385788 153.597534 m
0 0 32 0 0 (8) ts
285.385788 145.542877 m
0 0 32 0 0 (7) ts
285.385788 137.48822 m
0 0 32 0 0 (6) ts
285.385788 129.433563 m
0 0 32 0 0 (5) ts
285.385788 121.378906 m
0 0 32 0 0 (4) ts
285.385788 113.324249 m
0 0 32 0 0 (3) ts
285.385788 105.269592 m
0 0 32 0 0 (2) ts
285.385788 97.214935 m
0 0 32 0 0 (1) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica
MacVec 256 array copy
/f1 /|______Helvetica dup RF findfont def
{
f1 [6.17012 0 0 5.963455 0 0] makesetfont
247.463577 229.808014 m
0.310394 0 32 1.218674 0 (R  G  B) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica
MacVec 256 array copy
/f1 /|______Helvetica dup RF findfont def
{
f1 [5.399963 0 0 5.399963 0 0] makesetfont
247.779785 202.847534 m
0 0 32 0 0 (0) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica
MacVec 256 array copy
/f1 /|______Helvetica dup RF findfont def
{
f1 [5.399963 0 0 5.399963 0 0] makesetfont
259.929703 169.997757 m
0 0 32 0 0 (0) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Helvetica
MacVec 256 array copy
/f1 /|______Helvetica dup RF findfont def
{
f1 [5.399963 0 0 5.399963 0 0] makesetfont
268.929642 105.198196 m
0 0 32 0 0 (225) ts
} 
[0 0 0 1]
sts
true fhsetspreadallow
363.7 86.8 m
369.1 86.7 364.1 82.6 365.2 81.7 C
370 77.8 370.8 81.9 374.5 77.8 C
374.6 77.5 379.7 76.5 379.4 75.5 C
378.9 74.2 375.9 74.2 375.4 74.1 C
[0 0 0 1] Ka
S
u
303.8361 88.3216 m
362.1954 88.3216 L
362.8944 88.3216 363.4611 87.755 363.4611 87.056 C
363.4611 83.2591 L
363.4611 82.5601 362.8944 81.9935 362.1954 81.9935 C
303.8361 81.9935 L
303.1371 81.9935 302.5704 82.5601 302.5704 83.2591 C
302.5704 87.056 L
302.5704 87.755 303.1371 88.3216 303.8361 88.3216 C
[0 0 0 1] ka
1<0000000000000000> pf
0.5 w
3.863693 M
S
U
vmrs
true fhsetspreadallow
305.1 85 m
301.2 77.9 L
301.2 76.3 L
365.4 76.3 L
365.4 77.9 L
361.4 85 L
305.1 85 L
[0 0 0 0] ka
[0 0 0 1] Ka
0.5 w
3.863693 M
b
S
S
u
305.8048 131.2122 m
360.3673 131.2122 L
360.3673 89.7279 L
305.8048 89.7279 L
305.8048 131.2122 L
[0 0 0 1] ka
1<0000000000000000> pf
S
U
vmrs
u
true fhsetspreadallow
308.4767 128.5404 m
357.6954 128.5404 L
357.6954 92.5404 L
308.4767 92.5404 L
308.4767 128.5404 L
0.5 w
3.863693 M
[0 0 0 1] Ka
s
U
u
309.9199 127.2121 m
356.4317 127.2121 L
356.4317 93.8763 L
309.9199 93.8763 L
309.9199 127.2121 L
s
U
301.2 78.3 m
365.4 78.3 L
S
311.7 83.7 m
309.2 79 L
303.9 79 L
306.5 83.7 L
311.7 83.7 L
[0 0 0 1] ka
f
n
344.5 83.7 m
347.2 79 L
310.6 79 L
313.2 83.7 L
344.5 83.7 L
f
n
346.8 83.9 m
349.5 79 L
362.7 79 L
360.1 83.9 L
346.8 83.9 L
f
n
305.1 85 m
361.2 85 L
S
301.2 77.9 m
305.1 85 L
S
346.5 84.1 m
349.2 79.3 L
362.4 79.3 L
359.8 84.1 L
346.5 84.1 L
[0 0 0 0] ka
b
357.1 84.1 m
359.7 79.3 L
S
354.5 84.1 m
357.1 79.3 L
S
351.9 84.1 m
354.4 79.3 L
S
349 84.1 m
351.8 79.3 L
S
347.1 83.2 m
360.3 83.2 L
S
347.5 82.2 m
360.8 82.2 L
S
348.1 81.3 m
361.4 81.3 L
S
348.6 80.2 m
361.7 80.2 L
S
311.7 84.1 m
309.2 79.3 L
303.9 79.3 L
306.5 84.1 L
311.7 84.1 L
b
309 84 m
306.6 79.3 L
S
311.3 83.2 m
305.9 83.2 L
S
vmrs
true fhsetspreadallow
310.7 82.2 m
305.4 82.2 L
0.5 w
3.863693 M
[0 0 0 1] Ka
S
310.3 81.3 m
304.9 81.3 L
S
309.7 80.2 m
304.5 80.2 L
S
344.5 84.1 m
347.2 79.3 L
310.6 79.3 L
313.2 84.1 L
344.5 84.1 L
[0 0 0 0] ka
b
315.7 84.1 m
313 79.3 L
S
318.6 84.1 m
316.1 79.5 L
S
321.3 84.1 m
319.4 80.4 L
S
323.8 84.1 m
322.4 80.4 L
S
326.3 84.1 m
325.1 80.4 L
S
328.7 84.1 m
327.8 80.2 L
S
330.9 84.1 m
330.4 80.4 L
S
342.3 84 m
344.8 79.3 L
S
339.5 84 m
341.2 80.4 L
S
337.2 84.1 m
338.4 80.4 L
S
334.8 84.1 m
335.7 80.4 L
S
332.7 84.1 m
333.1 80.2 L
S
312.8 83.2 m
345 83.2 L
S
312.2 82.2 m
345.6 82.2 L
S
311.7 81.3 m
345.9 81.3 L
S
311.2 80.2 m
346.6 80.2 L
S
vmrs
true fhsetspreadallow
306.3 131.3 m
316 133 L
350.9 133 L
360.5 131.3 L
306.3 131.3 L
[0 0 0 0] ka
[0 0 0 1] Ka
0.5 w
3.863693 M
b
360.5 92.1 m
363.4 87.8 L
S
305.9 92.5 m
302.7 87.8 L
S
u
313.3986 124.8841 m
352.4923 124.8841 L
353.1913 124.8841 353.7579 124.3175 353.7579 123.6185 C
353.7579 97.7435 L
353.7579 97.0445 353.1913 96.4779 352.4923 96.4779 C
313.3986 96.4779 L
312.6996 96.4779 312.1329 97.0445 312.1329 97.7435 C
312.1329 123.6185 L
312.1329 124.3175 312.6996 124.8841 313.3986 124.8841 C
[0 0 0 1] ka
b
U
368.3 75 m
368.3 75 L
368.3 73.5 L
370.1 70.4 L
378.2 70.4 L
378.2 72.1 L
375.9 75.2 L
374.7 75.8 373.9 76 372.5 76 C
370.8 76 369.8 75.8 368.3 75 C
[0 0 0 0] ka
b
368.3 75 m
370.2 72.1 L
370.2 72.1 372.3093 72.7401 373.7 72.8 C
375.4744 72.8765 378.2 72.1 378.2 72.1 C
S
370.2 70.4 m
370.2 72.1 L
S
369 75 m
370 73.6 L
370 73.6 370.4701 73.8869 370.8 74 C
371.1401 74.1166 371.7 74.2 371.7 74.2 C
370.7 75.6 L
370.7 75.6 370.2 75.5 369.9 75.4 C
369.6 75.3 369 75 369 75 C
s
371.3 75.6 m
372.3 74.3 L
372.3 74.3 372.7856 74.4 373.1 74.4 C
373.4531 74.4 374 74.3 374 74.3 C
373 75.7 L
373 75.7 372.6 75.7 372.3 75.7 C
371.9 75.7 371.3 75.6 371.3 75.6 C
s
373.6 75.6 m
374.6 74.3 L
374.6 74.3 375.1545 74.1995 375.5 74.1 C
375.9036 73.9837 376.5 73.7 376.5 73.7 C
375.6 75 L
375.6 75 375 75.3 374.8 75.4 C
374.4 75.5 373.6 75.6 373.6 75.6 C
s
144.5 171.1 m
170.9 171.1 L
[2 2 ] 0 d
S
175.6 202.4 m
202.7 202.4 L
S
102 128.5 m
128.3 128.5 L
S
133.1 159.9 m
160.2 159.9 L
S
59.4 86 m
85.8 86 L
S
90.6 117.4 m
117.7 117.4 L
S
U
vmr
vms
u
u
true fhsetspreadallow
312.9485 124.0685 m
353.1673 124.0685 L
353.1673 97.2091 L
312.9485 97.2091 L
312.9485 124.0685 L
[0 0 0 0.4] ka
[0 0 0 1] Ka
0.5 w
3.863693 M
b
U
U
vmr
vms
u
u
true fhsetspreadallow
345.1574 102.7401 m
349.6574 102.7401 L
349.6574 98.2401 L
345.1574 98.2401 L
345.1574 102.7401 L
[0 0 0 0] ka
[0 0 0 1] Ka
0.5 w
3.863693 M
b
U
U
vmr
vms
u
true fhsetspreadallow
293.4 152.1 m
347.9 152.1 L
347.9 104.4 L
0.9 w
3.863693 M
[0 0 0 1] Ka
S
q
[-0.016479 -0.31456 0.31456 -0.016479 134.082779 212.756104] concat
vms
u
308 695 m
290 704 L
290 704 294 698.8411 294 695 C
294 691.1589 290 686 290 686 C
308 695 L
[0 0 0 1] ka
0.2 w
b
U
vmr
Q
U
vmr
%%Trailer
end  % FreeHandDict
end  % FHIODict
countdictstack InitDictCount sub { end } repeat
cleartomark
restore
grestore

%%EndDocument
FMENDEPSF
105 202.31 501 430.3 C
45 63 567 729 C
FMENDPAGE
%%EndPage: "294" 12
%%Page: "295" 13
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (CHAPTER 11: COMMAND LINE OPTIONS) 315.48 693.79 S
0 9 Q
0.45 (295) 487.34 693.79 S
111 684 507 708 R
0.5 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 10 Q
7 X
(11) 531 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
-0.27 (the range of possible colors is 256) 147 650.33 P
2 7.2 Q
-0.19 (3) 284.25 653.93 P
1 10 Q
-0.27 (\050more than 16 million colors\051. This means that you can) 289.46 650.33 P
(create incredibly precise differences between colors.) 147 638.03 T
-0.46 (However, the number of different colors that can be displayed on the screen at any one time) 147 619.73 P
-0.41 (is a function of the number of planes. A four-plane system can index 2^4 colorcells \05016 dis-) 147 607.43 P
0.92 (tinct colors\051; an 8-plane system can index 2) 147 595.13 P
2 7.2 Q
0.66 (8) 331 598.73 P
1 10 Q
0.92 (colorcells \050256 distinct colors\051; and a 24-) 337.06 595.13 P
(plane system can index 2) 147 582.83 T
2 7.2 Q
(24) 247.54 586.43 T
1 10 Q
(colorcells \050more than 16 million distinct colors\051.) 256.54 582.83 T
0.38 (If you are using a 4-plane workstation, the fact that you can precisely define hundreds of) 147 564.53 P
-0.21 (different shades of blue is far less significant than the fact that you can\325t use them all at the) 147 552.23 P
-0.17 (same time. There isn\325t space for all of them to be stored in the colormap at one time or any) 147 539.93 P
(mechanism for them to be selected even if they could be stored.) 147 527.63 T
0.5 (This limitation is made more significant by the fact that X is a multi-client environment.) 147 509.33 P
0.23 (When X starts up, usually no colors are loaded into the colormap. As clients are invoked,) 147 497.03 P
0.19 (certain of these cells are allocated. But when all of the free colorcells are used up, it is no) 147 484.73 P
0.68 (longer possible to request new colors. When this happens, you will usually be given the) 147 472.43 P
-0.19 (closest possible color from those already allocated. However, you may instead be given an) 147 460.13 P
(error message and told that there are no free colorcells.) 147 447.83 T
0.54 (In order to minimize the chance of running out of colorcells, many programs use) 147 429.53 P
2 F
0.54 (shared) 479.78 429.53 P
1 F
0.3 (colorcells. Shared colorcells can be used by any number of applications but they can\325t be) 147 417.23 P
-0.27 (changed by any of them. They can only be de-allocated by each application that uses them,) 147 404.93 P
0.6 (and when all applications have de-allocated the cell, it is available for setting one again.) 147 392.63 P
(Shared cells are most often used for background, border, and cursor colors.) 147 380.33 T
-0.1 (Alternately, some clients have to be able to change the color of graphics they have already) 147 362.03 P
0.2 (drawn. This requires another kind of cell, called) 147 349.73 P
2 F
0.2 (private) 343.03 349.73 P
1 F
0.2 (, which can\325t be shared. A typical) 371.36 349.73 P
-0.22 (use of a private cell would be for the palette of a color-mixing application. Such a program) 147 337.43 P
-0.26 (might have three bars of each primary color and a box that shows the mixed color. The pri-) 147 325.13 P
(mary bars would use shared cells, while the mixed color box would use a private cell.) 147 312.83 T
0.56 (In summary, some programs define colorcells to be read-only and sharable, while others) 147 294.53 P
(define colorcells to be read/write and private.) 147 282.23 T
-0.42 (To top it off, there are even clients that may temporarily swap in a private colormap of their) 147 263.93 P
-0.02 (own. If this happens, all other applications will be displayed in unexpected colors because) 147 251.63 P
0.11 (of the way color is implemented. This is called) 147 239.33 P
2 F
0.11 (colormap flashing) 337.97 239.33 P
1 F
0.11 (, because the colormaps) 411.14 239.33 P
0.17 (flash in and out as the pointer enters and leaves such clients. You can \322lock\323 in the color-) 147 227.03 P
0.68 (map of a client under the OpenWindows version of) 147 214.73 P
2 F
0.68 (olwm) 360.56 214.73 P
1 F
0.68 ( using the Colormap Lock key) 382.23 214.73 P
(\050Ctrl/L2 on the Sun keyboard\051.) 147 202.43 T
0.69 (In order to minimize such conflicts, you should request precise colors only when neces-) 147 184.13 P
0.29 (sary. By preference, use color names or hexadecimal specifications that you specified for) 147 171.83 P
(other applications.) 147 159.53 T
0 1 1 0 1 0 0 K
111 123 507 140.98 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
111 123 507 140.98 R
7 X
0 1 1 0 1 0 0 K
V
112.07 128.96 292.07 128.96 2 L
V
0.5 H
2 Z
0 X
N
45 63 567 729 C
0 0 0 1 0 0 0 K
1 8 Q
0 X
0 0 0 1 0 0 0 K
-0.15 (\240) 147 117.67 P
-0.15 (There is a type of high-end display in which pixel values are used directly to control the illumination of the red,) 153 117.67 P
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0.48 (green, and blue phosphors. But far more commonly, the bits per pixel are used indirectly with the actual color) 147 107.67 P
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
(values specified independently.) 147 97.67 T
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
98 647 99 657 R
V
98 579.5 99 601.8 R
V
FMENDPAGE
%%EndPage: "295" 13
%%Page: "296" 14
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (296) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 10 Q
7 X
(11) 71.88 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 20 Q
0 X
0 1 1 0 1 0 0 K
(1) 105 643.67 T
(1.6  Border W) 112.92 643.67 T
(idth) 218.5 643.67 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
-0.01 (Many clients accept a) 141 624.33 P
4 F
-0.03 (-bw) 230.38 624.33 P
1 F
-0.01 ( option that is intended to specify the width of the window bor-) 248.38 624.33 P
-0.32 (der in pixels. However, as in the case of the) 141 612.03 P
4 F
-0.76 (-bd) 315 612.03 P
1 F
-0.32 ( \050border color\051 option, under) 333 612.03 P
1 9 Q
-0.29 (OPEN LOOK) 448.04 612.03 P
1 10 Q
-0.32 (,) 498.5 612.03 P
2.84 (this customization is generally useless because the) 141 599.73 P
2 F
2.84 (olwm) 365.01 599.73 P
1 F
2.84 ( window frame effectively) 386.68 599.73 P
(replaces most window borders.) 141 587.43 T
0.97 (As an alternative, you) 141 569.13 P
2 F
0.97 (can) 235.13 569.13 P
1 F
0.97 ( change the width of the frame of all windows by specifying) 249.57 569.13 P
0.66 (resources for) 141 556.83 P
2 F
0.66 (olwm) 196.74 556.83 P
1 F
0.66 ( in a) 218.41 556.83 P
2 F
0.66 (.Xresources) 240.94 556.83 P
1 F
0.66 ( or) 288.43 556.83 P
2 F
0.66 (.Xdefaults) 303.9 556.83 P
1 F
0.66 ( file in your home directory. For more) 344.18 556.83 P
0.31 (information, see Chapter 13,) 141 544.53 P
2 F
0.31 (Customizing olwm) 258.87 544.53 P
1 F
0.31 (, and the resources on the) 333.36 544.53 P
2 F
0.31 (olwm) 439.33 544.53 P
1 F
0.31 ( reference) 461 544.53 P
(page in Part Three of this guide.) 141 532.23 T
0 1 1 0 1 0 0 K
0 20 Q
0 1 1 0 1 0 0 K
(1) 105 499.97 T
(1.7  xterm and cmdtool example) 112.92 499.97 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
-0.25 (Here is an example that consolidates several of the options that we\325ve discussed so far. We) 141 480.63 P
0.3 (want a terminal emulator, with a window size of 80 columns by 48 rows \050double the size) 141 468.33 P
0.41 (of a conventional \32224x80\323 ASCII terminal\051, at the left margin but with its top 100 pixels) 141 456.03 P
0.64 (down from the top of the screen. And we want the name in its titlebar to be whatever is) 141 443.73 P
1.02 (stored in the shell variable \322) 141 431.43 P
1 9 Q
0.92 (HOSTNAME) 258.6 431.43 P
1 10 Q
1.02 (\323. If we prefer to use) 308.59 431.43 P
2 F
1.02 (xterm) 399.98 431.43 P
1 F
1.02 (, we could use this) 422.74 431.43 P
(form:) 141 419.13 T
4 8 Q
-0.16 (xterm -geometry 80x48+0+100 -T "$HOSTNAME"&) 159 402.17 S
1 10 Q
(If we are using) 141 385.83 T
2 F
(cmdtool) 203.2 385.83 T
1 F
( we could give this specification:) 235.42 385.83 T
4 8 Q
-0.16 (cmdtool -Ww 80 -Wh 40 -Wp 0 100 -Wl "$HOSTNAME"&) 159 368.87 S
1 10 Q
(However, this attempt at an X Toolkit-compatible one:) 141 352.53 T
4 8 Q
-0.16 (cmdtool -geometry 80x48+0+100 -title "$HOSTNAME"&) 159 335.57 S
1 10 Q
0.09 (will fail, because in this context the width and height are interpreted in pixels, so we get a) 141 319.23 P
0.52 (very tiny window, about an inch high! By contrast,) 141 306.93 P
2 F
0.52 (xterm) 352.04 306.93 P
1 F
0.52 ( interprets the geometry size in) 374.81 306.93 P
0.32 (columns and rows, while) 141 294.63 P
2 F
0.32 (cmdtool) 244.78 294.63 P
1 F
0.32 ( interprets it in pixels, and provides the alternate) 277 294.63 P
2 F
0.32 (-width) 475.44 294.63 P
1 F
0.88 (and) 141 282.33 P
2 F
0.88 (-height) 158.82 282.33 P
1 F
0.88 ( command line arguments \050columns and rows, respectively\051, so that you can) 187.15 282.33 P
(specify it either way.) 141 270.03 T
0 1 1 0 1 0 0 K
0 20 Q
0 1 1 0 1 0 0 K
(1) 105 237.77 T
(1.8  Summary) 112.92 237.77 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
0.67 (We\325ve now shown most of the standard command line options for the Intrinsics toolkits) 141 218.43 P
-0.19 (\050Athena and OLIT\051 as well as for the XView toolkit. Since color is so important in making) 141 206.13 P
0.95 (a display visually appealing, we spent some time on it. In the next chapter we describe) 141 193.83 P
-0.37 (Resources, which are a way you can control the behavior of window clients without having) 141 181.53 P
(to type your preferences each time you start that client.) 141 169.23 T
FMENDPAGE
%%EndPage: "296" 14
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 14
%%DocumentFonts: Helvetica-Narrow-BoldOblique
%%+ Times-Roman
%%+ Times-Italic
%%+ Helvetica-Bold
%%+ Courier
%%+ Times-Bold
%%+ Courier-Bold
%%+ Courier-BoldOblique
%%EOF
