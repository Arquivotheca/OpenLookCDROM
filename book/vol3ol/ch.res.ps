%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{1 dict dup /PageSize [paperwidth paperheight]put setpagedevice}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 {1 dict dup /ManualFeed manualfeed put setpagedevice } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 28 FMDOCUMENT
0 0 /Helvetica-Narrow-BoldOblique FMFONTDEFINE
1 0 /Times-Roman FMFONTDEFINE
2 0 /Times-Italic FMFONTDEFINE
3 0 /Courier FMFONTDEFINE
4 0 /Courier-BoldOblique FMFONTDEFINE
5 1 /ZapfDingbats FMFONTDEFINE
6 0 /Times-BoldItalic FMFONTDEFINE
7 0 /Courier-Oblique FMFONTDEFINE
8 0 /Helvetica-Bold FMFONTDEFINE
9 0 /Courier-Bold FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "297" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (CHAPTER 12: SETTING RESOURCES) 328.75 693.79 S
0 9 Q
0.45 (297) 487.34 693.79 S
111 684 507 708 R
0.2 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 10 Q
7 X
(12) 531 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
0 0 0 0 1 1 1 K
1 10 Q
7 X
(Chapter) 138 719.33 T
(12SETTING RESOURCES) 172.16 719.33 T
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 16 Q
0 X
0 1 1 0 1 0 0 K
(CHAPTER) 110 633.83 T
(12) 177.06 633.83 T
0 0 0 1 0 0 0 K
0 35 Q
0 0 0 1 0 0 0 K
(Setting Resources) 144.5 573.5 T
1 10 Q
0.99 (This chapter describes how to set resource variables that determine application features) 147 434.33 P
-0.38 (such as color, geometry, fonts, and so on. It describes the syntax of resource definition files) 147 422.03 P
0.66 (such as) 147 409.73 P
2 F
0.59 -0.25 (.Xresources) 179.97 409.73 B
1 F
0.66 (, as well as the operation of) 224.71 409.73 P
2 F
0.66 (xrdb) 341.51 409.73 P
1 F
0.66 (, a client that can be used to change) 359.84 409.73 P
-0.14 (resource definitions dynamically, and make resources available to clients running on other) 147 397.43 P
(machines.) 147 385.13 T
2.17 (Virtually all X clients are customizable. You can specify how a client looks on the) 147 366.83 P
0.89 (screen\321its size and placement, its border and background color or pattern, whether the) 147 354.53 P
0.1 (window has a scrollbar, and so on. Some applications even allow you to redefine the key-) 147 342.23 P
(strokes or pointer actions used to control the application.) 147 329.93 T
0.33 (Traditional UNIX applications rely on command line options to allow users to customize) 147 311.63 P
0.02 (the way they work. As we\325ve already discussed in Chapter 11,) 147 299.33 P
2 F
0.02 (Command Line Options) 399.15 299.33 P
1 F
0.02 (, X) 494.76 299.33 P
0.51 (applications support command line options too, but often not for all features. Also, there) 147 287.03 P
-0.24 (can be so many customizable features in an application that entering a command line to set) 147 274.73 P
1.52 (them all would be completely impractical. \050Imagine the aggravation of misspelling an) 147 262.43 P
(option in a command that was three lines long!\051) 147 250.13 T
0.3 (X offers an alternative to customizing an application on the command line. Almost every) 147 231.83 P
-0.03 (feature of a program can be controlled by a variable called a) 147 219.53 P
2 F
-0.03 (resource) 389.92 219.53 P
1 F
-0.03 (; you can change the) 424.91 219.53 P
-0.47 (behavior or appearance of a program by changing the) 147 207.23 P
2 F
-0.47 (value) 359.11 207.23 P
1 F
-0.47 ( associated with a resource vari-) 380.77 207.23 P
0.1 (able. \050All of the standard X Toolkit) 147 194.93 P
2 F
0.1 (Command Line Options) 291.58 194.93 P
1 F
0.1 ( described in Chapter 11 have) 387.35 194.93 P
4.21 (corresponding resource variable names. See Table) 147 182.63 P
4.21 (11-) 371.59 182.63 P
4.21 (1 and Table) 384.92 182.63 P
4.21 (11-) 443.04 182.63 P
4.21 (2 for more) 456.37 182.63 P
(information.\051) 147 170.33 T
0.2 (Resource variables may be Boolean \050such as) 147 152.03 P
3 F
0.47 (scrollBar: True) 329.17 152.03 P
1 F
0.2 (\051 or take a numeric or) 419.65 152.03 P
0.48 (string value \050) 147 139.73 P
3 F
1.15 (borderWidth: 2) 200.73 139.73 P
1 F
0.48 ( or) 285.88 139.73 P
3 F
1.15 (foreground: blue) 300.17 139.73 P
1 F
0.48 (\051. What\325s more, in applica-) 397.33 139.73 P
-0.44 (tions written with the X Toolkit \050or an Xt-based toolkit such as the Motif toolkit\051, resources) 147 127.43 P
0.73 (may be associated with separate) 147 115.13 P
2 F
0.73 (objects) 281.46 115.13 P
1 F
0.73 ( \050or \322widgets\323\051 within an application. There is a) 309.79 115.13 P
-0.31 (syntax that allows for separate control over both a) 147 102.83 P
2 F
-0.31 (class) 346.68 102.83 P
1 F
-0.31 ( of objects in the application and an) 366.68 102.83 P
FMENDPAGE
%%EndPage: "297" 1
%%Page: "298" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (298) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 10 Q
7 X
(12) 71.88 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
0.69 (individual) 141 650.33 P
2 F
0.69 (instance) 184.75 650.33 P
1 F
0.69 ( of an object. This is illustrated by these resource specifications for a) 218.08 650.33 P
(hypothetical application called) 141 638.03 T
2 F
(xclient) 266.26 638.03 T
1 F
(:) 292.92 638.03 T
3 8 Q
-0.16 (xclient*Buttons.foreground:) 159 621.07 S
-0.16 (blue) 284.29 621.07 S
-0.16 (xclient*help.foreground:) 159 612.07 S
-0.16 (red) 270.36 612.07 S
1 10 Q
1.05 (The first resource specification makes the foreground color of all buttons in the) 141 595.73 P
2 F
1.05 (xclient) 474.34 595.73 P
1 F
-0.39 (application \050in the class) 141 583.43 P
3 F
-0.94 (Buttons) 236.64 583.43 P
1 F
-0.39 (\051 blue; the second resource specification makes the fore-) 278.64 583.43 P
0.61 (ground color of the) 141 571.13 P
3 F
1.45 (help) 222.85 571.13 P
1 F
0.61 ( button in this application \050an instance of the class) 246.85 571.13 P
3 F
1.45 (Buttons) 455.67 571.13 P
1 F
0.61 (\051) 497.67 571.13 P
(red.) 141 558.83 T
1.39 (The values of resources can be set as application defaults using a number of different) 141 540.53 P
-0.25 (mechanisms, including resource files in your home directory and a program called) 141 528.23 P
2 F
-0.25 (xrdb) 469.87 528.23 P
1 F
-0.25 ( \050X) 488.2 528.23 P
-0.31 (resource database manager\051. As we\325ll see, the) 141 515.93 P
2 F
-0.31 (xrdb) 324.02 515.93 P
1 F
-0.31 ( program stores resources directly in the) 342.35 515.93 P
0.24 (server, making them available to all clients, regardless of the machine the clients are run-) 141 503.63 P
(ning on.) 141 491.33 T
-0.25 (Placing resources in files allows you to set many resources at once, without the restrictions) 141 473.03 P
1.6 (encountered when using command line options. In addition to a primary resource file) 141 460.73 P
0.33 (\050often called) 141 448.43 P
2 F
0.3 -0.25 (.Xdefaults) 194.42 448.43 B
1 F
0.33 ( or) 232.2 448.43 P
2 F
0.3 -0.25 (.Xresources) 246.2 448.43 B
1 F
0.33 (\051 in your home directory, which determines defaults) 290.94 448.43 P
0.08 (for the clients you yourself run, the system administrator can create system-wide resource) 141 436.13 P
0.52 (files to set defaults for all instances of a given application run on this machine. It is also) 141 423.83 P
-0.07 (possible to create resource files to set some resources only for the local machine, some for) 141 411.53 P
(all machines in a network, and some for one or more specific machines.) 141 399.23 T
-0.19 (The various resource files are automatically read in and processed in a certain order within) 141 380.93 P
0.62 (an application by a set of routines called the) 141 368.63 P
2 F
0.62 (resource manager) 325.17 368.63 P
1 F
0.62 (. The syntax for resource) 398.83 368.63 P
0.19 (specifications and the rules of precedence by which the resource manager processes them) 141 356.33 P
0.58 (are intended to give you the maximum flexibility in setting resources with the minimum) 141 344.03 P
-0.08 (amount of text. You can specify a resource that controls only one feature of a single appli-) 141 331.73 P
-0.39 (cation, such as the red) 141 319.43 P
3 F
-0.94 (help) 230.12 319.43 P
1 F
-0.39 ( button in the hypothetical) 254.12 319.43 P
2 F
-0.39 (xclient) 359.66 319.43 P
1 F
-0.39 ( settings above. You can also) 386.32 319.43 P
-0.32 (specify a resource that controls one feature of multiple objects within multiple applications) 141 307.13 P
(with a single line.) 141 294.83 T
0 (It is important to note that command line options normally take precedence over any prior) 141 276.53 P
0.66 (resource settings; so you can set up the files to control the way you) 141 264.23 P
2 F
0.66 (normally) 420.8 264.23 P
1 F
0.66 ( want your) 456.9 264.23 P
0.64 (application to work and then use command line options to specify changes you need for) 141 251.93 P
(only one or two instances of the application.) 141 239.63 T
-0.31 (In this chapter, we\325ll first look at the syntax of resource specifications. Then we\325ll consider) 141 221.33 P
0.26 (some methods of setting resources, primarily some special command line options and the) 141 209.03 P
2 F
-0.05 (xrdb) 141 196.73 P
1 F
-0.05 ( program. Finally, we\325ll take a brief look at other sources of resource definition, addi-) 159.33 196.73 P
(tional files that can be created or edited to set application resources.) 141 184.43 T
0 1 1 0 1 0 0 K
0 20 Q
0 1 1 0 1 0 0 K
(12.1  Resource Naming Syntax) 105 152.17 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
-0.41 (The basic syntax of a resource definition file is fairly simple. Each client recognizes certain) 141 132.83 P
1.06 (resource variables that can be assigned a value. The variables for each client are docu-) 141 120.53 P
(mented on its reference page in Part Three of this guide.) 141 108.23 T
FMENDPAGE
%%EndPage: "298" 2
%%Page: "299" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (CHAPTER 12: SETTING RESOURCES) 328.75 693.79 S
0 9 Q
0.45 (299) 487.34 693.79 S
111 684 507 708 R
0.5 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 10 Q
7 X
(12) 531 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
0.52 (Most of the common clients are written to use the X Toolkit. As described in Chapter 8,) 147 650.33 P
2 F
0.3 (Other Standard Clients) 147 638.03 P
1 F
0.3 (, toolkits are a   mechanism for simplifying the design and coding) 240.94 638.03 P
0.07 (of applications, and making them operate in a consistent way. Toolkits provide a standard) 147 625.73 P
0.15 (set of objects, or widgets, such as menus, command buttons, dialog boxes, scrollbars, and) 147 613.43 P
0.24 (so on. As we\325ll see, the naming syntax for certain resources parallels the object hierarchy) 147 601.13 P
(that is built into X Toolkit programs.) 147 588.83 T
1 8 Q
(\240) 294.51 592.83 T
1 10 Q
-0.09 (In addition, X Toolkit clients recognize a set of Core resource variables, listed in Table G-) 147 570.53 P
0.1 (1. However, though all Toolkit applications recognize these variables, not all applications) 147 558.23 P
2.33 (make use of them. This fine distinction is addressed in Appendix I,) 147 545.93 P
2 F
2.33 (Athena Widget) 445.51 545.93 P
-0.49 (Resources) 147 533.63 P
1 F
-0.49 (, which gives a more technical discussion of how widgets use resources, and how) 188.1 533.63 P
-0.08 (applications use widgets. Appendix G also gives a detailed listing of the resources defined) 147 521.33 P
(by each of the Athena widgets.) 147 509.03 T
-0.09 (The most basic line you can have in a resource definition file consists of the name of a cli-) 147 490.73 P
-0.45 (ent, followed by a period or an asterisk, and the name of a variable. A colon and whitespace) 147 478.43 P
0.27 (separate the client and variable names from the actual value of the resource variable. The) 147 466.13 P
(following line specifies that all instances of the) 147 453.83 T
2 F
(xterm) 338.09 453.83 T
1 F
( application have a scrollbar:) 360.86 453.83 T
3 8 Q
-0.16 (xterm*scrollBar:) 165 436.87 S
-0.16 (True) 243.88 436.87 S
1 10 Q
-0.29 (If the name of the client is omitted, the variable applies to all instances of all clients \050in this) 147 420.53 P
-0.14 (case, all clients that can have a scrollbar\051. If the same variable is specified as a global vari-) 147 408.23 P
-0.48 (able and a client-specific variable, the value of the client-specific variable takes precedence) 147 395.93 P
-0.11 (for that client. Note, however, that if the name of the client is omitted, the line should gen-) 147 383.63 P
(erally begin with an asterisk.) 147 371.33 T
-0.26 (Be sure not to inadvertently omit the colon at the end of a resource specification. This is an) 147 353.03 P
0.16 (easy mistake to make and the resource manager provides no error messages. If there is an) 147 340.73 P
-0.2 (error in a resource specification \050including a syntax error such as the omission of the colon) 147 328.43 P
-0.41 (or a misspelling\051, the specification is ignored. The value you set will simply not take effect.) 147 316.13 P
-0.25 (To include a comment in a resource file or comment out one of the resource specifications,) 147 303.83 P
0.27 (begin the line in question with an exclamation point \050!\051. If the last character on a line is a) 147 291.53 P
(backslash \050\134\051, the resource definition on that line is assumed to continue on the next line.) 147 279.23 T
0 1 1 0 1 0 0 K
0 13.3 Q
0 1 1 0 1 0 0 K
(12.1.1  Syntax of T) 147 258.73 T
(oolkit Client Resources) 241.78 258.73 T
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
0.21 (As mentioned above, X Toolkit applications \050and Xt-based toolkit applications\051 are made) 147 241.63 P
0.11 (up of predefined components called widgets. There can be widgets within widgets \050e.g., a) 147 229.33 P
0.77 (command button within a dialog box\051. The syntax of resource specifications for Toolkit) 147 217.03 P
1.26 (clients parallels the levels of the widget hierarchy. Accordingly, you should think of a) 147 204.73 P
(resource specification as having this format:) 147 192.43 T
4 8 Q
-0.16 (object.subobject) 165 175.47 S
1 F
-0.16 ([.subobject... .attribute :  value) 239.24 175.47 S
1 10 Q
(where:) 147 159.13 T
0 1 1 0 1 0 0 K
111 123 507 140.98 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
111 123 507 140.98 R
7 X
0 1 1 0 1 0 0 K
V
112.07 128.96 292.07 128.96 2 L
V
0.5 H
2 Z
0 X
N
45 63 567 729 C
0 0 0 1 0 0 0 K
1 8 Q
0 X
0 0 0 1 0 0 0 K
0.02 (\240) 147 117.67 P
0.02 (If a client was built with the X Toolkit, this should be noted on the reference page. In addition to certain appli-) 153 117.67 P
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0.27 (cation-specific resource variables, most clients that use the X Toolkit recognize a common set of resource vari-) 147 107.67 P
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
(ables, listed in Table) 147 97.67 T
(12-) 215.22 97.67 T
(1.) 225.88 97.67 T
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "299" 3
%%Page: "300" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (300) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 10 Q
7 X
(12) 71.88 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
4 10 Q
0 X
0 0 0 1 0 0 0 K
(object) 141 650.33 T
1 F
0.62 0.1 ( is the client program or a specific instance of the program. \050See \322The \320name) 177 650.33 B
(Option\323 later in this chapter.\051) 177 638.83 T
4 F
(subobject) 141 621.33 T
1 F
(s) 195 621.33 T
0.62 0 ( correspond to levels of the widget hierarchy \050usually the major structures) 198.89 621.33 B
(within an application, such as windows, menus, scrollbars, etc.\051.) 177 609.83 T
4 F
(attribute) 141 592.33 T
1 F
0.62 0.02 ( is a feature of the last) 195 592.33 B
4 F
1.5 0.02 (subobject) 290.82 592.33 B
1 F
0.62 0.02 ( \050perhaps a command button\051, such as) 345.04 592.33 B
(background color or a label that appears on it.) 177 580.83 T
4 F
(value) 141 563.33 T
1 F
0.62 0.06 ( is the actual setting of the resource) 177 563.33 B
4 F
1.5 0.06 (attribute) 328.12 563.33 B
1 F
0.62 0.06 (, i.e., the label text, color, or) 382.64 563.33 B
(other feature.) 177 551.83 T
0.44 (The type of) 141 534.33 P
4 F
1.07 (value) 190.93 534.33 P
1 F
0.44 ( to supply is often evident from the name of the resource or from the) 220.93 534.33 P
-0.13 (description of the resource variable on the reference page. Most of these values are similar) 141 522.03 P
(to those used with the command line options described in Chapter 9.) 141 509.73 T
1.43 (For example, various resources, such as) 141 491.43 P
3 F
3.44 (borderColor) 311.23 491.43 P
1 F
1.43 ( or) 377.23 491.43 P
3 F
3.44 (background) 393.42 491.43 P
1 F
1.43 (, take color) 453.42 491.43 P
0.66 (specifications;) 141 479.13 P
3 F
1.59 (geometry) 201.93 479.13 P
1 F
0.66 ( takes a geometry string,) 249.93 479.13 P
3 F
1.59 (font) 353.78 479.13 P
1 F
0.66 ( takes a font name, and so on.) 377.78 479.13 P
-0.42 (Logical values, such as the values taken by) 141 466.83 P
3 F
-1.02 (scrollBar) 312.3 466.83 P
1 F
-0.42 (, can generally be specified as:) 366.3 466.83 P
3 F
-1.02 (on) 489 466.83 P
1 F
(or) 141 454.53 T
3 F
(off) 151.83 454.53 T
1 F
(;) 169.83 454.53 T
3 F
(yes) 175.11 454.53 T
1 F
( or) 193.11 454.53 T
3 F
(no) 206.44 454.53 T
1 F
(; or) 218.44 454.53 T
3 F
(True) 234.55 454.53 T
1 F
( or) 258.55 454.53 T
3 F
(False) 271.88 454.53 T
1 F
(.) 301.88 454.53 T
0 1 1 0 1 0 0 K
0 13.3 Q
0 1 1 0 1 0 0 K
(12.1.2  T) 141 434.03 T
(ight Bindings and Loose Bindings) 183.97 434.03 T
0 0 0 1 0 0 0 K
2 10 Q
0 0 0 1 0 0 0 K
1.61 (Binding) 141 416.93 P
1 F
1.61 ( refers to the way in which components of a resource specification are linked) 172.67 416.93 P
(together. Resource components can be linked in two ways:) 141 404.63 T
5 3.2 Q
(n) 141 387.93 T
1 10 Q
(By a) 150 386.33 T
2 F
(tight) 171.11 386.33 T
1 F
( binding, represented by a dot \050.\051.) 189.45 386.33 T
5 3.2 Q
(n) 141 369.63 T
1 10 Q
(By a) 150 368.03 T
2 F
(loose) 171.11 368.03 T
1 F
( binding, represented by an asterisk \050*\051.) 192.22 368.03 T
0.57 (A tight binding means that the components on either side of the dot must be next to one) 141 349.73 P
-0.42 (another in the widget hierarchy. A loose binding is signaled by an asterisk, a wildcard char-) 141 337.43 P
0.99 (acter which means there can be any number of levels in the hierarchy between the two) 141 325.13 P
(surrounding components.) 141 312.83 T
-0.11 (If you want to specify tight bindings, you must be very familiar with the widget hierarchy:) 141 294.53 P
(it\325s easy to use tight bindings incorrectly.) 141 282.23 T
0.52 (For example, this resource specification to request that) 141 263.93 P
2 F
0.52 (xterm) 366.5 263.93 P
1 F
0.52 ( windows be created with a) 389.27 263.93 P
(scrollbar doesn\325t work:) 141 251.63 T
3 8 Q
-0.16 (xterm.scrollBar:) 159 234.67 S
-0.16 (True) 233.24 234.67 S
1 10 Q
-0.38 (The previous specification ignores the widget hierarchy of) 141 218.33 P
2 F
-0.38 (xterm) 374.03 218.33 P
1 F
-0.38 (, in which the VT102 win-) 396.8 218.33 P
-0.07 (dow is considered to be one widget, the Tektronix window another, and the menus a third.) 141 206.03 P
-0.1 (This means that if you want to use tight bindings to request that) 141 193.73 P
2 F
-0.1 (xterm) 396.61 193.73 P
1 F
-0.1 ( windows be created) 419.39 193.73 P
(with a scrollbar, you should specify:) 141 181.43 T
3 8 Q
-0.16 (xterm.vt100.scrollBar:) 159 164.47 S
-0.16 (True) 261.08 164.47 S
1 10 Q
0.24 (Of course rather than decipher the widget hierarchy \050which may even change with subse-) 141 148.13 P
0.33 (quent versions of an application\051, it is far simpler just to use the asterisk connector in the) 141 135.83 P
(first place:) 141 123.53 T
3 8 Q
-0.16 (xterm*scrollBar:) 159 106.57 S
-0.16 (True) 233.24 106.57 S
FMENDPAGE
%%EndPage: "300" 4
%%Page: "301" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (CHAPTER 12: SETTING RESOURCES) 328.75 693.79 S
0 9 Q
0.45 (301) 487.34 693.79 S
111 684 507 708 R
0.5 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 10 Q
7 X
(12) 531 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
0.22 (In an application that supports multiple levels of widgets, you can mix asterisks and peri-) 147 650.33 P
0.52 (ods. In general, though, the developers of X recommend always using the asterisk rather) 147 638.03 P
0.81 (than the dot as the connector even with simple applications, since this gives application) 147 625.73 P
0.17 (developers the freedom to insert new levels in the hierarchy as they produce new releases) 147 613.43 P
(of an application.) 147 601.13 T
0 1 1 0 1 0 0 K
0 13.3 Q
0 1 1 0 1 0 0 K
(12.1.3  Instances and Classes) 147 580.63 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
-0.11 (Each component of a resource specification has an associated) 147 563.53 P
2 F
-0.11 (class) 394.57 563.53 P
1 F
-0.11 (. Several different wid-) 414.57 563.53 P
0.13 (gets, or widget attributes, may have the same class. For example, in the case of) 147 551.23 P
2 F
0.13 (xterm) 466.88 551.23 P
1 F
0.13 (, the) 489.65 551.23 P
-0.12 (color of text \050) 147 538.93 P
3 F
-0.3 (foreground) 201.34 538.93 P
1 F
-0.12 (\051, the pointer color, and the text cursor color are all defined as) 261.34 538.93 P
2 F
0.67 (instances) 147 526.63 P
1 F
0.67 ( of the class) 184.22 526.63 P
3 F
1.61 (Foreground) 236.88 526.63 P
1 F
0.67 (. This makes it possible to set the value of all three) 296.89 526.63 P
-0.48 (with a single resource specification. That is, if you wanted to make the text, the pointer, and) 147 514.33 P
(the cursor dark blue, you could specify either:) 147 502.03 T
3 8 Q
-0.16 (xterm*foreground:) 165 485.07 S
-0.16 (darkblue) 243.88 485.07 S
-0.16 (xterm*cursorColor:) 165 476.07 S
-0.16 (darkblue) 248.52 476.07 S
-0.16 (xterm*pointerColor:) 165 467.07 S
-0.16 (darkblue) 253.16 467.07 S
1 10 Q
(or:) 147 450.73 T
3 8 Q
-0.16 (xterm*Foreground:) 165 433.77 S
-0.16 (darkblue) 243.88 433.77 S
1 10 Q
0.54 (Initial capitalization is used to distinguish class names from instance names. By conven-) 147 417.43 P
-0.49 (tion, class names always begin with an uppercase letter, while instance names always begin) 147 405.13 P
-0.14 (with a lowercase letter. Note, however, that if an instance name is a compound word \050such) 147 392.83 P
(as) 147 380.53 T
3 F
(cursorColor) 157.83 380.53 T
1 F
(\051, the second word is usually capitalized.) 223.83 380.53 T
0.17 (The real power of class and instance naming is not apparent in applications such as) 147 362.23 P
2 F
0.17 (xterm) 484.23 362.23 P
1 F
-0.14 (that have a simple widget hierarchy. In complex applications written with the X Toolkit or) 147 349.93 P
0.34 (the Motif Toolkit, class and instance naming allows you to do such things as specify that) 147 337.63 P
0.15 (all buttons in dialog box be blue but that one particular button be red. For example, in the) 147 325.33 P
(hypothetical) 147 313.03 T
2 F
(xclient) 198.94 313.03 T
1 F
( application, you might have a resource file that reads:) 225.6 313.03 T
3 8 Q
-0.16 (xclient*buttonbox*Buttons*foreground:) 165 296.07 S
-0.16 (blue) 336.69 296.07 S
-0.16 (xclient*buttonbox*delete*foreground:) 165 287.07 S
-0.16 (red) 332.05 287.07 S
1 10 Q
0.28 (where) 147 270.73 P
3 F
0.67 (Buttons) 174.21 270.73 P
1 F
0.28 ( is a class name and the) 216.21 270.73 P
3 F
0.67 (delete) 314.55 270.73 P
1 F
0.28 ( button is an instance of the) 350.55 270.73 P
3 F
0.67 (Buttons) 465 270.73 P
1 F
-0.16 (class. This type of specification works because an instance name always overrides the cor-) 147 258.43 P
1.8 (responding class name for that instance. Class names thus allow default values to be) 147 246.13 P
0.06 (specified for all instances of a given type of object. Instance names can be used to specify) 147 233.83 P
-0.39 (exceptions to the rules outlined by the class names. Note that a class name can be used with) 147 221.53 P
0.2 (a loose binding to specify a resource for all clients. For example, this specification would) 147 209.23 P
(say that the foreground colors for all clients should be blue:) 147 196.93 T
3 8 Q
-0.16 (*Foreground:) 165 179.97 S
-0.16 (blue) 220.68 179.97 S
1 10 Q
0.72 (The reference page for a given program should always give you both instance and class) 147 163.63 P
0.41 (names for every resource variable you can set. You\325ll notice that in many cases the class) 147 151.33 P
-0.16 (name is identical to the instance name, with the exception of the initial capital letter. Often) 147 139.03 P
0.05 (\050but not always\051 this means that there is only one instance of that class. In other cases, the) 147 126.73 P
(instance with the same name is simply the primary or most obvious instance of the class.) 147 114.43 T
FMENDPAGE
%%EndPage: "301" 5
%%Page: "302" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (302) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 10 Q
7 X
(12) 71.88 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 13.3 Q
0 X
0 1 1 0 1 0 0 K
(12.1.4  Precedence Rules for Resource Speci\336cation) 141 648.13 T
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
0.4 (Even within a single resource file, such as) 141 631.03 P
2 F
0.36 -0.25 (.Xresources) 314.99 631.03 B
1 F
0.4 (, resource specifications often con-) 359.73 631.03 P
1.55 (flict. For instance, recall the example from the first page of the chapter involving the) 141 618.73 P
(hypothetical) 141 606.43 T
2 F
(xclient) 192.94 606.43 T
1 F
( application:) 219.6 606.43 T
3 8 Q
-0.16 (xclient*Buttons.foreground:) 159 589.47 S
-0.16 (blue) 284.29 589.47 S
-0.16 (xclient*help.foreground:) 159 580.47 S
-0.16 (red) 270.36 580.47 S
1 10 Q
1.35 (The first resource specification makes the foreground color of all buttons \050in the class) 141 564.13 P
3 F
1.56 (Buttons) 141 551.83 P
1 F
0.65 (\051 blue. The second resource specification overrides the first in one instance: it) 183 551.83 P
-0.32 (makes the foreground color of the) 141 539.53 P
3 F
-0.77 (help) 277.37 539.53 P
1 F
-0.32 ( button \050an instance of the class) 301.37 539.53 P
3 F
-0.77 (Buttons) 427.71 539.53 P
1 F
-0.32 (\051 red. In) 469.71 539.53 P
0.38 (the event of conflicting specifications, there are a number of rules that the resource man-) 141 527.23 P
(ager follows in deciding which resource specification should take effect.) 141 514.93 T
-0.03 (We\325ve already seen two of these rules, which are observable in the way the resource man-) 141 496.63 P
1.54 (ager interprets definitions in a user-created resource file. \050The first rule applies in the) 141 484.33 P
(previous) 141 472.03 T
2 F
(xclient) 177.94 472.03 T
1 F
( example.\051) 204.6 472.03 T
5 3.2 Q
(n) 141 455.33 T
1 10 Q
(Instance names take precedence over class names.) 150 453.73 T
5 3.2 Q
(n) 141 437.03 T
1 10 Q
(Tight bindings take precedence over loose bindings.) 150 435.43 T
0.04 (From just these two rules, we can deduce a general principle: the more specific a resource) 141 417.13 P
(definition is, the more likely it is to be honored in the case of a conflict.) 141 404.83 T
0.25 (However, for cases in which you want to set things up very carefully, you should know a) 141 386.53 P
(bit more about how programs interpret resource specifications.) 141 374.23 T
-0.25 (For each resource, the program has both a complete, fully specified, tightly bound instance) 141 355.93 P
0.44 (name and class name. In evaluating ambiguous specifications, the program compares the) 141 343.63 P
-0.18 (specification against both the full instance name and the full class name. If a component in) 141 331.33 P
0.09 (the resource specification matches either name, it is accepted. If it matches more than one) 141 319.03 P
(element in either name, it is evaluated according to these precedence rules:) 141 306.73 T
(1.) 141 288.43 T
-0.46 ( The levels in the hierarchy specified by the user must match the program\325s expec-) 177 288.43 P
(tations or the entry will be ignored. For example, if the program expects either:) 177 276.93 T
(xterm.vt100.scrollBar:) 177 265.43 T
4 F
(value) 267.55 265.43 T
(instance name) 297.55 265.43 T
3 F
(or:) 381.55 265.43 T
1 F
(XTerm.VT100.ScrollBar:) 177 253.93 T
6 F
(value) 280.32 253.93 T
(class name) 302.54 253.93 T
1 F
(then the resource specification:) 177 236.43 T
3 F
-0.25 (xterm.scrollBar: True) 177 224.93 S
1 F
0.62 0.24 (won\325t work, because the tight binding is incorrect. The objects) 177 213.43 B
3 F
1.5 0.24 (xterm) 451.5 213.43 B
1 F
0.62 0.24 ( and) 482.71 213.43 B
3 F
1.5 0.04 (scrollBar) 177 201.93 B
1 F
0.62 0.04 ( are not adjacent in the widget hierarchy: there is another widget,) 231.38 201.93 B
3 F
-0.91 (vt100) 177 190.43 P
1 F
-0.38 (, between them. The specification would work if you used a loose binding,) 207 190.43 P
(however:) 177 178.93 T
3 F
(xterm*scrollBar: True) 177 167.43 T
0.53 (\050Note that the class name of) 177 155.93 P
7 F
0.53 (xterm) 354.17 155.93 P
3 F
0.53 ( is XTerm) 384.17 155.93 P
1 F
0.22 (, not) 439.23 155.93 P
3 F
0.53 (Xterm) 459.95 155.93 P
1 F
0.22 ( as) 489.95 155.93 P
(you might expect.\051) 177 144.43 T
(2.) 141 126.93 T
-0.16 (Tight bindings take precedence over loose bindings. That is, entries with instance) 177 126.93 P
0.62 0.25 (or class names prefixed by a dot are more specific than entries with names) 177 115.43 B
0.32 (prefixed by an asterisk, and more specific entries take precedence. For example,) 177 103.93 P
FMENDPAGE
%%EndPage: "302" 6
%%Page: "303" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (CHAPTER 12: SETTING RESOURCES) 328.75 693.79 S
0 9 Q
0.45 (303) 487.34 693.79 S
111 684 507 708 R
0.5 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 10 Q
7 X
(12) 531 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
0.62 0.28 (the entry) 183 650.33 B
3 F
1.5 0.28 (xterm.vt100.geometry) 224.87 650.33 B
1 F
0.62 0.28 ( will take precedence over the entry) 350.56 650.33 B
3 F
(xterm*geometry) 183 638.83 T
1 F
(.) 267 638.83 T
(3.) 147 621.33 T
0.62 0.32 ( Similarly, instances take precedence over classes. For example, the entry) 183 621.33 B
3 F
(*scrollBar) 183 609.83 T
1 F
( will take precedence over the entry) 243 609.83 T
3 F
(*Scrollbar) 388.23 609.83 T
1 F
(.) 448.23 609.83 T
(4.) 147 592.33 T
-0.07 ( An instance or class name that is explicitly stated takes precedence over one that) 183 592.33 P
-0.37 (is omitted. For example, the entry) 183 580.83 P
3 F
-0.88 (xterm*scrollbar) 318.57 580.83 P
1 F
-0.37 ( is more specific than the) 408.57 580.83 P
(entry) 183 569.33 T
3 F
(*scrollBar) 206.05 569.33 T
1 F
(.) 266.05 569.33 T
(5.) 147 551.83 T
0.62 0.09 ( Left components carry more weight than right components. For example, the) 183 551.83 B
(entry) 183 540.33 T
3 F
(xterm*background) 206.05 540.33 T
1 F
( will take precedence over) 302.05 540.33 T
3 F
(*background) 409.51 540.33 T
1 F
(.) 475.51 540.33 T
0.05 ( To illustrate these rules, let\325s consider the following resource specifications for the hypo-) 147 522.83 P
(thetical Toolkit application) 147 510.53 T
2 F
(xclient) 257.83 510.53 T
1 F
(, shown in Example) 284.49 510.53 T
(12-) 366.43 510.53 T
(1.) 379.76 510.53 T
3 8 Q
-0.16 (xclient.toc*Command.activeForeground: black) 165 493.57 S
-0.16 (*Command.Foreground: green) 165 484.57 S
8 9 Q
(Example) 147 468.9 T
(12-) 186.52 468.9 T
(1. Sample resources) 199.52 468.9 T
1 10 Q
0 (The program would try to match these specifications against these complete tightly bound) 147 451.23 P
(instance and class specifications:) 147 438.93 T
3 8 Q
-0.16 (xclient.toc.messageFunctions.include.activeForeground) 165 421.97 S
7 F
-0.16 (instance name) 410.93 421.97 S
3 F
-0.16 (Xclient.Box.SubBox.Command.Foreground) 165 412.97 S
7 F
-0.16 (class name) 336.69 412.97 S
1 10 Q
-0.17 (Note that these specifications are the instance and class names for the same resource. Each) 147 396.63 P
0.58 (component of the instance name belongs to the class in the corresponding component of) 147 384.33 P
1.23 (the class name. Thus, the instance) 147 372.03 P
3 F
2.94 (toc) 292.66 372.03 P
1 F
1.23 ( occurs in the class) 310.66 372.03 P
3 F
2.94 (Box) 394.83 372.03 P
1 F
1.23 (, the) 412.83 372.03 P
3 F
2.94 (messageFunc-) 435 372.03 P
(tions) 147 359.73 T
1 F
( instance name is from the class) 177 359.73 T
3 F
(SubBox) 306.7 359.73 T
1 F
(, etc.) 342.7 359.73 T
-0.22 (Both resource specifications in Example) 147 341.43 P
-0.22 (12-) 310.26 341.43 P
-0.22 (1 match these instance and class names. How-) 323.59 341.43 P
(ever, with its tight bindings and instance names,) 147 329.13 T
3 F
(xclient.toc*Command.active%Foreground) 147 316.83 T
1 F
0.93 ( matches more explicitly \050i.e., with higher precedence\051. The resource is set: the) 147 304.53 P
3 F
2.22 (fore-) 477 304.53 P
(ground) 147 292.23 T
1 F
( color of the) 183 292.23 T
3 F
(include) 234.1 292.23 T
1 F
( button in its) 276.1 292.23 T
3 F
(active) 328.89 292.23 T
1 F
( state is set to) 364.89 292.23 T
3 F
(black) 421.28 292.23 T
1 F
(.) 451.28 292.23 T
0.39 (The specification) 147 273.93 P
3 F
0.95 (*Command.Foreground) 219.44 273.93 P
1 F
0.39 ( also matches the instance and class names) 333.44 273.93 P
0 (but is composed entirely of class names which are less specific; thus, it takes lower prece-) 147 261.63 P
(dence than the first line in Example) 147 249.33 T
(12-) 291.7 249.33 T
(1 \050which sets the) 305.03 249.33 T
3 F
(include) 375.02 249.33 T
1 F
( button to) 417.02 249.33 T
3 F
(black) 457.86 249.33 T
1 F
(\051.) 487.86 249.33 T
0.38 (However, since the second line is an acceptable specification, hypothetically it would set) 147 231.03 P
-0.31 (the foreground color of other objects in the) 147 218.73 P
3 F
-0.75 (Command) 318.9 218.73 P
1 F
-0.31 ( class. This resource would be set for) 360.9 218.73 P
2 F
-0.33 (xclient) 147 206.43 P
1 F
-0.33 (, as well as any other application, since the line begins with the asterisk wildcard. So) 173.66 206.43 P
0.9 (if there were other) 147 194.13 P
2 F
0.9 (xclient) 226.67 194.13 P
1 F
0.9 ( command buttons comparable to the) 253.33 194.13 P
3 F
2.15 (include) 409.25 194.13 P
1 F
0.9 ( button in the) 451.25 194.13 P
0.64 (hierarchy, this second line would set the foreground color of these buttons to) 147 181.83 P
3 F
1.53 (green) 464.7 181.83 P
1 F
0.64 (. If) 494.7 181.83 P
-0.16 (you want a more detailed description of how resource precedence works, see Section 9.2.3) 147 169.53 P
(of Volume Four,) 147 157.23 T
2 F
(X Toolkit Intrinsics Programming Manual) 216.44 157.23 T
1 F
(.) 385.89 157.23 T
0 1 1 0 1 0 0 K
0 13.3 Q
0 1 1 0 1 0 0 K
(12.1.5  Some Common Resources) 147 136.73 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
0.47 (Each Toolkit command line option \050listed in Table) 147 119.63 P
0.47 (11-) 355.3 119.63 P
0.47 (1, \322. MIT Toolkit and OLIT Stan-) 368.63 119.63 P
0.45 (dard Options,\323 on page) 147 107.33 P
0.45 (283\051 has a corresponding resource variable. Most X Toolkit \050and) 243.6 107.33 P
(OLIT Toolkit\051 applications recognize some subset of these resources.) 147 95.03 T
FMENDPAGE
%%EndPage: "303" 7
%%Page: "304" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (304) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 10 Q
7 X
(12) 71.88 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
(Table) 141 650.33 T
(12-) 166.27 650.33 T
(1 lists the resource variables recognized by most Toolkit clients.) 179.6 650.33 T
-0.34 (Note that in a complex Toolkit application these values can occur at every level in a widget) 141 460.43 P
0 (hierarchy. For example, our hypothetical) 141 448.13 P
2 F
0 (xclient) 306.83 448.13 P
1 F
0 ( application might support these complete) 333.48 448.13 P
(instance names:) 141 435.83 T
3 8 Q
-0.16 (xclient.background xclient.buttonBox.background) 159 418.87 S
-0.16 (xclient.buttonBox.commandButton.background) 159 409.87 S
-0.16 (xclient.buttonBox.quit.background) 159 400.87 S
1 10 Q
0.26 (These resources would specify the background color for the application window, the but-) 141 384.53 P
(tonbox area, any command buttons, and the quit command button, respectively.) 141 372.23 T
(Of course, the specification:) 141 353.93 T
3 8 Q
-0.16 (xclient*background) 159 336.97 S
1 10 Q
(would match any and all of them.) 141 320.63 T
(Appendices list resources for the OLIT and Athena widgets.) 141 302.33 T
0 1 1 0 1 0 0 K
0 20 Q
0 1 1 0 1 0 0 K
(12.2  Event T) 105 270.07 T
(ranslations) 205.16 270.07 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
-0.31 ( We\325ve discussed the basics of resource naming syntax. From the sample resource settings,) 141 250.73 P
-0.4 (it appears that what many resource variables do is self-evident or nearly so. Among the less) 141 238.43 P
-0.12 (obvious resource variables, there is one type of specification, an event translation, that can) 141 226.13 P
(be used with many clients and warrants somewhat closer examination.) 141 213.83 T
0.8 (User input and several other types of information pass from the server to a client in the) 141 195.53 P
0.12 (form of) 141 183.23 P
2 F
0.12 (events) 174.02 183.23 P
1 F
0.12 (. An event is a packet of information that tells the client something it needs) 199.01 183.23 P
0.56 (to act on, such as keyboard input. As mentioned in Chapter 1,) 141 170.93 P
2 F
0.56 (An Introduction to OPEN) 396.83 170.93 P
0.13 (LOOK and the X Window System) 141 158.63 P
1 F
0.13 (, moving the pointer or pressing a key, etc., causes) 274.71 158.63 P
2 F
0.13 (input) 480.44 158.63 P
1 F
0.2 (events to occur. When a program receives a meaningful event, it responds with some sort) 141 146.33 P
(of action.) 141 134.03 T
-0.09 (For many clients, the resource manager recognizes mappings between certain input events) 141 115.73 P
1.08 (\050such as a pointer button click\051 and some sort of action by the client program \050such as) 141 103.43 P
8 9 Q
(Table) 191.4 629 T
(12-) 217.41 629 T
(1.) 230.41 629 T
1 10 Q
(Common Toolkit Resources) 240.42 629 T
8 9 Q
(Instance) 161.4 606 T
(Name) 161.4 595 T
(Class Name) 233.4 600.5 T
(Default) 312.6 600.5 T
(Description _) 384.6 600.5 T
1 10 Q
-0.25 (background) 161.4 573.33 S
3 F
-0.25 (Background) 233.4 573.33 S
1 F
-0.25 (White) 312.6 573.33 S
-0.25 (Background) 384.6 573.33 S
-0.25 (color.) 384.6 561.03 S
-0.25 (foreground) 161.4 541.03 S
3 F
-0.25 (Foreground) 233.4 541.03 S
1 F
-0.25 (Black) 312.6 541.03 S
-0.25 (Foreground) 384.6 541.03 S
-0.25 (color.) 384.6 528.73 S
-0.25 (borderColor) 161.4 508.73 S
3 F
-0.25 (BorderColor) 233.4 508.73 S
1 F
-0.25 (Black) 312.6 508.73 S
-0.25 (Border color.) 384.6 508.73 S
-0.25 (borderWidth) 161.4 488.73 S
3 F
-0.25 (BorderWidth) 233.4 488.73 S
1 F
-0.25 (1 pixel) 312.6 488.73 S
-0.25 (Border width.) 384.6 488.73 S
227.4 621 227.4 481.15 2 L
V
0.5 H
0 Z
N
306.6 621 306.6 481.15 2 L
V
N
378.6 621 378.6 481.15 2 L
V
N
155.4 620 450.6 620 2 L
V
2 H
N
155.4 586 450.6 586 2 L
V
N
155.4 553.7 450.6 553.7 2 L
V
0.5 H
N
155.4 521.4 450.6 521.4 2 L
V
N
155.4 501.4 450.6 501.4 2 L
V
N
155.4 481.4 450.6 481.4 2 L
V
N
FMENDPAGE
%%EndPage: "304" 8
%%Page: "305" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (CHAPTER 12: SETTING RESOURCES) 328.75 693.79 S
0 9 Q
0.45 (305) 487.34 693.79 S
111 684 507 708 R
0.5 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 10 Q
7 X
(12) 531 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
0.45 (selecting text\051. A mapping between one or more events and an action is called a) 147 650.33 P
2 F
0.45 (transla-) 475.33 650.33 P
(tion) 147 638.03 T
1 F
(. A resource containing a list of translations is called a) 162.56 638.03 T
2 F
(translation table) 381.97 638.03 T
1 F
(.) 448.37 638.03 T
-0.12 (Many event translations are programmed into an application and are invisible to the user.*) 147 619.73 P
1.35 (For our purposes we are only concerned with very visible translations of certain input) 147 607.43 P
2.17 (events, primarily the translation of keystrokes and pointer button clicks to particular) 147 595.13 P
(actions by a client program.) 147 582.83 T
1 8 Q
(\240) 258.37 586.83 T
0 1 1 0 1 0 0 K
0 13.3 Q
0 1 1 0 1 0 0 K
(12.2.1  The Syntax of Event T) 147 562.33 T
(ranslations) 297.25 562.33 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
0.37 (The operation of many clients, notably) 147 545.23 P
2 F
0.37 (xterm) 306.68 545.23 P
1 F
0.37 (, is partly determined by default input event) 329.45 545.23 P
-0.3 (translations. For example, as explained in Appendix A,) 147 532.93 P
2 F
-0.3 (The xterm/olterm Terminal Emula-) 367.63 532.93 P
0.45 (tor) 147 520.63 P
1 F
0.45 (, selecting text with the first pointer button \050an event\051 saves that text into memory \050an) 158.67 520.63 P
(action\051.) 147 508.33 T
(In this case, the input \322event\323 is actually three separate X events:) 147 490.03 T
1 10.5 Q
-0.05 (1.) 147 471.4 S
-0.05 (Pressing the first pointer button.) 165 471.4 S
-0.05 (2.) 147 452.1 S
-0.05 (Moving the pointer while holding down the first button.) 165 452.1 S
-0.05 (3.) 147 432.8 S
-0.05 (Releasing the button.) 165 432.8 S
1 10 Q
(Each of these input events performs a part of the action of selecting text:) 147 413.83 T
1 10.5 Q
-0.05 (1.) 147 395.2 S
-0.05 (Unselects any previously selected text and begins selecting new text.) 165 395.2 S
-0.05 (2.) 147 375.9 S
-0.05 (Extends the selection.) 165 375.9 S
-0.05 (3.) 147 356.6 S
0.38 -0.05 (Ends the selection, saving the text into memory \050both as the PRIMARY selection) 165 356.6 B
-0.05 (and CUT_BUFFER0\051.) 165 343.3 S
1 10 Q
(The event and action mappings would be expressed in a translation table as:) 147 324.33 T
3 8 Q
-0.16 (<Btn1Down>: select-start\050\051\134n\134) 165 307.37 S
-0.16 (<Btn1Motion>: select-extend\050\051\134n\134) 165 298.37 S
-0.16 (<Btn1Up>: select-end\050PRIMARY,CUT_BUFFER0\051) 165 289.37 S
1 10 Q
0.43 (where each event is enclosed in angle brackets \050<>\051 and produces the action that follows) 147 273.03 P
(the colon \050:\051. A space or tab generally precedes the action, though this is not mandatory:) 147 260.73 T
3 8 Q
-0.16 (<event>: action) 165 243.77 S
1 10 Q
-0.43 (A translation table must be a continuous string. In order to link multiple mappings as a con-) 147 227.43 P
1.16 (tinuous string, each event-action line should be terminated by a newline character \050\134n\051,) 147 215.13 P
(which is in turn followed by a backslash \050\134\051 to escape the actual newline.) 147 202.83 T
(These are default translations for) 147 184.53 T
2 F
(xterm) 281.13 184.53 T
1 F
(.) 303.9 184.53 T
1 8 Q
(\340) 306.4 188.53 T
0 1 1 0 1 0 0 K
111 136 507 153.98 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
111 136 507 153.98 R
7 X
0 1 1 0 1 0 0 K
V
112.07 141.96 292.07 141.96 2 L
V
0.5 H
2 Z
0 X
N
45 63 567 729 C
0 0 0 1 0 0 0 K
1 8 Q
0 X
0 0 0 1 0 0 0 K
-0.06 (\240) 147 130.67 P
-0.06 (For more information on events and translations, see Volume Four,) 153 130.67 P
2 F
-0.06 (X Toolkit Intrinsics Programming Manual) 369.69 130.67 P
1 F
-0.06 (.) 505 130.67 P
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
-0.37 (\340) 147 117.67 P
-0.37 (They are actually slightly simplified versions of default translations. Before you can understand the actual trans-) 153 117.67 P
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0.48 (lations listed on the) 147 107.67 P
2 F
0.48 (xterm) 213.37 107.67 P
1 F
0.48 ( reference page in Part Three of this guide, you must learn more about the syntax of) 231.59 107.67 P
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
(translations. In addition to the current chapter, read Appendix F,) 147 97.67 T
2 F
(X Toolkit Translation Table Syntax) 354.74 97.67 T
1 F
(.) 467.2 97.67 T
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "305" 9
%%Page: "306" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (306) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 10 Q
7 X
(12) 71.88 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
-0.08 (All of the events are simple, comprised of a single button motion. As we\325ll see, events can) 141 650.33 P
0.3 (also have modifiers: i.e., additional button motions or keystrokes \050often Control or Meta\051) 141 638.03 P
-0.33 (that must be performed with the primary event to produce the action. \050Events can also have) 141 625.73 P
(modifiers that) 141 613.43 T
2 F
(must not) 199.33 613.43 T
1 F
( accompany the primary event if the action is to take place.\051) 233.5 613.43 T
-0.05 (As you can see, the default actions listed in the table are hardly intuitive. The event-action) 141 595.13 P
-0.27 (mappings that can be modified using translation resources are usually described on the ref-) 141 582.83 P
(erence page for the particular client.) 141 570.53 T
-0.06 ( You can specify non-default translations using a translation table \050a resource containing a) 141 552.23 P
-0.16 (list of translations\051. Since actions are part of the client application and cannot be modified,) 141 539.93 P
-0.17 (what you are actually doing is specifying alternative events to perform an action.* Keep in) 141 527.63 P
0.24 (mind that only applications written with the X Toolkit \050or an Xt-based toolkit such as the) 141 515.33 P
(Motif Toolkit\051 recognize translation table syntax.) 141 503.03 T
(The basic syntax for specifying a translation table as a resource is:) 141 484.73 T
3 8 Q
-0.16 ([) 159 467.77 S
4 10 Q
-0.2 (object) 163.64 467.77 S
3 F
-0.2 (*[) 198.44 467.77 S
4 F
-0.2 (subobject) 210.04 467.77 S
3 F
-0.2 (...]]*translations: #override\134) 262.24 467.77 S
-0.2 ([) 213 458.77 S
4 F
-0.2 (modifier) 218.8 458.77 S
3 F
-0.2 (<) 265.2 458.77 S
4 F
-0.2 (event) 271 458.77 S
3 F
-0.2 (>:) 300 458.77 S
4 F
-0.2 (action) 317.4 458.77 S
1 F
-0.15 (The first line is basically like any other resource specification with a few exceptions. First,) 141 442.43 P
1.41 (the final) 141 430.13 P
4 F
3.4 (argument) 179.38 430.13 P
1 F
1.41 ( is always) 227.38 430.13 P
3 F
3.4 (translations) 273.57 430.13 P
1 F
1.41 (, indicating that one \050or more\051 of the) 345.57 430.13 P
2.54 (event-action bindings associated with the [) 141 417.83 P
4 F
6.09 (object) 324.5 417.83 P
3 F
6.09 (*[) 360.5 417.83 P
4 F
6.09 (subobject) 372.5 417.83 P
3 F
6.09 (...]]) 426.5 417.83 P
1 F
2.54 ( are being) 456.5 417.83 P
(modified.) 141 405.53 T
1 8 Q
(\240) 179.61 409.53 T
1 10 Q
-0 (Second, note that) 141 387.23 P
3 F
-0.01 (#override) 212.64 387.23 P
1 F
-0 ( is not the) 266.64 387.23 P
4 F
-0.01 (value) 308.29 387.23 P
1 F
-0 ( of the resource; it is literal and indicates) 338.29 387.23 P
0.87 (that what follows should override any default translations. In effect,) 141 374.93 P
3 F
2.1 (#override) 423.58 374.93 P
1 F
0.87 ( is no) 477.58 374.93 P
-0.27 (more than a pointer to the true) 141 362.63 P
4 F
-0.66 (value) 262.68 362.63 P
1 F
-0.27 ( of the resource: a new event-action mapping \050on the) 292.68 362.63 P
(following line\051, where the event may take a modifier.) 141 350.33 T
0.33 (A not-so-obvious principle behind overriding translations is that you only literally \322over-) 141 332.03 P
0.06 (ride\323 a default translation when the event\050s\051 of the new translation match the event\050s\051 of a) 141 319.73 P
0.05 (default translation) 141 307.43 P
2 F
0.05 (exactly) 216.08 307.43 P
1 F
0.05 (. If the new translation does not conflict with any existing trans-) 244.4 307.43 P
(lation, it is merely appended to the defaults.) 141 295.13 T
1 8 Q
(\340) 316.26 299.13 T
1 10 Q
1.5 (In order to be specified as a resource, a translation table must be a single string. The) 141 276.83 P
3 F
-0.5 (#override) 141 264.53 P
1 F
-0.21 ( is followed by a backslash \050\134\051 to indicate that the subsequent line should be a) 195 264.53 P
(continuation of the first.) 141 252.23 T
0.75 (In the previous basic syntax example, the) 141 233.93 P
4 F
1.8 (value) 314.01 233.93 P
1 F
0.75 ( is a single event-action mapping. The) 344.01 233.93 P
4 F
-0.2 (value) 141 221.63 P
1 F
-0.08 ( could also be a list of several mappings, linked by the characters \322\134n\134\323 to make the) 171 221.63 P
(resource a continuous string.) 141 209.33 T
-0.02 (The following) 141 191.03 P
2 F
-0.02 (xterm) 200.39 191.03 P
1 F
-0.02 ( translation table shows multiple event-action mappings linked in this) 223.16 191.03 P
(manner:) 141 178.73 T
0 1 1 0 1 0 0 K
105 146 501 163.98 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
105 146 501 163.98 R
7 X
0 1 1 0 1 0 0 K
V
106.07 151.96 286.07 151.96 2 L
V
0.5 H
2 Z
0 X
N
45 63 567 729 C
0 0 0 1 0 0 0 K
1 8 Q
0 X
0 0 0 1 0 0 0 K
0.16 (\240) 141 140.67 P
0.16 (As we\325ll see, in certain cases you may be able to supply an alternative) 147 140.67 P
2 F
0.16 (argument) 375.18 140.67 P
1 F
0.16 ( \050such as a selection name\051 to) 405.85 140.67 P
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
(an action. These changes) 141 130.67 T
2 F
(are) 222.98 130.67 T
1 F
( interpreted by the resource manager.) 233.64 130.67 T
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0.08 (\340) 141 117.67 P
0.08 (The use of modifiers can actually become quite complicated, sometimes involving multiple modifiers. For our) 147 117.67 P
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
-0.26 (purposes, we\325ll deal only with simple modifiers. For more information on modifiers, see Appendix F in this guide) 141 107.67 P
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
(and Volume Four,) 141 97.67 T
2 F
(X Toolkit Intrinsics Programming Manual) 201.44 97.67 T
1 F
(.) 337 97.67 T
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "306" 10
%%Page: "307" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (CHAPTER 12: SETTING RESOURCES) 328.75 693.79 S
0 9 Q
0.45 (307) 487.34 693.79 S
111 684 507 708 R
0.5 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 10 Q
7 X
(12) 531 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
-0.16 (*VT100.Translations: #override\134) 165 651.67 S
-0.16 (<Btn1Down>: select-start\050\051\134n\134) 183 642.67 S
-0.16 (<Btn1Motion>: select-extend\050\051\134n\134) 183 633.67 S
-0.16 (<Btn1Up>: select-end\050PRIMARY,CUT_BUFFER0\051) 183 624.67 S
0 1 1 0 1 0 0 K
0 10.5 Q
0 1 1 0 1 0 0 K
(12.2.1.1  xterm T) 147 608 T
(ranslations to Use xclipboard) 213.95 608 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
-0.26 (As explained in Chapter 5, the) 147 591.83 P
2 F
-0.26 (xclipboard) 269.61 591.83 P
1 F
-0.26 ( client provides a window in which you can store) 312.94 591.83 P
-0.45 (text selected from other windows. You can also paste text from the) 147 579.53 P
2 F
-0.45 (xclipboard) 411.8 579.53 P
1 F
-0.45 ( window into) 455.12 579.53 P
1.3 (other windows. See the discussion of) 147 567.23 P
2 F
1.3 (xclipboard) 305.61 567.23 P
1 F
1.3 ( in Chapter 8,) 348.93 567.23 P
2 F
1.3 (Other Standard Clients) 411.07 567.23 P
1 F
(before proceeding   .) 147 554.93 T
0.45 (You can specify translations for) 147 536.63 P
2 F
0.45 (xterm) 279.52 536.63 P
1 F
0.45 ( so that text you copy with the pointer is made the) 302.29 536.63 P
0 (CLIPBOARD selection. The CLIPBOARD selection is the property of the) 147 524.33 P
2 F
0 (xclipboard) 447.84 524.33 P
1 F
0 ( cli-) 491.17 524.33 P
2.17 (ent. If you are running) 147 512.03 P
2 F
2.17 (xclipboard) 250.03 512.03 P
1 F
2.17 ( and you copy text to be made the CLIPBOARD) 293.36 512.03 P
(selection, this text automatically appears in the) 147 499.73 T
2 F
(xclipboard) 336.98 499.73 T
1 F
( window.) 380.31 499.73 T
(Some sample translations that would allow you to use the) 147 481.43 T
2 F
(xclipboard) 379.77 481.43 T
1 F
( in this way are:) 423.1 481.43 T
3 8 Q
-0.16 (*VT100.Translations:) 165 464.47 S
-0.16 (#override\134) 257.8 464.47 S
-0.16 (Button1 <Btn3Down>: select-end\050CLIPBOARD\051\134n\134) 183 455.47 S
-0.16 (~Ctrl ~Meta <Btn2Up>: insert-selection\050PRIMARY,CLIPBOARD\051) 183 446.47 S
1 10 Q
0.07 (According to this translation table, while selecting text with) 147 430.13 P
3 F
0.16 (Button1) 389.26 430.13 P
1 F
0.07 ( \050the modifier\051, the) 431.26 430.13 P
-0.23 (event of pressing the third pointer button \050) 147 417.83 P
3 F
-0.55 (Btn3Down) 314.55 417.83 P
1 F
-0.23 (\051, while continuing to hold down the) 362.55 417.83 P
0.88 (first button, produces the action of making the text the CLIPBOARD selection. \050Notice) 147 405.53 P
1.25 (that we\325ve taken the) 147 393.23 P
3 F
3.01 (select-end) 235.32 393.23 P
1 F
1.25 ( action and combined it with the argument) 295.32 393.23 P
3 F
3.01 (CLIP-) 477 393.23 P
(BOARD) 147 380.93 T
1 F
(. The default translation uses the arguments) 177 380.93 T
3 F
(PRIMARY) 353.64 380.93 T
1 F
(,) 395.64 380.93 T
3 F
(CUT_BUFFER0) 398.14 380.93 T
1 F
(.\051) 464.14 380.93 T
0 (The second line modifies the way selected text is pasted into a window so that the) 147 362.63 P
3 F
0.01 (CLIP-) 477 362.63 P
2.32 (BOARD) 147 350.33 P
1 F
0.97 ( selection can be pasted. As described in Chapter 5, pressing the second pointer) 177 350.33 P
-0.35 (button pasted the contents of the PRIMARY selection, by default. If there is no PRIMARY) 147 338.03 P
1 (selection, the contents of the cut buffer are pasted. The default translation that sets this) 147 325.73 P
(behavior is the following:) 147 313.43 T
3 8 Q
-0.16 (~Ctrl ~Meta <Btn2Up>: insert-selection\050PRIMARY,CUT_BUFFER0\051) 165 296.47 S
1 10 Q
0.17 (This translation specifies that releasing pointer button 2, while pressing any modifier but-) 147 280.13 P
0.11 (ton or key other than Control or Meta, inserts text from the PRIMARY selection or, if the) 147 267.83 P
1.04 (selection is empty, from cut buffer 0. In the second line of our translation table, we\325ve) 147 255.53 P
-0.45 (replaced) 147 243.23 P
3 F
-1.08 (CUT_BUFFER0) 182.92 243.23 P
1 F
-0.45 ( with the) 248.92 243.23 P
3 F
-1.08 (CLIPBOARD) 285.07 243.23 P
1 F
-0.45 ( selection. The new behavior is that releas-) 339.07 243.23 P
1.63 (ing the second pointer button pastes the PRIMARY selection, or if there is none, the) 147 230.93 P
(CLIPBOARD selection.) 147 218.63 T
0.07 (Thus, according to the translations in the example, if you select text as usual with the first) 147 200.33 P
-0.13 (pointer button, and then additionally press the third button \050while continuing to hold down) 147 188.03 P
-0.3 (the first button\051, the text becomes the CLIPBOARD selection and appears automatically in) 147 175.73 P
(the) 147 163.43 T
2 F
(xclipboard) 161.72 163.43 T
1 F
( window, as shown in Figure) 205.05 163.43 T
(12-) 323.1 163.43 T
(1.) 336.43 163.43 T
8 9 Q
(Figure) 147 145.8 T
(12-) 177.01 145.8 T
(1. Selected text appears automatically in the xclipboard window) 190.01 145.8 T
1 10 Q
-0.13 (Since our first translation specifies a different event/action mapping than the default trans-) 147 128.13 P
1.46 (lation for selecting text \050discussed in the previous section\051, the default translation still) 147 115.83 P
-0.08 (applies. If you select text with the first pointer button alone, that text is still made the PRI-) 147 103.53 P
FMENDPAGE
%%EndPage: "307" 11
%%Page: "308" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (308) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 10 Q
7 X
(12) 71.88 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
1.16 (MARY selection and fills CUT_BUFFER0. To send text to the) 141 650.33 P
2 F
1.16 (xclipboard) 407.86 650.33 P
1 F
1.16 (, you would) 451.18 650.33 P
0.36 (need to press the third pointer button as well; thus, not all selected text needs to be made) 141 638.03 P
(the CLIPBOARD selection \050and sent automatically to the) 141 625.73 T
2 F
(xclipboard) 373.76 625.73 T
1 F
(\051.) 417.09 625.73 T
0.06 (There are advantages to making only certain selections CLIPBOARD selections. You can) 141 607.43 P
-0.49 (keep) 141 595.13 P
2 F
-0.49 (xclipboard) 161.89 595.13 P
1 F
-0.49 ( running and make many text selections by the default method \050first pointer) 205.22 595.13 P
-0.28 (button\051, without filling up the) 141 582.83 P
2 F
-0.28 (xclipboard) 260.74 582.83 P
1 F
-0.28 ( window. And chances are you don\325t want to save) 304.08 582.83 P
(every piece of text you copy for an extended period of time, anyway.) 141 570.53 T
0.42 (The CLIPBOARD selection and the) 141 552.23 P
2 F
0.42 (xclipboard) 290.03 552.23 P
1 F
0.42 ( client also get around the potential prob-) 333.36 552.23 P
0.03 (lems of selection ownership discussed in Chapter 5. Once text becomes the CLIPBOARD) 141 539.93 P
-0.15 (selection, it is owned by the) 141 527.63 P
2 F
-0.15 (xclipboard) 254.24 527.63 P
1 F
-0.15 ( client. Thus, if the client from which text was cop-) 297.57 527.63 P
-0.49 (ied \050the original owner\051 goes away, the selection is still available, owned by the) 141 515.33 P
2 F
-0.49 (xclipboard) 455.17 515.33 P
1 F
-0.49 (,) 498.5 515.33 P
(and can be transferred to another window \050and translated to another format if necessary\051.) 141 503.03 T
0 1 1 0 1 0 0 K
0 10.5 Q
0 1 1 0 1 0 0 K
(12.2.1.2  Entering Frequently Used Commands with Function Keys) 141 484.4 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
-0.13 (The sample) 141 468.23 P
2 F
-0.13 (xterm) 189.63 468.23 P
1 F
-0.13 ( translations to use the) 212.4 468.23 P
2 F
-0.13 (xclipboard) 303.7 468.23 P
1 F
-0.13 ( client involve just a few of the actions) 347.03 468.23 P
2 F
0.05 (xterm) 141 455.93 P
1 F
0.05 ( recognizes. Among the more useful translations you can specify for) 163.77 455.93 P
2 F
0.05 (xterm) 439.82 455.93 P
1 F
0.05 ( are func-) 462.59 455.93 P
2.29 (tion key mappings that allow you to enter frequently used commands with a single) 141 443.63 P
0.8 (keystroke. This sort of mapping involves an action called) 141 431.33 P
3 F
1.93 (string) 379.86 431.33 P
1 F
0.8 (, which passes a text) 415.86 431.33 P
(string to the shell running in the) 141 419.03 T
2 F
(xterm) 271.28 419.03 T
1 F
( window.) 294.05 419.03 T
0.14 (The translation table syntax for such a function key mapping is fairly simple. The follow-) 141 400.73 P
-0.43 (ing line maps the text string \322lpq -Pprinter1\323 \050the BSD 4.3 command to check the queue for) 141 388.43 P
(the printer named printer1\051 to the F1 function key:) 141 376.13 T
3 8 Q
-0.16 (<Key>F1: string\050"lpq -Pprinter1"\051) 159 359.17 S
1 10 Q
0.14 (Notice the quotes surrounding the text string. If the argument to) 141 342.83 P
3 F
0.34 (string) 400.29 342.83 P
1 F
0.14 ( includes spaces) 436.29 342.83 P
0.05 (or non-alphanumeric characters, the whole argument must be enclosed in one pair of dou-) 141 330.53 P
(ble quotes. \050Don\325t make the mistake of quoting individual words.\051) 141 318.23 T
(The translation table would be:) 141 299.93 T
3 8 Q
-0.16 (*VT100.Translations:) 159 282.97 S
-0.16 (#override\134) 251.8 282.97 S
-0.16 (<Key>F1: string\050"lpq -Pprinter1"\051) 177 273.97 S
1 10 Q
0.38 (This sample translation causes) 141 257.63 P
3 F
0.91 (lpq -Pprinter1) 266.95 257.63 P
1 F
0.38 ( to be passed to the command line in) 351.86 257.63 P
(the active) 141 245.33 T
2 F
(xterm) 182.1 245.33 T
1 F
( window when you press the F1 function key, as in Figure) 204.87 245.33 T
(12-) 439.57 245.33 T
(2.) 452.9 245.33 T
1.31 (Notice, however, that the command is not invoked because there has been no carriage) 141 227.03 P
0.08 (return. The sample translation does not specify a return. You can add a return as the argu-) 141 214.73 P
(ment to another) 141 202.43 T
3 F
(string) 206.27 202.43 T
1 F
( action within the same translation.) 242.27 202.43 T
-0.01 (To specify the Return \050or any\051 key, use the hexadecimal code for that key as the argument) 141 184.13 P
0.59 (to) 141 171.83 P
3 F
1.43 (string) 151.87 171.83 P
1 F
0.59 (. Keycodes and the procedure for determining them are explained in Chapter) 187.87 171.83 P
0.1 (14,) 141 159.53 P
2 F
0.1 (Customization Clients) 156.1 159.53 P
1 F
0.1 (. The letters \3220x\323 signal a hexadecimal key code. If you want to) 244.83 159.53 P
0.15 (enter a key as an argument to) 141 147.23 P
3 F
0.36 (string) 261.75 147.23 P
1 F
0.15 (, use \3220x\323 followed by the specific code. The code) 297.75 147.23 P
(for the Return key is \322d\323 or \3220d.\323) 141 134.93 T
1 8 Q
(\240) 274.3 138.93 T
0 1 1 0 1 0 0 K
105 113 501 130.98 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
105 113 501 130.98 R
7 X
0 1 1 0 1 0 0 K
V
106.07 118.96 286.07 118.96 2 L
V
0.5 H
2 Z
0 X
N
45 63 567 729 C
0 0 0 1 0 0 0 K
1 8 Q
0 X
0 0 0 1 0 0 0 K
0.04 (\240) 141 107.67 P
0.04 (As explained in Chapter 14,) 147 107.67 P
2 F
0.04 (Customization Clients) 238.74 107.67 P
1 F
0.04 (, the command) 309.69 107.67 P
3 10 Q
0.12 (xmodmap -pk) 359.13 107.67 P
1 F
0.05 ( returns a long list-) 425.25 107.67 P
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
(ing of all keycodes. The codes have the either of the following forms:) 141 97.67 T
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "308" 12
%%Page: "309" 13
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (CHAPTER 12: SETTING RESOURCES) 328.75 693.79 S
0 9 Q
0.45 (309) 487.34 693.79 S
111 684 507 708 R
0.5 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 10 Q
7 X
(12) 531 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
-0.16 (0xff) 165 464 S
7 F
-0.16 (ab) 183.56 464 S
3 F
-0.16 (0x00) 165 455 S
7 F
-0.16 (ab) 183.56 455 S
1 10 Q
0.62 0.12 (where) 147 438.66 B
2 F
0.62 0.12 (ab) 175.27 438.66 B
1 F
0.62 0.12 ( represents two alphanumeric characters. To specify a key as an argument to) 185.51 438.66 B
3 F
(string) 165 427.16 T
1 F
(, you can omit the \322ff\323 or \32200\323 in the) 201 427.16 T
2 F
(xmodmap) 350.69 427.16 T
1 F
( listing.) 389.57 427.16 T
0.62 0.4 (The following translation table specifies that pressing F1 passes the line) 147 409.66 B
3 F
1.5 0.4 (lpq -) 473.91 409.66 B
(Pprinter1) 165 398.16 T
1 F
( followed by a carriage return to an) 219 398.16 T
2 F
(xterm) 362.29 398.16 T
1 F
( window:) 385.06 398.16 T
3 8 Q
-0.16 (*VT100.Translations:) 165 382 S
-0.16 (#override\134) 257.8 382 S
-0.16 (<Key>F1: string\050"lpq -Pprinter1"\051 string\0500x0d\051) 165 373 S
1 10 Q
0.96 (Remember, you can list several translations in a single table. The following table maps) 147 356.66 P
(function keys F1 through F3:) 147 344.36 T
3 8 Q
-0.16 (*VT100.Translations:) 165 327.4 S
-0.16 (#override\134) 257.8 327.4 S
-0.16 (<Key>F1: string\050"lpq -Pprinter1"\051 string\0500x0d\051\134n\134) 183 318.4 S
-0.16 (<Key>F2: string\050"cd ~/bitmap;ls"\051 string\0500x0d\051\134n\134) 183 309.4 S
-0.16 (<Key>F3: string\050"cd /usr/lib/X11"\051 string\0500x0d\051) 183 300.4 S
1 10 Q
(According to these translations, pressing F2 inserts the command string) 147 284.06 T
3 F
(cd ~/bitmap;ls) 149.5 271.76 T
1 F
0.7 (which changes directory to) 147 259.46 P
2 F
0.7 (~/bitmap) 260.32 259.46 P
1 F
0.7 ( and then lists the contents of that directory. Notice) 296.29 259.46 P
0.9 (that you can issue multiple commands \050) 147 247.16 P
2 F
0.9 (cd) 311.31 247.16 P
1 F
0.9 ( ,) 320.75 247.16 P
2 F
0.9 (ls) 330.05 247.16 P
1 F
0.9 ( \051 with a single key. Pressing F3 changes) 336.73 247.16 P
(directory to) 147 234.86 T
2 F
(/usr/lib/X11) 195.88 234.86 T
1 F
(.) 243.67 234.86 T
0.3 (Keep in mind that all the translations for an application can appear in the same table. For) 147 216.56 P
-0.21 (example, we can combine the) 147 204.26 P
2 F
-0.21 (xterm) 267.03 204.26 P
1 F
-0.21 ( translations to use the) 289.8 204.26 P
2 F
-0.21 (xclipboard) 380.69 204.26 P
1 F
-0.21 ( with the translations) 424.02 204.26 P
(to map function keys.) 147 191.96 T
3 8 Q
-0.16 (*VT100.Translations:) 165 175 S
-0.16 (#override\134) 257.8 175 S
-0.16 (Button1 <Btn3Down>: select-end\050CLIPBOARD\051\134n\134) 165 166 S
-0.16 (~Ctrl ~Meta <Btn2Up>: insert-selection\050PRIMARY,CLIPBOARD\051\134n\134) 165 157 S
-0.16 (<Key>F1: string\050"lpq -Pprinter1"\051 string\0500x0d\051\134n\134) 165 148 S
-0.16 (<Key>F2: string\050"cd ~/bitmap;ls"\051 string\0500x0d\051\134n\134) 165 139 S
-0.16 (<Key>F3: string\050"cd /usr/lib/X11"\051 string\0500x0d\051) 165 130 S
1 10 Q
0.52 (The order of the translations is not important. However, it is necessary to end all but the) 147 113.66 P
(final line with the sequence \322\134n\134\323 to make the resource a continuous string.) 147 101.36 T
8 9 Q
(Figure) 147 492.33 T
(12-) 177.01 492.33 T
(2. Pushing F1 passes command text to xterm shell) 190.01 492.33 T
1 10 Q
(.) 408.58 492.33 T
111 508.33 507 657 C
174.6 508.33 443.4 648.01 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 X
0 0 0 1 0 0 0 K
%%BeginBinary:  2606     
535 266 256.8 127.68 0 180.6 514.33 BEGINBITMAPBWc
j"
O401#J#
7FC0O107FD
7"Z"
DFO1F7#j#
7010O1101D%J#
77F2000CO/1FDD7$Z
FDFFF7O09"
F3J$
A3FFFE78#
C073$J"J"
07FDDF@FF>C1%J'J"
1FFDEEF3<F83872670F27<F1J'
@F333326667138"J&
F5>3F31E7E733J%
A3833E7078"J%
FB>3333E6678"J"
FF=F2J&
@F93893E7137$JQ
FE0003<7$
FF00078#
FFFF

"j"
18O331
"Z"
1FO3F1$
1D556F$
1EAAAF$J#
1D556F4E003$
1EAAAF$
1D556F$8#@"
1EAAAFF81F9F(;#
1D556E3E7FFF9FF80F&=#9$
1EAAADDEFFF9E7FFFFF9%
1D556DDD%9$9,
1EAAADDB31F84FE663F31C1F31E01F0FE620%9$:*
1D556DD300F38F01F21F9F20F9FE67E4%9$:&8$
1EAAAE371C77CF38F0FF9F0CF3E1E0%9#:$8&
1D556FEF3E67EE7CF11CF9FCF3E3%>%8"8#
1EAAAFD8F81E7CF33C03E7&<$="
1D556F977F8039FEFF%=#
1EAAAFB7FFF9%:#
1D556F77638F%9$:";#
1EAAAEF71CF00F39FE7B&8$:":$
1D556CF8FF21F84F43FC3F03%8%8$S
1EAAAFFFFF3FFFCFFFFE7F$
1D556F$
1EAAAF$
1D556F$:$9#>#
1EAAAFFFFFFFFFFFFFFF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$
1EAAAF$
1D556F$J"
06AAAFO1C1$J"
75556FO1DD$
76AAAF$
75556F$
76AAAF$
75556F$J#
701FFFO0F01D#J#
7FDFO1F7FD7"j"
C0O107
#J#
0000O10001
ENDBITMAP
%%EndBinary
111 508.33 507 657 C
45 63 567 729 C
FMENDPAGE
%%EndPage: "309" 13
%%Page: "310" 14
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (310) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 10 Q
7 X
(12) 71.88 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 10.5 Q
0 X
0 1 1 0 1 0 0 K
(12.2.1.3  Other Clients that Recognize T) 141 650 T
(ranslations) 302.2 650 T
0 0 0 1 0 0 0 K
2 10 Q
0 0 0 1 0 0 0 K
0.32 (xterm) 141 633.83 P
1 F
0.32 ( is not the only client whose operation can be modified by specifying event transla-) 163.77 633.83 P
-0.06 (tions as resources \050though it is probably the client you\325ll be most interested in modifying\051.) 141 621.53 P
0.01 (Among the standard clients,) 141 609.23 P
2 F
0.01 (xbiff) 255.74 609.23 P
1 F
0.01 (,) 273.52 609.23 P
2 F
0.01 (xcalc) 278.52 609.23 P
1 F
0.01 (,) 299.62 609.23 P
2 F
0.01 (xdm) 304.63 609.23 P
1 F
0.01 (,) 321.29 609.23 P
2 F
0.01 (xman) 326.29 609.23 P
1 F
0.01 (, and) 347.95 609.23 P
2 F
0.01 (xmh) 369.9 609.23 P
1 F
0.01 ( all recognize certain actions) 386.57 609.23 P
0.84 (that can be mapped to particular keys or key combinations using the translation mecha-) 141 596.93 P
0.19 (nism. See the relevant client reference pages in Part Three of this guide for complete lists) 141 584.63 P
(of actions.) 141 572.33 T
1.01 (You can also modify the operation of the Text widget used by) 141 554.03 P
2 F
1.01 (xedit) 403.65 554.03 P
1 F
1.01 (,) 423.09 554.03 P
2 F
1.01 (xmh) 429.1 554.03 P
1 F
1.01 (, and other X) 445.76 554.03 P
-0.25 (Toolkit applications. See Appendix I,) 141 541.73 P
2 F
-0.25 (Athena Widget Resources) 292.23 541.73 P
1 F
-0.25 (, for a list of actions recog-) 394.48 541.73 P
0.06 (nized by the Text widget. Keep in mind, however, that the default Text widget recognizes) 141 529.43 P
-0.16 (dozens of commands, which are summarized in the discussion of) 141 517.13 P
2 F
-0.16 (xedit) 401.91 517.13 P
1 F
-0.16 ( in Chapter 8,) 421.35 517.13 P
2 F
-0.16 (Other) 477.67 517.13 P
(Standard Clients) 141 504.83 T
1 F
(. It may not be practical or desirable to modify them all.) 208.51 504.83 T
-0.19 (If you choose to modify the Text widget, you can do so for all relevant clients by introduc-) 141 486.53 P
(ing the translations with the line:) 141 474.23 T
3 8 Q
-0.16 (*Text*Translations: #override\134) 159 457.27 S
1 10 Q
1.61 (You can also specify different translations for different clients that use the widget by) 141 440.93 P
0.12 (prepending the client\325s name. To affect the operation of the Text widget only under) 141 428.63 P
2 F
0.12 (xedit) 479.06 428.63 P
1 F
0.12 (,) 498.5 428.63 P
(introduce the translation table with the line:) 141 416.33 T
3 8 Q
-0.16 (Xedit*Text*Translations: #override\134) 159 399.37 S
1 10 Q
-0.28 (In modifying the operation of the Text widget, keep in mind that insert mode is the default.) 141 383.03 P
-0.31 (In other words, like) 141 370.73 P
2 F
-0.31 (emacs) 220.58 370.73 P
1 F
-0.31 (, most of the individual keystrokes you type are added to the text) 245.57 370.73 P
1.14 (file; an exception is Backspace, which predictably deletes the preceding character. The) 141 358.43 P
0.58 (commands to move around in a file, copy and delete text, etc., involve a combination of) 141 346.13 P
0.82 (keys, one of which is generally a modifier key. If you want to modify a command, you) 141 333.83 P
(should use an alternative key combination, rather than a single key.) 141 321.53 T
(For example, the following table offers two suitable translations:) 141 303.23 T
3 8 Q
-0.16 (*Text*Translations: #override\134) 159 286.27 S
-0.16 (Meta<Key>f:) 177 277.27 S
-0.16 (next-page\050\051\134n\134) 228.04 277.27 S
-0.16 (Meta<Key>b:) 177 268.27 S
-0.16 (previous-page\050\051) 228.04 268.27 S
1 10 Q
0.47 (The first translation specifies that pressing the key combination Meta-f moves the cursor) 141 251.93 P
0.96 (ahead one page in the file \050scrolls the file forward one window\051; the second translation) 141 239.63 P
0.86 (specifies that Meta-b moves the cursor back one page. The actions performed are fairly) 141 227.33 P
-0.38 (obvious from their names. For a complete list of actions recognized by the Text widget, see) 141 215.03 P
(Appendix G.) 141 202.73 T
0.19 (For more information about events, actions, and translation table syntax, see Appendix F,) 141 184.43 P
2 F
0.28 (X Toolkit Translation Table Syntax) 141 172.13 P
1 F
0.28 (, and Volume Four,) 282.67 172.13 P
2 F
0.28 (X Toolkit Intrinsics Programming) 364.33 172.13 P
(Manual) 141 159.83 T
1 F
(.) 172.11 159.83 T
0 1 1 0 1 0 0 K
0 20 Q
0 1 1 0 1 0 0 K
(12.3  How to Set Resources) 105 127.57 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
-0.02 (Learning to write resource specifications is a fairly manageable task, once you understand) 141 108.23 P
1.99 (the basic rules of syntax and precedence. In contrast, the multiple ways you can set) 141 95.93 P
FMENDPAGE
%%EndPage: "310" 14
%%Page: "311" 15
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (CHAPTER 12: SETTING RESOURCES) 328.75 693.79 S
0 9 Q
0.45 (311) 487.34 693.79 S
111 684 507 708 R
0.5 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 10 Q
7 X
(12) 531 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
0.39 (resources\321for a single system, for multiple systems, for a single user, for all users\321can) 147 650.33 P
0.19 (be confusing. For our purposes, we are primarily concerned with specifying resources for) 147 638.03 P
0.98 (a single user running applications both on the local system and on remote systems in a) 147 625.73 P
(network.) 147 613.43 T
-0.38 (As we\325ve said, resources are generally specified in files. A resource file can have any name) 147 595.13 P
0.54 (you like. Resources are generally \322loaded\323 into the X server by the) 147 582.83 P
2 F
0.54 (xrdb) 423.71 582.83 P
1 F
0.54 ( client, which is) 442.04 582.83 P
-0.28 (normally run from your startup file or run automatically by) 147 570.53 P
2 F
-0.28 (xdm) 383.11 570.53 P
1 F
-0.28 ( when you log in. \050See , for) 399.77 570.53 P
1.47 (information about startup files and) 147 558.23 P
2 F
1.47 (xdm) 295.15 558.23 P
1 F
1.47 (.\051 Prior to Release 2 of X, there was only one) 311.81 558.23 P
0.88 (resource file called) 147 545.93 P
2 F
0.79 -0.25 (.Xdefaults) 228.22 545.93 B
1 F
0.88 (, placed in the user\325s home directory. If no resource file is) 266 545.93 P
(loaded into the server by) 147 533.63 T
2 F
(xrdb) 248.37 533.63 T
1 F
(, the) 266.7 533.63 T
2 F
-0.25 (.Xdefaults) 286.42 533.63 S
1 F
( file will still be read.) 324.2 533.63 T
-0.07 (Remember that X allows clients to run on different machines across a network, not just on) 147 515.33 P
0.26 (the machine that supports the X server. The problem with the older) 147 503.03 P
2 F
0.23 -0.25 (.Xdefaults) 420.91 503.03 B
1 F
0.26 ( mechanism) 458.69 503.03 P
0.83 (was that users who were running clients on multiple machines had to maintain multiple) 147 490.73 P
2 F
0.86 -0.25 (.Xdefaults) 147 478.43 B
1 F
0.95 ( files, one on each machine. By contrast,) 184.78 478.43 P
2 F
0.95 (xrdb) 357.1 478.43 P
1 F
0.95 ( stores the application resources) 375.43 478.43 P
0.24 (directly in the server, thus making them available to all clients, regardless of the machine) 147 466.13 P
0.5 (on which the clients are running. As we\325ll see,) 147 453.83 P
2 F
0.5 (xrdb) 339.56 453.83 P
1 F
0.5 ( also allows you to change resources) 357.89 453.83 P
(without editing files.) 147 441.53 T
0.5 (Of course, you may want certain resources to be set on all machines and others to be set) 147 423.23 P
0.08 (only on particular machines. See the section \322Other Sources of Resource Definition\323 later) 147 410.93 P
-0.2 (in this chapter for information on setting machine-specific resources. This section gives an) 147 398.63 P
(overview of additional ways to specify resources using a variety of system files.) 147 386.33 T
-0.29 (In addition to loading resource files, you can specify defaults for a particular instance of an) 147 368.03 P
(application from the command line using two options:) 147 355.73 T
3 F
(-xrm) 366.44 355.73 T
1 F
( and) 390.44 355.73 T
3 F
(-name) 409.88 355.73 T
1 F
(.) 439.88 355.73 T
0.06 (First we\325ll consider a sample resources file. Then we\325ll take a look at the use of the) 147 337.43 P
3 F
0.15 (-xrm) 483 337.43 P
1 F
1.9 (and) 147 325.13 P
3 F
4.56 (-name) 165.84 325.13 P
1 F
1.9 ( command line options. Finally, we\325ll discuss various ways you can load) 195.84 325.13 P
-0.34 (resources using the) 147 312.83 P
2 F
-0.34 (xrdb) 225.14 312.83 P
1 F
-0.34 ( program and consider other sources of resource definition, later in) 243.47 312.83 P
(this chapter.) 147 300.53 T
0 1 1 0 1 0 0 K
0 13.3 Q
0 1 1 0 1 0 0 K
(12.3.1  A Sample Resources File) 147 280.03 T
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
0.1 (Figure) 147 262.93 P
0.1 (12-) 175.61 262.93 P
0.1 (3 shows a sample resources file. This file sets the border width for all clients to) 188.94 262.93 P
0.62 (a default value of two pixels, and sets other specific variables for) 147 250.63 P
2 F
0.62 (xclock) 416.85 250.63 P
1 F
0.62 ( and) 442.39 250.63 P
2 F
0.62 (xterm) 463.06 250.63 P
1 F
0.62 (. The) 485.83 250.63 P
0.27 (meaning of each variable is obvious from its name \050for example,) 147 238.33 P
3 F
0.64 (xterm*scrollBar:) 411 238.33 P
(True) 147 226.03 T
1 F
( means that) 171 226.03 T
2 F
(xterm) 219.05 226.03 T
1 F
( windows should be created with a scrollbar.) 241.82 226.03 T
(Note that comments are preceded by an exclamation point \050!\051.) 147 207.73 T
0.96 (For a detailed description of each possible variable, see the appropriate client reference) 147 189.43 P
(pages in Part Three of this guide.) 147 177.13 T
3 9 Q
-0.22 (*borderWidth: 2) 147 159.5 S
-0.22 (!) 147 148.5 S
-0.22 (! xclock resources) 147 137.5 S
-0.22 (!) 147 126.5 S
-0.22 (xclock*borderWidth: 5) 147 115.5 S
-0.22 (xclock*geometry: 64x64) 147 104.5 S
-0.22 (!) 147 93.5 S
FMENDPAGE
%%EndPage: "311" 15
%%Page: "312" 16
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (312) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 10 Q
7 X
(12) 71.88 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
3 9 Q
0 X
0 0 0 1 0 0 0 K
-0.22 (! xterm resources) 141 651 S
-0.22 (!) 141 640 S
-0.22 (xterm*curses: on) 141 629 S
-0.22 (xterm*cursorColor: skyblue) 141 618 S
-0.22 (xterm*pointerShape: pirate) 141 607 S
-0.22 (xterm*jumpScroll: on) 141 596 S
-0.22 (xterm*saveLines: 300) 141 585 S
-0.22 (xterm*scrollBar: True) 141 574 S
-0.22 (xterm*scrollKey: on) 141 563 S
-0.22 (xterm*background: black) 141 552 S
-0.22 (xterm*borderColor: blue) 141 541 S
-0.22 (xterm*borderWidth: 3) 141 530 S
-0.22 (xterm*foreground: white) 141 519 S
-0.22 (xterm*font: 8x13) 141 508 S
8 F
(Figure) 141 491 T
(12-) 171.01 491 T
(3. A sample resources file) 184.01 491 T
0 1 1 0 1 0 0 K
0 13.3 Q
0 1 1 0 1 0 0 K
(12.3.2  Specifying Resources from the Command Line) 141 471.13 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
-0.02 (Two command line options supported by all clients written with the X Toolkit can be use-) 141 454.03 P
(ful in specifying resources.) 141 441.73 T
0 1 1 0 1 0 0 K
0 10.5 Q
0 1 1 0 1 0 0 K
(12.3.2.1  The \320xrm Option) 141 423.1 T
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
0.01 (The) 141 406.93 P
3 F
0.03 (-xrm) 159.06 406.93 P
1 F
0.01 ( option allows you to set on the command line any specification that you would) 183.06 406.93 P
(otherwise put into a resources file. For example:) 141 394.63 T
3 8 Q
-0.16 (%) 159 377.67 S
9 10 Q
-0.2 (xterm -xrm \325xterm*Foreground: blue\325 &) 168.28 377.67 S
1 F
0.76 (Note that a resource specification on the command line must be quoted using the single) 141 361.33 P
(quotes in the line above.) 141 349.03 T
0.04 (The) 141 330.73 P
3 F
0.1 (-xrm) 159.09 330.73 P
1 F
0.04 ( option only specifies the resource\050s\051 for the current instance of the application.) 183.09 330.73 P
(Resources specified in this way do not become part of the resource database.) 141 318.43 T
0.09 (The) 141 300.13 P
3 F
0.22 (-xrm) 159.14 300.13 P
1 F
0.09 ( option is most useful for setting classes, since most clients have command line) 183.14 300.13 P
0.45 (options that correspond to instance variable names. For example, the) 141 287.83 P
3 F
1.08 (-fg) 422.66 287.83 P
1 F
0.45 ( command line) 440.66 287.83 P
2.04 (option sets the) 141 275.53 P
3 F
4.89 (foreground) 207.39 275.53 P
1 F
2.04 ( attribute of a window, but) 267.39 275.53 P
3 F
4.89 (-xrm) 388.21 275.53 P
1 F
2.04 ( must be used to set) 412.21 275.53 P
3 F
(Foreground) 141 263.23 T
1 F
(.) 201 263.23 T
0.21 (Note also that a resource specified with the) 141 244.93 P
3 F
0.5 (-xrm) 317.61 244.93 P
1 F
0.21 ( option will not take effect if a resource) 341.61 244.93 P
0.16 (that takes precedence has already been loaded with) 141 232.63 P
2 F
0.16 (xrdb) 348.86 232.63 P
1 F
0.16 (. For example, say you\325ve loaded) 367.18 232.63 P
(a resource file that includes the specification:) 141 220.33 T
3 8 Q
-0.16 (xterm*pointerShape: pirate) 159 203.37 S
1 10 Q
(This command line specification of another cursor will fail:) 141 187.03 T
3 8 Q
-0.16 (%) 159 170.07 S
9 10 Q
-0.2 (xterm -xrm \325*pointerShape: gumby\325 &) 168.28 170.07 S
1 F
3.35 (because the resource) 141 153.73 P
3 F
8.03 (xterm*pointerShape) 236.28 153.73 P
1 F
3.35 ( is more specific than the resource) 344.28 153.73 P
3 F
5.69 (*pointerShape) 141 141.43 P
1 F
2.37 (. Instead, you\325ll get an) 219 141.43 P
2 F
2.37 (xterm) 322.79 141.43 P
1 F
2.37 ( with the previously specified pirate) 345.55 141.43 P
(cursor.) 141 129.13 T
-0.47 (To override the resource database \050and get the Gumby cursor\051, you\325d need to use a resource) 141 110.83 P
(equally \050or more\051 specific, such as the following:) 141 98.53 T
FMENDPAGE
%%EndPage: "312" 16
%%Page: "313" 17
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (CHAPTER 12: SETTING RESOURCES) 328.75 693.79 S
0 9 Q
0.45 (313) 487.34 693.79 S
111 684 507 708 R
0.5 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 10 Q
7 X
(12) 531 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
-0.16 (%) 165 651.67 S
9 10 Q
-0.2 (xterm -xrm \325xterm*pointerShape: gumby\325 &) 174.28 651.67 S
0 1 1 0 1 0 0 K
0 10.5 Q
0 1 1 0 1 0 0 K
(12.3.2.2  The \320name Option) 147 635 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
0.17 ( The) 147 618.83 P
3 F
0.41 (-name) 167.89 618.83 P
1 F
0.17 ( option lets you name one instance of an application; the server identifies the) 197.89 618.83 P
0.82 (single instance of the application by this name. The name of an application affects how) 147 606.53 P
(resources are interpreted.) 147 594.23 T
(For example, the following command sets the) 147 575.93 T
2 F
(xterm) 332.54 575.93 T
1 F
( instance name to) 355.31 575.93 T
3 F
(bigxterm) 427.52 575.93 T
1 F
(:) 475.52 575.93 T
3 8 Q
-0.16 (%) 165 558.97 S
9 10 Q
-0.2 (xterm -name bigxterm &) 174.28 558.97 S
1 F
0.33 (When this command is run, the client uses any resources specified for) 147 542.63 P
3 F
0.79 (bigxterm) 432.85 542.63 P
1 F
0.33 ( rather) 480.85 542.63 P
(than for) 147 530.33 T
3 F
(xterm) 180.88 530.33 T
1 F
(.) 210.88 530.33 T
0.47 (The) 147 512.03 P
3 F
1.14 (-name) 165.52 512.03 P
1 F
0.47 ( option allows you to create different instances of the same application, each) 195.52 512.03 P
-0.06 (using different resources. For example, you could put the following entries into a resource) 147 499.73 P
(file such as) 147 487.43 T
2 F
-0.25 (.Xresources) 194.49 487.43 S
1 F
(:) 239.23 487.43 T
3 8 Q
-0.16 (XTerm*Font: 8x13) 165 470.47 S
-0.16 (smallxterm*Font: 6x10) 165 461.47 S
-0.16 (smallxterm*Geometry: 80x10) 165 452.47 S
-0.16 (bigxterm*Font: 9x15) 165 443.47 S
-0.16 (bigxterm*Geometry: 80x55) 165 434.47 S
1 10 Q
(You could then use these commands to create) 147 418.13 T
2 F
(xterm) 332.52 418.13 T
1 F
(s of different specifications:) 355.29 418.13 T
3 8 Q
-0.16 (%) 165 401.17 S
9 10 Q
-0.2 (xterm &) 174.28 401.17 S
1 F
(would create an) 147 384.83 T
2 F
(xterm) 212.81 384.83 T
1 F
( with the default specifications, while:) 235.58 384.83 T
3 8 Q
-0.16 (%) 165 367.87 S
9 10 Q
-0.2 (xterm -name bigxterm &) 174.28 367.87 S
1 F
0.95 (would create a big) 147 351.53 P
2 F
0.95 (xterm) 226.88 351.53 P
1 F
0.95 (, 80 characters across by 55 lines down, displaying in the font) 249.65 351.53 P
(9x15. The command:) 147 339.23 T
3 8 Q
-0.16 (%) 165 322.27 S
9 10 Q
-0.2 (xterm -name smallxterm &) 174.28 322.27 S
1 F
0.36 (would create a small) 147 305.93 P
2 F
0.36 (xterm) 233.4 305.93 P
1 F
0.36 (, 80 characters across by 10 lines down, displaying in the font) 256.17 305.93 P
(6x10.) 147 293.63 T
0 1 1 0 1 0 0 K
0 20 Q
0 1 1 0 1 0 0 K
(12.4  Setting Resources with xrdb) 111 261.37 T
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
0.58 (The) 147 242.03 P
2 F
0.58 (xrdb) 165.63 242.03 P
1 F
0.58 ( program saves you from the difficulty of maintaining multiple resource files if) 183.96 242.03 P
0.62 (you run clients on multiple machines. It stores resources in the X server, where they are) 147 229.73 P
-0.27 (accessible to all clients using that server. \050Technically speaking, the values of variables are) 147 217.43 P
0.07 (stored in a data structure referred to as the RESOURCE_MANAGER property of the root) 147 205.13 P
0.19 (window of screen 0 for  that server. From time to time, we may refer to this property col-) 147 192.83 P
(loquially simply as the resource database.\051) 147 180.53 T
-0.43 (The appropriate) 147 162.23 P
2 F
-0.43 (xrdb) 212.23 162.23 P
1 F
-0.43 ( command line should normally be placed in your) 230.56 162.23 P
2 F
-0.43 (.xinitrc) 428.04 162.23 P
1 F
-0.43 ( file or) 456.65 162.23 P
2 F
-0.43 (.xses-) 484.51 162.23 P
-0.16 (sion) 147 149.93 P
1 F
-0.16 ( file to initialize resources at login, although it can also be invoked interactively. It has) 163.67 149.93 P
(the following syntax:) 147 137.63 T
9 F
(xrdb) 147 119.33 T
1 F
( [) 171 119.33 T
4 F
(options) 176.83 119.33 T
1 F
( [) 218.83 119.33 T
4 F
(filename) 224.66 119.33 T
FMENDPAGE
%%EndPage: "313" 17
%%Page: "314" 18
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (314) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 10 Q
7 X
(12) 71.88 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
-0.29 (The) 141 650.33 P
2 F
-0.29 (xrdb) 158.76 650.33 P
1 F
-0.29 ( client takes several options, all of which are documented on the reference page in) 177.09 650.33 P
-0.48 (Part Three of this guide. Several of the most useful options are discussed in subsequent sec-) 141 638.03 P
1.56 (tions. \050Those that are not discussed here have to do with) 141 625.73 P
2 F
1.56 (xrdb) 385.33 625.73 P
1 F
1.56 (\325s ability to interpret C) 403.66 625.73 P
0.49 (preprocessor-style defined symbols; this is an advanced topic. For more information, see) 141 613.43 P
0.07 (the) 141 601.13 P
2 F
0.07 (xrdb) 155.79 601.13 P
1 F
0.07 ( reference page in Part Three of this guide, and the) 174.12 601.13 P
2 F
0.07 (cpp) 379.86 601.13 P
1 F
0.07 ( \0501\051 reference page in your) 394.3 601.13 P
2 F
(UNIX Reference Manual) 141 588.83 T
1 F
(.\051) 240.42 588.83 T
-0.35 (The optional) 141 570.53 P
2 F
-0.35 (filename) 193.63 570.53 P
1 F
-0.35 ( argument specifies the name of a file from which the values of client) 228.07 570.53 P
0.4 (variables \050resources\051 will be read. If no filename is specified,) 141 558.23 P
2 F
0.4 (xrdb) 392.1 558.23 P
1 F
0.4 ( will expect to read its) 410.43 558.23 P
0.82 (data from standard input. That is, the program will appear to hang, until you type some) 141 545.93 P
0.24 (data, followed by an end-of-file \050Control-D on many UNIX systems\051. Note that whatever) 141 533.63 P
-0.2 (you type will override the previous contents of the RESOURCE_MANAGER property, so) 141 521.33 P
-0.06 (if you inadvertently type) 141 509.03 P
2 F
-0.06 (xrdb) 241.85 509.03 P
1 F
-0.06 ( without a filename argument, and then quit with Control-D,) 260.18 509.03 P
0.5 (you will delete any previous values. \050You can append new settings to current ones using) 141 496.73 P
(the) 141 484.43 T
3 F
(-merge) 155.72 484.43 T
1 F
( option discussed later in this chapter.\051) 191.72 484.43 T
-0.19 (The resource) 141 466.13 P
4 F
-0.46 (filename) 195.03 466.13 P
1 F
-0.19 ( can be anything you want. Two commonly used names are) 243.03 466.13 P
2 F
-0.17 -0.25 (.Xde-) 480.87 466.13 B
1.06 -0.25 (faults) 141 453.83 B
1 F
1.17 ( and) 161.73 453.83 P
2 F
1.06 -0.25 (.Xresources) 183.52 453.83 B
1 F
1.17 (. The former is an older form, but is more commonly used in the) 228.26 453.83 P
-0.18 (OpenWindows environment. The latter is newer, and is more prevalent in X11R5 environ-) 141 441.53 P
(ments. Either form can be used.) 141 429.23 T
-0.28 (You should load a resource file with the) 141 410.93 P
2 F
-0.28 (xrdb) 301.55 410.93 P
3 F
-0.66 (-load) 322.11 410.93 P
1 F
-0.28 ( option. For example, to load the con-) 352.11 410.93 P
-0.46 (tents of your) 141 398.63 P
2 F
-0.42 -0.25 (.Xresources) 192.66 398.63 B
1 F
-0.46 ( file into the RESOURCE_MANAGER property, you would type:) 237.4 398.63 P
3 8 Q
-0.16 (%) 159 381.67 S
9 10 Q
-0.2 (xrdb -load) 168.28 381.67 S
-0.2 (.Xresources) 232.71 381.67 S
0 1 1 0 1 0 0 K
0 13.3 Q
0 1 1 0 1 0 0 K
(12.4.1  Querying the Resource Database) 141 363.13 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
-0.29 (You can find out what options are currently set by using the) 141 346.03 P
3 F
-0.69 (-query) 379.75 346.03 P
1 F
-0.29 ( option. For example:) 415.75 346.03 P
3 8 Q
-0.16 (%) 159 316.77 S
9 10 Q
-0.2 (xrdb -query) 168.28 316.77 S
3 8 Q
-0.16 (XTerm*ScrollBar: True) 159 307.77 S
-0.16 (bigxterm*font: 9x15) 159 298.77 S
-0.16 (bigxterm*Geometry: 80x55) 159 289.77 S
-0.16 (smallxterm*Font: 6x10) 159 280.77 S
-0.16 (smallxterm*Geometry: 80x10) 159 271.77 S
-0.16 (xterm*borderWidth: 3) 159 262.77 S
1 10 Q
(If) 141 246.43 T
2 F
(xrdb) 150.16 246.43 T
1 F
( has not been run, this command will produce no output.) 168.49 246.43 T
0 1 1 0 1 0 0 K
0 13.3 Q
0 1 1 0 1 0 0 K
(12.4.2  Loading New V) 141 225.93 T
(alues into the Resource Database) 255.17 225.93 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
0.44 (By default,) 141 208.83 P
2 F
0.44 (xrdb) 188.81 208.83 P
1 F
0.44 ( reads its input \050either a file or standard input\051 and stores the results into) 207.14 208.83 P
-0.23 (the resource database, replacing the previous values. If you simply want to merge new val-) 141 196.53 P
1.27 (ues with the currently active ones \050perhaps by specifying a single value from standard) 141 184.23 P
0.61 (input\051, you can use the) 141 171.93 P
3 F
1.46 (-merge) 237.35 171.93 P
1 F
0.61 ( option. Only the new values will be changed; variables) 273.35 171.93 P
0.2 (that were already set will be preserved rather than overwritten with empty values. In fact,) 141 159.63 P
-0.21 (if you are running with) 141 147.33 P
2 F
-0.21 (xdm,) 234.67 147.33 P
1 F
-0.21 ( it is preferable to use -merge, since this will prevent you from) 253.83 147.33 P
1.53 (accidentally erasing some valuable initial resources that) 141 135.03 P
2 F
1.53 (xdm) 377.52 135.03 P
1 F
1.53 ( might have stored in the) 394.18 135.03 P
(server.) 141 122.73 T
FMENDPAGE
%%EndPage: "314" 18
%%Page: "315" 19
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (CHAPTER 12: SETTING RESOURCES) 328.75 693.79 S
0 9 Q
0.45 (315) 487.34 693.79 S
111 684 507 708 R
0.5 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 10 Q
7 X
(12) 531 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
0.15 (For example, let\325s say you wanted to add new resources listed in the file) 147 650.33 P
2 F
0.15 (new.values) 440.47 650.33 P
1 F
0.15 (. You) 484.63 650.33 P
(could say:) 147 638.03 T
3 8 Q
-0.16 (%) 165 621.07 S
9 10 Q
-0.2 (xrdb -merge new.values) 174.28 621.07 S
1 F
-0.19 (As another example, if you wanted all subsequently run) 147 604.73 P
2 F
-0.19 (xterm) 370.83 604.73 P
1 F
-0.19 ( windows to have scrollbars,) 393.6 604.73 P
(you could use standard input, and enter:) 147 592.43 T
3 8 Q
-0.16 (%) 165 575.47 S
9 10 Q
-0.2 (xrdb -merge xterm*scrollBar:) 174.28 575.47 S
-0.2 (True) 336.69 575.47 S
1 F
0.1 (and then press Control-D to end the standard input. Note that because of precedence rules) 147 559.13 P
0.54 (for resource naming, you may not automatically get what you want. For example, if you) 147 546.83 P
(specify:) 147 534.53 T
3 8 Q
-0.16 (xterm*scrollBar:) 165 517.57 S
-0.16 (True) 239.24 517.57 S
1 10 Q
(and the more specific value:) 147 501.23 T
3 8 Q
-0.16 (xterm*vt100.scrollBar:) 165 484.27 S
-0.16 (False) 267.08 484.27 S
1 10 Q
-0.18 (has already been set, your new, less specific setting will be ignored. The problem isn\325t that) 147 467.93 P
(you used the) 147 455.63 T
3 F
(-) 200.05 455.63 T
(merge) 206.05 455.63 T
1 F
( option incorrectly\321you just got caught by the rules of precedence.) 236.05 455.63 T
0.17 (If your specifications don\325t seem to work, use the) 147 437.33 P
3 F
0.4 (-query) 349.01 437.33 P
1 F
0.17 ( option to list the values in the) 385.01 437.33 P
(RESOURCE_MANAGER property and look for conflicting specifications.) 147 425.03 T
0.52 (Note also that when you add new specifications, they won\325t affect any programs already) 147 406.73 P
-0.27 (running, but only programs started after the new resource specifications are in effect. \050This) 147 394.43 P
-0.25 (is also true even if you overwrite the existing specifications by loading a new resource file.) 147 382.13 P
(Only programs run after this point will reflect the new specifications.\051) 147 369.83 T
0 1 1 0 1 0 0 K
0 13.3 Q
0 1 1 0 1 0 0 K
(12.4.3  Saving Active Resource De\336nitions in a File) 147 349.33 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
-0.45 ( Assume that you\325ve loaded the RESOURCE_MANAGER property from an) 147 332.23 P
2 F
-0.41 -0.25 (.Xresources) 451.88 332.23 B
1 F
-0.45 ( or) 496.62 332.23 P
-0.45 (other file. However, you\325ve dynamically loaded a different value using the) 147 319.93 P
3 F
-1.08 (-merge) 443.39 319.93 P
1 F
-0.45 ( option) 479.39 319.93 P
(and you\325d like to make the new value your default.) 147 307.63 T
-0.37 (You don\325t need to edit the file manually \050although you certainly could.\051 The) 147 289.33 P
3 F
-0.9 (-edit) 449.31 289.33 P
1 F
-0.37 ( option) 479.31 289.33 P
-0.25 (allows you to write the current value of the RESOURCE_MANAGER property to a file. If) 147 277.03 P
-0.44 (the file already exists, it is overwritten with the new values. However,) 147 264.73 P
2 F
-0.44 (xrdb) 424.16 264.73 P
1 F
-0.44 ( is smart enough) 442.49 264.73 P
1.57 (to preserve any comments and preprocessor declarations in the file being overwritten,) 147 252.43 P
(replacing only the resource definitions.) 147 240.13 T
(For example:) 147 221.83 T
3 8 Q
-0.16 (%) 165 204.87 S
9 10 Q
-0.2 (xrdb -edit ~/.Xresources) 174.28 204.87 S
1 F
0.69 (will save the current contents of the RESOURCE_MANAGER property in the file) 147 188.53 P
2 F
0.62 -0.25 (.Xre-) 487.98 188.53 B
-0.25 (sources) 147 176.23 S
1 F
( in your home directory.) 175.8 176.23 T
(If you want to save a backup copy of an existing file, use the) 147 157.93 T
3 F
(-backup) 392.23 157.93 T
1 F
( option:) 434.23 157.93 T
3 8 Q
-0.16 (%) 165 140.97 S
9 10 Q
-0.2 (xrdb -edit .mydefaults -backup old) 174.28 140.97 S
1 F
-0.4 (The string following the) 147 124.63 P
3 F
-0.96 (-backup) 244.84 124.63 P
1 F
-0.4 ( option is used as an extension to be appended to the old) 286.83 124.63 P
2.14 (filename. In the prior example, the previous copy of) 147 112.33 P
2 F
2.14 (.mydefaults) 377.06 112.33 P
1 F
2.14 ( would be saved as) 422.89 112.33 P
2 F
(.mydefaults.old) 147 100.03 T
1 F
(.) 208.11 100.03 T
FMENDPAGE
%%EndPage: "315" 19
%%Page: "316" 20
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (316) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 10 Q
7 X
(12) 71.88 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 13.3 Q
0 X
0 1 1 0 1 0 0 K
(12.4.4  Removing Resource De\336nitions) 141 648.13 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
-0.37 (You can delete the definition of the RESOURCE_MANAGER property from the server by) 141 631.03 P
(calling) 141 618.73 T
2 F
(xrdb) 170.72 618.73 T
1 F
( with the) 189.05 618.73 T
3 F
(-remove) 226.55 618.73 T
1 F
( option.) 268.55 618.73 T
0.56 (There is no way to delete a single resource definition other than to read the current) 141 600.43 P
2 F
0.56 (xrdb) 482.67 600.43 P
1 F
(values into a file. For example:) 141 588.13 T
3 8 Q
-0.16 (%) 159 571.17 S
9 10 Q
-0.2 (xrdb -query) 168.28 571.17 S
1 F
-0.2 ( >) 232.08 571.17 S
4 F
-0.2 (filename) 242.12 571.17 S
1 F
-0.15 (Use an editor to edit the file, deleting the resource definitions you no longer want and save) 141 554.83 P
(the file:) 141 542.53 T
3 8 Q
-0.16 (%) 159 525.57 S
9 10 Q
-0.2 (vi) 168.28 525.57 S
4 F
-0.2 (filename) 185.68 525.57 S
1 F
(Then read the edited values back into the RESOURCE_MANAGER with) 141 509.23 T
2 F
(xrdb) 438.19 509.23 T
1 F
(:) 456.52 509.23 T
3 8 Q
-0.16 (%) 159 492.27 S
9 10 Q
-0.2 (xrdb -load) 168.28 492.27 S
4 F
-0.2 (filename) 232.08 492.27 S
0 1 1 0 1 0 0 K
0 13.3 Q
0 1 1 0 1 0 0 K
(12.4.5  Listing the Current Resources for a Client: appres) 141 473.73 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
2.32 (The) 141 456.63 P
2 F
2.32 (appres) 161.37 456.63 P
1 F
2.32 ( \050) 188.59 456.63 P
2 F
2.32 (app) 196.74 456.63 P
1 F
2.32 (lication) 211.74 456.63 P
2 F
2.32 (res) 246.56 456.63 P
1 F
2.32 (ource\051 program, available as of X11 Release 4, lists the) 258.78 456.63 P
-0.05 (resources that currently might apply to a client. These resources may be derived from sev-) 141 444.33 P
0.69 (eral sources, including the user\325s) 141 432.03 P
2 F
0.62 -0.25 (.Xresources) 278.29 432.03 B
1 F
0.69 ( file and a system-wide application defaults) 323.03 432.03 P
0.75 (file. The directory) 141 419.73 P
2 F
0.75 (/usr/lib/X11/app-defaults) 218.22 419.73 P
1 F
0.75 ( contains application default files for several) 318.79 419.73 P
0.09 (clients. The function of these files is discussed in the next section. For now, be aware that) 141 407.43 P
(all of the resources contained in these files begin with the class name of the application.) 141 395.13 T
0.45 (Also be aware that) 141 376.83 P
2 F
0.45 (appres) 220 376.83 P
1 F
0.45 ( has one serious limitation: it cannot distinguish between valid) 247.22 376.83 P
2.03 (and invalid resource specifications. It lists all resources that might apply to a client,) 141 364.53 P
(whether or not the resources are correctly specified.) 141 352.23 T
2 F
3.34 (appres) 141 333.93 P
1 F
3.34 ( lists the resources that apply to a client having the) 168.22 333.93 P
4 F
8.01 (class_name) 409.61 333.93 P
1 F
3.34 ( and/or) 469.61 333.93 P
4 F
0.75 (instance_name) 141 321.63 P
1 F
0.31 ( you specify. Typically, you would use) 219 321.63 P
2 F
0.31 (appres) 379.22 321.63 P
1 F
0.31 ( before running a client) 406.44 321.63 P
(program to find out what resources the client program will access.) 141 309.33 T
-0.44 (For example, say you want to run) 141 291.03 P
2 F
-0.44 (xterm) 274.57 291.03 P
1 F
-0.44 ( but you can\325t remember the latest resources you\325ve) 297.34 291.03 P
1.35 (specified for it, whether you\325ve loaded them, or perhaps what some of the application) 141 278.73 P
-0.18 (defaults are, etc. You can use the) 141 266.43 P
2 F
-0.18 (appres) 274.39 266.43 P
1 F
-0.18 ( client to check the current) 301.61 266.43 P
2 F
-0.18 (xterm) 409.36 266.43 P
1 F
-0.18 ( resources. If you) 432.13 266.43 P
(specify only a class name, as in this command line:) 141 254.13 T
3 8 Q
-0.16 (%) 159 237.17 S
9 10 Q
-0.2 (appres XTerm) 168.28 237.17 S
2 F
0.02 (appres) 141 220.83 P
1 F
0.02 ( lists the resources that any) 168.22 220.83 P
2 F
0.02 (xterm) 278.88 220.83 P
1 F
0.02 ( would load. In the case of) 301.65 220.83 P
2 F
0.02 (xterm) 410.1 220.83 P
1 F
0.02 (, this is an exten-) 432.87 220.83 P
1.07 (sive list, encompassing all of the system-wide application defaults as well as any other) 141 208.53 P
(defaults you have specified in a resource file.) 141 196.23 T
-0.15 (You can additionally specify an instance name to list the resources applying to a particular) 141 177.93 P
(instance of the client, as in:) 141 165.63 T
3 8 Q
-0.16 (%) 159 148.67 S
9 F
-0.16 (appres XTerm bigxterm) 168.28 148.67 S
1 10 Q
0.52 (If you omit the class name,) 141 132.33 P
2 F
0.52 (xappres) 254.94 132.33 P
1 F
0.52 ( assumes the class) 286.6 132.33 P
3 F
1.25 (-NoSuchClass-) 363.67 132.33 P
1 F
0.52 (, which has no) 441.67 132.33 P
0.22 (defaults, and returns only the resources that would be loaded by the particular instance of) 141 120.03 P
(the client.) 141 107.73 T
FMENDPAGE
%%EndPage: "316" 20
%%Page: "317" 21
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (CHAPTER 12: SETTING RESOURCES) 328.75 693.79 S
0 9 Q
0.45 (317) 487.34 693.79 S
111 684 507 708 R
0.5 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 10 Q
7 X
(12) 531 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
0.86 (Note that the instance can simply be the client name, for example,) 147 650.33 P
3 F
2.05 (xterm) 423.89 650.33 P
1 F
0.86 (. In that case) 453.89 650.33 P
-0.18 (none of the system-wide application defaults would be listed, since all begin with the class) 147 638.03 P
(name) 147 625.73 T
3 F
(XTerm) 171.16 625.73 T
1 F
(. For example, the command:) 201.16 625.73 T
3 8 Q
-0.16 (%) 165 608.77 S
9 10 Q
-0.2 (appres xterm) 174.28 608.77 S
1 F
(might return resources settings similar to these:) 147 592.43 T
3 8 Q
-0.16 (xterm.vt100.scrollBar: True) 165 575.47 S
-0.16 (xterm*PhonyResource: youbet) 165 566.47 S
-0.16 (xterm*pointerShape: gumby) 165 557.47 S
-0.16 (xterm*iconGeometry: +50+50) 165 548.47 S
-0.16 (*VT100.Translations: #override\134) 165 539.47 S
-0.16 (Button1 <Btn3Down>: select-end\050CLIPBOARD\051\134n\134) 183 530.47 S
-0.16 (~Ctrl ~Meta <Btn2Up>: insert-selection\050PRIMARY,CLIPBOARD\051) 183 521.47 S
1 10 Q
0.34 (Most of these resources set obvious features of) 147 505.13 P
2 F
0.34 (xterm) 339.7 505.13 P
1 F
0.34 (. The translation table sets up) 362.47 505.13 P
2 F
0.34 (xterm) 484.23 505.13 P
1 F
-0.34 (to use the) 147 492.83 P
2 F
-0.34 (xclipboard) 186.81 492.83 P
1 F
-0.34 (. Notice also that) 230.14 492.83 P
2 F
-0.34 (appres) 299.05 492.83 P
1 F
-0.34 ( has returned an invalid resource called) 326.27 492.83 P
3 F
-0.82 (Pho-) 483 492.83 P
-1.01 (nyResource) 147 480.53 P
1 F
-0.42 ( that we created for demonstration purposes. You can\325t rely on) 207 480.53 P
2 F
-0.42 (appres) 455.07 480.53 P
1 F
-0.42 ( to tell) 482.29 480.53 P
0.54 (you what resources a client will actually load because the) 147 468.23 P
2 F
0.54 (appres) 384.56 468.23 P
1 F
0.54 ( program cannot distin-) 411.78 468.23 P
0.04 (guish a valid resource specification from an invalid one. Still, it can be fairly useful to jog) 147 455.93 P
-0.28 (your memory as to the defaults you\325ve specified in your) 147 443.63 P
2 F
-0.25 -0.25 (.Xresources) 370.87 443.63 B
1 F
-0.28 ( file, as well as the sys-) 415.61 443.63 P
(tem-wide application defaults.) 147 431.33 T
0 1 1 0 1 0 0 K
0 13.3 Q
0 1 1 0 1 0 0 K
(12.4.6  Other Sources of Resource De\336nition) 147 410.83 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
0.39 (If) 147 393.73 P
2 F
0.39 (xrdb) 156.55 393.73 P
1 F
0.39 ( has not been run, the RESOURCE_MANAGER property will not be set. Instead,) 174.88 393.73 P
0.12 (the resource manager looks for a file called) 147 381.43 P
2 F
0.1 -0.25 (.Xdefaults) 323.43 381.43 B
1 F
0.12 ( in the user\325s home directory. As we) 361.21 381.43 P
0.38 (discussed earlier, resources found in this way are only available to clients running on the) 147 369.13 P
(local machine.) 147 356.83 T
-0.22 (Whether or not resources have been loaded with) 147 338.53 P
2 F
-0.22 (xrdb) 340.74 338.53 P
1 F
-0.22 (, when a client is run these sources of) 359.07 338.53 P
(resource definition are conIndexsulted in this order:) 147 326.23 T
1 10.5 Q
-0.05 (1.) 147 307.6 S
-0.33 -0.05 (The client\325s application defaults file\050s\051, if any, which usually reside in the directory) 165 307.6 B
2 F
0.42 -0.05 (/usr/lib/X11/app-defaults,) 165 294.3 B
1 F
0.42 -0.05 ( will be loaded into the resource manager \050Note that the) 271.86 294.3 B
-0.26 -0.05 (path can be reset with the XFILESEARCHPATH  environment variable\051. Applica-) 165 281 B
-0.08 -0.05 (tion-specific resource files generally have the name) 165 267.7 B
2 F
-0.08 -0.05 (Class) 380.67 267.7 B
1 F
-0.08 -0.05 (, where) 403.75 267.7 B
2 F
-0.08 -0.05 (Class) 436.71 267.7 B
1 F
-0.08 -0.05 ( is the class) 459.79 267.7 B
-0.05 (name of the client program.) 165 254.4 S
-0.08 -0.05 (Any other application-specific resource files: a resource file named by the variable) 165 235.1 B
0.81 -0.05 (XUSERFILESEARCHPATH; or if this variable is not set, a file in the directory) 165 221.8 B
-0.05 (named by the environment variable XAPPLRESDIR.) 165 208.5 S
-0.05 (2.) 147 189.2 S
0.07 -0.05 (Resources loaded into the RESOURCE_MANAGER property of the root window) 165 189.2 B
0.71 -0.05 (with) 165 175.9 B
2 F
0.71 -0.05 (xrdb) 186.74 175.9 B
1 F
0.71 -0.05 (; these resources are accessible regardless of the machine on which the) 205.78 175.9 B
-0.05 (client is running.) 165 162.6 S
0.41 -0.05 (If no resources are loaded in this way, the resource manager looks for a) 165 143.3 B
2 10 Q
0.35 -0.25 (.Xdefaults) 469.22 143.3 B
1 10.5 Q
1.04 -0.05 (file in the user\325s home directory; these resources are only available on the local) 165 130 B
-0.05 (machine.) 165 116.7 S
FMENDPAGE
%%EndPage: "317" 21
%%Page: "318" 22
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (318) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 10 Q
7 X
(12) 71.88 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10.5 Q
0 X
0 0 0 1 0 0 0 K
-0.05 (3.) 141 650 S
0 -0.05 (Screen-specific resources loaded into the SCREEN_RESOURCES property of the) 159 650 B
0.21 -0.05 (root window with) 159 636.7 B
2 F
0.21 -0.05 (xrdb) 236.02 636.7 B
1 F
0.21 -0.05 (. The resource manager will sort and place the resources in) 255.06 636.7 B
5.72 -0.05 (RESOURCE_MANAGER \050where they will apply to all screens\051 or in) 159 623.4 B
-0.05 (SCREEN_RESOURCES \050where they will apply to the appropriate screen\051.) 159 610.1 S
-0.05 (4.) 141 590.8 S
0.15 -0.05 (Next, the contents of any file specified by the shell environment variable XENVI-) 159 590.8 B
-0.05 (RONMENT will be loaded.) 159 577.5 S
-0.62 -0.05 (If this variable is not defined, the resource manager looks for a file named) 159 558.2 B
2 10 Q
-0.54 -0.25 (.Xdefaults) 459.77 558.2 B
2 10.5 Q
-0.62 -0.05 (-) 497.55 558.2 B
6 F
0.82 -0.05 (hostname) 159 544.9 B
1 F
0.82 -0.05 ( in the user\325s home directory, where) 200.59 544.9 B
6 F
0.82 -0.05 (hostname) 358.35 544.9 B
1 F
0.82 -0.05 ( is the name of the host) 399.94 544.9 B
-0.05 (where the) 159 531.6 S
2 F
-0.05 (client) 202.21 531.6 S
1 F
-0.05 ( is running \050not necessarily where the display is\051.) 225.23 531.6 S
-0.05 (These methods are used to set machine-specific resources.) 159 512.3 S
-0.05 (5.) 141 493 S
0.17 -0.05 (Any values specified on the command line with the) 159 493 B
3 10 Q
0.39 -0.05 (-xrm) 376.32 493 B
1 F
0.16 -0.05 ( option will be loaded for) 400.12 493 B
-0.05 (that instance of the program.) 159 479.7 S
0.06 (All of these various sources of defaults will be loaded and merged according to the prece-) 141 460.73 P
-0.34 (dence rules described earlier in the section \322Precedence Rules for Resource Specification.\323) 141 448.43 P
-0.31 (The client will then merge these various defaults specified by the user with its own internal) 141 430.13 P
(defaults, if any.) 141 417.83 T
0.44 (Finally, if the user has specified any options on the command line \050other than with the) 141 399.53 P
3 F
1.06 (-) 495 399.53 P
0.3 (xrm) 141 387.23 P
1 F
0.13 ( option\051, these values will override those specified by resource defaults, regardless of) 159 387.23 P
(their source.) 141 374.93 T
FMENDPAGE
%%EndPage: "318" 22
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 22
%%DocumentFonts: Helvetica-Narrow-BoldOblique
%%+ Times-Roman
%%+ Times-Italic
%%+ Courier
%%+ Courier-BoldOblique
%%+ ZapfDingbats
%%+ Times-BoldItalic
%%+ Courier-Oblique
%%+ Helvetica-Bold
%%+ Courier-Bold
%%EOF
