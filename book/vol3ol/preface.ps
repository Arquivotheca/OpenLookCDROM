%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{1 dict dup /PageSize [paperwidth paperheight]put setpagedevice}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 {1 dict dup /ManualFeed manualfeed put setpagedevice } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 21 FMDOCUMENT
0 0 /Helvetica-Narrow-BoldOblique FMFONTDEFINE
1 0 /Times-Roman FMFONTDEFINE
2 0 /Times-Italic FMFONTDEFINE
3 0 /Courier FMFONTDEFINE
4 0 /Courier-Bold FMFONTDEFINE
5 0 /Courier-BoldOblique FMFONTDEFINE
6 0 /Times-BoldItalic FMFONTDEFINE
7 1 /ZapfDingbats FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "xxvii" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (PREFACE) 428.72 693.79 S
0 9 Q
0.45 (xxvii) 482.33 693.79 S
111 684 507 708 R
0.2 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
0 0 0 0 1 1 1 K
1 10 Q
7 X
(Chapter) 138 719.33 T
(1) 172.16 719.33 T
2 F
(X USER\325S GUIDE: OPEN LOOK EDITION) 177.16 719.33 T
0 0 0 1 0 0 0 K
0 35 Q
0 X
0 0 0 1 0 0 0 K
(Preface) 144.5 573.5 T
1 10 Q
0.21 (The) 147 434.33 P
1 9 Q
0.19 (OPEN LOOK) 165.26 434.33 P
0.19 (GUI) 218.89 434.33 P
1 10 Q
0.21 (is a popular user interface style \050also called a \322graphical user inter-) 237.32 434.33 P
-0.15 (face,\323 or) 147 422.03 P
1 9 Q
-0.13 (GUI) 183.63 422.03 P
1 10 Q
-0.15 (\051 for programs running on window systems like The X Window System. X11) 199.62 422.03 P
2.51 (itself is a network-based graphics windowing system developed at MIT and widely) 147 409.73 P
0.46 (adopted as an industry standard. But X11 only provides the foundation and skeleton of a) 147 397.43 P
0.86 (window system, just as concrete and wood provide the foundation and framework for a) 147 385.13 P
0.04 (house. The material that you put on the outside will significantly affect both how the final) 147 372.83 P
-0.01 (edifice looks and how comfortable it will be to live and work in, be that edifice a house or) 147 360.53 P
0.73 (a window system. One exterior, or Graphical User Interface, that became popular in the) 147 348.23 P
0.36 (late 1980\325s and early 1990\325s is) 147 335.93 P
1 9 Q
0.32 (OPEN LOOK) 274.14 335.93 P
1 10 Q
0.36 (. The) 325.21 335.93 P
1 9 Q
0.32 (OPEN LOOK) 348.98 335.93 P
0.32 (GUI) 402.9 335.93 P
1 10 Q
0.36 ( was designed by Sun) 418.9 335.93 P
1.82 (and) 147 323.63 P
1 9 Q
1.64 (AT&T) 165.76 323.63 P
1 10 Q
1.82 ( with help from Xerox, and is based in part\321like other) 190.26 323.63 P
1 9 Q
1.64 (X11 GUI) 432.44 323.63 P
1 10 Q
1.82 (s such as) 467.82 323.63 P
1 9 Q
0.04 (OSF/) 147 311.33 P
1 10 Q
0.04 (Motif, and other window systems such as the Apple Macintosh\321on pioneering work) 166.01 311.33 P
0.23 (done in the late 1960\325s and 1970\325s at Xerox Palo Alto Research Center \050) 147 299.03 P
1 9 Q
0.21 (PARC) 439.7 299.03 P
1 10 Q
0.23 (\051 and other) 463.21 299.03 P
-0.22 (research sites.) 147 286.73 P
1 9 Q
-0.2 (OPEN LOOK) 205.14 286.73 P
1 10 Q
-0.22 ( has also been influenced by a family resemblance to SunView,) 255.68 286.73 P
(Sun\325s earlier, very successful, and long-popular workstation window system.) 147 274.43 T
-0.38 (If you are new to X, you may be wondering why you should consider the) 147 256.13 P
1 9 Q
-0.34 (OPEN LOOK GUI) 436.2 256.13 P
1 10 Q
-0.38 (.) 504.5 256.13 P
0.65 (First of all,) 147 243.83 P
1 9 Q
0.59 (OPEN LOOK) 195.63 243.83 P
1 10 Q
0.65 ( has many features that make it more intuitive and easier to use) 246.96 243.83 P
2.68 (than other X-based user interfaces. For example, frequently-accessed menus can be) 147 231.53 P
-0.21 (\322pinned up\323 for as long as you need them. As well, the graphical elements each have a dis-) 147 219.23 P
0.97 (tinctive shape\321a button is always oval, a pull-down menu is always shown by a small) 147 206.93 P
1.02 (triangle, etc.\321which makes it easier to spot buttons, pull-down menus, etc., than when) 147 194.63 P
0.15 (using a GUI that uses rectangular shapes for everything. And of course if you have previ-) 147 182.33 P
(ously used SunView, you will find much that is familiar in the) 147 170.03 T
1 9 Q
(OPEN LOOK GUI) 398.94 170.03 T
1 10 Q
(.) 467.92 170.03 T
-0.14 (In addition, the) 147 151.73 P
1 9 Q
-0.13 (OPEN LOOK GUI) 209.9 151.73 P
1 10 Q
-0.14 ( specifies the behavior of certain key applications such as) 278.62 151.73 P
-0.09 (the File Manager \050other GUIs do not specify this, and thus several different and incompat-) 147 139.43 P
-0.35 (ible \322desktop managers\323 are available at extra cost\051. Comprehensive implementations such) 147 127.13 P
-0.49 (as Sun\325s OpenWindows include a suite of useful \322deskset\323 applications that make the inter-) 147 114.83 P
-0.08 (face much more than a bare-bones \322look and feel.\323 OpenWindows includes \050in addition to) 147 102.53 P
FMENDPAGE
%%EndPage: "xxvii" 1
%%Page: "xxviii" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (xxviii) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
-0.03 (the File Manager\051 a set of useful tools called the DeskSet, which includes a calendar man-) 141 650.33 P
0.81 (ager for scheduling appointments among people in your workgroup, a multi-media mail) 141 638.03 P
0.22 (tool that can include audio files and graphical images in mail messages, tools for control-) 141 625.73 P
0.14 (ling printers, etc. All of these are either not available or cost a significant amount of extra) 141 613.43 P
(money when using other GUIs.) 141 601.13 T
1.1 (Because the) 141 582.83 P
1 9 Q
0.99 (OPEN LOOK GUI) 193.75 582.83 P
1 10 Q
1.1 ( is a specification, there are several implemtnations of it.) 264.72 582.83 P
-0.47 (Some of the complexity of this volume derives from listing the differences amont them The) 141 570.53 P
2 F
-0.34 (X Window System User\325s Guide, OPEN LOOK Edition) 141 558.23 P
1 F
-0.34 ( covers the most popular implemen-) 358.58 558.23 P
0.05 (tation of the) 141 545.93 P
1 9 Q
0.05 (OPEN LOOK GUI) 191.98 545.93 P
1 10 Q
0.05 (, Sun\325s OpenWindows Version 3.) 261.06 545.93 P
1 8 Q
0.04 (*) 395.7 549.93 P
1 10 Q
0.05 ( Much of the information) 399.7 545.93 P
0.27 (is also applicable to) 141 533.63 P
1 9 Q
0.24 (AT&T) 223.73 533.63 P
1 10 Q
0.27 (\325s) 248.22 533.63 P
1 9 Q
0.24 (OPEN LOOK) 258.21 533.63 P
1 10 Q
0.27 ( 4 software, and indeed much of it is applicable) 309.19 533.63 P
(to any version of The X Window System.) 141 521.33 T
0.31 (We describe the basic concepts of window systems and terminology, the application pro-) 141 503.03 P
1.35 (grams \050clients\051 commonly included with these packages as well as some free-software) 141 490.73 P
0.45 (clients that you may wish to obtain on your own, and how client programs behave under) 141 478.43 P
1 9 Q
-0.05 (OPEN LOOK) 141 466.13 P
1 10 Q
-0.06 (. The) 191.69 466.13 P
1 9 Q
-0.05 (OPEN LOOK) 214.63 466.13 P
1 10 Q
-0.06 ( edition is intended for those using X with the) 265.32 466.13 P
1 9 Q
-0.05 (OPEN LOOK) 450.31 466.13 P
1 10 Q
0.65 (interface. There are also Motif and \322generic \050MIT\051 X11\323 versions of this book available) 141 453.83 P
(from O\325Reilly & Associates.) 141 441.53 T
0 1 1 0 1 0 0 K
0 13.3 Q
0 1 1 0 1 0 0 K
(Historical Update) 141 421.03 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
0.53 (The) 141 403.93 P
1 9 Q
0.48 (OPEN LOOK) 159.58 403.93 P
1 10 Q
0.53 ( Graphical User Interface has been abandoned by its two sponsors, Sun) 210.8 403.93 P
-0.35 (and) 141 391.63 P
1 9 Q
-0.31 (AT&T) 157.59 391.63 P
1 10 Q
-0.35 (, as part of the Common Open Systems Environment process\325 Common Desktop) 182.09 391.63 P
-0.23 (Environment \050CDE\051. As a result, there is no new commercial development of) 141 379.33 P
1 9 Q
-0.2 (OPEN LOOK) 450.46 379.33 P
1 10 Q
-0.1 (applications. Most commercial software for X is now being deveoped for Motif, since that) 141 367.03 P
0.06 (is the basic GUI specified by CDE. However, the availability of the XView toolkit as free) 141 354.73 P
1.06 (software and its popularity in the Linux field, as well as the large market share of Sun) 141 342.43 P
-0.16 (Microsystems workstations, all of which still \050March 1995\051 ship with) 141 330.13 P
1 9 Q
-0.15 (OPEN LOOK) 419.07 330.13 P
1 10 Q
-0.16 ( as their) 469.67 330.13 P
0.62 (default windowing environment, ensures that) 141 317.83 P
1 9 Q
0.56 (OPEN LOOK) 327.43 317.83 P
1 10 Q
0.62 ( will remain popular for some) 378.73 317.83 P
(years to come.) 141 305.53 T
0 1 1 0 1 0 0 K
0 20 Q
0 1 1 0 1 0 0 K
(Assumptions) 105 273.27 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
1.09 (This book assumes that the OpenWindows package or another) 141 253.93 P
1 9 Q
0.98 (OPEN LOOK) 402.68 253.93 P
1 10 Q
1.09 ( package is) 454.4 253.93 P
-0.44 (already installed on your) 141 241.63 P
1 9 Q
-0.4 (UNIX) 240.87 241.63 P
1 10 Q
-0.44 ( system in the standard locations, and that all standard) 263.36 241.63 P
1 9 Q
-0.4 (OPEN) 477.5 241.63 P
-0.37 (LOOK) 141 229.33 P
1 10 Q
-0.41 ( clients are available \050if not, consult the appropriate vendor\325s documentation, or refer) 165.99 229.33 P
-0.46 (to Volume Eight,) 141 217.03 P
2 F
-0.46 (X Window System Administrator\325s Guide) 211.3 217.03 P
1 F
-0.46 (\051. If you are on Linux, then most) 373.92 217.03 P
1.82 (of the Sun Deskset tools will not be available, though you may be able to run them) 141 204.73 P
0.22 (remotely across the network. This book also assumes that you have basic familiarity with) 141 192.43 P
0.39 (The) 141 180.13 P
1 9 Q
0.35 (UNIX) 159.44 180.13 P
1 10 Q
0.39 ( Operating System. It is probable that the) 181.93 180.13 P
1 9 Q
0.35 (OPEN LOOK GUI) 351.99 180.13 P
1 10 Q
0.39 ( will be \322ported\323 or) 421.68 180.13 P
-0.29 (made available on operating systems other than) 141 167.83 P
1 9 Q
-0.26 (UNIX) 331.41 167.83 P
1 10 Q
-0.29 (; the XView toolkit, for example, has) 353.9 167.83 P
1.37 (been ported to every major version of) 141 155.53 P
1 9 Q
1.24 (UNIX) 303.63 155.53 P
1 10 Q
1.37 ( and is commercially available for Digital) 326.12 155.53 P
0 1 1 0 1 0 0 K
105 133 501 150.98 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
105 133 501 150.98 R
7 X
0 1 1 0 1 0 0 K
V
106.07 138.96 286.07 138.96 2 L
V
0.5 H
2 Z
0 X
N
45 63 567 729 C
0 0 0 1 0 0 0 K
1 8 Q
0 X
0 0 0 1 0 0 0 K
0.21 (*) 141 127.67 P
0.21 (Version 3 is standard on Solaris 1.0 \050SunOS 4.1.2\051 on SPARC, and Solaris 2 \050SunOS SVR4\051 on both SPARC) 147 127.67 P
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
0.17 (and Intel. Much of the information also applies to OpenWindows Version 2, though the DeskSet clients and the) 141 117.67 P
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
-0.11 (operation of drag-and-drop are different. We do not mention all the differences, but do provide some coverage of) 141 107.67 P
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
(OpenWindowsV2 because it\325s the last version that Sun is making available for the Sun-3 product family line.) 141 97.67 T
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "xxviii" 2
%%Page: "xxix" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (PREFACE) 428.72 693.79 S
0 9 Q
0.45 (xxix) 484.84 693.79 S
111 684 507 708 R
0.5 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
1.54 (Equipment\325s) 147 650.33 P
1 9 Q
1.39 (VMS) 202.15 650.33 P
1 10 Q
1.54 ( operating system. And Quantum Software\325s QNX operating system) 221.65 650.33 P
0.6 (uses the) 147 638.03 P
1 9 Q
0.54 (OPEN LOOK GUI) 182.65 638.03 P
1 10 Q
0.6 ( as the interface to QNX Windows. If you are using the) 252.71 638.03 P
1 9 Q
0.54 (OPEN) 483.5 638.03 P
1.43 (LOOK GUI) 147 625.73 P
1 10 Q
1.59 ( on an operating system other than) 191.67 625.73 P
1 9 Q
1.43 (UNIX) 343.07 625.73 P
1 10 Q
1.59 ( you will still find this book use-) 365.57 625.73 P
2.04 (ful\321) 147 613.43 P
1 9 Q
1.83 (UNIX) 168.11 613.43 P
1 10 Q
2.04 ( dependencies are not that widespread\321but you may occasionally need to) 190.6 613.43 P
0.26 (translate a command example into its equivalent on your system. This book also assumes) 147 601.13 P
0.18 (that you are using a three-button mouse, and that the configuration files provided by your) 147 588.83 P
0.19 (vendor for) 147 576.53 P
2 F
0.19 (olwm) 191.81 576.53 P
1 F
0.19 ( and the clients have not been extensively modified locally. \050If this is not) 213.48 576.53 P
0.38 (the case, the book provides information that will allow you to understand how these pro-) 147 564.23 P
(grams can be configured on your system.\051) 147 551.93 T
0.23 (In a few places we refer to \322contributed\323 software. Most of the) 147 533.63 P
1 9 Q
0.21 (OPEN LOOK) 403.34 533.63 P
1 10 Q
0.23 (-specific free) 454.3 533.63 P
-0.18 (software is included with the CD-ROM accompanying this book. If this is not available on) 147 521.33 P
0.98 (your system, you can either ignore the information\321none of these programs is critical,) 147 509.03 P
0.1 (though we have included some that are useful\321or you can obtain them in source form by) 147 496.73 P
2 F
0.6 (ftp) 147 484.43 P
1 F
0.6 ( or) 157.56 484.43 P
2 F
0.6 (uucp) 172.1 484.43 P
1 F
0.6 ( from) 191.54 484.43 P
1 9 Q
0.54 (UUNET) 217.18 484.43 P
1 10 Q
0.6 ( or elsewhere, then use) 247.67 484.43 P
2 F
0.6 (imake) 344.55 484.43 P
1 F
0.6 ( to compile them. See) 368.43 484.43 P
2 F
0.6 (Xshowfonts) 460.88 484.43 P
(and Other Free Programs) 147 472.13 T
1 F
( below for details.) 251.71 472.13 T
0.35 (This book is written for both first-time and experienced users of the) 147 453.83 P
1 9 Q
0.32 (OPEN LOOK GUI) 424.53 453.83 P
1 10 Q
0.35 ( on) 494.15 453.83 P
-0.04 (the X Window System. First-time users should read the book in order, starting with Chap-) 147 441.53 P
(ter 1,) 147 429.23 T
2 F
(An Introduction to OPEN LOOK and the X Window System) 170.05 429.23 T
1 F
(.) 408.1 429.23 T
0.43 (Experienced users of other X11 variants can use this book either to learn the specifics of) 147 410.93 P
1 9 Q
0.58 (OPEN LOOK) 147 398.63 P
1 10 Q
0.64 (\321start with Chapter 2,) 198.32 398.63 P
2 F
0.64 (Working in the OPEN LOOK Environment) 295.04 398.63 P
1 F
0.64 (\321or as a) 469.62 398.63 P
-0.15 (reference for the client programs detailed here. Since there is great flexibility with X, even) 147 386.33 P
0.82 (frequent users need to check the syntax and availability of options. Reference pages for) 147 374.03 P
1.91 (common client programs list command-line options, customization database \050resource) 147 361.73 P
(database\051 variables, and other details.) 147 349.43 T
0 1 1 0 1 0 0 K
0 20 Q
0 1 1 0 1 0 0 K
(Organization) 111 317.17 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
(The book contains these parts:) 147 297.83 T
0 16 Q
(Part One: Using X and OPEN LOOK) 147 275.53 T
1 10 Q
(The) 147 257.53 T
2 F
(Preface) 165.05 257.53 T
1 F
(describes the book\325s assumptions, audience, organization, and conventions.) 198.65 257.53 T
-0.16 (Chapter 1,) 147 239.23 P
2 F
-0.16 (An Introduction to OPEN LOOK and the X Window System) 190.85 239.23 P
1 F
-0.16 (, describes the basic) 427.49 239.23 P
0.29 (terminology associated with) 147 226.93 P
1 9 Q
0.26 (OPEN LOOK) 263.14 226.93 P
1 10 Q
0.29 ( and the X Window System: server, client, win-) 314.14 226.93 P
(dow, etc. The most important client programs are described.) 147 214.63 T
0.75 (Chapter 2,) 147 196.33 P
2 F
0.75 (Working in the OPEN LOOK Environment) 192.66 196.33 P
1 F
0.75 (, shows how to start the programs) 367.79 196.33 P
-0.49 (necessary to begin using X: the server, the first terminal window, and the window manager.) 147 184.03 P
0 (It teaches the skills necessary to begin working productively. This chapter also shows you) 147 171.73 P
-0.03 (how to add additional windows; exit from a window; use the tools of the display; do some) 147 159.43 P
-0.49 (basic window manager operations using the olwm window manager, and set up the display.) 147 147.13 P
-0.25 (Chapter 3,) 147 128.83 P
2 F
-0.25 (Opening Additional Windows) 190.66 128.83 P
1 F
-0.25 (, describes how to start additional client windows.) 308.5 128.83 P
1.7 (You are introduced to two methods of customizing X client programs: command-line) 147 116.53 P
FMENDPAGE
%%EndPage: "xxix" 3
%%Page: "xxx" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (xxx) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
0.87 (options and resource variables. In addition, Chapter 3 shows you how to identify) 141 650.33 P
1 9 Q
0.78 (OPEN) 477.5 650.33 P
(LOOK) 141 638.03 T
1 10 Q
( clients, X Toolkit clients, and Motif clients.) 165.99 638.03 T
0.38 (At this point you will want to start) 141 619.73 P
2 F
0.38 (using) 284.08 619.73 P
1 F
0.38 ( the system. If you prefer a visual, icon-oriented) 305.75 619.73 P
0.28 (method of using computers, you should learn to use the File Manager. If you are familiar) 141 607.43 P
1.81 (with the) 141 595.13 P
1 9 Q
1.63 (UNIX) 179.62 595.13 P
1 10 Q
1.81 ( command-line interface, you should learn to use the) 202.11 595.13 P
2 F
1.81 (cmdtool) 431.14 595.13 P
1 F
1.81 ( terminal) 463.36 595.13 P
(emulator.) 141 582.83 T
0.49 (Chapter 4,) 141 564.53 P
2 F
0.49 (Using the OPEN LOOK  File Manager) 186.13 564.53 P
1 F
0.49 (, discusses the) 345.72 564.53 P
1 9 Q
0.44 (OPEN LOOK) 406.62 564.53 P
1 10 Q
0.49 ( File Man-) 457.8 564.53 P
0.14 (ager, a comprehensive user-interface program. It shows the small differences between the) 141 552.23 P
(Sun and) 141 539.93 T
1 9 Q
(AT&T) 176 539.93 T
1 10 Q
( versions.) 200.5 539.93 T
0.28 (Chapter 5,) 141 521.63 P
2 F
0.28 (The cmdtool/shelltool Terminal Emulator) 185.71 521.63 P
1 F
0.28 (, tells you how to use Sun\325s terminal) 352.95 521.63 P
0.29 (emulator. Certain aspects of its operation apply to other) 141 509.33 P
1 9 Q
0.26 (OPEN LOOK) 368.58 509.33 P
1 10 Q
0.29 ( clients as well, par-) 419.58 509.33 P
0.14 (ticularly) 141 497.03 P
2 F
0.14 (textedit) 176.97 497.03 P
3 F
0.33 (\050) 206.41 497.03 P
1 F
0.14 (1\051 and to all) 212.41 497.03 P
1 9 Q
0.12 (OPEN LOOK) 263.51 497.03 P
1 10 Q
0.14 ( clients that have \322text fields.\323 For this reason,) 314.37 497.03 P
2 F
-0.45 (textedit) 141 484.73 P
1 F
-0.45 (\0501\051 is described in this chapter. The other commonly-used terminal emulator,) 170.44 484.73 P
2 F
-0.45 (xterm) 475.73 484.73 P
1 F
-0.45 (,) 498.5 484.73 P
(is described in Appendix A,) 141 472.43 T
2 F
(The xterm/olterm Terminal Emulator) 255.43 472.43 T
1 F
(.) 404.04 472.43 T
0.23 (Chapter 6,) 141 454.13 P
2 F
0.23 (Using the OPEN LOOK Window Manager) 185.62 454.13 P
1 F
0.23 (, describes additional window man-) 357.6 454.13 P
-0.01 (ager operations, such as resizing windows and changing the order of windows in the stack) 141 441.83 P
2.39 (on your screen. It also describes the minor differences between the Sun and) 141 429.53 P
1 9 Q
2.15 (AT&T) 476.5 429.53 P
1 10 Q
(versions.) 141 417.23 T
0.65 (Chapter 7,) 141 398.93 P
2 F
0.65 (The OpenWindows DeskSet  Clients) 186.46 398.93 P
1 F
0.65 (, describes the DeskSet clients that Sun\325s) 332.95 398.93 P
1.9 (OpenWindows package includes: Multimedia Mail Tool and Audio Tool that let you) 141 386.63 P
0.09 (record, play back, and send and receive verbal or other sound data; the Calendar Manager) 141 374.33 P
1.01 (for scheduling individual or group appointments,) 141 362.03 P
2 F
1.01 (print tool, tape tool, perfmeter, clock,) 345.67 362.03 P
-0.05 (calculator, iconedit, binder) 141 349.73 P
1 F
-0.05 (, and two online documentation facilities, Answerbook and the) 250.34 349.73 P
(Help Viewer.) 141 337.43 T
0.24 (The following programs, though strictly speaking part of the DeskSet, are described else-) 141 319.13 P
0.88 (where:) 141 306.83 P
2 F
0.88 (File Manager) 171.59 306.83 P
1 F
0.88 (\050described in Chapter 4,) 231.12 306.83 P
2 F
0.88 (Using the OPEN LOOK  File Manager) 333.23 306.83 P
1 F
0.88 (\051,) 495.17 306.83 P
2 F
1.61 (cmdtool/shelltool) 141 294.53 P
1 F
1.61 (and) 214.56 294.53 P
2 F
1.61 (textedit) 233.1 294.53 P
1 F
1.61 ( \050described in Chapter 5,) 262.54 294.53 P
2 F
1.61 (The cmdtool/shelltool Terminal) 371.67 294.53 P
(Emulator) 141 282.23 T
1 F
(\051, and) 178.78 282.23 T
2 F
( snapshot) 201.55 282.23 T
1 F
(\050described in) 242.11 282.23 T
(Chapter 9,) 296.54 282.23 T
2 F
(Graphics Clients) 340.7 282.23 T
(\051) 408.76 282.23 T
1 F
(.) 412.09 282.23 T
0.11 (Chapter 8,) 141 263.93 P
2 F
0.11 (Other Standard Clients) 185.38 263.93 P
1 F
0.11 (, gives an overview of other clients available with stan-) 278.94 263.93 P
0.61 (dard distributions of The X Window System, including window and display information) 141 251.63 P
0.08 (clients, the) 141 239.33 P
2 F
0.08 (xkill) 186.98 239.33 P
1 F
0.08 ( program, and several \322desk accessories.\323 In describing various MIT stan-) 204.2 239.33 P
(dard clients, this chapter highlights some features of the Athena widget set.) 141 227.03 T
0.07 (Chapter 9,) 141 208.73 P
2 F
0.07 (Graphics Clients) 185.29 208.73 P
1 F
0.07 (, explains how to use the major graphics clients included with) 253.42 208.73 P
0.18 (The X Window System and) 141 196.43 P
1 9 Q
0.17 (OPEN LOOK) 255.52 196.43 P
1 10 Q
0.18 ( and OpenWindows. The) 306.42 196.43 P
1 9 Q
0.17 (OPEN LOOK) 409.64 196.43 P
1 10 Q
0.18 ( programs) 460.55 196.43 P
1.27 (include the) 141 184.13 P
2 F
1.27 (snapshot) 190.2 184.13 P
1 F
1.27 (and) 229.52 184.13 P
2 F
1.27 ( olprintscreen) 243.96 184.13 P
1 F
1.27 ( screen capture programs, and the) 301.06 184.13 P
2 F
1.27 ( olpixmap) 441.8 184.13 P
1 F
1.27 ( and) 482.79 184.13 P
2 F
-0.01 (iconedit) 141 171.83 P
1 F
-0.01 ( icon editors. The standard clients include) 173.22 171.83 P
2 F
-0.01 (xwd, xpr) 342.58 171.83 P
1 F
-0.01 (, and) 377.01 171.83 P
2 F
-0.01 (bitmap) 398.93 171.83 P
3 F
-0.02 (.) 426.71 171.83 P
1 F
-0.01 (The chapter ends) 432.71 171.83 P
(with sections on PostScript previewing and font editing.) 141 159.53 T
0 16 Q
(Part T) 141 137.23 T
(wo: Customizing X) 177.7 137.23 T
1 10 Q
-0.35 (Chapter 10,) 141 119.23 P
2 F
-0.35 (X11, OPEN LOOK and OpenWindows Font Specification) 189.46 119.23 P
1 F
-0.35 (, describes the some-) 418.18 119.23 P
2.64 (what complicated font naming conventions and ways to simplify font specification,) 141 106.93 P
0.38 (including wildcarding and aliasing, for both regular and scaleable fonts. It describes how) 141 94.63 P
FMENDPAGE
%%EndPage: "xxx" 4
%%Page: "xxxi" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (PREFACE) 428.72 693.79 S
0 9 Q
0.45 (xxxi) 484.84 693.79 S
111 684 507 708 R
0.5 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
-0.5 (to use the) 147 650.33 P
2 F
-0.5 (xlsfonts) 186.33 650.33 P
1 F
-0.5 (,) 216.89 650.33 P
2 F
-0.5 (xfd) 221.4 650.33 P
1 F
-0.5 (, and) 233.62 650.33 P
2 F
-0.5 (xfontsel) 254.56 650.33 P
1 F
-0.5 ( clients and the OpenWindows) 285.67 650.33 P
2 F
-0.5 (text) 408.43 650.33 P
1 F
-0.5 ( demo to list, display,) 422.88 650.33 P
(and select available display fonts.) 147 638.03 T
-0.17 (Chapter 11,) 147 619.73 P
2 F
-0.17 (Command-line Options) 195.81 619.73 P
1 F
-0.17 (, discusses some of the standard command line options) 289.25 619.73 P
(accepted by most X11 clients, be they MIT clients or OpenWindows clients.) 147 607.43 T
0.43 (Chapter 12,) 147 589.13 P
2 F
0.43 (Setting Resources) 197.01 589.13 P
1 F
0.43 (, shows you how to create an) 268.82 589.13 P
2 F
0.43 (.Xdefaults) 390.93 589.13 P
1 F
0.43 (file to set default) 438.23 589.13 P
-0.47 (characteristics for client applications. Also discusses the tool \050called) 147 576.83 P
2 F
-0.47 (Properties...) 418.24 576.83 P
1 F
-0.47 ( on Open-) 467.96 576.83 P
-0.07 (Windows and \322Workspace Manager\323 on) 147 564.53 P
1 9 Q
-0.07 (AT&T-OL) 311.3 564.53 P
1 10 Q
-0.07 (\051 that maintains your) 350.79 564.53 P
2 F
-0.07 (.Xdefaults) 436.88 564.53 P
1 F
-0.07 (file for) 479.58 564.53 P
0.2 (you. This chapter also describes how to use) 147 552.23 P
2 F
0.2 (xrdb) 324.93 552.23 P
3 F
0.47 (,) 343.26 552.23 P
1 F
0.2 ( which saves you from having to main-) 349.26 552.23 P
(tain multiple) 147 539.93 T
2 F
(.Xdefaults) 201.17 539.93 T
1 F
( files if you run clients on multiple machines.) 241.45 539.93 T
-0.23 (Chapter 13,) 147 521.63 P
2 F
-0.23 (Customizing olwm) 195.7 521.63 P
1 F
-0.23 (, describes the process of customizing) 269.65 521.63 P
2 F
-0.23 (olwm) 422.41 521.63 P
1 F
-0.23 ( by showing the) 444.08 521.63 P
-0.47 (default configuration files shipped by Sun and) 147 509.33 P
1 9 Q
-0.42 (AT&T) 331.18 509.33 P
1 10 Q
-0.47 (, and examines the purpose and syntax) 355.68 509.33 P
-0.06 (of entries. It explains techniques for revising the files to modify existing menus and create) 147 497.03 P
(new ones. Chapter 13 also reviews the X resources that can be used to control) 147 484.73 T
2 F
(olwm) 460.82 484.73 T
1 F
(.) 482.49 484.73 T
-0.02 (Chapter 14,) 147 466.43 P
2 F
-0.02 (Customization Clients) 196.12 466.43 P
1 F
-0.02 (, describes how to set display and keyboard preferences) 284.73 466.43 P
-0.14 (using) 147 454.13 P
2 F
-0.14 (xset) 171.04 454.13 P
1 F
-0.14 ( and how to set root window preferences using) 186.59 454.13 P
2 F
-0.14 (xsetroot) 374.5 454.13 P
1 F
-0.14 (. Chapter 14 also demon-) 406.72 454.13 P
1.44 (strates how to use) 147 441.83 P
2 F
1.44 (xmodmap) 226.62 441.83 P
1 F
1.44 ( to redefine the logical key names and pointer commands) 265.51 441.83 P
1.6 (recognized by X. In addition, we describe some general customizing utilities, such as) 147 429.53 P
(binder, which updates the file manager\325s list of icons and programs.) 147 417.23 T
0 16 Q
(Part Three: Client Reference Pages) 147 394.93 T
1 10 Q
-0.2 (Presents extended reference pages for three versions of the server \050) 147 376.93 P
1 9 Q
-0.18 (MIT) 412.65 376.93 P
1 10 Q
-0.2 (,) 429.15 376.93 P
1 9 Q
-0.18 (AT&T) 433.95 376.93 P
1 10 Q
-0.2 ( and Sun\051 as) 458.45 376.93 P
-0.35 (well as all clients mentioned in this manual. These are in the standard) 147 364.63 P
1 9 Q
-0.31 (UNIX) 423 364.63 P
1 10 Q
-0.35 ( \322manual page\323) 445.49 364.63 P
0.48 (format and should be familiar to users of The) 147 352.33 P
1 9 Q
0.43 (UNIX) 334.9 352.33 P
1 10 Q
0.48 ( Operating System or) 357.4 352.33 P
1 9 Q
0.43 (UNIX) 447.09 352.33 P
1 10 Q
0.48 (-like sys-) 469.58 352.33 P
(tems; for others, the format is described briefly at the beginning of this Part.) 147 340.03 T
0 1 1 0 1 0 0 K
0 13.3 Q
0 1 1 0 1 0 0 K
(Historical Note) 147 319.53 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
-0.23 (The Client Reference Pages are not included in the body of this book, but most of them are) 147 302.43 P
(included in the) 147 290.13 T
2 F
(man) 208.94 290.13 T
1 F
(subdirectory of the CD-ROM accompanying this book.) 228.66 290.13 T
0 16 Q
(Part Four: Appendices) 147 267.83 T
1 10 Q
0.19 (Appendix A,) 147 249.83 P
2 F
0.19 (The xterm/olterm Terminal Emulator) 201.54 249.83 P
1 F
0.19 (, describes how to use the) 350.71 249.83 P
2 F
0.19 (xterm) 457.1 249.83 P
1 F
0.19 ( termi-) 479.87 249.83 P
-0.31 (nal emulator. Certain aspects of) 147 237.53 P
2 F
-0.31 (xterm) 274.84 237.53 P
1 F
-0.31 ( operation described in this chapter, such as scrolling) 297.61 237.53 P
(and \322copy and paste,\323 are common to other X Toolkit applications as well.) 147 225.23 T
0.48 (Appendix B,) 147 206.93 P
2 F
0.48 (OpenWindows and X11 Fonts) 201.57 206.93 P
1 F
0.48 (, discusses the fonts included with OpenWin-) 322.74 206.93 P
(dows and standard X11 releases, and shows how to add your own fonts.) 147 194.63 T
1.32 (Appendix C,) 147 176.33 P
2 F
1.32 (Standard Bitmaps - X11, OPEN LOOK and OpenWindows) 203.24 176.33 P
1 F
1.32 (, describes the) 447.44 176.33 P
(standard bitmap images that you can use for showing as icons, in your root window, etc.) 147 164.03 T
0.22 (Appendix D,) 147 145.73 P
2 F
0.22 (Standard Cursors - X11 and OPEN LOOK) 201.59 145.73 P
1 F
0.22 (, shows the standard cursors, and) 374 145.73 P
(describes what some of them mean.) 147 133.43 T
0.18 (Appendix E,) 147 115.13 P
2 F
0.18 (Control Sequences for xterm and cmdtool) 200.42 115.13 P
1 F
0.18 (, describes the \322escape sequences\323) 368.27 115.13 P
(used to control the) 147 102.83 T
2 F
(cmdtool) 223.66 102.83 T
1 F
( and) 255.88 102.83 T
2 F
(xterm) 275.32 102.83 T
1 F
( terminal emulators.) 298.09 102.83 T
FMENDPAGE
%%EndPage: "xxxi" 5
%%Page: "xxxii" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (xxxii) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
0.14 (Appendix F,) 141 650.33 P
2 F
0.14 (X Toolkit Translation Table Syntax) 193.78 650.33 P
1 F
0.14 (, deescribes the translation tables used by) 334.91 650.33 P
(Xt libraries\321OLIT and Motif.) 141 638.03 T
0.37 (Appendix G,) 141 619.73 P
2 F
0.37 (Introduction to Xt Widget Resources) 195.89 619.73 P
1 F
0.37 (, gives an introduction to the ways that) 343.45 619.73 P
(Xt toolkits such as) 141 607.43 T
1 9 Q
(OLIT) 217.67 607.43 T
1 10 Q
( fit \322Widgets\323 together.) 238.16 607.43 T
0.88 (Appendix H,) 141 589.13 P
2 F
0.88 (OPEN LOOK  Intrinsics Toolkit Widget Resources) 196.91 589.13 P
1 F
0.88 (, is not included in this) 405.5 589.13 P
0.17 (book for reasons of copyright. But most of the programs we discuss are based on XView,) 141 576.83 P
0.49 (so the material in Appendix J will be more relevant anyway. If you are using OLIT, you) 141 564.53 P
(have the manual pages with your toolkit that describe the X Resources they use..) 141 552.23 T
0.1 (Appendix I,) 141 533.93 P
2 F
0.1 (Athena Widget Resources) 191.47 533.93 P
1 F
0.1 (, describes the Resources used by the standard MIT) 294.42 533.93 P
(clients.) 141 521.63 T
0.47 (Appendix J,) 141 503.33 P
2 F
0.47 (OPEN LOOK XView Toolkit Resources) 192.76 503.33 P
1 F
0.47 (, describes the resources used by the) 352.96 503.33 P
1 9 Q
(OPEN LOOK) 141 491.03 T
1 10 Q
( XView toolkit.) 191.74 491.03 T
-0.46 (Appendix K,) 141 472.73 P
2 F
-0.46 (OPEN LOOK Mouseless Operations) 194.24 472.73 P
1 F
-0.46 (, summarizes the editing keys that can be) 339.8 472.73 P
(used to perform window operations from the keyboard.) 141 460.43 T
0.5 (Appendix L,) 141 442.13 P
2 F
0.5 (Running SunView Applications on  OpenWindows) 195.05 442.13 P
1 F
0.5 (, discusses how SunView) 397.84 442.13 P
(applications differ from X applications under OpenWindows) 141 429.83 T
0.02 (Appendix M,) 141 411.53 P
2 F
0.02 (OPEN LOOK and Motif) 196.88 411.53 P
1 F
0.02 (, describes how to use Motif applications in relative) 293.89 411.53 P
1.95 (harmony with) 141 399.23 P
1 9 Q
1.75 (OPEN LOOK) 203.23 399.23 P
1 10 Q
1.95 ( applications. Discusses both Motif applications under the) 255.72 399.23 P
1 9 Q
0.92 (OPEN LOOK) 141 386.93 P
1 10 Q
1.02 ( Window Manager and) 192.66 386.93 P
1 9 Q
0.92 (OPEN LOOK) 291.18 386.93 P
1 10 Q
1.02 ( applications under the Motif Window) 342.84 386.93 P
(Manager,) 141 374.63 T
2 F
(mwm.) 181.54 374.63 T
1 F
1.11 (Appendix N,) 141 356.33 P
2 F
1.11 (OPEN LOOK Software Availability) 197.39 356.33 P
1 F
1.11 (, describes the availability of software) 343.24 356.33 P
(that implements and uses the) 141 344.03 T
1 9 Q
(OPEN LOOK GUI) 259.05 344.03 T
1 10 Q
(.) 328.04 344.03 T
(The) 141 325.73 T
2 F
(Glossary) 159.05 325.73 T
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
1 F
(provides a list of the important technical terms and their meanings.) 198.19 325.73 T
0.58 (The) 141 307.43 P
2 F
0.58 (Documentation Roadmap and Bibliography) 159.63 307.43 P
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
1 F
0.58 (will describe the vendor documentation) 340.37 307.43 P
(and some additional reading.) 141 295.13 T
2 F
(Index) 141 276.83 T
0 1 1 0 1 0 0 K
0 20 Q
0 1 1 0 1 0 0 K
(On the Complexity of X) 105 244.57 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
-0.07 (One complaint you\325ll hear over and over about the X Window System is that it\325s too com-) 141 225.23 P
0.87 (plicated. One reason for this attitude is that X is widely available, and as a result many) 141 212.93 P
-0.2 (programmers have turned their hand to extending it. As a result of that, there are many dif-) 141 200.63 P
1.21 (ferent ways to do even the simplest thing. We make no apology for here documenting) 141 188.33 P
0.7 (several ways to do most everything, as it is as yet too early in the evolution of X to tell) 141 176.03 P
-0.07 (which will survive and become widely used. Yes, X appears complex because it has many) 141 163.73 P
0.58 (variations. But you seldom need to know more than one way of doing something, so we) 141 151.43 P
(offer this advice to the X-struck:) 141 139.13 T
-0.12 (Try out a few ways of doing something. Remember the one that works best for you; forget) 141 120.83 P
(all the rest.) 141 108.53 T
FMENDPAGE
%%EndPage: "xxxii" 6
%%Page: "xxxiii" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (PREFACE) 428.72 693.79 S
0 9 Q
0.45 (xxxiii) 479.83 693.79 S
111 684 507 708 R
0.5 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 20 Q
0 X
0 1 1 0 1 0 0 K
(xshowfonts.c and Other Free Programs) 111 643.67 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
-0.46 (There is a lot of free or contributed software to accompany The X Window System. Indeed,) 147 624.33 P
0.33 (Sun Microsystems has contributed the source for their XView toolkit and several accom-) 147 612.03 P
0.99 (panying clients. The two most important sources of this software in North America are) 147 599.73 P
1 9 Q
2.67 (UUNET) 147 587.43 P
1 10 Q
2.97 (\321a non-profit networking site established by the) 177.49 587.43 P
1 9 Q
2.67 (USENIX) 396.88 587.43 P
1 10 Q
2.97 ( Association\321and) 429.87 587.43 P
2 F
(export.lcs.mit.edu) 147 575.13 T
1 F
(, an anonymous-) 218.38 575.13 T
2 F
(ftp) 284.76 575.13 T
1 F
( site set up by The X Consortium.) 295.32 575.13 T
1.18 (The source to) 147 556.83 P
2 F
1.18 (xshowfonts.c) 207.46 556.83 P
1 F
1.18 (, which is printed in Appendix C,) 258.85 556.83 P
2 F
1.18 (Standard Bitmaps \320 X11,) 402.91 556.83 P
-0.28 (OPEN LOOK and OpenWindows) 147 544.53 P
1 F
-0.28 (, is included in the CD-ROM that accompanies this book.) 279.78 544.53 P
0.61 (If you have received only a printed copy of the book, this program is also available free) 147 532.23 P
-0.29 (from Uunet \050although there is a small connect-time charge if you use their dial-up service\051.) 147 519.93 P
-0.25 (If you have access to) 147 507.63 P
1 9 Q
-0.23 (UUNET) 232.1 507.63 P
1 10 Q
-0.25 (, you can retrieve the source code using) 262.59 507.63 P
2 F
-0.25 (uucp) 421.35 507.63 P
1 F
-0.25 ( or) 440.79 507.63 P
2 F
-0.25 (ftp) 453.62 507.63 P
1 F
-0.25 (. For) 464.18 507.63 P
2 F
-0.25 (uucp) 485.06 507.63 P
1 F
-0.25 (,) 504.5 507.63 P
(find a machine with direct access to) 147 495.33 T
1 9 Q
(UUNET) 292.8 495.33 T
1 10 Q
(, and type the following command:) 323.29 495.33 T
4 8 Q
-0.2 (uucp uunet!~uucp/published/nutshell/Xuser/xshowfonts.c.Z) 165 478.37 S
5 F
-0.2 (\134) 426.4 478.37 S
-0.2 (yourhost!~/yourname) 219 469.37 S
1 10 Q
0.49 (The exclamation marks \050!\051 wil need to be escaped with a backslah if you use the C-shell) 147 453.03 P
0.26 (\050csh\051 instead of the Korn or Bourne shell. The file should appear some time later \050up to a) 147 440.73 P
(day or more\051 in the directory) 147 428.43 T
2 F
(/usr/spool/uucppublic/) 264.75 428.43 T
6 F
(yourname) 354.76 428.43 T
1 F
(.) 396.43 428.43 T
0.23 (You don\325t need to subscribe to Uunet to be able to use their archives via) 147 410.13 P
2 F
0.23 (uucp,) 441.82 410.13 P
1 F
0.23 ( within the) 463.76 410.13 P
0.37 (U.S.A. By calling 1-900-468-7727 and using the login \322uucp\323 with no password, anyone) 147 397.83 P
0.63 (may) 147 385.53 P
2 F
0.63 (uucp) 167.35 385.53 P
1 F
0.63 (any of UUNET\325s on-line source collection. Start by copying) 194.3 385.53 P
2 F
0.63 (uunet!~/ls-lR.Z) 443.81 385.53 P
1 F
0.63 (,) 504.5 385.53 P
0.08 (which is a compressed index of every file in the archives. Peruse this file to get an idea of) 147 373.23 P
0.43 (the programs available. The file) 147 360.93 P
2 F
0.43 (uunet!~/published/nutshell/ls-lR.Z) 283.24 360.93 P
1 F
0.43 (contains a listing of) 427.09 360.93 P
-0.07 (the files in the) 147 348.63 P
2 F
-0.07 (published/nutshell) 209.57 348.63 P
3 F
-0.16 ( s) 282.91 348.63 P
1 F
-0.07 (ubdirectory \050example programs for our books\051. As of) 294.75 348.63 P
-0.45 (this writing, the cost is 40 cents per minute. The charges will appear on your next telephone) 147 336.33 P
(bill.) 147 324.03 T
0.29 (It is more common today to access UUNET vit the Internet. To use) 147 305.73 P
2 F
0.29 (ftp) 425.54 305.73 P
1 F
0.29 (, you will need to) 436.1 305.73 P
0.34 (find a machine with direct access to the Internet. The following example is a sample ses-) 147 293.43 P
(sion, with commands in boldface.) 147 281.13 T
3 9 Q
-0.22 (%) 147 263.5 S
4 10 Q
-0.25 (ftp ftp.uu.net) 157.35 263.5 S
3 F
-0.25 (Connected to ftp.uu.net.) 147 251.83 S
-1.15 -0.25 (220 uunet FTP server \050Version 5.99 Wed May 23 14:40:19 EDT 1990\051) 147 239.83 B
-0.25 (ready.) 147 227.83 S
-0.25 (Name \050ftp.uu.net:ambar\051:) 147 215.83 S
4 F
-0.25 (anonymous) 290.75 215.83 S
3 F
-0.25 (331 Guest login ok, send ident as password.) 147 203.83 S
-0.5 -0.25 (Password:) 147 191.83 B
5 F
-0.5 -0.25 (vol3ol@ora.com) 204 191.83 B
3 F
-0.5 -0.25 (\050use your user name and host here\051) 309.25 191.83 B
-0.25 (30 Guest login ok, access restrictions apply.) 147 179.83 S
-0.25 (ftp> cd published/nutshell/Xuser) 147 167.83 S
-0.25 (250 CWD command successful.) 147 155.83 S
-1.33 -0.25 (ftp>) 147 143.83 B
4 F
-1.33 -0.25 (binary) 174.42 143.83 B
3 F
-1.33 -0.25 (\050you must use binary transfer for compressed files\051) 218.67 143.83 B
-0.25 (200 Type set to I.) 147 131.83 S
-0.25 (ftp>) 147 119.83 S
4 F
-0.25 (get xshowfonts.c.Z) 175.75 119.83 S
3 F
-0.25 (200 PORT command successful.) 147 108.5 S
FMENDPAGE
%%EndPage: "xxxiii" 7
%%Page: "xxxiv" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (xxxiv) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
3 10 Q
0 X
0 0 0 1 0 0 0 K
-0.89 -0.25 (150 Opening ASCII mode data connection for xshowfonts.c.Z \0505587) 141 651 B
-0.25 (bytes\051.) 141 640 S
-0.25 (226 Transfer complete.) 141 629 S
-0.25 (ftp>) 141 618 S
4 F
-0.25 (quit) 169.75 618 S
3 F
-0.25 (221 Goodbye.) 141 607 S
-0.25 (%) 141 596 S
1 F
(The file is a compressed C program. To uncompress the program, type:) 141 578.33 T
3 8 Q
-0.16 (%) 159 561.37 S
4 10 Q
-0.2 (uncompress xshowfonts.c) 168.28 561.37 S
1 F
-0.47 (The) 141 545.03 P
2 F
-0.47 (compress) 158.58 545.03 P
3 F
-1.13 (\050) 196.35 545.03 P
1 F
-0.47 (and) 202.35 545.03 P
2 F
-0.47 (uncompress) 218.82 545.03 P
3 F
-1.13 (\051) 266.59 545.03 P
1 F
-0.47 (programs are now shipped with most vendors\325 versions of) 272.59 545.03 P
1 9 Q
0.1 (UNIX) 141 532.73 P
1 10 Q
0.11 (and are included in System V Release 4.) 169.75 532.73 P
0.11 (If you do not have them, you can get the) 338.39 532.73 P
(source code \050in uncompressed form, of course\051 from Uunet) 141 520.43 T
3 F
(.) 377.88 520.43 T
1 F
0.44 (Finally, if you are on the Internet, the machine) 141 502.13 P
2 F
0.44 (export.lcs.mit.edu) 333.5 502.13 P
1 F
0.44 (is the X Consortium\325s) 411.63 502.13 P
0.22 (public) 141 489.83 P
2 F
0.22 (ftp) 168.72 489.83 P
1 F
0.22 ( machine; it includes the official \050latest release\051 distribution, as well as a terrific) 179.28 489.83 P
0.35 (amount of contributed software. There are other X archive sites around the Internet; con-) 141 477.53 P
0.58 (sult the Frequently Asked Questions article in the mailing list) 141 465.23 P
2 F
0.58 (xpert@expo.lcs.mit.edu) 395.13 465.23 P
1 F
0.58 ( or) 489.59 465.23 P
(the) 141 452.93 T
1 9 Q
(USENET) 155.72 452.93 T
1 10 Q
( group) 190.22 452.93 T
2 F
(comp.windows.x) 218.55 452.93 T
1 F
( for an up-to-date list of archive sites.) 284.66 452.93 T
0.58 (These programs normally come in compressed form \050as the example above\051 or in \322com-) 141 434.63 P
0.67 (pressed tar\323 form. The general assumption is that a C programmer will unpack, compile) 141 422.33 P
-0.31 (and install them. But it\325s not that hard to do this if you are not a programmer. A simple rec-) 141 410.03 P
(ipe is include in the book) 141 397.73 T
2 F
(X Window System Administrat) 244.33 397.73 T
1 F
(or) 365.72 397.73 T
2 F
(\325s Guide) 374.05 397.73 T
1 F
(described below.) 410.71 397.73 T
0 1 1 0 1 0 0 K
0 13.3 Q
0 1 1 0 1 0 0 K
(X W) 141 377.23 T
(indow System Administrator) 161.51 377.23 T
(\325) 309.78 377.23 T
(s Guide, with CD-ROM) 312.62 377.23 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
0.58 (X11 sources are also available bundled with a copy of Volume Eight,) 141 360.13 P
2 F
0.58 (X Window System) 428.18 360.13 P
0.4 (Administrator\325s Guide) 141 347.83 P
1 F
0.4 ( \050O\325Reilly & Associates, 1992\051.) 231.68 347.83 P
1 9 Q
0.36 (CD-ROM) 363.41 347.83 P
1 10 Q
0.4 ( drives are now available) 399.41 347.83 P
0.42 (for just about every workstation. Many) 141 335.53 P
1 9 Q
0.38 (UNIX) 302.11 335.53 P
1 10 Q
0.42 ( vendors now distribute their operating sys-) 324.61 335.53 P
0.63 (tems only on CD, requiring you to buy a player. SunOS, DEC Ultrix, and SGI IRIX are) 141 323.23 P
0.62 (currently shipping on) 141 310.93 P
1 9 Q
0.56 (CD-ROM) 230.91 310.93 P
1 10 Q
0.62 (, as are \050optionally\051 MicroSoft Windows and hundreds of) 266.91 310.93 P
(commercial applications, with more vendors expected to follow.) 141 298.63 T
-0.28 (In fact, CD-ROM drives are now cheap enough that it\325s worth getting a) 141 280.33 P
1 9 Q
-0.26 (CD-ROM) 425.58 280.33 P
1 10 Q
-0.28 ( drive and) 461.58 280.33 P
0.06 (this disk even if you already have the full source of X11, because the magnetic disk space) 141 268.03 P
(you free up can be put to other, more productive purposes.) 141 255.73 T
(The CD includes:) 141 237.43 T
7 3.2 Q
(n) 141 220.73 T
1 10 Q
0.04 (\322Rock Ridge\323) 150 219.13 P
1 9 Q
0.03 (CDROM) 208.95 219.13 P
1 10 Q
0.04 ( drivers from Young Minds, so you can install the CD as a) 241.95 219.13 P
1 9 Q
0.03 (UNIX) 478.51 219.13 P
1 10 Q
0.3 (filesystem on several) 150 206.83 P
1 9 Q
0.27 (UNIX) 237.83 206.83 P
1 10 Q
0.3 ( platforms \050current releases of SunOS already include Rock) 260.32 206.83 P
(Ridge format CD\325s\051.) 150 194.53 T
7 3.2 Q
(n) 141 177.83 T
1 10 Q
0.5 0.03 (Complete \322core\323 source for MIT X11 Release 4 and 5. This includes the new R5 fea-) 150 176.23 B
(tures, such as the font server and) 150 163.93 T
1 9 Q
(XCMS) 283.3 163.93 T
1 10 Q
(, the color management system.) 308.81 163.93 T
7 3.2 Q
(n) 141 147.23 T
1 10 Q
0.5 0.01 (Complete \322contrib\323 source for MIT X11 Release 5. This includes the complete source) 150 145.63 B
-0.26 (for the XView) 150 133.33 P
1 9 Q
-0.23 (OPEN LOOK) 209.49 133.33 P
1 10 Q
-0.26 ( toolkit and several sample clients, as well as some programs) 260 133.33 P
(not in the MIT distribution, such as) 150 121.03 T
2 F
(xtici) 293.89 121.03 T
1 F
(, the Tektronics Color Editor.) 311.11 121.03 T
7 3.2 Q
(n) 141 104.33 T
1 10 Q
-0.26 (Complete examples and source code from all the books in the X Window System Series.) 150 102.73 P
FMENDPAGE
%%EndPage: "xxxiv" 8
%%Page: "xxxv" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (PREFACE) 428.72 693.79 S
0 9 Q
0.45 (xxxv) 482.78 693.79 S
111 684 507 708 R
0.5 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
7 3.2 Q
0 X
0 0 0 1 0 0 0 K
(n) 147 651.93 T
1 10 Q
-0.03 (Programs and files that are discussed in Volume Eight. These were previously available) 156 650.33 P
(only to administrators with Internet access.) 156 638.03 T
7 3.2 Q
(n) 147 621.33 T
1 10 Q
-0.45 (Pre-compiled X11 Release 5 binaries for Sun3 and Sun4 platforms running SunOS 4.1.1.) 156 619.73 P
-0.38 (The) 147 601.43 P
2 F
-0.38 (X Window System Adminstrator\325s Guide) 164.67 601.43 P
1 F
-0.38 ( includes directions for building and installing) 324.82 601.43 P
-0.21 (the MIT sources, so even if you don\325t currently have X up and running, you can do so with) 147 589.13 P
(this book/CD package. Contact O\325Reilly & Associates or your local bookseller.) 147 576.83 T
0 1 1 0 1 0 0 K
0 20 Q
0 1 1 0 1 0 0 K
(Other Books in this series) 111 544.57 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
-0.43 (The O\325Reilly X Guides provide a comprehensive set of documents for The X Window Sys-) 147 525.23 P
(tem. Other books in the series which may be of interest to end-users include:) 147 512.93 T
2 F
-0.18 (X Window System Administror\325s Guide) 147 494.63 P
1 F
-0.18 ( \050Volume 8\051. As mentioned above, this volume dis-) 302.93 494.63 P
0.98 (cusses many aspects of setting up and running the X Window System, particularly in a) 147 482.33 P
(multi-vendor environment.) 147 470.03 T
2 F
-0.25 (X Window System in a Nutshell) 147 451.73 P
1 F
-0.25 (. \050Nutshell series\051 Contains reference pages for many of the) 271.01 451.73 P
(standard clients, along with programmer documentation on the system.) 147 439.43 T
0.48 (Most of the remaining books in the series are of interest to programmers developing and) 147 421.13 P
(maintaining X Window System applications:) 147 408.83 T
-0.27 (Volume Zero,) 147 390.53 P
2 F
-0.27 (X Protocol Reference Manual) 205.06 390.53 P
1 F
-0.27 (, discusses the network protocol used between) 323.94 390.53 P
(the X server and its clients. Of interest mainly to advanced programmers.) 147 378.23 T
0.76 (Volumes and Two,) 147 359.93 P
2 F
0.76 ( XLib Programmer\325s Manual) 224.9 359.93 P
1 F
0.76 ( and) 344.12 359.93 P
2 F
0.76 (Xlib Reference Manual) 365.09 359.93 P
1 F
0.76 ( discuss the) 459.37 359.93 P
(use of XLib, the lower level of access.) 147 347.63 T
2 F
-0.15 ( Volumes Four and Five, X Toolkit Intrinsics Programmer\325s Manual) 147 329.33 P
1 F
-0.15 (. and) 420.09 329.33 P
2 F
-0.15 (X Toolkit Intrin-) 441.74 329.33 P
(sics Reference Manual) 147 317.03 T
1 F
(, discuss the details of the \322Xt\323 toolkit library.) 238.09 317.03 T
0 (Volume Seven,) 147 298.73 P
2 F
0 (XView Programming Manual) 211.16 298.73 P
1 F
0 (, discusses Sun\325s XView toolkit for building) 329.49 298.73 P
1 9 Q
(OPEN LOOK) 147 286.43 T
1 10 Q
( applications.) 197.74 286.43 T
(Volume Six,) 147 268.13 T
2 F
(Motif Programming Manual) 200.06 268.13 T
1 F
(, discusses in full detail the Motif toolkit.) 313.95 268.13 T
2 F
0.84 (PHIGS Programmer\325s Manual) 147 249.83 P
1 F
0.84 (. \050X series, no volume number\051 discusses in considerable) 272.55 249.83 P
0 (detail the use of PHIGS graphics and PEX, the Phigs Extension to X, a graphics layer that) 147 237.53 P
(can be used on top of X.) 147 225.23 T
2 F
1.61 (Power Programming with RPC) 147 206.93 P
1 F
1.61 (. \050Nutshell Handbook series\051 discusses developing net-) 277.66 206.93 P
1.92 (worked applications using Sun\325s Remote Procedure Call library, including significant) 147 194.63 P
0.51 (discussion of developing RPC applications that work within the constraints of X toolkits) 147 182.33 P
(such as Sun\325s) 147 170.03 T
1 9 Q
(OPEN LOOK) 203.94 170.03 T
1 10 Q
( toolkit XView and Xt \050including) 254.68 170.03 T
1 9 Q
(OLIT) 390.23 170.03 T
1 10 Q
( and Motif\051.) 410.73 170.03 T
0 1 1 0 1 0 0 K
0 20 Q
0 1 1 0 1 0 0 K
(Bulk Sales Information) 111 137.77 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
-0.27 (This series of guides is routinely resold by many Workstation and X Terminal manufactur-) 147 118.43 P
2.83 (ers as their official X Window System documentation. For information on volume) 147 106.13 P
FMENDPAGE
%%EndPage: "xxxv" 9
%%Page: "xxxvi" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (xxxvi) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
1.39 (discounts for bulk purchases, call O\325Reilly & Associates, Inc., at 800-338-6887 \050other) 141 650.33 P
(numbers below\051, or send e-mail to) 141 638.03 T
2 F
(linda@ora.com) 280.7 638.03 T
1 F
( \050) 343.51 638.03 T
2 F
(uunet!ora!linda) 349.34 638.03 T
1 F
(\051.) 412.67 638.03 T
0.05 (We will do selected customization for you. For companies requiring extensive customiza-) 141 619.73 P
(tion of the guide, source-licensing terms are also available.) 141 607.43 T
0 1 1 0 1 0 0 K
0 20 Q
0 1 1 0 1 0 0 K
(Request for Comments) 105 575.17 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
-0.13 (Please write to tell us about any flaws you find in this manual or how you think it could be) 141 555.83 P
(improved. This will help us to provide you with the best documentation possible.) 141 543.53 T
(Our U.S. mail address, phone numbers, and e-mail addresses are as follows:) 141 525.23 T
(O\325Reilly and Associates, Inc.) 141 506.93 T
(632 Petaluma Avenue) 141 494.63 T
(Sebastopol CA 95472) 141 482.33 T
(U.S.A.) 141 470.03 T
(In USA 1-800-338-6887, in California 1-800-533-6887, international +1 707-829-0515) 141 451.73 T
(UUCP:) 141 433.43 T
2 F
(uunet!ora!ian) 172.95 433.43 T
1 F
(Internet:) 141 421.13 T
2 F
(ian@ora.com) 177.38 421.13 T
0 1 1 0 1 0 0 K
0 20 Q
0 1 1 0 1 0 0 K
(Font and Character Conventions) 105 388.87 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
(These typographic conventions are used in this book:) 141 369.53 T
2 F
(Italics) 141 351.23 T
1 F
( are used for:) 166 351.23 T
(\245) 141 333.73 T
( new terms where they are defined.) 177 333.73 T
(\245) 141 316.23 T
-0.32 ( file and directory names, and command and client names when they appear in the) 177 316.23 P
(body of a paragraph.) 177 304.73 T
3 F
(Courier) 141 287.23 T
1 F
( is used within the body of the text to show:) 183 287.23 T
(\245) 141 269.73 T
( command lines or options that should be typed verbatim on the screen.) 177 269.73 T
(and is used within examples to show:) 177 252.23 T
(\245) 141 234.73 T
( computer-generated output.) 177 234.73 T
(\245) 141 217.23 T
( the contents of files.) 177 217.23 T
4 F
(Courier bold) 141 199.73 T
1 F
-0.26 ( is used within examples to show command lines and options that should) 213 199.73 P
(be typed verbatim on the screen.) 177 188.23 T
5 F
(Courier italics) 141 170.73 T
1 F
0.62 0.07 ( are used within examples or explanations of command syntax to) 231 170.73 B
0.62 0.15 (show a parameter to a command that requires context-dependent substitution) 177 159.23 B
-0.56 (\050such as a variable\051. For example,) 177 147.73 P
5 F
-1.34 (filename) 311.39 147.73 P
1 F
-0.56 ( means to use some appropriate file-) 359.39 147.73 P
(name;) 177 136.23 T
5 F
(option\050s\051) 203.94 136.23 T
1 F
( means to use some appropriate option\050s\051 to the command.) 257.94 136.23 T
(These symbols are used within the) 141 118.73 T
2 F
(X Window System User\325s Guide) 281.54 118.73 T
1 F
(:) 409.3 118.73 T
([) 141 100.43 T
(]) 149.33 100.43 T
( surround an optional field in a command line or file entry.) 177 100.43 T
FMENDPAGE
%%EndPage: "xxxvi" 10
%%Page: "xxxvii" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (PREFACE) 428.72 693.79 S
0 9 Q
0.45 (xxxvii) 477.78 693.79 S
111 684 507 708 R
0.5 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
2 10 Q
0 X
0 0 0 1 0 0 0 K
(name) 147 650.33 T
1 F
(\0501\051) 168.66 650.33 T
0.62 0.07 ( is a reference to a command called) 183 650.33 B
2 F
0.62 0.07 (name) 334.27 650.33 B
1 F
0.62 0.07 ( in Section 1 of the) 356.19 650.33 B
2 F
0.62 0.07 (UNIX Reference) 439.69 650.33 B
0.14 (Manual) 183 638.83 P
1 F
0.14 ( \050this book may have a different name depending on the version of) 214.11 638.83 P
1 9 Q
0.13 (UNIX) 484.51 638.83 P
1 10 Q
-0.05 (that you use\051. The) 183 627.33 P
1 9 Q
-0.04 (OPEN LOOK) 257.52 627.33 P
1 10 Q
-0.05 (-specific commands are reprinted in Part Three of) 308.22 627.33 P
(this Guide.) 183 615.83 T
($) 147 598.33 T
( is the standard prompt from the Bourne shell,) 183 598.33 T
2 F
(sh) 369.65 598.33 T
1 F
(\0501\051.) 378.54 598.33 T
(%) 147 580.83 T
( is the standard prompt from the C shell,) 183 580.83 T
2 F
(csh) 346.88 580.83 T
1 F
(\0501\051.) 360.21 580.83 T
0.47 (Since there are some variations in the commands available with the various implementa-) 147 563.33 P
(tions of) 147 551.03 T
1 9 Q
(OPEN LOOK) 179.78 551.03 T
1 10 Q
(, we use the following tags:) 230.52 551.03 T
1 9 Q
(AT&T-OL) 147 532.73 T
1 10 Q
( refers to a feature of the) 186.49 532.73 T
1 9 Q
(AT&T) 287.28 532.73 T
(OPEN LOOK) 314.28 532.73 T
1 10 Q
( client package) 365.02 532.73 T
(OpenWindows) 147 515.23 T
( refers to a feature of Sun\325s OpenWindows client/server package.) 206.99 515.23 T
0 1 1 0 1 0 0 K
0 20 Q
0 1 1 0 1 0 0 K
(Acknowledgments) 111 483.77 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
-0.34 (The first edition of this guide was based in part on three previous X Window System user\325s) 147 464.43 P
-0.34 (guides: one from Masscomp, written by Jeff Graber, one from Sequent Computer Systems,) 147 452.13 P
0.71 (Inc., and one from Graphic Software Systems, Inc.; both were written by Candis Condo) 147 439.83 P
0.9 (\050supported by) 147 427.53 P
1 9 Q
0.81 (GSS) 206.57 427.53 P
1 10 Q
0.9 (\325) 223.07 427.53 P
1 9 Q
0.81 (UNIX) 229.8 427.53 P
1 10 Q
0.9 ( development group\051. Some of Jeff\325s and Candis\325s material in) 252.29 427.53 P
0.62 (turn was based on material developed under the auspices of Project Athena at MIT. The) 147 415.23 P
0.3 (first version of this guide was adapted from these works by Tim O\325Reilly, and the subse-) 147 402.93 P
(quent Motif edition was prepared by Valerie Quercia.) 147 390.63 T
0.23 (The) 147 372.33 P
1 9 Q
0.21 (OPEN LOOK) 165.28 372.33 P
1 10 Q
0.23 ( version of this) 216.24 372.33 P
2 F
0.23 (User\325s Guide) 279.39 372.33 P
1 F
0.23 (was written by Ian Darwin, but the overall) 335.96 372.33 P
0.18 (design, as well as some parts \050even a few whole chapters\051 of the text, were either adapted) 147 360.03 P
0.36 (or borrowed intact from the \322Generic X11\323 and Motif editions. The) 147 347.73 P
1 9 Q
0.32 (OPEN LOOK) 423.64 347.73 P
1 10 Q
0.36 ( version) 474.7 347.73 P
1.85 (was developed using Sun\325s OpenWindows 2., 3.0 and 3.1on Sun-3 Workstations and) 147 335.43 P
1 9 Q
-0.13 (SPARC) 147 323.13 P
1 10 Q
-0.15 (stations and on an) 175.51 323.13 P
1 9 Q
-0.13 (AT&T) 249.37 323.13 P
1 10 Q
-0.15 ( 6386 WGS with) 273.86 323.13 P
1 9 Q
-0.13 (AT&T) 343.28 323.13 P
1 10 Q
-0.15 (\325s) 367.78 323.13 P
1 9 Q
-0.13 (XWIN) 377.35 323.13 P
1 10 Q
-0.15 ( and) 401.84 323.13 P
1 9 Q
-0.13 (OPEN LOOK) 420.99 323.13 P
1 10 Q
-0.15 ( product.) 471.6 323.13 P
-0.4 (Earlier versions of this guide were developed on a Sony) 147 310.83 P
1 9 Q
-0.36 (NEWS) 369.09 310.83 P
1 10 Q
-0.4 ( workstation running Sony\325s) 394.58 310.83 P
2.07 (X implementation, a Visual 640 X Display Station, and an) 147 298.53 P
1 9 Q
1.86 (NCD16) 403.77 298.53 P
1 10 Q
2.07 ( Network Display) 431.77 298.53 P
(Station.) 147 286.23 T
-0.17 (Mr. Darwin wishes to express his gratitudel to Sun Microsystems for ongoing provision of) 147 267.93 P
0.66 (software, documentation, and technical support, and to) 147 255.63 P
1 9 Q
0.59 (AT&T) 373.22 255.63 P
1 10 Q
0.66 ( and Quantum Systems for) 397.72 255.63 P
0.1 (providing copies of their) 147 243.33 P
1 9 Q
0.09 (OPEN LOOK) 248.49 243.33 P
1 10 Q
0.1 ( software and QNX-Windows systems respectively.) 299.33 243.33 P
1.44 (We appreciate the support of these manufacturers in helping us develop complete and) 147 231.03 P
-0.11 (accurate X Window System documentation. Thanks are particularly due to Brad Keates of) 147 218.73 P
1.02 (Sun Canada, Roger Nolan and Andrew Barker of Sun Microsystems, and Joanne New-) 147 206.43 P
0.92 (bauer of) 147 194.13 P
1 9 Q
0.83 (AT&T) 184.39 194.13 P
1 10 Q
0.92 (. We\325d also like to thank Sun for distributing the XView toolkit with an) 208.89 194.13 P
-0.42 (accompanying Copyright that grants permission to reprint the reference manual pages else-) 147 181.83 P
1.14 (where in the CD-ROM, and to excerpt parts of the material \050in particular, Appendix J,) 147 169.53 P
2 F
0.44 (OPEN LOOK XView Toolkit Resources) 147 157.23 P
1 F
0.44 (\051. Most of the remaining reference manual pages,) 307.07 157.23 P
0.73 (those for standard MIT X clients, have been adapted from reference pages copyright) 147 144.93 P
1 14 Q
1.02 (\251) 496.36 144.93 P
1 10 Q
-0.45 (1990-1994 the Massachusetts Institute of Technology, the X Consortium, and others. Refer) 147 132.63 P
-0.07 (to the \322Authors\323 section at the end of each reference page for details. Other copyrights are) 147 120.33 P
(listed on the relevant reference pages.) 147 108.03 T
FMENDPAGE
%%EndPage: "xxxvii" 11
%%Page: "xxxviii" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (xxxviii) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
0.34 (Mr. Darwin would like to thank the previous authors for providing the framework of this) 141 650.33 P
-0.07 (book. He also thanks the entire staff of O\325Reilly and Associates for helping to produce the) 141 638.03 P
-0.03 (draft version of this book, with special thanks to Tim O\325Reilly for patience above the call:) 141 625.73 P
-0.33 (this book took much longer to complete than he and I) 141 613.43 P
2 F
-0.33 (combined) 353.77 613.43 P
1 F
-0.33 ( ever thought it would. \322No) 392.65 613.43 P
-0.07 (man who is in a hurry is quite civilized.\323 \321Will Durant. The initial book design was done) 141 601.13 P
1.39 (\050initially for the) 141 588.83 P
2 F
1.39 (PHIGS Programming Manual) 211 588.83 P
1 F
1.39 ( in this series\051 by Bill Prindle and Edie) 334.88 588.83 P
0.56 (Freedman and implemented by Mike Sierra. Mike also provided invaluable assistance in) 141 576.53 P
-0.16 (learning the hidden craft of using FrameMaker. Dale Dougherty provide the initial version) 141 564.23 P
-0.23 (of the) 141 551.93 P
2 F
-0.23 (troff) 166.1 551.93 P
1 F
-0.23 (-to-Frame converter, and offered ongoing support while it was extended. Donna) 183.33 551.93 P
0.15 (Woonteiler read a draft of the whole book with a careful eye to editorial regularity. Linda) 141 539.63 P
0.11 (Walsh and Tim O\325Reilly cooperated in getting clearance to reprint this work in CD-ROM) 141 527.33 P
0.12 (form in 1995. Mr. Darwin thanks these and everyone else at O\325Reilly for their unflagging) 141 515.03 P
(assistance in bettering this book) 141 502.73 T
0.84 (Valerie Quercia of O\325Reilly and Associates and Chuck Musciano of Harris Corporation) 141 484.43 P
0.09 (made constructive comments on the Alpha Draft of the) 141 472.13 P
1 9 Q
0.08 (OPEN LOOK) 364.27 472.13 P
1 10 Q
0.09 ( version of this work;) 415.09 472.13 P
(their help is gratefully acknowledged.) 141 459.83 T
0.38 (And thanks to the staff of SoftQuad, Inc., for lending their support and for careful proof-) 141 441.53 P
0.3 (reading of many parts of the book. Liam Quin \050who wrote and maintains the \322Frequently) 141 429.23 P
1.63 (Asked Questions\323 list on the) 141 416.93 P
1 9 Q
1.47 (USENET) 266.11 416.93 P
1 10 Q
1.63 ( group) 300.61 416.93 P
2 F
1.63 (comp.windows.open-look) 332.2 416.93 P
1 F
1.63 (\051 was especially) 433.86 416.93 P
(helpful.) 141 404.63 T
0.2 (Mr. Darwin also thanks Ken Thompson, Dennis Ritchie) 141 386.33 P
2 F
0.2 (et al) 368.67 386.33 P
1 F
0.2 ( of the) 386.36 386.33 P
1 9 Q
0.18 (AT&T) 415.01 386.33 P
1 10 Q
0.2 ( Bell Laborato-) 439.51 386.33 P
0.9 (ries Computer Science Research department for inventing, promulgating, and extending) 141 374.03 P
-0.05 (the) 141 361.73 P
1 9 Q
-0.05 (UNIX) 155.67 361.73 P
1 10 Q
-0.05 ( system; all the folks at MIT Project Athena \050where X originated\051, the X Consor-) 178.16 361.73 P
-0.4 (tium, and elsewhere who have contributed to the design, implementation and spread of The) 141 349.43 P
0.76 (X Window System. Special thanks to the) 141 337.13 P
1 9 Q
0.68 (AT&T) 312.98 337.13 P
1 10 Q
0.76 ( and Sun team that originated the) 337.47 337.13 P
1 9 Q
0.68 (OPEN) 477.5 337.13 P
(LOOK GUI) 141 324.83 T
1 10 Q
( specification.) 184.24 324.83 T
-0.27 (For significant help and favors along the way, Mr. Darwin thanks Geoff Collyer, Erik Fair,) 141 306.53 P
0.54 (Brian Kernighan, and Al Lambert. John Gilmore and Laura Creighton first got me inter-) 141 294.23 P
(ested in SunView, the predecessor in the Sun) 141 281.93 T
1 9 Q
(UNIX) 324.03 281.93 T
1 10 Q
(verse of The X Window System.) 346.52 281.93 T
0.39 (Finally, thanks to my wife Betty and children Benjamin, Andy, and Margaret for sparing) 141 263.63 P
-0.37 (me the time to write all this. Behind every parent who writes, there must be \050or ought to be\051) 141 251.33 P
-0.23 (a spouse as supportive as Betty. In addition, her proofreading skills salvaged scores of sick) 141 239.03 P
(sentences.) 141 226.73 T
-0.29 (Despite the efforts of these people, the standard authors\325 disclaimer applies: any errors that) 141 208.43 P
(remain are our own.) 141 196.13 T
FMENDPAGE
%%EndPage: "xxxviii" 12
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 12
%%DocumentFonts: Helvetica-Narrow-BoldOblique
%%+ Times-Roman
%%+ Times-Italic
%%+ Courier
%%+ Courier-Bold
%%+ Courier-BoldOblique
%%+ Times-BoldItalic
%%+ ZapfDingbats
%%EOF
