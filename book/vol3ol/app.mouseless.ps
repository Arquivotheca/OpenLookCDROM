%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{1 dict dup /PageSize [paperwidth paperheight]put setpagedevice}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 {1 dict dup /ManualFeed manualfeed put setpagedevice } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 11 FMDOCUMENT
0 0 /Helvetica-Narrow-BoldOblique FMFONTDEFINE
1 0 /Times-Roman FMFONTDEFINE
2 0 /Times-Italic FMFONTDEFINE
3 0 /Helvetica-Bold FMFONTDEFINE
4 0 /Courier FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "497" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (APPENDIX K: X USER\325S GUIDE: OPEN LOOK EDITION) 266.17 693.79 S
0 9 Q
0.45 (497) 487.34 693.79 S
111 684 507 708 R
0.2 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 10 Q
7 X
(K) 531 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
0 0 0 0 1 1 1 K
1 10 Q
7 X
(Appendix) 138 719.33 T
(K) 179.94 719.33 T
2 F
(X USER\325S GUIDE: OPEN LOOK EDITION) 187.16 719.33 T
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 16 Q
0 X
0 1 1 0 1 0 0 K
(APPENDIX) 110 633.83 T
(K) 180.72 633.83 T
0 0 0 1 0 0 0 K
0 35 Q
0 0 0 1 0 0 0 K
(OPEN LOOK Mouseless) 144.5 573.5 T
(Keyboard Summary) 144.5 530.5 T
1 10 Q
0.6 (The) 147 434.33 P
1 9 Q
0.54 (OPEN LOOK) 165.65 434.33 P
1 10 Q
0.6 ( specification suggests that implementations should provide a mode for) 216.93 434.33 P
-0.27 (mouseless operations, for those most disposed to use a keyboard for everything. While one) 147 422.03 P
-0.09 (wonders what such people will do when computers need to speak and provide video, there) 147 409.73 P
-0.29 (is ample precedent for such \322mouseless operations\323.\321it wasn\325t that long ago that the aver-) 147 397.43 P
0.99 (age MIS Manager didn\325t even know that some computers) 147 385.13 P
2 F
0.99 (had) 388.35 385.13 P
1 F
0.99 ( mice. Well, anyway, the) 403.35 385.13 P
1 9 Q
0.4 (OPEN LOOK GUI) 147 372.83 P
1 10 Q
0.44 ( provides for mouseless work by defining a series of tags and assigning) 216.77 372.83 P
1.83 (key values to them. For example, the tag ACTION_CUT is used to Cut the selected) 147 360.53 P
-0.24 (objects. On OpenWindows, it is initially mapped to x+Meta,L10\323, which means that either) 147 348.23 P
0.58 (pressing the L10 key, or holding the \322Meta\323 key while pressing \322x\323, will cut the current) 147 335.93 P
0.02 (selection. And, you can change this by setting the X Resource named \322Cut\323 to some other) 147 323.63 P
(value.) 147 311.33 T
0 1 1 0 1 0 0 K
0 20 Q
0 1 1 0 1 0 0 K
(K.1  A) 111 279.07 T
(T&T Mouseless Operations) 156.28 279.07 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
1.19 (The AT&T mouseless operations are not documented with their resources. Instead, the) 147 259.73 P
1 9 Q
-0.14 (AT&T-OL) 147 247.43 P
1 10 Q
-0.15 ( version of the) 186.49 247.43 P
2 F
-0.15 (properties) 245.88 247.43 P
1 F
-0.15 ( editor allows you to change all the common mouseless) 286.99 247.43 P
0.86 (operation key combinations, and this has already been documented. For this reason, the) 147 235.13 P
1 9 Q
-0.02 (AT&T-OL) 147 222.83 P
1 10 Q
-0.02 ( mouseless keys are not listed here; please refer to the AT&T documentation for) 186.49 222.83 P
(this information.) 147 210.53 T
FMENDPAGE
%%EndPage: "497" 1
%%Page: "498" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (498) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 10 Q
7 X
(K) 75.08 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 20 Q
0 X
0 1 1 0 1 0 0 K
(K.2  OpenW) 105 643.67 T
(indows Mouseless Operations) 196.9 643.67 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
0.95 (The following table lists the Sun mouseless mode operations; most of the names of the) 141 624.33 P
(actions are self-explanatory.) 141 612.03 T
3 9 Q
(Example) 141.01 590.7 T
(K-) 180.53 590.7 T
(1. OpenWindows Mouseless Keys) 190.02 590.7 T
(OPEN LOOK Name) 111.01 551.2 T
(OpenWindows) 269.41 567.7 T
(Resource Name) 269.41 556.7 T
(\050) 269.41 545.7 T
4 F
-0.22 (OpenWindows.Keybo) 272.41 545.7 S
-0.22 (ardCommand.) 269.41 534.7 S
3 F
(\051) 326.33 534.7 T
(Default Binding) 374.99 551.2 T
1 10 Q
-0.25 (ACTION_ADJUST) 111.01 513.03 S
-0.25 (Adjust) 269.41 513.03 S
-0.25 (Insert+Alt) 374.99 513.03 S
-0.25 (ACTION_AGAIN) 111.01 493.03 S
-0.25 (Again) 269.41 493.03 S
-0.25 (a+Meta,a+Ctrl+Meta,L2) 374.99 493.03 S
-0.25 (ACTION_COPY) 111.01 473.03 S
-0.25 (Copy) 269.41 473.03 S
-0.25 (c+Meta,L6) 374.99 473.03 S
-0.25 (ACTION_COPY_THEN_PASTE) 111.01 453.03 S
-0.25 (CopyThenPaste) 269.41 453.03 S
-0.25 (p+Meta) 374.99 453.03 S
-0.25 (ACTION_CUT) 111.01 433.03 S
-0.25 (Cut) 269.41 433.03 S
-0.25 (x+Meta,L10) 374.99 433.03 S
-0.25 (ACTION_DATA_END) 111.01 413.03 S
-0.25 (DataEnd) 269.41 413.03 S
-0.25 (End+Ctrl,R13+Ctrl) 374.99 413.03 S
-0.25 (ACTION_DATA_END) 111.01 393.03 S
-0.25 (DataEnd) 269.41 393.03 S
-0.25 (End,R13,Return+Ctrl,End+Shi) 374.99 393.03 S
-0.25 (ft) 374.99 380.73 S
-0.25 (ACTION_DATA_START) 111.01 360.73 S
-0.25 (DataStart) 269.41 360.73 S
-0.25 (Home+Ctrl,R7+Ctrl) 374.99 360.73 S
-0.25 (ACTION_DATA_START) 111.01 340.73 S
-0.25 (DataStart) 269.41 340.73 S
-0.25 (Home,R7,Return+Shift+Ctrl,H) 374.99 340.73 S
-0.25 (ome+Shift) 374.99 328.43 S
-0.25 (ACTION_DEFAULT_ACTION) 111.01 308.43 S
-0.25 (DefaultAction) 269.41 308.43 S
-0.25 (Return+Meta) 374.99 308.43 S
-0.25 (ACTION_DOWN) 111.01 288.43 S
-0.25 (Down) 269.41 288.43 S
-0.25 (Down) 374.99 288.43 S
-0.25 (ACTION_DOWN) 111.01 268.43 S
-0.25 (Down) 269.41 268.43 S
-0.25 (n+Ctrl,P+Ctrl,Down,R14,Dow) 374.99 268.43 S
-0.25 (n+Shift) 374.99 256.13 S
-0.25 (ACTION_EMPTY) 111.01 236.13 S
-0.25 (Empty) 269.41 236.13 S
-0.25 (e+Meta,e+Ctrl+Meta) 374.99 236.13 S
-0.25 (ACTION_ERASE_CHAR_BACKW) 111.01 216.13 S
-0.25 (ARD) 111.01 203.83 S
-0.25 (EraseCharBackward) 269.41 216.13 S
-0.25 (Delete,BackSpace) 374.99 216.13 S
-0.25 (ACTION_ERASE_CHAR_FORWA) 111.01 183.83 S
-0.25 (RD) 111.01 171.53 S
-0.25 (EraseCharForward) 269.41 183.83 S
-0.25 (Delete+Shift,BackSpace+Shift) 374.99 183.83 S
-0.25 (ACTION_ERASE_CHAR_FORWA) 111.01 151.53 S
-0.25 (RD) 111.01 139.23 S
-0.25 (EraseCharForward) 269.41 151.53 S
-0.25 (Delete+Shift,BackSpace+Shift) 374.99 151.53 S
-0.25 (ACTION_ERASE_LINE) 111.01 119.23 S
-0.25 (EraseLine) 269.41 119.23 S
-0.25 (Delete+Meta,BackSpace+Meta) 374.99 119.23 S
263.41 582.7 263.41 111.65 2 L
V
0.5 H
0 Z
N
368.99 582.7 368.99 111.65 2 L
V
N
105.01 581.7 500.99 581.7 2 L
V
2 H
N
105.01 525.7 500.99 525.7 2 L
V
N
105.01 505.7 500.99 505.7 2 L
V
0.5 H
N
105.01 485.7 500.99 485.7 2 L
V
N
105.01 465.7 500.99 465.7 2 L
V
N
105.01 445.7 500.99 445.7 2 L
V
N
105.01 425.7 500.99 425.7 2 L
V
N
105.01 405.7 500.99 405.7 2 L
V
N
105.01 373.4 500.99 373.4 2 L
V
N
105.01 353.4 500.99 353.4 2 L
V
N
105.01 321.1 500.99 321.1 2 L
V
N
105.01 301.1 500.99 301.1 2 L
V
N
105.01 281.1 500.99 281.1 2 L
V
N
105.01 248.8 500.99 248.8 2 L
V
N
105.01 228.8 500.99 228.8 2 L
V
N
105.01 196.5 500.99 196.5 2 L
V
N
105.01 164.2 500.99 164.2 2 L
V
N
105.01 131.9 500.99 131.9 2 L
V
N
105.01 111.9 500.99 111.9 2 L
V
N
FMENDPAGE
%%EndPage: "498" 2
%%Page: "499" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (APPENDIX K: X USER\325S GUIDE: OPEN LOOK EDITION) 266.17 693.79 S
0 9 Q
0.45 (499) 487.34 693.79 S
111 684 507 708 R
0.5 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 10 Q
7 X
(K) 531 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
-0.25 (ACTION_ERASE_LINE_BACKWA) 117.01 573.33 S
-0.25 (RD) 117.01 561.03 S
-0.25 (EraseLineBackward) 275.41 573.33 S
-0.25 (u+Ctrl) 380.99 573.33 S
-0.25 (ACTION_ERASE_LINE_END) 117.01 541.03 S
-0.25 (EraseLineEnd) 275.41 541.03 S
-0.25 (U+Ctrl) 380.99 541.03 S
-0.25 (ACTION_ERASE_WORD_BACK) 117.01 521.03 S
-0.25 (WARD) 117.01 508.73 S
-0.25 (EraseWordBackward) 275.41 521.03 S
-0.25 (w+Ctrl) 380.99 521.03 S
-0.25 (ACTION_ERASE_WORD_FORWA) 117.01 488.73 S
-0.25 (RD) 117.01 476.43 S
-0.25 (EraseWordForward) 275.41 488.73 S
-0.25 (W+Ctrl) 380.99 488.73 S
-0.25 (ACTION_FIND_BACKWARD) 117.01 456.43 S
-0.25 (FindBackward) 275.41 456.43 S
-0.25 (F+Meta,L9+Shift) 380.99 456.43 S
-0.25 (ACTION_FIND_FORWARD) 117.01 436.43 S
-0.25 (FindForward) 275.41 436.43 S
-0.25 (f+Meta,L9) 380.99 436.43 S
-0.25 (ACTION_GO_LINE_FORWARD) 117.01 416.43 S
-0.25 (GoLineForward) 275.41 416.43 S
-0.25 (apostrophe+Ctrl,R11) 380.99 416.43 S
-0.25 (ACTION_GO_PAGE_BACKWARD) 117.01 396.43 S
-0.25 (GoPageBackward) 275.41 396.43 S
-0.25 (R9) 380.99 396.43 S
-0.25 (ACTION_GO_PAGE_FORWARD) 117.01 376.43 S
-0.25 (GoPageForward) 275.41 376.43 S
-0.25 (R15) 380.99 376.43 S
-0.25 (ACTION_GO_WORD_FORWARD) 117.01 356.43 S
-0.25 (GoWordForward) 275.41 356.43 S
-0.25 (slash+Ctrl,less+Ctrl) 380.99 356.43 S
-0.25 (ACTION_HELP) 117.01 336.43 S
-0.25 (Help) 275.41 336.43 S
-0.25 (Help) 380.99 336.43 S
-0.25 (ACTION_HORIZONTAL_SCROLL) 117.01 316.43 S
-0.25 (BAR_MENU) 117.01 304.13 S
-0.25 (HorizontalScrollbar-) 275.41 316.43 S
-0.25 (Menu) 275.41 304.13 S
-0.25 (h+Alt) 380.99 316.43 S
-0.25 (ACTION_INCLUDE_FILE) 117.01 284.13 S
-0.25 (IncludeFile) 275.41 284.13 S
-0.25 (i+Meta) 380.99 284.13 S
-0.25 (ACTION_INPUT_FOCUS_HELP) 117.01 264.13 S
-0.25 (InputFocusHelp) 275.41 264.13 S
-0.25 (question+Ctrl) 380.99 264.13 S
-0.25 (ACTION_INSERT) 117.01 244.13 S
-0.25 (Insert) 275.41 244.13 S
-0.25 (Insert) 380.99 244.13 S
-0.25 (ACTION_JUMP_DOWN) 117.01 224.13 S
-0.25 (JumpDown) 275.41 224.13 S
-0.25 (Down+Ctrl) 380.99 224.13 S
-0.25 (ACTION_JUMP_LEFT) 117.01 204.13 S
-0.25 (JumpLeft) 275.41 204.13 S
-0.25 (Left+Ctrl) 380.99 204.13 S
-0.25 (ACTION_JUMP_LEFT) 117.01 184.13 S
-0.25 (JumpLeft) 275.41 184.13 S
-0.25 (comma+Ctrl,greater+Ctrl) 380.99 184.13 S
-0.25 (ACTION_JUMP_MOUSE_TO_INP) 117.01 164.13 S
-0.25 (UT_FOCUS) 117.01 151.83 S
-0.25 (JumpMouseToInput-) 275.41 164.13 S
-0.25 (Focus) 275.41 151.83 S
-0.25 (j+Alt) 380.99 164.13 S
-0.25 (ACTION_JUMP_RIGHT) 117.01 131.83 S
-0.25 (JumpRight) 275.41 131.83 S
-0.25 (Right+Ctrl) 380.99 131.83 S
-0.25 (ACTION_JUMP_RIGHT) 117.01 111.83 S
-0.25 (JumpRight) 275.41 111.83 S
-0.25 (period+Ctrl) 380.99 111.83 S
3 9 Q
(Example) 147.01 651 T
(K-) 186.53 651 T
(1. OpenWindows Mouseless Keys) 196.02 651 T
(OPEN LOOK Name) 117.01 611.5 T
(OpenWindows) 275.41 628 T
(Resource Name) 275.41 617 T
(\050) 275.41 606 T
4 F
-0.22 (OpenWindows.Keybo) 278.41 606 S
-0.22 (ardCommand.) 275.41 595 S
3 F
(\051) 332.34 595 T
(Default Binding) 380.99 611.5 T
269.41 643 269.41 104.25 2 L
V
0.5 H
0 Z
N
374.99 643 374.99 104.25 2 L
V
N
111.01 642 506.99 642 2 L
V
2 H
N
111.01 586 506.99 586 2 L
V
N
111.01 553.7 506.99 553.7 2 L
V
0.5 H
N
111.01 533.7 506.99 533.7 2 L
V
N
111.01 501.4 506.99 501.4 2 L
V
N
111.01 469.1 506.99 469.1 2 L
V
N
111.01 449.1 506.99 449.1 2 L
V
N
111.01 429.1 506.99 429.1 2 L
V
N
111.01 409.1 506.99 409.1 2 L
V
N
111.01 389.1 506.99 389.1 2 L
V
N
111.01 369.1 506.99 369.1 2 L
V
N
111.01 349.1 506.99 349.1 2 L
V
N
111.01 329.1 506.99 329.1 2 L
V
N
111.01 296.8 506.99 296.8 2 L
V
N
111.01 276.8 506.99 276.8 2 L
V
N
111.01 256.8 506.99 256.8 2 L
V
N
111.01 236.8 506.99 236.8 2 L
V
N
111.01 216.8 506.99 216.8 2 L
V
N
111.01 196.8 506.99 196.8 2 L
V
N
111.01 176.8 506.99 176.8 2 L
V
N
111.01 144.5 506.99 144.5 2 L
V
N
111.01 124.5 506.99 124.5 2 L
V
N
111.01 104.5 506.99 104.5 2 L
V
N
FMENDPAGE
%%EndPage: "499" 3
%%Page: "500" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (500) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 10 Q
7 X
(K) 75.08 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
-0.25 (ACTION_JUMP_UP) 111.01 573.33 S
-0.25 (JumpUp) 269.41 573.33 S
-0.25 (Up+Ctrl) 374.99 573.33 S
-0.25 (ACTION_LEFT) 111.01 553.33 S
-0.25 (Left) 269.41 553.33 S
-0.25 (Left) 374.99 553.33 S
-0.25 (ACTION_LEFT) 111.01 533.33 S
-0.25 (Left) 269.41 533.33 S
-0.25 (b+Ctrl,F+Ctrl,Left,R10,Left+S) 374.99 533.33 S
-0.25 (hift) 374.99 521.03 S
-0.25 (ACTION_LINE_END) 111.01 501.03 S
-0.25 (LineEnd) 269.41 501.03 S
-0.25 (e+Ctrl,A+Ctrl) 374.99 501.03 S
-0.25 (ACTION_LINE_START) 111.01 481.03 S
-0.25 (LineStart) 269.41 481.03 S
-0.25 (a+Ctrl,E+Ctrl) 374.99 481.03 S
-0.25 (ACTION_LOAD) 111.01 461.03 S
-0.25 (Load) 269.41 461.03 S
-0.25 (l+Meta) 374.99 461.03 S
-0.25 (ACTION_MATCH_DELIMITER) 111.01 441.03 S
-0.25 (MatchDelimiter) 269.41 441.03 S
-0.25 (d+Meta) 374.99 441.03 S
-0.25 (ACTION_MENU) 111.01 421.03 S
-0.25 (Menu) 269.41 421.03 S
-0.25 (space+Alt) 374.99 421.03 S
-0.25 (ACTION_MORE_HELP) 111.01 401.03 S
-0.25 (MoreHelp) 269.41 401.03 S
-0.25 (Help+Shift) 374.99 401.03 S
-0.25 (ACTION_MORE_TEXT_HELP) 111.01 381.03 S
-0.25 (MoreTextHelp) 269.41 381.03 S
-0.25 (Help+Shift+Ctrl) 374.99 381.03 S
-0.25 (ACTION_NEXT_ELEMENT) 111.01 361.03 S
-0.25 (NextElement) 269.41 361.03 S
-0.25 (Tab+Ctrl) 374.99 361.03 S
-0.25 (ACTION_NEXT_PANE) 111.01 341.03 S
-0.25 (NextPane) 269.41 341.03 S
-0.25 (a+Alt) 374.99 341.03 S
-0.25 (ACTION_PANEL_END) 111.01 321.03 S
-0.25 (PanelEnd) 269.41 321.03 S
-0.25 (bracketright+Ctrl) 374.99 321.03 S
-0.25 (ACTION_PANEL_START) 111.01 301.03 S
-0.25 (PanelStart) 269.41 301.03 S
-0.25 (bracketleft+Ctrl) 374.99 301.03 S
-0.25 (ACTION_PANE_BACKGROUND) 111.01 281.03 S
-0.25 (PaneBackground) 269.41 281.03 S
-0.25 (b+Alt) 374.99 281.03 S
-0.25 (ACTION_PANE_DOWN) 111.01 261.03 S
-0.25 (PaneDown) 269.41 261.03 S
-0.25 (R15) 374.99 261.03 S
-0.25 (ACTION_PANE_LEFT) 111.01 241.03 S
-0.25 (PaneLeft) 269.41 241.03 S
-0.25 (R9+Ctrl) 374.99 241.03 S
-0.25 (ACTION_PANE_RIGHT) 111.01 221.03 S
-0.25 (PaneRight) 269.41 221.03 S
-0.25 (R15+Ctrl) 374.99 221.03 S
-0.25 (ACTION_PANE_UP) 111.01 201.03 S
-0.25 (PaneUp) 269.41 201.03 S
-0.25 (R9) 374.99 201.03 S
-0.25 (ACTION_PASTE) 111.01 181.03 S
-0.25 (Paste) 269.41 181.03 S
-0.25 (v+Meta,L8) 374.99 181.03 S
-0.25 (ACTION_PREVIOUS_ELEMENT) 111.01 161.03 S
-0.25 (PreviousElement) 269.41 161.03 S
-0.25 (Tab+Shift+Ctrl) 374.99 161.03 S
-0.25 (ACTION_PREVIOUS_PANE) 111.01 141.03 S
-0.25 (PreviousPane) 269.41 141.03 S
-0.25 (A+Alt) 374.99 141.03 S
-0.25 (ACTION_PROPS) 111.01 121.03 S
-0.25 (Props) 269.41 121.03 S
-0.25 (L3) 374.99 121.03 S
-0.25 (ACTION_QUOTE_NEXT_KEY) 111.01 101.03 S
-0.25 (QuoteNextKey) 269.41 101.03 S
-0.25 (q+Alt) 374.99 101.03 S
3 9 Q
(Example) 141.01 651 T
(K-) 180.53 651 T
(1. OpenWindows Mouseless Keys) 190.02 651 T
(OPEN LOOK Name) 111.01 611.5 T
(OpenWindows) 269.41 628 T
(Resource Name) 269.41 617 T
(\050) 269.41 606 T
4 F
-0.22 (OpenWindows.Keybo) 272.41 606 S
-0.22 (ardCommand.) 269.41 595 S
3 F
(\051) 326.33 595 T
(Default Binding) 374.99 611.5 T
263.41 643 263.41 93.45 2 L
V
0.5 H
0 Z
N
368.99 643 368.99 93.45 2 L
V
N
105.01 642 500.99 642 2 L
V
2 H
N
105.01 586 500.99 586 2 L
V
N
105.01 566 500.99 566 2 L
V
0.5 H
N
105.01 546 500.99 546 2 L
V
N
105.01 513.7 500.99 513.7 2 L
V
N
105.01 493.7 500.99 493.7 2 L
V
N
105.01 473.7 500.99 473.7 2 L
V
N
105.01 453.7 500.99 453.7 2 L
V
N
105.01 433.7 500.99 433.7 2 L
V
N
105.01 413.7 500.99 413.7 2 L
V
N
105.01 393.7 500.99 393.7 2 L
V
N
105.01 373.7 500.99 373.7 2 L
V
N
105.01 353.7 500.99 353.7 2 L
V
N
105.01 333.7 500.99 333.7 2 L
V
N
105.01 313.7 500.99 313.7 2 L
V
N
105.01 293.7 500.99 293.7 2 L
V
N
105.01 273.7 500.99 273.7 2 L
V
N
105.01 253.7 500.99 253.7 2 L
V
N
105.01 233.7 500.99 233.7 2 L
V
N
105.01 213.7 500.99 213.7 2 L
V
N
105.01 193.7 500.99 193.7 2 L
V
N
105.01 173.7 500.99 173.7 2 L
V
N
105.01 153.7 500.99 153.7 2 L
V
N
105.01 133.7 500.99 133.7 2 L
V
N
105.01 113.7 500.99 113.7 2 L
V
N
105.01 93.7 500.99 93.7 2 L
V
N
FMENDPAGE
%%EndPage: "500" 4
%%Page: "501" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (APPENDIX K: X USER\325S GUIDE: OPEN LOOK EDITION) 266.17 693.79 S
0 9 Q
0.45 (501) 487.34 693.79 S
111 684 507 708 R
0.5 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 10 Q
7 X
(K) 531 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
-0.25 (ACTION_RESUME_MOUSELESS) 117.01 573.33 S
-0.25 (ResumeMouseless) 275.41 573.33 S
-0.25 (Z+Alt) 380.99 573.33 S
-0.25 (ACTION_RIGHT) 117.01 553.33 S
-0.25 (Right) 275.41 553.33 S
-0.25 (Right) 380.99 553.33 S
-0.25 (ACTION_RIGHT) 117.01 533.33 S
-0.25 (Right) 275.41 533.33 S
-0.25 (f+Ctrl,B+Ctrl,Right,R12,Right) 380.99 533.33 S
-0.25 (+Shift) 380.99 521.03 S
-0.25 (ACTION_ROW_END) 117.01 501.03 S
-0.25 (RowEnd) 275.41 501.03 S
-0.25 (End,R13) 380.99 501.03 S
-0.25 (ACTION_ROW_START) 117.01 481.03 S
-0.25 (RowStart) 275.41 481.03 S
-0.25 (Home,R7) 380.99 481.03 S
-0.25 (ACTION_SCROLL_DATA_END) 117.01 461.03 S
-0.25 (ScrollDataEnd) 275.41 461.03 S
-0.25 (End+Alt+Ctrl,R13+Alt+Ctrl) 380.99 461.03 S
-0.25 (ACTION_SCROLL_DATA_START) 117.01 441.03 S
-0.25 (ScrollDataStart) 275.41 441.03 S
-0.25 (Home+Alt+Ctrl,R7+Alt+Ctrl) 380.99 441.03 S
-0.25 (ACTION_SCROLL_DOWN) 117.01 421.03 S
-0.25 (ScrollDown) 275.41 421.03 S
-0.25 (Down+Alt) 380.99 421.03 S
-0.25 (ACTION_SCROLL_JUMP_DOWN) 117.01 401.03 S
-0.25 (ScrollJumpDown) 275.41 401.03 S
-0.25 (Down+Alt+Ctrl) 380.99 401.03 S
-0.25 (ACTION_SCROLL_JUMP_LEFT) 117.01 381.03 S
-0.25 (ScrollJumpLeft) 275.41 381.03 S
-0.25 (Left+Alt+Ctrl) 380.99 381.03 S
-0.25 (ACTION_SCROLL_JUMP_RIGHT) 117.01 361.03 S
-0.25 (ScrollJumpRight) 275.41 361.03 S
-0.25 (Right+Alt+Ctrl) 380.99 361.03 S
-0.25 (ACTION_SCROLL_JUMP_UP) 117.01 341.03 S
-0.25 (ScrollJumpUp) 275.41 341.03 S
-0.25 (Up+Alt+Ctrl) 380.99 341.03 S
-0.25 (ACTION_SCROLL_LEFT) 117.01 321.03 S
-0.25 (ScrollLeft) 275.41 321.03 S
-0.25 (Left+Alt) 380.99 321.03 S
-0.25 (ACTION_SCROLL_PANE_DOWN) 117.01 301.03 S
-0.25 (ScrollPaneDown) 275.41 301.03 S
-0.25 (R15+Alt) 380.99 301.03 S
-0.25 (ACTION_SCROLL_PANE_LEFT) 117.01 281.03 S
-0.25 (ScrollPaneLeft) 275.41 281.03 S
-0.25 (R9+Alt+Ctrl) 380.99 281.03 S
-0.25 (ACTION_SCROLL_PANE_RIGHT) 117.01 261.03 S
-0.25 (ScrollPaneRight) 275.41 261.03 S
-0.25 (R15+Alt+Ctrl) 380.99 261.03 S
-0.25 (ACTION_SCROLL_PANE_UP) 117.01 241.03 S
-0.25 (ScrollPaneUp) 275.41 241.03 S
-0.25 (R9+Alt) 380.99 241.03 S
-0.25 (ACTION_SCROLL_RIGHT) 117.01 221.03 S
-0.25 (ScrollRight) 275.41 221.03 S
-0.25 (Right+Alt) 380.99 221.03 S
-0.25 (ACTION_SCROLL_ROW_END) 117.01 201.03 S
-0.25 (ScrollRowEnd) 275.41 201.03 S
-0.25 (End+Alt,R13+Alt) 380.99 201.03 S
-0.25 (ACTION_SCROLL_ROW_START) 117.01 181.03 S
-0.25 (ScrollRowStart) 275.41 181.03 S
-0.25 (Home+Alt,R7+Alt) 380.99 181.03 S
-0.25 (ACTION_SCROLL_UP) 117.01 161.03 S
-0.25 (ScrollUp) 275.41 161.03 S
-0.25 (Up+Alt) 380.99 161.03 S
-0.25 (ACTION_SELECT_ALL) 117.01 141.03 S
-0.25 (SelectAll) 275.41 141.03 S
-0.25 (End+Shift+Meta,R13+Shift+M) 380.99 141.03 S
-0.25 (eta) 380.99 128.73 S
3 9 Q
(Example) 147.01 651 T
(K-) 186.53 651 T
(1. OpenWindows Mouseless Keys) 196.02 651 T
(OPEN LOOK Name) 117.01 611.5 T
(OpenWindows) 275.41 628 T
(Resource Name) 275.41 617 T
(\050) 275.41 606 T
4 F
-0.22 (OpenWindows.Keybo) 278.41 606 S
-0.22 (ardCommand.) 275.41 595 S
3 F
(\051) 332.34 595 T
(Default Binding) 380.99 611.5 T
269.41 643 269.41 121.15 2 L
V
0.5 H
0 Z
N
374.99 643 374.99 121.15 2 L
V
N
111.01 642 506.99 642 2 L
V
2 H
N
111.01 586 506.99 586 2 L
V
N
111.01 566 506.99 566 2 L
V
0.5 H
N
111.01 546 506.99 546 2 L
V
N
111.01 513.7 506.99 513.7 2 L
V
N
111.01 493.7 506.99 493.7 2 L
V
N
111.01 473.7 506.99 473.7 2 L
V
N
111.01 453.7 506.99 453.7 2 L
V
N
111.01 433.7 506.99 433.7 2 L
V
N
111.01 413.7 506.99 413.7 2 L
V
N
111.01 393.7 506.99 393.7 2 L
V
N
111.01 373.7 506.99 373.7 2 L
V
N
111.01 353.7 506.99 353.7 2 L
V
N
111.01 333.7 506.99 333.7 2 L
V
N
111.01 313.7 506.99 313.7 2 L
V
N
111.01 293.7 506.99 293.7 2 L
V
N
111.01 273.7 506.99 273.7 2 L
V
N
111.01 253.7 506.99 253.7 2 L
V
N
111.01 233.7 506.99 233.7 2 L
V
N
111.01 213.7 506.99 213.7 2 L
V
N
111.01 193.7 506.99 193.7 2 L
V
N
111.01 173.7 506.99 173.7 2 L
V
N
111.01 153.7 506.99 153.7 2 L
V
N
111.01 121.4 506.99 121.4 2 L
V
N
FMENDPAGE
%%EndPage: "501" 5
%%Page: "502" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (502) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 10 Q
7 X
(K) 75.08 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
-0.25 (ACTION_SELECT_DATA_END) 111.01 573.33 S
-0.25 (SelectDataEnd) 269.41 573.33 S
-0.25 (End+Shift+Ctrl,R13+Shift+Ctr) 374.99 573.33 S
-0.25 (l) 374.99 561.03 S
-0.25 (ACTION_SELECT_DATA_START) 111.01 541.03 S
-0.25 (SelectDataStart) 269.41 541.03 S
-0.25 (Home+Shift+Ctrl,R7+Shift+Ct) 374.99 541.03 S
-0.25 (rl) 374.99 528.73 S
-0.25 (ACTION_SELECT_DOWN) 111.01 508.73 S
-0.25 (SelectDown) 269.41 508.73 S
-0.25 (Down+Shift) 374.99 508.73 S
-0.25 (ACTION_SELECT_FIELD_BACK) 111.01 488.73 S
-0.25 (WARD) 111.01 476.43 S
-0.25 (SelectFieldBackward) 269.41 488.73 S
-0.25 (Tab+Shift+Ctrl) 374.99 488.73 S
-0.25 (ACTION_SELECT_FIELD_FORW) 111.01 456.43 S
-0.25 (ARD) 111.01 444.13 S
-0.25 (SelectFieldForward) 269.41 456.43 S
-0.25 (Tab+Ctrl) 374.99 456.43 S
-0.25 (ACTION_SELECT_JUMP_DOWN) 111.01 424.13 S
-0.25 (SelectJumpDown) 269.41 424.13 S
-0.25 (Down+Shift+Ctrl) 374.99 424.13 S
-0.25 (ACTION_SELECT_JUMP_LEFT) 111.01 404.13 S
-0.25 (SelectJumpLeft) 269.41 404.13 S
-0.25 (Left+Shift+Ctrl) 374.99 404.13 S
-0.25 (ACTION_SELECT_JUMP_RIGHT) 111.01 384.13 S
-0.25 (SelectJumpRight) 269.41 384.13 S
-0.25 (Right+Shift+Ctrl) 374.99 384.13 S
-0.25 (ACTION_SELECT_JUMP_UP) 111.01 364.13 S
-0.25 (SelectJumpUp) 269.41 364.13 S
-0.25 (Up+Shift+Ctrl) 374.99 364.13 S
-0.25 (ACTION_SELECT_LEFT) 111.01 344.13 S
-0.25 (SelectLeft) 269.41 344.13 S
-0.25 (Left+Shift) 374.99 344.13 S
-0.25 (ACTION_SELECT_NEXT_FIELD) 111.01 324.13 S
-0.25 (SelectNextField) 269.41 324.13 S
-0.25 (Tab+Meta) 374.99 324.13 S
-0.25 (ACTION_SELECT_PANE_DOWN) 111.01 304.13 S
-0.25 (SelectPaneDown) 269.41 304.13 S
-0.25 (R15+Shift) 374.99 304.13 S
-0.25 (ACTION_SELECT_PANE_LEFT) 111.01 284.13 S
-0.25 (SelectPaneLeft) 269.41 284.13 S
-0.25 (R9+Shift+Ctrl) 374.99 284.13 S
-0.25 (ACTION_SELECT_PANE_RIGHT) 111.01 264.13 S
-0.25 (SelectPaneRight) 269.41 264.13 S
-0.25 (R15+Shift+Ctrl) 374.99 264.13 S
-0.25 (ACTION_SELECT_PANE_UP) 111.01 244.13 S
-0.25 (SelectPaneUp) 269.41 244.13 S
-0.25 (R9+Shift) 374.99 244.13 S
-0.25 (ACTION_SELECT_PREVIOUS_FI) 111.01 224.13 S
-0.25 (ELD) 111.01 211.83 S
-0.25 (SelectPreviousField) 269.41 224.13 S
-0.25 (Tab+Shift+Meta) 374.99 224.13 S
-0.25 (ACTION_SELECT_RIGHT) 111.01 191.83 S
-0.25 (SelectRight) 269.41 191.83 S
-0.25 (Right+Shift) 374.99 191.83 S
-0.25 (ACTION_SELECT_ROW_END) 111.01 171.83 S
-0.25 (SelectRowEnd) 269.41 171.83 S
-0.25 (End+Shift,R13+Shift) 374.99 171.83 S
-0.25 (ACTION_SELECT_ROW_START) 111.01 151.83 S
-0.25 (SelectRowStart) 269.41 151.83 S
-0.25 (Home+Shift,R7+Shift) 374.99 151.83 S
-0.25 (ACTION_SELECT_UP) 111.01 131.83 S
-0.25 (SelectUp) 269.41 131.83 S
-0.25 (Up+Shift) 374.99 131.83 S
-0.25 (ACTION_STOP) 111.01 111.83 S
-0.25 (Stop) 269.41 111.83 S
-0.25 (L1) 374.99 111.83 S
3 9 Q
(Example) 141.01 651 T
(K-) 180.53 651 T
(1. OpenWindows Mouseless Keys) 190.02 651 T
(OPEN LOOK Name) 111.01 611.5 T
(OpenWindows) 269.41 628 T
(Resource Name) 269.41 617 T
(\050) 269.41 606 T
4 F
-0.22 (OpenWindows.Keybo) 272.41 606 S
-0.22 (ardCommand.) 269.41 595 S
3 F
(\051) 326.33 595 T
(Default Binding) 374.99 611.5 T
263.41 643 263.41 104.25 2 L
V
0.5 H
0 Z
N
368.99 643 368.99 104.25 2 L
V
N
105.01 642 500.99 642 2 L
V
2 H
N
105.01 586 500.99 586 2 L
V
N
105.01 553.7 500.99 553.7 2 L
V
0.5 H
N
105.01 521.4 500.99 521.4 2 L
V
N
105.01 501.4 500.99 501.4 2 L
V
N
105.01 469.1 500.99 469.1 2 L
V
N
105.01 436.8 500.99 436.8 2 L
V
N
105.01 416.8 500.99 416.8 2 L
V
N
105.01 396.8 500.99 396.8 2 L
V
N
105.01 376.8 500.99 376.8 2 L
V
N
105.01 356.8 500.99 356.8 2 L
V
N
105.01 336.8 500.99 336.8 2 L
V
N
105.01 316.8 500.99 316.8 2 L
V
N
105.01 296.8 500.99 296.8 2 L
V
N
105.01 276.8 500.99 276.8 2 L
V
N
105.01 256.8 500.99 256.8 2 L
V
N
105.01 236.8 500.99 236.8 2 L
V
N
105.01 204.5 500.99 204.5 2 L
V
N
105.01 184.5 500.99 184.5 2 L
V
N
105.01 164.5 500.99 164.5 2 L
V
N
105.01 144.5 500.99 144.5 2 L
V
N
105.01 124.5 500.99 124.5 2 L
V
N
105.01 104.5 500.99 104.5 2 L
V
N
FMENDPAGE
%%EndPage: "502" 6
%%Page: "503" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (APPENDIX K: X USER\325S GUIDE: OPEN LOOK EDITION) 266.17 693.79 S
0 9 Q
0.45 (503) 487.34 693.79 S
111 684 507 708 R
0.5 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 10 Q
7 X
(K) 531 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
-0.25 (ACTION_STORE) 117.01 573.33 S
-0.25 (Store) 275.41 573.33 S
-0.25 (s+Meta) 380.99 573.33 S
-0.25 (ACTION_SUSPEND_MOUSELESS) 117.01 553.33 S
-0.25 (SuspendMouseless) 275.41 553.33 S
-0.25 (z+Alt) 380.99 553.33 S
-0.25 (ACTION_TEXT_HELP) 117.01 533.33 S
-0.25 (TextHelp) 275.41 533.33 S
-0.25 (Help+Ctrl) 380.99 533.33 S
-0.25 (ACTION_TRANSLATE) 117.01 513.33 S
-0.25 (Translate) 275.41 513.33 S
-0.25 (R2) 380.99 513.33 S
-0.25 (ACTION_UNDO) 117.01 493.33 S
-0.25 (Undo) 275.41 493.33 S
-0.25 (u+Meta,L4) 380.99 493.33 S
-0.25 (ACTION_UP) 117.01 473.33 S
-0.25 (Up) 275.41 473.33 S
-0.25 (Up) 380.99 473.33 S
-0.25 (ACTION_UP) 117.01 453.33 S
-0.25 (Up) 275.41 453.33 S
-0.25 (p+Ctrl,N+Ctrl,Up,R8,Up+Shift) 380.99 453.33 S
-0.25 (ACTION_VERTICAL_SCROLLBA) 117.01 433.33 S
-0.25 (R_MENU) 117.01 421.03 S
-0.25 (VerticalScrollbarMenu) 275.41 433.33 S
-0.25 (v+Alt) 380.99 433.33 S
3 9 Q
(Example) 147.01 651 T
(K-) 186.53 651 T
(1. OpenWindows Mouseless Keys) 196.02 651 T
(OPEN LOOK Name) 117.01 611.5 T
(OpenWindows) 275.41 628 T
(Resource Name) 275.41 617 T
(\050) 275.41 606 T
4 F
-0.22 (OpenWindows.Keybo) 278.41 606 S
-0.22 (ardCommand.) 275.41 595 S
3 F
(\051) 332.34 595 T
(Default Binding) 380.99 611.5 T
269.41 643 269.41 413.45 2 L
V
0.5 H
0 Z
N
374.99 643 374.99 413.45 2 L
V
N
111.01 642 506.99 642 2 L
V
2 H
N
111.01 586 506.99 586 2 L
V
N
111.01 566 506.99 566 2 L
V
0.5 H
N
111.01 546 506.99 546 2 L
V
N
111.01 526 506.99 526 2 L
V
N
111.01 506 506.99 506 2 L
V
N
111.01 486 506.99 486 2 L
V
N
111.01 466 506.99 466 2 L
V
N
111.01 446 506.99 446 2 L
V
N
111.01 413.7 506.99 413.7 2 L
V
N
FMENDPAGE
%%EndPage: "503" 7
%%Page: "504" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (504) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 10 Q
7 X
(K) 75.08 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "504" 8
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 8
%%DocumentFonts: Helvetica-Narrow-BoldOblique
%%+ Times-Roman
%%+ Times-Italic
%%+ Helvetica-Bold
%%+ Courier
%%EOF
