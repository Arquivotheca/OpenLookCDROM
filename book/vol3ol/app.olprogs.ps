%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{1 dict dup /PageSize [paperwidth paperheight]put setpagedevice}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 {1 dict dup /ManualFeed manualfeed put setpagedevice } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 12 FMDOCUMENT
0 0 /Helvetica-Narrow-BoldOblique FMFONTDEFINE
1 0 /Times-Roman FMFONTDEFINE
2 0 /Times-Italic FMFONTDEFINE
3 0 /Courier FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "527" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (APPENDIX N: X USER\325S GUIDE: OPEN LOOK EDITION) 266.17 693.79 S
0 9 Q
0.45 (527) 487.34 693.79 S
111 684 507 708 R
0.2 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 10 Q
7 X
(N) 531 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
0 0 0 0 1 1 1 K
1 10 Q
7 X
(Appendix) 138 719.33 T
(N) 179.94 719.33 T
2 F
(X USER\325S GUIDE: OPEN LOOK EDITION) 187.16 719.33 T
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
0 16 Q
0 X
0 1 1 0 1 0 0 K
(APPENDIX) 110 633.83 T
(N) 180.72 633.83 T
0 0 0 1 0 0 0 K
0 35 Q
0 0 0 1 0 0 0 K
(OPEN LOOK Software) 144.5 573.5 T
(Availability) 144.5 530.5 T
1 10 Q
-0.3 (There is a wide range of software available to users of the) 147 434.33 P
1 9 Q
-0.27 (OPEN LOOK GUI) 377.22 434.33 P
1 10 Q
-0.3 (. The following) 445.66 434.33 P
0.09 (is a reprint of the \322Frequently Asked Questions\323 listing of) 147 422.03 P
1 9 Q
0.08 (OPEN LOOK) 382.32 422.03 P
1 10 Q
0.09 ( software from the) 433.14 422.03 P
0.05 (USENET newsgroup) 147 409.73 P
2 F
0.05 (comp.windows.open-look) 234.3 409.73 P
1 8 Q
0.04 (1) 335.96 413.73 P
2 10 Q
0.05 (.) 339.96 409.73 P
1 F
0.05 (It is a compilation of both free and com-) 345 409.73 P
1.32 (mercial software. This list is updated periodically; the most recent version is normally) 147 397.43 P
(posted to the Usenet newsgroup) 147 385.13 T
2 F
(comp.windows.open-look) 277.26 385.13 T
1 F
(.) 378.92 385.13 T
(Most of the free software is distributed in source code form, needing compilation.) 147 366.83 T
3 9 Q
-0.22 (This is version 1.13 92/12/18 of the file open-look-programs.faq.) 147 349.2 S
-0.22 (Contents:) 147 327.2 S
-0.22 (Subject: Applications: Application Builders) 167.65 316.2 S
-0.22 (Subject: Applications: Graphing Tools) 167.65 305.2 S
-0.22 (Subject: Applications: Other) 167.65 294.2 S
-0.22 (Subject: Tools: Terminal Emulators) 167.65 283.2 S
-0.22 (Subject: Other Commercial Applications) 167.65 272.2 S
-0.22 (Subject: Applications: toolkit Extensions) 167.65 261.2 S
-0.22 (Subject: OpenWindows 3 Ports) 167.65 250.2 S
-0.22 (Subject: XView 3 Ports) 167.65 239.2 S
-0.22 (Subject: XView 2 Ports) 167.65 228.2 S
-0.22 (Subject: Games \050free and commercial\051) 167.65 217.2 S
0 1 1 0 1 0 0 K
0 20 Q
0 1 1 0 1 0 0 K
(N.1  Applications: Application Builders) 111 185.57 T
0 0 0 1 0 0 0 K
3 9 Q
0 0 0 1 0 0 0 K
-0.22 (Commercial: DevGuide 3.0) 147 169.9 S
-0.22 (Contact: SunPICS) 147 158.9 S
1 10 Q
-0.29 (lets you use Drag and Drop to create an OPEN LOOK application with XView, OLIT,) 165 141.23 P
(UIT or TNT. Very easy to use.) 165 129.73 T
0 1 1 0 1 0 0 K
111 103 507 120.98 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
111 103 507 120.98 R
7 X
0 1 1 0 1 0 0 K
V
112.07 108.96 292.07 108.96 2 L
V
0.5 H
2 Z
0 X
N
45 63 567 729 C
0 0 0 1 0 0 0 K
1 8 Q
0 X
0 0 0 1 0 0 0 K
(1. This \322FAQ\323 is reprinted with the permission of its compiler, Liam Quin <lee@sq.com>) 147 97.67 T
0 1 1 0 1 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "527" 1
%%Page: "528" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (528) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 10 Q
7 X
(N) 75.08 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
3 9 Q
0 X
0 0 0 1 0 0 0 K
-0.22 (Free: dirt) 141 651 S
1 10 Q
(there _might_ be an OLIT port of this UI builder.) 159 633.33 T
3 9 Q
-0.22 (Commercial: ExoCode) 141 616.5 S
-0.22 (Contact: Expert Object) 141 605.5 S
1 10 Q
0.62 0.01 (one of the first third-party GUI builders to support OPEN LOOK, using the XView) 159 587.83 B
(toolkit. It was reviewed in SunExpert magazine in 1990.) 159 576.33 T
3 9 Q
-0.22 (Commercial: uib) 141 559.5 S
-0.93 -0.22 (Contact: ParcPlace, Debra Frances debra@ParcPlace.COM, +1 303 678-4626) 141 548.5 B
1 10 Q
0.45 (uib is a user interface builder which supports building applications that support both) 159 530.83 P
0.62 0.05 (OPEN LOOK and Motif. It generates code for ParcPlace\325s OI C++ toolkit and can) 159 519.33 B
-0.19 (make use of user created subclasses. Note: \324OI\325 can also display an OSF/Motif GUI at) 159 507.83 P
(runtime.) 159 496.33 T
3 9 Q
-0.22 (Free: wcl) 141 479.5 S
1 10 Q
0.44 (Uses X resources to specify an Xt widget hierarchy and actions to user-defined call-) 159 461.83 P
(backs. uses OLIT, Xt or Motif.) 159 450.33 T
3 9 Q
-0.22 (Commercial: XVT) 141 433.5 S
-0.22 (Contact: XVT Systems \050+1 303-443-4223\051) 141 422.5 S
1 10 Q
-0.36 (Lets you write code to a common subset of OPEN LOOK, Motif, Microsoft Windows,) 159 404.83 P
0.62 0 (the Macintosh GUI, and even terminals \050using curses\051. You buy an XVT toolkit for) 159 393.33 B
(each environment.) 159 381.83 T
0 1 1 0 1 0 0 K
0 20 Q
0 1 1 0 1 0 0 K
(N.2  Applications: Graphing T) 105 350.37 T
(ools) 334.96 350.37 T
0 0 0 1 0 0 0 K
3 9 Q
0 0 0 1 0 0 0 K
-0.22 (Free: dstool) 141 334.7 S
1 10 Q
0.62 0.06 (XView-based program that plots Lorenz Attractors and other chaotic things in real) 159 317.03 B
(time. Also includes a mathematical expression interpreter.) 159 305.53 T
(ftp: macomb.tn.cornell.edu) 159 288.03 T
3 9 Q
-0.22 (Free: ACE/gr -- graph and analysis program, xvgr) 141 271.2 S
-1.49 -0.22 (Ftp: ftp.ccalmr.ogi.edu [129.95.72.34]; xvgr-2.09.tar.Z in /CCALMR/pub/) 141 260.2 B
-0.22 (acegr) 141 249.2 S
1 10 Q
0.54 (Handles x-y scatterplots, lineplots, bargraphs, FFT analysis, running averages, poly-) 159 231.53 P
(nomial fits, etc.) 159 220.03 T
3 9 Q
-0.22 (Free: robot - a scientific graph plotting and data analysis tool) 141 203.2 S
-0.22 (Contact: Robin Corbet <corbet@astro.psu.edu>) 141 192.2 S
-0.22 (Description:) 141 181.2 S
1 10 Q
0.62 0.07 (Graph plotting in various styles & axes; Data manipulation - arithmetic, functions,) 159 163.53 B
-0.52 (smoothing, folding, sorting; Fitting to data using Gaussians, polynomials, Lorentzians,) 159 152.03 P
0.16 (and/or user defined functions; Annotation of graphs; log files; Commands with loops) 159 140.53 P
(etc.; Colour; PostScript output.) 159 129.03 T
3 9 Q
-0.22 (Ftp: astrod.astro.psu.edu \050128.118.147.28\051 in pub/astrod) 141 112.2 S
-0.22 (Ftp: files: robotx0.35.tar.Z - everything) 141 101.2 S
FMENDPAGE
%%EndPage: "528" 2
%%Page: "529" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (APPENDIX N: X USER\325S GUIDE: OPEN LOOK EDITION) 266.17 693.79 S
0 9 Q
0.45 (529) 487.34 693.79 S
111 684 507 708 R
0.5 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 10 Q
7 X
(N) 531 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
3 9 Q
0 X
0 0 0 1 0 0 0 K
-0.22 (Ftp: files: RobotManual.ps.Z - just the documentation.) 147 651 S
-0.22 (Ftp: files: robot.sun4.Z - binary built on a SPARCstation.) 147 640 S
-0.22 (Requirements:) 147 629 S
1 10 Q
-0.25 (Robot is XView based. User interface portions of code are written in \325C\325. Data manip-) 165 611.33 P
0.42 (ulation code is written in FORTRAN. Hence a FORTRAN compiler is also required) 165 599.83 P
-0.5 (or the public domain f2c package. Alternatively, a SPARC binary is available by anon-) 165 588.33 P
(ymous ftp.) 165 576.83 T
0 1 1 0 1 0 0 K
0 20 Q
0 1 1 0 1 0 0 K
(N.3  Applications: Other) 111 545.37 T
0 0 0 1 0 0 0 K
3 9 Q
0 0 0 1 0 0 0 K
-0.22 (Commercial: Bimail 400) 147 529.7 S
-0.22 (Contact: BIM \050+32-2-759.59.25\051 pge@sunbim.be) 147 518.7 S
-0.22 (X.400-address: C=be;A=RTT;P=BIM;O=Horizon;S=Geurts;G=Patrick) 147 507.7 S
-0.22 (Notes:) 147 496.7 S
1 10 Q
-0.45 (Bimail is a complete X.400 electronic mail system. It consists in a user interface which) 165 479.03 P
0.35 (gives access to all X.400 services with a consistent look and feel, a message transfer) 165 467.53 P
-0.13 (agent \050MTA\051 system which can transfer messages over X.25, TP.4 and TCP/IP \050using) 165 456.03 P
(RFC 1006\051. A gateway to SMTP mail is also available.) 165 444.53 T
3 9 Q
-0.22 (Free: WorkMan - Audio CD player for X11 \050Sun, Ultrix\051) 147 427.7 S
-0.22 (Requirements: XView libraries) 147 416.7 S
-0.22 (Ftp: Ultrix binary: ftp.hyperion.com in /WorkMan) 147 405.7 S
-0.22 (Ftp: ftp.ucsc.edu in "incoming" - database of over 750 CDs) 147 394.7 S
-0.22 (Contact: koreth@hyperion.com \050Steven Grimm\051) 147 383.7 S
-0.22 (Free: pan - Postit notes) 147 372.7 S
-0.22 (Free: xrolo - Rolodex card index/address book) 147 361.7 S
-0.22 (Commercial: SearchIt 1.0) 147 350.7 S
-0.22 (Contact: SunSoft or SunExpress) 147 339.7 S
-0.22 (SunExpress can be reached at:) 147 328.7 S
1 10 Q
(US: 1-800-873-7869; UK: 0800 89 88 88) 165 311.03 T
(Germany: 01 30 81 61 91; France: 05 90 61 57) 165 293.53 T
3 9 Q
-0.22 (Platforms: SPARC, Solaris 1.x) 147 276.7 S
-0.22 (Price: $249) 147 265.7 S
-0.22 (Notes:) 147 254.7 S
1 10 Q
0.31 (SearchIt is a full text search and retrieval application designed to improve individual) 165 237.03 P
-0.03 (and group productivity. It makes an index to files and can later retrieve documents by) 165 225.53 P
(words or phrases, ranking the results in relevance order.) 165 214.03 T
3 9 Q
-0.22 (Commercial: ShowMe) 147 197.2 S
-0.22 (Contact: SunSoft) 147 186.2 S
-0.22 (Notes:) 147 175.2 S
1 10 Q
0.62 0.15 (Conferencing software that lets multiple connected users share the same drawing) 165 157.53 B
(screen, with bitmap capture and moveable pointer.) 165 146.03 T
3 9 Q
-0.22 (Requirements:) 147 129.2 S
1 10 Q
0.08 (You can only run one ShowMe per computer, so you have to have a CPU per confer-) 165 111.53 P
(ence member.) 165 100.03 T
FMENDPAGE
%%EndPage: "529" 3
%%Page: "530" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (530) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 10 Q
7 X
(N) 75.08 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
3 9 Q
0 X
0 0 0 1 0 0 0 K
-0.22 (Free: xvman - Man Pages viewer) 141 651 S
-0.22 (Free: xvtdl - ToDo List manager) 141 640 S
-0.22 (Ftp: export.lcs.mit.edu /contrib/xvtdl-4.0.tar.Z, /contrib/xvtdl-4.0-) 141 629 S
-0.22 (README) 141 618 S
-0.22 (Requirements: XView libraries) 141 607 S
-0.22 (Contact: Mike Jipping jipping@cs.hope.edu \050BITNET: JIPPING@HOPE\051) 141 596 S
-0.22 (Organisation: Hope College Department of Computer Science) 141 585 S
-0.22 (Free: name_finder) 141 550.5 S
-0.22 (Contact: richard.elling@eng.auburn.edu +1 \050205\051 844-2280) 141 539.5 S
-0.22 (Ftp: ftp.eng.auburn.edu [131.204.10.91] pub/name_finder1.2.tar.Z.) 141 528.5 S
-0.22 (Patches: pub/name_finder1.2.compile.patch1.) 141 517.5 S
-0.22 (Requirements: OpenWindows 3.0, C++ 2.1 or greater to recompile) 141 506.5 S
-0.22 (Desctription:) 141 495.5 S
1 10 Q
-0.61 (name_finder was orginally designed as a replacement for the name finder missing from) 159 477.83 P
-0.41 (the OpenWindows Version 3.0 mailtool. It has since grown into a tool for several elec-) 159 466.33 P
0.62 0.18 (tronic mail related activities including: interaction with local ListServ robots for) 159 454.83 B
0.62 0.14 (handling mail lists, requesting Full.Name style mail aliases from your local Post-) 159 443.33 B
-0.46 (Master, and providing mailbox status information ala finger\0501\051. name_finder is written) 159 431.83 P
0.62 0.22 (in C++ \050cfront 2.1\051 using gxv++ version 1.1. If you don\325t have access to a C++) 159 420.33 B
(compiler, a precompiled sparc executable is included in the distribution.) 159 408.83 T
3 9 Q
-0.22 (bibcard \050v 1.01\051 LaTeX Bibliography Manager ???) 141 392 S
-0.22 (Ftp: ftp.eunet.ch in software/text/TeX/bibcard-1.0.tar.Z) 141 381 S
-0.22 (xftp interface to ftp.) 141 370 S
-0.22 (Ftp: ftp.chpc.utexas.edu as file /packages/X/xftp.0.1.alpha.tar.Z.) 141 359 S
-0.22 (Contact: Bill Jones jones@chpc.utexas.edu) 141 348 S
-0.22 (Requirements: X11, OLIT or Motif or Athena widgets) 141 337 S
1 10 Q
0.62 0.11 (compiles under \050at least\051 Ultrix, AIX 3.1.5, AIX 3.2, Convex OS, SunOS, Unicos) 159 319.33 B
(6.1.4, and IRIX. Uses OLIT. BUG: can also use OSF/Motif and Athena widgets.) 159 307.83 T
3 9 Q
-0.22 (Free: olvwm -- OPEN LOOK Virtual Window Manager) 141 291 S
-0.22 (contact: Scott Oaks) 141 280 S
-0.22 (Ftp: export.lcs.mit.edu in the contrib directory) 141 269 S
-0.22 (Patches: there are two patches) 141 258 S
-0.22 (Requirements: XView 3) 141 247 S
-0.22 (Description:) 141 236 S
1 10 Q
0.62 0.09 (Olvwm is a version of olwm that manages a \324virtual desktop\325 \050hence the \324v\325 in its) 159 218.33 B
0.62 0.05 (name\051. It shows a little map on the screen, with the currently displayed area repre-) 159 206.83 B
-0.46 (sented by a little rectangle. You can move around by dragging the rectangle or with the) 159 195.33 P
0.62 0.16 (arrow keys. This lets you run several clients \050applications\051 and move the display) 159 183.83 B
-0.19 (around from one to the other. Olvwm was derived from the OpenWindows 3.0 olwm.) 159 172.33 P
3 9 Q
-0.22 (Free: bibcard -- OPEN LOOK font end to BibTeX.) 141 155.5 S
-0.22 (Ftp: iam.unibe.ch [130.92.64.10] /X11/Bibcard-1.0.tar.Z) 141 144.5 S
-0.22 (Ftp: includes source and SPARC binary for SunOS 4.1.1.) 141 133.5 S
-0.22 (Requirements: XView) 141 122.5 S
-0.22 (contool \050ftp from export.lcs.mit.edu\051) 141 111.5 S
FMENDPAGE
%%EndPage: "530" 4
%%Page: "531" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (APPENDIX N: X USER\325S GUIDE: OPEN LOOK EDITION) 266.17 693.79 S
0 9 Q
0.45 (531) 487.34 693.79 S
111 684 507 708 R
0.5 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 10 Q
7 X
(N) 531 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
-0.47 (a special-purpose console-window that can filter out or take special action on specified) 165 650.33 P
(console messages; written by Chuck Musciano.) 165 638.83 T
3 9 Q
-0.22 (ftptool \050ftp from export.lcs.mit.edu\051) 147 622 S
1 10 Q
(an OPEN LOOK front-end to ftp \050it uses XView\051) 165 604.33 T
3 9 Q
-0.22 (Hyperlook, from the Turing Institute) 147 587.5 S
1 10 Q
0.62 0.1 (Hypertext package written entirely in NeWS. Runtime from turing.com in /pub or) 165 569.83 B
(ftp.uu.net \050graphics/NeWS/HyperLook1.5-runtime.tar.Z\051) 165 558.33 T
3 9 Q
-0.22 (Maestro \050ftp from sioux.stanford.edu\051) 147 541.5 S
1 10 Q
(Multimedia authoring tools, including support for sound, text & video.) 165 523.83 T
3 9 Q
-0.22 (xvnews \050ftp from export.lcs.mit.edu\051) 147 507 S
1 10 Q
(An xview-based newsreader for netnews.) 165 489.33 T
3 9 Q
-0.22 (xvttool \050ftp from titan.rice.edu:sun-source\051) 147 472.5 S
1 10 Q
-0.25 (A vt100/102 emulator, in both XView and SunView versions. Includes buttons for the) 165 454.83 P
(PF keys, etc.) 165 443.33 T
0 1 1 0 1 0 0 K
0 20 Q
0 1 1 0 1 0 0 K
(N.4  PostScript and Graphics V) 111 411.87 T
(iewers) 351.94 411.87 T
0 0 0 1 0 0 0 K
3 9 Q
0 0 0 1 0 0 0 K
-0.22 (Commercial: pageview - PostScript previewer) 147 396.2 S
-0.22 (Contact: Included in OpenWindows as part of DeskSet.) 147 385.2 S
-0.22 (Notes:) 147 374.2 S
1 10 Q
0.26 (Type 1 support only in OpenWindows 3.0.1 under Solaris 2.1. Antialiasing support -) 165 356.53 P
0.48 (with colour OpenWindows 3 try pageview -aa -dpi 150 Note that pageview uses the) 165 345.03 P
0.17 (X11/NeWS server to interpret the PostScript, and thus won\325t run on an X terminal or) 165 333.53 P
0.29 (other non-OpenWindows server. It\325s *not* enough to be runing an OPEN LOOK UI) 165 322.03 P
([tm] window manager such as olwm.) 165 310.53 T
3 9 Q
-0.22 (Commercial: xps - PostScript program editor and previewer) 147 293.7 S
-0.22 (Contact: included with OpenWindows 2.0 under demo and share/src) 147 282.7 S
-0.22 (Notes:) 147 271.7 S
1 10 Q
(Only runs under OpenWindows 2 \050not 3\051.) 165 254.03 T
3 9 Q
-0.22 (Commercial: psh) 147 237.2 S
-0.22 (Contact: included with OpenWindows) 147 226.2 S
1 10 Q
(simple interface to NeWS and the OpenWindows server) 183 208.53 T
3 9 Q
-0.22 (Free: ralpage) 147 191.7 S
-0.22 (Ftp: export.lcs.mit.edu in contrib/clients) 147 180.7 S
-0.22 (Notes:) 147 169.7 S
1 10 Q
-0.02 (Crispin Goswell\325s PostScript interpreter, much hacked. Not OPEN LOOK compliant.) 165 152.03 P
-0.25 (No Type 1 font support. There are other versions of this called \324xps\325, \324postscript\325, etc.;) 165 140.53 P
(don\325t confuse this \324xps\325 with the one mentioned above.) 165 129.03 T
3 9 Q
-0.22 (Free: ghostscript) 147 112.2 S
-0.22 (\050from the Free Software Foundation\051) 147 101.2 S
FMENDPAGE
%%EndPage: "531" 5
%%Page: "532" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (532) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 10 Q
7 X
(N) 75.08 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
(Supports Type 1 fonts. Not OPEN LOOK based.) 159 650.33 T
0 1 1 0 1 0 0 K
0 20 Q
0 1 1 0 1 0 0 K
(N.5  T) 105 618.87 T
(ools: T) 149.06 618.87 T
(erminal Emulators) 202.22 618.87 T
0 0 0 1 0 0 0 K
3 9 Q
0 0 0 1 0 0 0 K
-0.22 (Free: cmdtool, shelltool) 141 603.2 S
-0.22 (Requirements: XView 3 toolkit) 141 592.2 S
-0.22 (Notes:) 141 581.2 S
1 10 Q
0.62 0.18 (These are included in the XView source distribution from export.lcs.mit.edu in /) 159 563.53 B
(contrib; they\325re also included with Sun\325s OpenWindows.) 159 552.03 T
3 9 Q
-0.22 (Commercial: SwitchTerm) 141 535.2 S
-0.22 (Contact: Micro Resources Inc., Columnbus, Ohio, USA, +1 614 766-2335) 141 524.2 S
-0.22 (Notes:) 141 513.2 S
1 10 Q
0.62 0.09 (A version of Xterm with an OPEN LOOK UI, print interface, ANSI X3.64 colour) 159 495.53 B
(escape sequences, etc.) 159 484.03 T
3 9 Q
-0.22 (Commercial: IsoTerm) 141 467.2 S
-0.22 (Contact: The Bristol Group Ltd., +1 415 925-9250 and \05049\051 6105-2945) 141 456.2 S
-0.22 (\050Germany\051) 141 445.2 S
-0.22 (Requirements: OpenWindows 3 \050??\051) 141 434.2 S
-0.22 (Other Products: IsoTeX, IsoFax, Power Base) 141 423.2 S
-0.22 (Notes:) 141 412.2 S
1 10 Q
0.09 (An OLIT-based terminal emulator. I couldn\325t get the demo version to give me a shell) 159 394.53 P
-0.49 (prompt, although it did look like it was a pretty fll vt340 emulation, with double-height) 159 383.03 P
0.39 (characters, colour, fonts, grahics and so forth. With the Union Flag \050the British flag\051) 159 371.53 P
(as their logo I somehow expected an English address, perhaps in Bristol...) 159 360.03 T
0 1 1 0 1 0 0 K
0 20 Q
0 1 1 0 1 0 0 K
(N.6  Other Commercial Applications) 105 328.57 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
-0.59 (Contact SunSoft \050or Sun\051 and ask for the Catalyst OPEN LOOK guide, which lists over) 159 309.23 P
0.62 0.26 (200 pages of applications. You can also get the free CDWare CD/ROM, which) 159 297.73 B
-0.52 (contains demo versions of several popular OPEN LOOK UI applications. Once you\325ve) 159 286.23 P
0.62 0.15 (done this, you can often simply contact the vendor concerned to have the license) 159 274.73 B
(upgraded from demo, and receive the full product documentation.) 159 263.23 T
3 9 Q
-0.22 (Product Name: Author/Editor - SGML-based text editor/word processor) 141 246.4 S
-0.22 (Company Name: SoftQuad Inc., +1 416 239 4801, mail@sq.com) 141 235.4 S
-0.22 (Description:) 141 224.4 S
1 10 Q
0.62 0.06 (Word processor or text editor that manipulates ISO 8879 SGML documents. Inter-) 159 206.73 B
(faces: OPEN LOOK UI \050XView\051, OSF/Motif, Mac, MS/Windows) 159 195.23 T
0 1 1 0 1 0 0 K
0 20 Q
0 1 1 0 1 0 0 K
(N.7  Applications: toolkit Extensions) 105 163.77 T
0 0 0 1 0 0 0 K
3 9 Q
0 0 0 1 0 0 0 K
-0.22 (Product Name: Xtra XWidgets) 141 148.1 S
-0.22 (Company Name: Graphical Software Technology) 141 137.1 S
-0.22 (E-Mail: info@gst.com) 141 126.1 S
-0.22 (Phone: 310-328-9338; Fax: 310-376-6224) 141 115.1 S
-0.22 (Keywords: graphics, library, widgets, spreadsheet, help) 141 104.1 S
-0.22 (Interfaces: OPEN LOOK, Motif) 141 93.1 S
FMENDPAGE
%%EndPage: "532" 6
%%Page: "533" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (APPENDIX N: X USER\325S GUIDE: OPEN LOOK EDITION) 266.17 693.79 S
0 9 Q
0.45 (533) 487.34 693.79 S
111 684 507 708 R
0.5 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 10 Q
7 X
(N) 531 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
3 9 Q
0 X
0 0 0 1 0 0 0 K
-0.22 (Platforms: SPARC, HP9000s300/400/700, IBM RS6000, Interactive 386) 147 651 S
-0.22 (Requirements: X11, Xt, Xol \050or Xm\051 libraries and headers; X11) 147 640 S
-0.22 (Price: $795/single user, $3000/network, $5000/source) 147 629 S
-0.22 (Support-Price: $400/30 calls) 147 618 S
-0.22 (Source-Available: yes) 147 607 S
-0.22 (Description:) 147 596 S
1 10 Q
0.62 0.16 (The Xtra XWidget library contains a set of widgets that are subclassed from and) 165 578.33 B
0.62 0.17 (compatible with either OLIT or Motif widgets. The library includes widgets that) 165 566.83 B
0.62 0.03 (implement the following: Spreadsheet, Bar Graph, Stacked Bar Graph, Line Graph,) 165 555.33 B
0.42 (Pie Chart, XY Plot, Hypertext, Hypertext based Help System, and Data Entry Form.) 165 543.83 P
0.62 0.16 (Widgets have been successfully integrated with both TeleUSE from Telesoft and) 165 532.33 B
0.62 0.3 (Builder Xcessory from ICS. A free demo is available for any of the supported) 165 520.83 B
(platforms.) 165 509.33 T
3 9 Q
-0.22 (Product Name: XRT/Graph) 147 492.5 S
-0.22 (Company Name: KL Group) 147 481.5 S
-0.22 (E-mail: sun.com!suncan!klg!xrt_info) 147 470.5 S
-0.22 (Phone: +1 416 594-1026) 147 459.5 S
-0.22 (Description:) 147 448.5 S
1 10 Q
0.62 0.28 (XRT/Graph is a charting/graphing extension to XView. There are OLIT and \050I) 165 430.83 B
(_think_\051 Motif versions available, too. A free demo is available.) 165 419.33 T
3 9 Q
-0.22 (Free: Slingshot XView extension) 147 402.5 S
1 10 Q
0.29 (Slingshot provides rectangles \050like the Xt Intrinsics\325 RectObj gadget\051, drag-and-drop) 165 384.83 P
0.62 0.68 (support, images, icons and text, trees, lines, arrows... Get it by ftp from) 165 373.33 B
0.62 0.08 (export.lcs.mit.edu, in /contrib/SlingShot2.0.tar.Z \050remember to use binary mode in) 165 361.83 B
(ftp!\051.) 165 350.33 T
0.01 (You can also get it by sending mail to archive-server@gazooch.eng.sun.com with the) 165 332.83 P
(body of each message containing a line like) 165 321.33 T
(send sspkg2.0 Part01 Part02) 183 303.83 T
(going up to) 165 286.33 T
(send sspkg2.0 Part17 Part18) 183 268.83 T
(send sspkg2.0 DocPart01 DocPart02 DocPart03) 183 251.33 T
(send sspkg2.0 DocPart04 DocPart05 DocPart06) 183 233.83 T
-0.11 (You can ask for one file at a time to reduce the impact on intermediate mail sites. Ask) 165 216.33 P
0.62 0.13 (the mail server for help with the Subject line: "help". A human can be reached at) 165 204.83 B
(archive-manager@gazooch.eng.sun.com. Add a line in the message) 165 193.33 T
(path <your-mail-address>) 183 175.83 T
(if you think the normal automatic reply address might not work.) 165 158.33 T
3 9 Q
-0.22 (Ada bindings for XView) 147 141.5 S
1 10 Q
0.62 0.39 (Sun Ada 1.1 includes among other things an Ada Source Code Generator for) 165 123.83 B
-0.21 (Devguide. It uses the Verdix XView Ada bindings. It does not yet [July 1992] support) 165 112.33 P
(gfm \050the guide file manager\051.) 165 100.83 T
FMENDPAGE
%%EndPage: "533" 7
%%Page: "534" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (534) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 10 Q
7 X
(N) 75.08 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
3 9 Q
0 X
0 0 0 1 0 0 0 K
-0.22 (C++ Bindings for XView) 141 651 S
-0.22 (Qualix\325s XV++.) 141 640 S
-0.22 (UIT) 141 629 S
0 1 1 0 1 0 0 K
0 20 Q
0 1 1 0 1 0 0 K
(N.8  OpenW) 105 597.37 T
(indows 3 Ports) 196.9 597.37 T
0 0 0 1 0 0 0 K
1 10 Q
0 0 0 1 0 0 0 K
(Sun: SPARC, SunOS 4.1) 159 578.03 T
(Sun: SPARC, Solaris 2 \050actually 3.0.1?\051) 159 560.53 T
(others: none so far...) 159 543.03 T
-0.29 (There are said \050by Sun\051 to be two or three ports of OpenWindows either available now) 159 525.53 P
0.62 1.03 (or in progress. Contact Anthony Flynn at Open Vistas International) 159 514.03 B
0.53 (\050anthony@ovi.com\051 for more information. \050originally they said 35, but perhaps they) 159 502.53 P
(meant 3.5\051) 159 491.03 T
-0.31 (OpenWindows source is available - commercially, it costs about $5,000 for the server,) 159 473.53 P
0.62 0.24 (including TypeScaler and the toolkits; deskset \050filemgr etc\051 is another $25,000;) 159 462.03 B
(ToolTalk is $40,000 or so.) 159 450.53 T
0 1 1 0 1 0 0 K
0 20 Q
0 1 1 0 1 0 0 K
(N.9  XV) 105 419.07 T
(iew 3 Ports) 160.92 419.07 T
0 0 0 1 0 0 0 K
3 9 Q
0 0 0 1 0 0 0 K
-0.22 (What: XView 3) 141 403.4 S
-0.22 (System: Apple A/UX) 141 392.4 S
-0.22 (Porter: lmj@uncompaghre.jax.org \050Lou Jones\051) 141 381.4 S
-0.22 (Ftp: encyclo.jax.org) 141 370.4 S
-0.22 (Notes:) 141 359.4 S
1 10 Q
0.31 (The libraries and utilities \050olwm, cmdtool, etc\051 are available for anonymous ftp from) 159 341.73 P
-0.29 (encyclo.jax.org. I used gcc 2.1 to compile the sources. If there is enough interest, I can) 159 330.23 P
(make the diffs available.) 159 318.73 T
3 9 Q
-0.22 (System: Concurrent 7000 \05068040 based\051) 141 301.9 S
-0.22 (Porter: sinan@Mtesol.boeing.com \050Sinan Karasu\051) 141 290.9 S
-0.22 (System: DECStation/Ultrix) 141 279.9 S
-0.22 (Porter: dscott@ittc.wec.com \050Dave Scott\051) 141 268.9 S
-0.22 (Ftp: media-lab.media.mit.edu:~ftp/xview3-ultrix.4.2-mips.tar.Z) 141 257.9 S
-0.22 (Notes:) 141 246.9 S
1 10 Q
0.4 (Let me stress that this is *not* fully tested, but seems to work pretty well. Please let) 159 229.23 P
(me know about any problems you find. Problems I already know about:) 159 217.73 T
0.19 (Large buttons under *any* non-Sun X server \050non-xnews; i.e. any standard MIT) 177 200.23 P
0.32 (X11R[45] server\051 have the bottom of the button chopped off. We\325re working on) 177 188.73 P
(this one. :-\051) 177 177.23 T
3 9 Q
-0.22 ([actually this seems *not* to be Dave Scott\325s port; please accept my) 141 160.4 S
-0.68 -0.22 (apologies for listing this incorrectly. A correct entry will appear as) 141 149.4 B
-0.22 (soon as I get the necessary information. -- Lee]) 141 138.4 S
-0.22 (System: HP 720) 141 116.4 S
-0.22 (Porter: \050?\051) 141 105.4 S
-0.22 (Ftp: tesla.ucd.ie [137.43.24.44], /pub) 141 94.4 S
FMENDPAGE
%%EndPage: "534" 8
%%Page: "535" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
111 699.46 507 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 8.5 Q
0 X
0 0 0 1 0 0 0 K
0.43 (APPENDIX N: X USER\325S GUIDE: OPEN LOOK EDITION) 266.17 693.79 S
0 9 Q
0.45 (535) 487.34 693.79 S
111 684 507 708 R
0.5 H
0 Z
N
69 81 93 669 R
7 X
V
0 1 1 0 1 0 0 K
525 631 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 631 582 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 579 655 R
V
525 646.46 567 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
525 646.46 579 655 R
0 X
0 1 1 0 1 0 0 K
V
525 631 567 655 C
0 0 0 0 1 1 1 K
0 10 Q
7 X
(N) 531 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
3 9 Q
0 X
0 0 0 1 0 0 0 K
-0.22 (Notes:) 147 651 S
1 10 Q
(Includes HP 720 build, HP XView patch file, Xvgr.) 165 633.33 T
3 9 Q
-0.22 (System: HP9000/300 series) 147 616.5 S
-0.22 (Porter: tjc@ecs.soton.ac.uk \050Tim Chown\051) 147 605.5 S
-0.22 (System: HP9000/7XX series) 147 594.5 S
-0.22 (Ftp: ftp.csc.liv.ac.uk \050138.253.42.172\051 hpux/X11/xview-) 147 583.5 S
-0.22 (3.part[123].tar.Z) 147 572.5 S
-0.22 (System: Intel \050SysVR4/i386\051) 147 561.5 S
-0.22 (Porter: dawes@physics.su.OZ.AU \050David Dawes\051) 147 550.5 S
-0.22 (Ftp: ftp.physics.su.oz.au, suphys.physics.su.oz.au /Esix_4/x11r5) 147 539.5 S
-0.22 (hierarchy) 147 528.5 S
-0.22 (Notes:) 147 517.5 S
1 10 Q
0.21 (His patches were for Esix 4.0.3 but should work on DELL, ISC and Intel SVR4 with) 165 499.83 P
(no worries. The files are README.xview3 and xview3.diff.Z.) 165 488.33 T
3 9 Q
-0.22 (System: IBM RS/6000) 147 471.5 S
-0.22 (Porter: tmcconne@sedona.intel.com \050Tom McConnell\051) 147 460.5 S
-0.22 (Compiler: bsdcc) 147 449.5 S
-0.22 (Ftp: export.lcs.mit.edu:contrib/xview3/Fixes/) 147 438.5 S
-0.22 (xview3_rs6k_unofficial.patch.Z) 147 427.5 S
-0.22 (Notes:) 147 416.5 S
1 10 Q
-0.51 (There is still a problem with tty support for the RS/6000. For instance, the cmdtool will) 165 398.83 P
0.62 0.23 (not work. Still, most everything else works. For those of you who have already) 165 387.33 B
0.62 0.1 (installed my previous patch, I have put a separate patch for just the shared library) 165 375.83 B
(problem. This file is contrib/xview3/Fixes/xview3_rs6k_XView_lib.patch.Z.) 165 364.33 T
3 9 Q
-0.22 (System: SGI) 147 347.5 S
-0.22 (Porter: Rainer Sinkwitz <sinkwitz@ifi.unizh.ch>) 147 336.5 S
-0.22 (Ftp: export.lcs.mit.edu:/contrib/xview3/Fixes/) 147 325.5 S
-0.22 (xview3_sgi_unofficial.patch.tar.Z) 147 314.5 S
-0.22 (Notes:) 147 303.5 S
-0.22 (System: Solbourne Series 5) 147 292.5 S
-0.22 (Porter: tmcconne@sedona.intel.com \050Tom McConnell\051) 147 281.5 S
0 1 1 0 1 0 0 K
0 20 Q
0 1 1 0 1 0 0 K
(N.10  XV) 111 249.87 T
(iew 2 Ports) 176.04 249.87 T
0 0 0 1 0 0 0 K
3 9 Q
0 0 0 1 0 0 0 K
-0.22 (In general, there is no point in using XView 2 if you have XView 3) 147 234.2 S
-0.22 (available;) 147 223.2 S
-1.65 -0.22 (it\325s a good idea to look for an XView 3 port first. Moving from XView 2 to) 147 212.2 B
-0.19 -0.22 (XView 3 is usually simply a matter of recompiling, unless you\325ve done) 147 201.2 B
-0.22 ("dirty tricks" or used undocumented calls.) 147 190.2 S
-0.22 (System: Stellar GS100 \050Stardent 1000\051 and Stardent 1500 & 3000) 147 179.2 S
-0.22 (Porter: arvai@scripps.edu \050Andy Arvai\051) 147 168.2 S
-0.22 (Ftp: perutz.scripps.edu \050137.131.152.27\051 in the pub/xview directory) 147 157.2 S
-0.22 (Notes:) 147 146.2 S
1 10 Q
(Stardent is now Kubota Pacific \050KPC\051) 165 128.53 T
3 9 Q
-0.22 (System: Harris Nighthawk 4000 system \050CX/UX Unix\051) 147 111.7 S
-0.22 (Porter: andy@harris.nl \050Andy Warner\051) 147 100.7 S
FMENDPAGE
%%EndPage: "535" 9
%%Page: "536" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
105 699.46 501 708 R
7 X
0 0 0 1 0 0 0 K
V
45 63 567 729 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
0.45 (536) 109 693.79 S
0 8.5 Q
0.43 (X USER\325S GUIDE: OPEN LOOK EDITION) 141 693.79 S
105 684 501 708 R
0.5 H
0 Z
N
525 81 549 669 R
7 X
V
0 1 1 0 1 0 0 K
45 631 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 631 90 655 R
0 X
0 1 1 0 1 0 0 K
V
33 631 90 655 R
V
45 646.46 90 655 C
0 0 0 1 0 0 0 K
0 1 1 0 1 0 0 K
33 646.46 90 655 R
0 X
0 1 1 0 1 0 0 K
V
45 631 90 655 C
0 0 0 0 1 1 1 K
0 1 1 0 1 0 0 K
0 0 0 0 1 1 1 K
0 10 Q
7 X
(N) 75.08 639.79 T
0 1 1 0 1 0 0 K
45 63 567 729 C
0 0 0 1 0 0 0 K
3 9 Q
0 X
0 0 0 1 0 0 0 K
-0.22 (Status: Commercial) 141 651 S
-0.22 (System: SGI/Iris) 141 640 S
-0.22 (Porter: \050?\051) 141 629 S
-0.22 (Ftp: wuarchive.wustl.edu:graphics/graphics/sgi-stuff/XView/xview2) 141 618 S
-0.22 (System: VAX/VMS) 141 607 S
-0.22 (Porter: TGV Inc \050?\051) 141 596 S
-0.22 (Notes:) 141 585 S
1 10 Q
(Steven Fenger <svfenge@afterlife.ncsc.mil> wrote:) 159 567.33 T
(A company called TGV makes a product called "XView for VMS". ...) 159 549.83 T
0 1 1 0 1 0 0 K
0 20 Q
0 1 1 0 1 0 0 K
(N.1) 105 518.37 T
(1  Games \050free and commercial\051) 129.32 518.37 T
0 0 0 1 0 0 0 K
3 9 Q
0 0 0 1 0 0 0 K
-0.22 (Free: hexsweeper - minesweeper game based on hexagons) 141 502.7 S
-0.22 (Contact: lee@sq.com, include HexSweeper in Subject) 141 491.7 S
-0.22 (Requirements: OpenWindows 3.0 or later) 141 480.7 S
-0.22 (Toolkit: TNT 3) 141 469.7 S
-0.22 (Free: Spider \050Included in OpenWindows under \324demo\325 and \324share/src\325\051) 141 458.7 S
1 10 Q
0.62 0.12 (A patience-style card game with two packs of cards and excellent bitmap cards. I) 159 441.03 B
(suggest recompiling to allow the cards to have rounded edges.) 159 429.53 T
3 9 Q
-0.22 (Free: Xblackjack \050ftp from export.lcs.mi.edu as contrib/xblackjack-) 141 412.7 S
-0.22 (2.1.tar.Z\051) 141 401.7 S
1 10 Q
(A MOTIF/OLIT based tool constructed to get you ready for the casino.) 159 384.03 T
3 9 Q
-0.22 (Commercial: Aviator - flight simulator for GX-equipped SPARCStations) 141 367.2 S
-0.93 -0.22 (Contact: Artificial Horizons Inc, aviator-interest@ahi.com; +1 415 367) 141 356.2 B
-0.22 (5029) 141 345.2 S
-0.22 (Requirements: OpenWindows \0502 or 3\051, SunOS 4.1 or later, SPARC GX or) 141 334.2 S
-0.22 (GXplus) 141 323.2 S
-0.22 (Commercial: SimCity) 141 312.2 S
-0.22 (Contact: Dux Software, Los Altos, CA) 141 301.2 S
-0.22 (Price: US$89) 141 290.2 S
-1.48 -0.22 (Requirements: OpenWindows 3 \050uses NeWS\051. Doesn\325t run on a 4/110 with cg4) 141 279.2 B
-0.22 (:-\050) 141 268.2 S
FMENDPAGE
%%EndPage: "536" 10
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 10
%%DocumentFonts: Helvetica-Narrow-BoldOblique
%%+ Times-Roman
%%+ Times-Italic
%%+ Courier
%%EOF
