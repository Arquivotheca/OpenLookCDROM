
PACKAGE CONTENTS
----------------
This is my fifth release of a linux port of the Xview toolkit
library & friends. The package contains the following:

     - DLL libraries (v3.0) of olgx, xview and slingshot
     - DLL library of UIT, now split into libUIC and libUICSS (v2.0)
     - Static libraries for XView developers
     - olwm (OpenLook window manager)
     - olvwm (OpenLook virtual window manager)
     - Binaries for:
       * cmdtool/shelltool (OpenLook compliant shell window)
       * props             (Properties tool)
       * textedit          (Text editor)
       * clock             (OpenLook compliant clock)
       * meminfo           (Display memory & swap status using gauges)
NEW!   * perf by Rudolf Koenig (rstat frontend, perfmeter clone)
       All binaries have been linked with the DLL libraries.
     - User Interface Toolkit (UIT), a C++ API for XView
       (user documentation not included)
     - Postscript documentation for the Slingshot extensions.
       (See later in this text for a short description of Slingshot).
NEW! - Sources for XView examples.
     - Sources for Slingshot examples.
     - Sources for UIT examples.
     - Header files for xview, olgx, pixrect, slingshot and UIT
     - Man pages for the window manager + tools
     - Online help files
     - Sample openwin-menu files, customized for X-utils available with
       the SLS distribution. This could be a good starting point if you
       haven't already got your own Workspace menus.
     - A new entry for /etc/termcap. The command tool requires an entry
       for a 'sun' terminal. 
     - A "openwin" script to start X using ol[v]wm
     - xtoolplaces as a replacement for owplaces to save workspace setup.

CHANGES AND FIXES FROM PREVIOUS LINUX RELEASE
---------------------------------------------
See ChangeLog file included in the package.

INSTALLATION
-------------
Execute the 'Install' script. If you have XView already installed (from
a previous release), it will be uninstalled. If you are using a previous
release of xview, you should leave X before installation.

IMPORTANT! If you have modified anything under /usr/openwin
(e.g. openwin-menus in /usr/openwin/lib), you should store your
customizations somewhere safe before starting the installation.

The script will install various files in /usr/openwin, and make some
links in /usr/include and other places.

The script "openwin" in /usr/openwin/bin and /usr/X386/bin can be used to
start X instead of the "startx" script. "openwin" will set environment
variables and search paths for the XView tools. "openwin" also restores
the desktop setup from $HOME/.openwin-init if present. For "openwin" to
work correctly, it is recommended to copy the Xinitrc from this package to
your home directory as .xinitrc (cp Xinitrc $HOME/.xinitrc).  The .xinitrc
file supports using non-openwin setups, see the file for instructions.

The xview header files live under /usr/openwin/include. The install
script will make softlinks pointing at the olgx, pixrect, xview,
sspkg and uit include directories, so no special header file
directories need to be specified when compiling applications.

The install script will also place a termcap entry for a sun terminal in
/etc/termcap, required by cmdtool/shelltool. The script will remove any
previous sun terminal entry.

You might also want to customize .textswrc and .ttyswrc. I haven't
done much to improve these, they're pretty Sun-specific at the moment.

Another thing to look at is your .Xmodmap. Olwm uses (but does not
require) keys that aren't available on PC keyboards, such as Help,
Cut, Paste etc. The installation program will ask you whether to append
definitions for these special keys in your .Xmodmap. This will allow
you to use the keyboard for Copy-Paste, which is sometimes quicker than
fiddling with the mouse to find the correct menu item.

Settings in $HOME/.Xdefaults allows you to customize the behaviour and
appearance of the OpenLook environment. The 'props' tool allows you to
change a subset of the settings in this file. The package contains a
sample file, read the manual pages for olwm(1), olvwm(1) and others
for more info.

In XView3.2, menu accelerators define shortcuts for olwm menu actions.
I have added some accelerators in the provided Xdefaults file. Many
accelerators use the 'Meta' modifier. If the accelerators interfere with
emacs or other programs, see the olwm(1) man page how to disable
accelerators for specific applications. You are of course free to disable
them all together if you rather use the mouse.

Short summary on some accelerators:
Alt-n:		Shift input focus to the next window
Shift-Alt-n:	Shift input focus to the previous window
Alt-m:		Bring up window frame menu of current window
Shift-Alt-m:	Bring up root menu
Meta-c:		Toggle window between iconized and open state
Meta-f:		Toggle window between fullsized and normal state
Meta-m:		Move window
Meta-r:		Resize window
Meta-b:		Put window behind all others
Meta-q:		Quit the window (end the app)
Meta-p:		Toggle state of pin on popup windows
(Most of the above accelerators require that you install the 'Xdefaults'
 file from this package as your $HOME/.Xdefaults, and that you have the
 'Meta' modifier defined in your $HOME/.Xmodmap)

'olwm' now has the DSDM (Drop Site Database Management) service built in.
Previously this was provided by an external program not freely available.
This means that drop site previewing now works, but only when using
olwm(1), not with olvwm(1). 

There is a Postscript document '/usr/openwin/share/doc/xview/whats_new.ps'
by Sun that lists the new features in XView3.2.

The 'perf' program by Rudolf Koenig <rfkoenig@immd4.informatik.uni-erlangen.de>
requires some kernel patches that are not yet included in the standard
kernel (0.99pl12). The sources to 'perf' and 'rpc.rstatd' are under the
'src/perf' directory in this package.

WHAT IS XVIEW (excerpt from SunFlash announcing XView 3.0 release)
------------------------------------------------------------------
XView is a user-interface toolkit to support interactive, graphics-based
applications running under the X Window System.  XView provides a set of
pre-built, user-interface objects such as canvases, scrollbars, menus, and
control panels.  The appearance and functionality of these objects follow
the OPEN LOOK Graphical User Interface (GUI) specification.  XView features
an object-oriented style Application Programmer's Interface (API) that is
straightforward and easy to learn.  XView's API is very similar to the
API of the SunView toolkit; in practice, most SunView applications can
be converted to XView in a few days, although some will take longer.
Additionally, XView provides both 2D and 3D-look OPEN LOOK graphical
interfaces through the usage of the OPEN LOOK graphics library (OLGX).

WHAT IS OLWM (excerpt from SunFlash announcing XView 3.0 release)
-----------------------------------------------------------------
OLWM is an ICCCM-compliant window manager, also based on the OPEN LOOK GUI.
OLWM is a "stand-alone" window manager, not dependent on any toolkit code.
OLWM provides both 2D and 3D-look OPEN LOOK graphical interfaces through
the usage of the OPEN LOOK graphics library (OLGX).  OLGX is written to the
Xlib interface and does not use any toolkit.

WHAT IS SLINGSHOT (from preface of Slingshot documentation)
-----------------------------------------------------------
The XView toolkit provides a number of user interface objects such as Frames,
Icons, and Panel items. While these are necessary and appropriate for many
types of applications, programmers are forced to use Xlib to implement other
types of user interfaces. Unfortunately, Xlib programming is difficult and
tedious. The Slingshot extensions provide one answer to this dilemma, by
supplying a set of objects and event handling routines that implement commonly
needed functionality.

The Slingshot extensions to XView are based on the XView toolkit. Programmers
who already know XView will find the Slingshot extensions very familiar
because the XView API (xv_create(), xv_set(), xv_get(), etc.) is used.

This package contains the release 2.0 of Slingshot extensions. Release 2.0
is based on XView 3.0 and incorporates the XView 3.0 selections and drag and
drop interfaces.

WHAT IS UIT (from introduction of UIT documentation)
----------------------------------------------------
The UIT is a tool/class library for C++ programmers developing OpenWindows
user interfaces.

The UIT has two parts:
* A hierarchy of OpenLook-conformant user-interface classes, realized in
  C++ on top of the XView toolkit. These are the user-interface components
  (UIC).

* A tool to convert OpenWindows developer's guide (DevGuide) output into
  C++ code that uses the UIC. This part is the guide to UIC utility, or `guic`.

  [note. `guic` was provided as a Sun-binary only, and is not included in the
  linux package (anyone wanna build a Sparc emulator:-) :-) I'd recommend
  getting the whole package from ftp.x.org, the Postscript docs are
  over 1MB, and not included here]

BUGS
----
Although this port works a bit better than my previous release, there are
still known (and probably unknown) bugs:

- The command tool does not function very well. In particular, there
  still is a problem with unwanted echo of keyboard input, which seems
  to disappear by running vi(1) or other program which disables scrolling.
- Be aware that closing the window manager while you have open shelltools
  will leave entries in the utmp file. This means that utilities that depend
  on utmp entries such as 'shutdown' and 'reboot' will not work properly.
  Always close all shell windows before ending the session.
- The 'Tacho' object in Slingshot has a small bug in the lower left corner,
  due to the arc extending one pixel too far. The problem is probably a
  faked 'irint()' function in my port, which introduces a rounding error.
  The bug can be seen in the 'tacho' and 'temp_grip' examples.
- A problem with the slingshot drawtext object, reports breaking of
  embedding seal in some instances.
- A problem with abbreviated menu buttons in UIT.
- The Slingshot example 'dnd2' cannot be compiled because it requires the
  Sun OpenWindows Classing Engine, which hasn't been released by Sun.

If you find other (linux-specific) bugs please report them to
lmfken@lmf.ericsson.se.

ENVIRONMENT USED DURING PORT
----------------------------
Linux kernel 0.99p12
DLL X-libs (3.0.1), libc (4.4.1), libm (4.0)
SLS distribution (not the latest, though)
XFree-1.3
GCC 2.4.3

LOCATION OF SOURCES
-------------------------------------------------------------------------------
west coast      xview.ucdavis.edu       ftp     pub/XView/XView3.0/*
east coast      ftp.x.org (was export.lcs.mit.edu) ftp     contrib/xview32
                ftp.x.org               ftp     contrib/Slingshot2.0.tar.Z
                ftp.x.org               ftp     contrib/UITV3.tar.Z

Kenneth Osterberg (lmfken@lmf.ericsson.se or lmfken@bluese1.ericsson.fi)
