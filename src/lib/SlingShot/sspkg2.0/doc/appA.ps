%!
%%BoundingBox: (atend)
%%Pages: (atend)
%%DocumentFonts: (atend)
%%EndComments
%%BeginProlog
%
% FrameMaker postscript_prolog 3.0, for use with FrameMaker 3.0
% This postscript_prolog file is Copyright (c) 1986-1991 Frame Technology
% Corporation.  All rights reserved.  This postscript_prolog file may be
% freely copied and distributed in conjunction with documents created using
% FrameMaker.
% NOTE
% This file fixes the problem with NeWS printers dithering color output.
% Any questions should be sent to mickey@magickingdom.eng.sun.com
%
% Known Problems:
%	Due to bugs in Transcript, the 'PS-Adobe-' is omitted from line 1
/FMversion (3.0) def 
% Set up Color vs. Black-and-White

/FMPrintInColor { % once-thru loop gimmick
    % See if we're a NeWSprint printer
     /currentcanvas where {
        pop systemdict /separationdict known
	exit
     } if
% originally had the following, which should always be false:
%    /currentcanvas where {
%        pop currentcanvas /Color known {
%	    currentcanvas /Color get
%	    exit
%        } if
%    } if
    systemdict /colorimage known
    systemdict /currentcolortransfer known and
exit } loop def

% Uncomment the following line to force b&w on color printer
%   /FMPrintInColor false def
/FrameDict 195 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	setpapername 
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin
	array /fillvals exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def 
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for 
	} def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setpattern} 
	{grayness}
	ifelse
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        
        /is w string def
        
        ws 0 w getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {ip} {gip} {bip} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        
        /is w string def
        
        ws 0 w getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {ip gip bip w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
%%EndProlog
%%BeginSetup
(3.0) FMVERSION
1 1 612 792 0 1 7 FMDOCUMENT
0 0 /Helvetica FMFONTDEFINE
1 0 /Times-Roman FMFONTDEFINE
2 0 /Courier FMFONTDEFINE
3 0 /Times-Italic FMFONTDEFINE
4 0 /Helvetica-Bold FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 .1 FMFILL
2 .3 FMFILL
3 .5 FMFILL
4 .7 FMFILL
5 .9 FMFILL
6 .97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 .9 FMFILL
18 .7 FMFILL
19 .5 FMFILL
20 .3 FMFILL
21 .1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "58" 21
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
0 8 Q
0 X
0 K
(SlingShot 2.0 Programmer\325s Handbook) 72 37.99 T
(58) 531.11 37.99 T
0 10 Q
(XV_X) 72 713.33 T
(XV_Y) 72 701.33 T
1 F
(The X and Y position of an object\325) 108 685.33 T
(s upper left corner) 247.07 685.33 T
(. This is measured in pixels and relative to the parent\325) 319.51 685.33 T
(s) 533.54 685.33 T
(origin. Some objects explicitly set these on their children.) 108 673.33 T
(Ar) 108 657.33 T
(gument:) 118.36 657.33 T
(int) 180 657.33 T
(Default:) 108 645.33 T
(0) 180 645.33 T
(Procs:) 108 633.33 T
(create, get, set) 180 633.33 T
FMENDPAGE
%%EndPage: "58" 20
%%Page: "57" 20
612 792 0 FMBEGINPAGE
0 8 Q
0 X
0 K
(SlingShot 2.0 Programmer\325s Handbook) 72 37.99 T
(57) 531.11 37.99 T
0 10 Q
(TREE_LINK_T) 72 713.33 T
(O_LIST) 137.91 713.33 T
1 F
(Returns the list of Rectobjs that a node points to.) 108 697.33 T
(Ar) 108 681.33 T
(gument:) 118.36 681.33 T
(Rectobj_list*) 180 681.33 T
(Default:) 108 669.33 T
(n/a) 180 669.33 T
(Procs:) 108 657.33 T
(get) 180 657.33 T
(Usage:) 108 645.33 T
2 9 Q
(list = \050Rectobj_list*\051 xv_get\050tree, TREE_LINK_TO_LIST, object1\051;) 144 634 T
0 10 Q
(TREE_P) 72 610.33 T
(ARENT_DIST) 110.14 610.33 T
(ANCE) 171.6 610.33 T
1 F
(The distance, in pixels, between nodes and their leaves.) 108 594.33 T
(Ar) 108 578.33 T
(gument:) 118.36 578.33 T
(int) 180 578.33 T
(Default:) 108 566.33 T
(30) 180 566.33 T
(Procs:) 108 554.33 T
(create, get, set) 180 554.33 T
0 F
(TREE_UNLINK) 72 530.33 T
1 F
(Detaches a node from the tree hierarchy) 108 514.33 T
(.) 267.2 514.33 T
(Ar) 108 498.33 T
(gument:) 118.36 498.33 T
(Rectobj) 180 498.33 T
(Default:) 108 486.33 T
(n/a) 180 486.33 T
(Procs:) 108 474.33 T
(set) 180 474.33 T
(Usage:) 108 462.33 T
2 9 Q
(xv_set\050tree,) 144 451 T
(TREE_UNLINK, object,) 180 440 T
(NULL\051;) 180 429 T
0 10 Q
(XV_RECT) 72 405.33 T
1 F
(A pointer to a XV) 72 393.33 T
(iew) 143.57 393.33 T
2 F
(Rect) 160.5 393.33 T
1 F
( structure.) 184.49 393.33 T
(Ar) 108 381.33 T
(gument:) 118.36 381.33 T
(Rect *) 180 381.33 T
(Default:) 108 369.33 T
(n/a) 180 369.33 T
(Procs:) 108 357.33 T
(create, get, set) 180 357.33 T
0 F
(XV_SHOW) 72 333.33 T
1 F
(If F) 108 317.33 T
(ALSE, the object is not visible. The object remains on the selected list when it is made invisible.) 121.97 317.33 T
(Ar) 108 301.33 T
(gument:) 118.36 301.33 T
(Boolean) 180 301.33 T
(Default:) 108 289.33 T
(TRUE) 180 289.33 T
(Procs:) 108 277.33 T
(create, get, set) 180 277.33 T
0 F
(XV_WIDTH) 72 253.33 T
(XV_HEIGHT) 72 241.33 T
1 F
(The width and height of the object, measured in pixels. Some subclasses calculate these values based on) 108 225.33 T
(other attributes.) 108 213.33 T
(Ar) 108 197.33 T
(gument:) 118.36 197.33 T
(int) 180 197.33 T
(Default:) 108 185.33 T
(0) 180 185.33 T
(Procs:) 108 173.33 T
(create, get, set) 180 173.33 T
FMENDPAGE
%%EndPage: "57" 19
%%Page: "56" 19
612 792 0 FMBEGINPAGE
0 8 Q
0 X
0 K
(SlingShot 2.0 Programmer\325s Handbook) 72 37.99 T
(56) 531.11 37.99 T
0 10 Q
(RECT) 72 713.33 T
(OBJ_X) 99.03 713.33 T
(RECT) 72 701.33 T
(OBJ_Y) 99.03 701.33 T
1 F
-0.22 (The X and Y position of an object\325) 108 685.33 P
-0.22 (s upper left corner) 245.51 685.33 P
-0.22 (, relative to the coordinates of the paint window) 317.42 685.33 P
-0.22 (. This is) 506.24 685.33 P
(measured in pixels.) 108 673.33 T
(Ar) 108 657.33 T
(gument:) 118.36 657.33 T
(int) 180 657.33 T
(Default:) 108 645.33 T
(n/a) 180 645.33 T
(Procs:) 108 633.33 T
(create, get, set) 180 633.33 T
0 F
(TREE_ADD_LINK) 72 609.33 T
1 F
(Connects the second ar) 108 593.33 T
(gument \050a rectobj\051 as a subtree of the \336rst ar) 200.25 593.33 T
(gument \050a rectobj\051. Both objects should) 376.87 593.33 T
(be owned by the same tree. The tree itself acts as the root node.) 108 581.33 T
(Ar) 108 565.33 T
(gument:) 118.36 565.33 T
(Rectobj, Rectobj) 180 565.33 T
(Default:) 108 553.33 T
(n/a) 180 553.33 T
(Procs:) 108 541.33 T
(set) 180 541.33 T
(Usage:) 108 529.33 T
2 9 Q
(xv_set\050tree,) 144 518 T
(TREE_ADD_LINK, object1, object2,) 180 507 T
(NULL\051;) 180 496 T
0 10 Q
(TREE_BORDER) 72 472.33 T
1 F
(Space in pixels that is reserved around each node of a tree.) 108 456.33 T
(Ar) 108 440.33 T
(gument:) 118.36 440.33 T
(int) 180 440.33 T
(Default:) 108 428.33 T
(4) 180 428.33 T
(Procs:) 108 416.33 T
(create, get, set) 180 416.33 T
0 F
(TREE_DRA) 72 392.33 T
(WLINE) 124.94 392.33 T
1 F
(Returns the handle to the drawline object that points to a node.) 108 376.33 T
(Ar) 108 360.33 T
(gument:) 118.36 360.33 T
(Rectobj) 180 360.33 T
(Default:) 108 348.33 T
(n/a) 180 348.33 T
(Procs:) 108 336.33 T
(get) 180 336.33 T
(Usage:) 108 324.33 T
2 9 Q
(drawline = \050Drawline\051 xv_get\050tree, TREE_DRAWLINE, object\051;) 144 313 T
0 10 Q
(TREE_LA) 72 289.33 T
(YOUT) 115.7 289.33 T
1 F
(The orientation of the tree.) 108 273.33 T
(Ar) 108 257.33 T
(gument:) 118.36 257.33 T
(T) 180 257.33 T
(ree_layout) 185.76 257.33 T
2 9 Q
(TREE_LAYOUT_HORIZONTAL, TREE_LAYOUT_VERTICAL) 180 246 T
1 10 Q
(Default:) 108 234.33 T
(TREE_LA) 180 234.33 T
(YOUT_HORIZONT) 222.39 234.33 T
(AL) 305.41 234.33 T
(Procs:) 108 222.33 T
(create, get, set) 180 222.33 T
0 F
(TREE_LINK_FROM) 72 198.33 T
1 F
(Returns the node \050Rectobj\051 that points to the ar) 108 182.33 T
(gument \050Rectobj\051.) 295.48 182.33 T
(Ar) 108 166.33 T
(gument:) 118.36 166.33 T
(Rectobj) 180 166.33 T
(Default:) 108 154.33 T
(n/a) 180 154.33 T
(Procs:) 108 142.33 T
(get) 180 142.33 T
(Usage:) 108 130.33 T
2 9 Q
(object1 = \050Rectobj\051 xv_get\050tree, TREE_LINK_FROM, object2\051;) 144 119 T
FMENDPAGE
%%EndPage: "56" 18
%%Page: "55" 18
612 792 0 FMBEGINPAGE
0 8 Q
0 X
0 K
(SlingShot 2.0 Programmer\325s Handbook) 72 37.99 T
(55) 531.11 37.99 T
0 10 Q
(RECT) 72 713.33 T
(OBJ_SINGLE_CLICK_PROC) 99.03 713.33 T
1 F
(The callback function that is called when an object is clicked on. The callback is invoked when the mouse) 108 697.33 T
-0.16 (button goes up. When using rectobj_toggle_click_proc\050\051, the state parameter indicates if the object has been) 108 685.33 P
(toggled on \050highlighted\051 or of) 108 673.33 T
(f \050normal\051.) 226.63 673.33 T
(Ar) 108 657.33 T
(gument:) 118.36 657.33 T
(Proc_ptr) 180 657.33 T
(Default:) 108 645.33 T
(NULL) 180 645.33 T
(Procs:) 108 633.33 T
(create, get, set) 180 633.33 T
(Usage:) 108 621.33 T
2 9 Q
(void) 144 610 T
(single_click_proc\050) 180 610 T
(Xv_window) 180 599 T
(paint_window,) 252 599 T
(Event) 180 588 T
(*event,) 252 588 T
(Canvas_shell) 180 577 T
(canvas_shell,) 252 577 T
(Rectobj) 180 566 T
(rectobj,) 252 566 T
(int) 180 555 T
(state\051;) 252 555 T
0 10 Q
(RECT) 72 531.33 T
(OBJ_ST) 99.03 531.33 T
(ACKING_POSITION) 136.05 531.33 T
1 F
(The stacking position of an object, relative to siblings of the same parent. Higher numbers will bring the) 108 515.33 T
(object to the top.) 108 503.33 T
(Ar) 108 487.33 T
(gument:) 118.36 487.33 T
(int) 180 487.33 T
(Default:) 108 475.33 T
(N/A \050newly created objects appear on top\051) 180 475.33 T
(Procs:) 108 463.33 T
(get, set) 180 463.33 T
0 F
(RECT) 72 439.33 T
(OBJ_ST) 99.03 439.33 T
(AR) 136.05 439.33 T
(T_DRAG_PROC) 149.76 439.33 T
1 F
(The callback function that is called when the user drags the object more beyond the drag threshold) 108 423.33 T
(\050) 108 411.33 T
3 F
(SlingShot.ClickMoveThr) 111.33 411.33 T
(eshold) 209.51 411.33 T
1 F
(\051. This callback is only invoked by the rectobj_selection_event_proc event) 235.61 411.33 T
(handling routine.) 108 399.33 T
(Ar) 108 383.33 T
(gument:) 118.36 383.33 T
(Proc_ptr) 180 383.33 T
(Default:) 108 371.33 T
(NULL) 180 371.33 T
(Procs:) 108 359.33 T
(create, get, set) 180 359.33 T
(Usage:) 108 347.33 T
2 9 Q
(void) 144 336 T
(start_drag_proc\050) 180 336 T
(Xv_window) 180 325 T
(paint_window,) 252 325 T
(Event) 180 314 T
(*event,) 252 314 T
(Canvas_shell) 180 303 T
(canvas_shell,) 252 303 T
(Rectobj) 180 292 T
(rectobj,) 252 292 T
(int) 180 281 T
(button_down_x,) 252 281 T
(int) 180 270 T
(button_down_y,) 252 270 T
(int) 180 259 T
(adjust\051;) 252 259 T
0 10 Q
(RECT) 72 235.33 T
(OBJ_STYLE_CHANGE_PROC) 99.03 235.33 T
1 F
(The noti\336cation routine for when an object goes between paint styles.) 108 219.33 T
0 F
(RECT) 72 191.33 T
(OBJ_T) 99.03 191.33 T
(OGGLE_ST) 129.95 191.33 T
(A) 183.09 191.33 T
(TE) 189.02 191.33 T
1 F
(When using rectobj_toggle_event_proc\050\051, this returns the state of the object, TRUE if it is highlighted,) 108 175.33 T
(F) 108 163.33 T
(ALSE otherwise.) 112.82 163.33 T
(Ar) 108 147.33 T
(gument:) 118.36 147.33 T
(Rectobj) 180 147.33 T
(Default:) 108 135.33 T
(F) 180 135.33 T
(ALSE) 184.82 135.33 T
(Procs:) 108 123.33 T
(create, set, get) 180 123.33 T
FMENDPAGE
%%EndPage: "55" 17
%%Page: "54" 17
612 792 0 FMBEGINPAGE
0 8 Q
0 X
0 K
(SlingShot 2.0 Programmer\325s Handbook) 72 37.99 T
(54) 531.11 37.99 T
0 10 Q
(RECT) 72 713.33 T
(OBJ_SELECT) 99.03 713.33 T
(ABLE) 162.16 713.33 T
1 F
(If TRUE, the object can be selected with a single click.) 108 697.33 T
(Ar) 108 681.33 T
(gument:) 118.36 681.33 T
(Boolean) 180 681.33 T
(Default:) 108 669.33 T
(T) 180 669.33 T
(rue) 185.76 669.33 T
(Procs:) 108 657.33 T
(create, get, set) 180 657.33 T
0 F
(RECT) 72 633.33 T
(OBJ_SELECTED) 99.03 633.33 T
1 F
(If TRUE, the object is currently selected.) 108 617.33 T
(Ar) 108 601.33 T
(gument:) 118.36 601.33 T
(Boolean) 180 601.33 T
(Procs:) 108 589.33 T
(get, set) 180 589.33 T
0 F
(RECT) 72 565.33 T
(OBJ_SELECTION_OWNER) 99.03 565.33 T
1 F
-0.32 (The XV) 108 549.33 P
-0.32 (iew Selection_owner object used to acquire a selection when an object is selected. This should be set) 139.56 549.33 P
(by the application on the highest object in the rectobj hierarchy that has children that will hold a selection.) 108 537.33 T
(Ar) 108 521.33 T
(gument:) 118.36 521.33 T
(Selection_owner) 180 521.33 T
(Default:) 108 509.33 T
(NULL) 180 509.33 T
(Procs:) 108 497.33 T
(create, get, set) 180 497.33 T
0 F
(RECT) 72 473.33 T
(OBJ_SELECTION_PROC) 99.03 473.33 T
1 F
-0.08 (The callback function that is called when an object is selected or deselected. The second ar) 108 457.33 P
-0.08 (gument indicates) 469.65 457.33 P
(the new state of the object \050TRUE if selected\051. The event parameter is helpful if you need to determine the) 108 445.33 T
(timestamp of the selection \050be warned that sometimes this is NULL\051. Y) 108 433.33 T
(ou also need to be careful when the) 392.92 433.33 T
(object is being deselected because the object may be being destroyed.) 108 421.33 T
(Ar) 108 405.33 T
(gument:) 118.36 405.33 T
(Proc_ptr) 180 405.33 T
(Default:) 108 393.33 T
(NULL) 180 393.33 T
(Procs:) 108 381.33 T
(create, get, set) 180 381.33 T
(Usage:) 108 369.33 T
2 9 Q
(void) 144 358 T
(selection_proc\050) 180 358 T
(Rectobj) 216 347 T
(rectobj,) 288 347 T
(int) 216 336 T
(selected,) 288 336 T
(Event) 216 325 T
(*event\051;) 288 325 T
0 10 Q
(RECT) 72 290.33 T
(OBJ_SET_GEOMETR) 99.03 290.33 T
(Y_PROC) 199.37 290.33 T
1 F
(The callback function that is called when an object\325) 108 274.33 T
(s geometry is changed. The function should propagate) 313.96 274.33 T
(the changes to its children.) 108 262.33 T
(Ar) 108 246.33 T
(gument:) 118.36 246.33 T
(Proc_ptr) 180 246.33 T
(Default:) 108 234.33 T
(depends on class) 180 234.33 T
(Procs:) 108 222.33 T
(create, get, set) 180 222.33 T
(Usage:) 108 210.33 T
2 9 Q
(void) 144 199 T
(set_geometry_proc\050) 180 199 T
(Rectobj) 216 188 T
(rectobj,) 288 188 T
(Rect) 216 177 T
(*newrect,) 288 177 T
(Rect) 216 166 T
(*oldrect\051;) 288 166 T
FMENDPAGE
%%EndPage: "54" 16
%%Page: "53" 16
612 792 0 FMBEGINPAGE
0 8 Q
0 X
0 K
(SlingShot 2.0 Programmer\325s Handbook) 72 37.99 T
(53) 531.11 37.99 T
0 10 Q
(RECT) 72 713.33 T
(OBJ_MIN_WIDTH) 99.03 713.33 T
(RECT) 72 701.33 T
(OBJ_MIN_HEIGHT) 99.03 701.33 T
1 F
(The minimum dimensions that an object may be. Usually calculated by the object.) 108 685.33 T
(Ar) 108 669.33 T
(gument:) 118.36 669.33 T
(int) 180 669.33 T
(Default:) 108 657.33 T
(n/a) 180 657.33 T
(Procs:) 108 645.33 T
(get) 180 645.33 T
0 F
(RECT) 72 621.33 T
(OBJ_NORMAL) 99.03 621.33 T
(RECT) 72 609.33 T
(OBJ_HIGHLIGHT) 99.03 609.33 T
(RECT) 72 597.33 T
(OBJ_PREHIGHLIGHT) 99.03 597.33 T
(RECT) 72 585.33 T
(OBJ_PREDROP_NORMAL) 99.03 585.33 T
(RECT) 72 573.33 T
(OBJ_PREDROP_HIGHLIGHT) 99.03 573.33 T
1 F
(The paint style of the rectobj. These attributes take no ar) 108 557.33 T
(guments and are usually used internally to the) 333.49 557.33 T
(SlingShot extensions.) 108 545.33 T
0 F
(RECT) 72 517.33 T
(OBJ_NTH_CHILD) 99.03 517.33 T
1 F
(The nth child of the parent.) 108 501.33 T
(Ar) 108 485.33 T
(gument:) 118.36 485.33 T
(int) 180 485.33 T
(Default:) 108 473.33 T
(n/a) 180 473.33 T
(Procs:) 108 461.33 T
(get, set) 180 461.33 T
(Usage:) 108 449.33 T
2 9 Q
(child = \050Rectobj\051 xv_get\050parent, RECTOBJ_NTH_CHILD, 10\051;) 144 438 T
0 10 Q
(RECT) 72 414.33 T
(OBJ_N_CHILDREN) 99.03 414.33 T
1 F
(The number of children a rectobj has.) 108 398.33 T
(Ar) 108 382.33 T
(gument:) 118.36 382.33 T
(int) 180 382.33 T
(Default:) 108 370.33 T
(0) 180 370.33 T
(Procs:) 108 358.33 T
(get) 180 358.33 T
0 F
(RECT) 72 334.33 T
(OBJ_OPS) 99.03 334.33 T
1 F
-0.12 (All the callback functions for a rectobj are grouped into one structure, Rectobj_ops. This is an alternate way) 108 318.33 P
(to manipulate those callbacks. It is also more ef) 108 306.33 T
(\336cient because it reduces the amount of allocated memory) 297.97 306.33 T
(.) 529.92 306.33 T
(Ar) 108 290.33 T
(gument:) 118.36 290.33 T
(Rectobj_ops*) 180 290.33 T
(Default:) 108 278.33 T
(de\336ned by class) 180 278.33 T
(Procs:) 108 266.33 T
(create, get, set) 180 266.33 T
0 F
(RECT) 72 242.33 T
(OBJ_P) 99.03 242.33 T
(AINT_PROC) 129.95 242.33 T
1 F
-0.18 (The callback function that paints an object. Generally only used for class implementations, it can be used by) 108 226.33 P
(applications if a speci\336c appearance is desired. The paint proc should not paint outside its XV_RECT and) 108 214.33 T
(the xrects ar) 108 202.33 T
(gument.) 156.66 202.33 T
(Ar) 108 186.33 T
(gument:) 118.36 186.33 T
(Proc_ptr) 180 186.33 T
(Default:) 108 174.33 T
(depends on class) 180 174.33 T
(Procs:) 108 162.33 T
(create, get, set) 180 162.33 T
(Usage:) 108 150.33 T
2 9 Q
(void paint_proc\050) 144 139 T
(Rectobj) 180 128 T
(rectobj,) 252 128 T
(Display) 180 117 T
(*display,) 252 117 T
(Window) 180 106 T
(window,) 252 106 T
(Xv_xrectlist) 180 95 T
(*xrects\051;) 252 95 T
FMENDPAGE
%%EndPage: "53" 15
%%Page: "52" 15
612 792 0 FMBEGINPAGE
0 8 Q
0 X
0 K
(SlingShot 2.0 Programmer\325s Handbook) 72 37.99 T
(52) 531.11 37.99 T
0 10 Q
(RECT) 72 713.33 T
(OBJ_EVENT_PROC) 99.03 713.33 T
1 F
(The event handling function for an object. When an event occurs on an object, the event is passed to the) 108 697.33 T
(object via this callback. Applications may change this attribute to one of the prede\336ned callbacks) 108 685.33 T
(\050rectobj_selection_event_proc, rectobj_toggle_event_proc, rectobj_button_event_proc,) 108 673.33 T
(rectobj_background_event_proc\051. Applications that need special event handling not provided by the) 108 661.33 T
(provided callbacks may wish to write their own callback functions, or interpose by calling these functions) 108 649.33 T
(from their own callback functions.) 108 637.33 T
(Ar) 108 621.33 T
(gument:) 118.36 621.33 T
(Proc_ptr) 180 621.33 T
(Default:) 108 609.33 T
(rectobj_event_proc \050also depends on class\051) 180 609.33 T
(Procs:) 108 597.33 T
(create, get, set) 180 597.33 T
(Usage:) 108 585.33 T
2 9 Q
(void) 144 574 T
(event_proc\050) 180 574 T
(Xv_window) 180 563 T
(paint_window,) 252 563 T
(Event) 180 552 T
(*event,) 252 552 T
(Canvas_shell) 180 541 T
(canvas_shell) 252 541 T
(Rectobj) 180 530 T
(rectobj\051;) 252 530 T
0 10 Q
(RECT) 72 495.33 T
(OBJ_EXCLUSIVE_SELECT) 99.03 495.33 T
1 F
(If TRUE, when this object is selected, all other selected objects will be deselected.) 108 479.33 T
(Ar) 108 463.33 T
(gument:) 118.36 463.33 T
(Boolean) 180 463.33 T
(Default:) 108 451.33 T
(F) 180 451.33 T
(ALSE) 184.82 451.33 T
(Procs:) 108 439.33 T
(create, get, set) 180 439.33 T
0 F
(RECT) 72 415.33 T
(OBJ_FG) 99.03 415.33 T
1 F
(The foreground color for a RECT) 108 399.33 T
(OBJ, an index into the cms. Setting it to -1 sets the default.) 242.44 399.33 T
(Ar) 108 383.33 T
(gument:) 118.36 383.33 T
(int) 180 383.33 T
(Default:) 108 371.33 T
(-1 \050The Canvas_shell\325) 180 371.33 T
(s WIN_FOREGROUND_COLOR.\051) 268.27 371.33 T
(Procs:) 108 359.33 T
(create, get, set) 180 359.33 T
0 F
(RECT) 72 335.33 T
(OBJ_GEOMETR) 99.03 335.33 T
(Y_SILENT) 174.37 335.33 T
1 F
-0.22 (If this is TRUE, the parent will not be informed if the geometry of the rectobj has changed. This is useful for) 108 319.33 P
(classes that explicitly set the positions of children and are not interested in size changes.) 108 307.33 T
(Ar) 108 291.33 T
(gument:) 118.36 291.33 T
(Boolean) 180 291.33 T
(Default:) 108 279.33 T
(F) 180 279.33 T
(ALSE) 184.82 279.33 T
(Procs:) 108 267.33 T
(create, get, set) 180 267.33 T
0 F
(RECT) 72 243.33 T
(OBJ_MAP_EVENT_PROC) 99.03 243.33 T
1 F
(The callback function that traverses the rectobj hierarchy to map events to rectobjs. If a match is found, the) 108 227.33 T
(object that matches should be returned.) 108 215.33 T
(Ar) 108 199.33 T
(gument:) 118.36 199.33 T
(Rectobj \050*\051\050\051) 180 199.33 T
(Default:) 108 187.33 T
(rectobj_map_event_proc \050also depends on class\051) 180 187.33 T
(Procs:) 108 175.33 T
(create, get, set) 180 175.33 T
(Usage:) 108 163.33 T
2 9 Q
(Rectobj) 144 152 T
(map_event_proc\050) 216 152 T
(Rectobj) 252 141 T
(rectobj,) 324 141 T
(Event) 252 130 T
(*event\051;) 324 130 T
FMENDPAGE
%%EndPage: "52" 14
%%Page: "51" 14
612 792 0 FMBEGINPAGE
0 8 Q
0 X
0 K
(SlingShot 2.0 Programmer\325s Handbook) 72 37.99 T
(51) 531.11 37.99 T
0 10 Q
(RECT) 72 713.33 T
(OBJ_DBL_CLICK_PROC) 99.03 713.33 T
1 F
(The callback function that is called when an object is double clicked on. The callback is invoked when the) 108 697.33 T
(mouse button goes up. This callback is only invoked by the rectobj_selection_event_proc event handling) 108 685.33 T
(routine.) 108 673.33 T
(Ar) 108 657.33 T
(gument:) 118.36 657.33 T
(Proc_ptr) 180 657.33 T
(Default:) 108 645.33 T
(NULL) 180 645.33 T
(Procs:) 108 633.33 T
(create, get, set) 180 633.33 T
(Usage:) 108 621.33 T
2 9 Q
(void) 144 610 T
(double_click_proc\050) 180 610 T
(Xv_window) 180 599 T
(paint_window,) 252 599 T
(Event) 180 588 T
(*event,) 252 588 T
(Canvas_shell) 180 577 T
(canvas_shell,) 252 577 T
(Rectobj) 180 566 T
(rectobj\051;) 252 566 T
0 10 Q
(RECT) 72 542.33 T
(OBJ_DEL_CHILD_PROC) 99.03 542.33 T
1 F
(The callback function that is called when a child is destroyed or removed from a rectobj \050by setting) 108 526.33 T
(XV_OWNER\051. This function is used to clean up data structures associated with the child.) 108 514.33 T
(Ar) 108 498.33 T
(gument:) 118.36 498.33 T
(Proc_ptr) 180 498.33 T
(Default:) 108 486.33 T
(depends on class) 180 486.33 T
(Procs:) 108 474.33 T
(create, get, set) 180 474.33 T
(Usage:) 108 462.33 T
2 9 Q
(void) 144 451 T
(del_child_proc\050) 180 451 T
(Rectobj) 216 440 T
(parent,/*self*/) 288 440 T
(Rectobj) 216 429 T
(child,) 288 429 T
(Rect) 216 418 T
(*oldrect\051;) 288 418 T
0 10 Q
(RECT) 72 394.33 T
(OBJ_DRAGGABLE) 99.03 394.33 T
1 F
(If F) 108 378.33 T
(ALSE, the object\325) 121.97 378.33 T
(s RECT) 193.87 378.33 T
(OBJ_ST) 225.62 378.33 T
(AR) 259.26 378.33 T
(T_DRAG_PROC will not be called when the mouse pointer is) 272.54 378.33 T
(dragged beyond the threshold distance \050) 108 366.33 T
3 F
(SlingShot.ClickMoveThr) 267.6 366.33 T
(eshold) 365.79 366.33 T
1 F
(\051.) 391.88 366.33 T
(Ar) 108 350.33 T
(gument:) 118.36 350.33 T
(Boolean) 180 350.33 T
(Default:) 108 338.33 T
(TRUE) 180 338.33 T
(Procs:) 108 326.33 T
(create, get, set) 180 326.33 T
0 F
(RECT) 72 302.33 T
(OBJ_DROP_PROC) 99.03 302.33 T
1 F
(The callback function that is called when an object receives an ACTION_DRAG_PREVIEW) 108 286.33 T
(,) 480.4 286.33 T
(ACTION_DRAG_COPY) 108 274.33 T
(, ACTION_DRAG_LOAD, ACTION_DRAG_LOAD event. For) 209.42 274.33 T
-0.08 (ACTION_DRAG_PREVIEW events, the callback function should examine the event_id to determine if the) 108 262.33 P
(event was a LOC_WINENTER or a LOC_WINEXIT) 108 250.33 T
(.) 321.53 250.33 T
2 9 Q
(void) 144 235 T
(drop_proc\050) 180 235 T
(Xv_window) 180 224 T
(paint_window,) 252 224 T
(Event) 180 213 T
(*drag_event,) 252 213 T
(Canvas_shell) 180 202 T
(canvas_shell,) 252 202 T
(Rectobj) 180 191 T
(rectobj\051;) 252 191 T
FMENDPAGE
%%EndPage: "51" 13
%%Page: "50" 13
612 792 0 FMBEGINPAGE
0 8 Q
0 X
0 K
(SlingShot 2.0 Programmer\325s Handbook) 72 37.99 T
(50) 531.11 37.99 T
0 10 Q
(RECT) 72 713.33 T
(OBJ_ACCEPTS_DROP) 99.03 713.33 T
1 F
(If F) 108 697.33 T
(ALSE, the object\325) 121.97 697.33 T
(s RECT) 193.87 697.33 T
(OBJ_DROP_PROC will not be called when a drop event has occured on it.) 225.62 697.33 T
(Ar) 108 681.33 T
(gument:) 118.36 681.33 T
(Boolean) 180 681.33 T
(Default:) 108 669.33 T
(TRUE) 180 669.33 T
(Procs:) 108 657.33 T
(create, get, set) 180 657.33 T
0 F
(RECT) 72 633.33 T
(OBJ_ADD_CHILD_PROC) 99.03 633.33 T
1 F
(The callback function that is called when a child has been created or added to an rectobj \050by setting) 108 617.33 T
-0.22 (XV_OWNER\051. Usually this function sets up data structures to manage the child, then returns. The geometry) 108 605.33 P
(manage proc will be called right after this callback returns.) 108 593.33 T
(Ar) 108 577.33 T
(gument:) 118.36 577.33 T
(Proc_ptr) 180 577.33 T
(Default:) 108 565.33 T
(depends on class) 180 565.33 T
(Procs:) 108 553.33 T
(create, get, set) 180 553.33 T
(Usage:) 108 541.33 T
2 9 Q
(void) 144 530 T
(add_child_proc\050) 180 530 T
(Rectobj) 216 519 T
(parent,/*self*/) 288 519 T
(Rectobj) 216 508 T
(child,) 288 508 T
(Rect) 216 497 T
(*rect\051) 288 497 T
0 10 Q
(RECT) 72 473.33 T
(OBJ_BG) 99.03 473.33 T
1 F
(The background color for a RECT) 108 457.33 T
(OBJ, an index into the cms. Setting it to -1 sets the default.) 245.21 457.33 T
(Ar) 108 441.33 T
(gument:) 118.36 441.33 T
(int) 180 441.33 T
(Default:) 108 429.33 T
(-1 \050The Canvas_shell\325) 180 429.33 T
(s WIN_BACKGROUND_COLOR.\051) 268.27 429.33 T
(Procs:) 108 417.33 T
(create, get, set) 180 417.33 T
0 F
(RECT) 72 393.33 T
(OBJ_BORDER) 99.03 393.33 T
1 F
(Used by Rectobj subclasses that support borders.) 108 377.33 T
(Ar) 108 361.33 T
(gument:) 118.36 361.33 T
(int) 180 361.33 T
(Default:) 108 349.33 T
(0) 180 349.33 T
(Procs:) 108 337.33 T
(create, get, set) 180 337.33 T
0 F
(RECT) 72 313.33 T
(OBJ_CANV) 99.03 313.33 T
(AS) 151.05 313.33 T
1 F
(The Canvas_shell that an object is painted on.) 108 297.33 T
(Ar) 108 281.33 T
(gument:) 118.36 281.33 T
(n/a) 180 281.33 T
(Default:) 108 269.33 T
(n/a) 180 269.33 T
(Procs:) 108 257.33 T
(get) 180 257.33 T
(Usage:) 108 245.33 T
2 9 Q
(canvas_shell = \050Canvas_shell\051 xv_get\050rectobj, RECTOBJ_CANVAS\051;) 144 234 T
0 10 Q
(RECT) 72 210.33 T
(OBJ_CHILDREN) 99.03 210.33 T
1 F
-0.2 (The list of children for an object. This does not return a copy of the list, so it should be copied if children are) 108 194.33 P
(to be destroyed while traversing this list.) 108 182.33 T
(Ar) 108 166.33 T
(gument:) 118.36 166.33 T
(Rectobj_list *) 180 166.33 T
(Default:) 108 154.33 T
(NULL) 180 154.33 T
(Procs:) 108 142.33 T
(get) 180 142.33 T
FMENDPAGE
%%EndPage: "50" 12
%%Page: "49" 12
612 792 0 FMBEGINPAGE
0 8 Q
0 X
0 K
(SlingShot 2.0 Programmer\325s Handbook) 72 37.99 T
(49) 531.11 37.99 T
0 10 Q
(GRIP_MAX_X) 72 713.33 T
(GRIP_MAX_Y) 72 701.33 T
(GRIP_MIN_X) 72 689.33 T
(GRIP_MIN_Y) 72 677.33 T
1 F
-0.38 (Sets the maximum and minimum dimensions the the object can be positioned at. The defaults are suf) 108 661.33 P
-0.38 (\336ciently) 505.12 661.33 P
(lar) 108 649.33 T
(ge that they will be ignored if GRIP_EXCEED_P) 118.36 649.33 T
(ARENT_DIMS is F) 315.94 649.33 T
(ALSE. The position of the grip is) 395.71 649.33 T
(compared using the origin of the grip, as a result the max attributes do not include the width and height of) 108 637.33 T
(the grip.) 108 625.33 T
(Ar) 108 609.33 T
(gument:) 118.36 609.33 T
(int) 180 609.33 T
(Default:) 108 597.33 T
(0, 0, 32000, 32000) 180 597.33 T
(Procs:) 108 585.33 T
(create, get, set) 180 585.33 T
0 F
(GRIP_MOVE_PROC) 72 561.33 T
1 F
-0.35 (The function that gets called for each move event. This function returns TRUE if the object should be moved) 108 545.33 P
(to the new location \050*new_x, *new_y\051. It may also reset the coordinates of the event by setting new_x and) 108 533.33 T
(new_y) 108 521.33 T
(. new_x and new_y are the origin of the object relative to its owner) 134 521.33 T
(.) 401.58 521.33 T
(Ar) 108 505.33 T
(gument:) 118.36 505.33 T
(int \050*\051\050\051;) 180 505.33 T
(Default:) 108 493.33 T
(grip_default_event_proc) 180 493.33 T
(Procs:) 108 481.33 T
(create, get, set) 180 481.33 T
(Usage:) 108 469.33 T
2 9 Q
(int move_callback\050) 144 458 T
(Xv_window) 180 447 T
(paint_window,) 252 447 T
(Event) 180 436 T
(*event,) 252 436 T
(Canvas_shell) 180 425 T
(canvas_shell,) 252 425 T
(Grip) 180 414 T
(grip,) 252 414 T
(short) 180 403 T
(*new_x,) 252 403 T
(short) 180 392 T
(*new_y\051) 252 392 T
0 10 Q
(GRIP_RUBBER_STYLE) 72 368.33 T
1 F
(How the object is animated while the user is moving it. The various styles are bounding boxes, vertical and) 108 352.33 T
(horizontal lines, and crosshairs.) 108 340.33 T
(Ar) 108 324.33 T
(gument:) 118.36 324.33 T
(Grip_rubber_style) 180 324.33 T
2 9 Q
(GRIP_RUBBER_NONE) 180 313 T
(GRIP_RUBBER_RECT,) 180 302 T
(GRIP_RUBBER_VLINE,) 180 291 T
(GRIP_RUBBER_VLINE_PAIR,) 180 280 T
(GRIP_RUBBER_HLINE,) 180 269 T
(GRIP_RUBBER_HLINE_PAIR,) 180 258 T
(GRIP_RUBBER_CROSSHAIRS) 180 247 T
1 10 Q
(Default:) 108 235.33 T
(GRIP_RUBBER_NONE) 180 235.33 T
(Procs:) 108 223.33 T
(create, get, set) 180 223.33 T
0 F
(GRIP_SLIDE_X) 72 199.33 T
(GRIP_SLIDE_Y) 72 187.33 T
1 F
(If TRUE, permits the grip to be moved in that direction.) 108 171.33 T
(Ar) 108 155.33 T
(gument:) 118.36 155.33 T
(Boolean) 180 155.33 T
(Default:) 108 143.33 T
(TRUE) 180 143.33 T
(Procs:) 108 131.33 T
(create, get, set) 180 131.33 T
FMENDPAGE
%%EndPage: "49" 11
%%Page: "48" 11
612 792 0 FMBEGINPAGE
0 8 Q
0 X
0 K
(SlingShot 2.0 Programmer\325s Handbook) 72 37.99 T
(48) 531.11 37.99 T
0 10 Q
(DRA) 72 713.33 T
(WTEXT_STRING_PTR) 92.73 713.33 T
1 F
(Alternate method of speci\336ng a string for a drawtext. It has the same ef) 108 697.33 T
(fect as DRA) 392.6 697.33 T
(WTEXT_STRING) 441.21 697.33 T
(except that the string is not copied into allocated space.) 108 685.33 T
(Ar) 108 669.33 T
(gument:) 118.36 669.33 T
(char *) 180 669.33 T
(Default:) 108 657.33 T
(NULL) 180 657.33 T
(Procs:) 108 645.33 T
(create, get ,set) 180 645.33 T
0 F
(GRIP_BTN_DOWN_X) 72 621.33 T
(GRIP_BTN_DOWN_Y) 72 609.33 T
1 F
(The position of the button down event that started the drag. This is legit while the object is being dragged.) 108 593.33 T
(Ar) 108 577.33 T
(gument:) 118.36 577.33 T
(int) 180 577.33 T
(Default:) 108 565.33 T
(n/a) 180 565.33 T
(Procs:) 108 553.33 T
(get) 180 553.33 T
0 F
(GRIP_DONE_PROC) 72 529.33 T
1 F
(The function to be called when the user releases the mouse button.) 108 513.33 T
(Ar) 108 497.33 T
(gument:) 118.36 497.33 T
(void \050*\051\050\051) 180 497.33 T
(Default:) 108 485.33 T
(NULL) 180 485.33 T
(Procs:) 108 473.33 T
(create, get, set) 180 473.33 T
(Usage:) 108 461.33 T
2 9 Q
(int done_callback\050) 144 450 T
(Xv_window) 180 439 T
(paint_window,) 252 439 T
(Event) 180 428 T
(*event,) 252 428 T
(Canvas_shell) 180 417 T
(canvas_shell,) 252 417 T
(Grip) 180 406 T
(grip,) 252 406 T
(short) 180 395 T
(x,) 252 395 T
(short) 180 384 T
(y\051) 252 384 T
0 10 Q
(GRIP_EXCEED_P) 72 360.33 T
(ARENT_DIMS) 154.57 360.33 T
1 F
(If F) 108 344.33 T
(ALSE, the dimensions of the grip\325) 121.97 344.33 T
(s parent will not exceed that of it\325) 259.12 344.33 T
(s parent while it is being dragged.) 393.19 344.33 T
(Ar) 108 328.33 T
(gument:) 118.36 328.33 T
(Boolean) 180 328.33 T
(Default:) 108 316.33 T
(F) 180 316.33 T
(ALSE) 184.82 316.33 T
(Procs:) 108 304.33 T
(create, get, set) 180 304.33 T
0 F
(GRIP_IMMEDIA) 72 280.33 T
(TE) 144.01 280.33 T
1 F
(If TRUE, the grip does not wait for the user to move beyond the X resource value) 108 264.33 T
3 F
(SlingShot.ClickMoveThr) 108 252.33 T
(eshold) 206.19 252.33 T
1 F
( before the drag begins.) 232.28 252.33 T
(Ar) 108 236.33 T
(gument:) 118.36 236.33 T
(Boolean) 180 236.33 T
(Default:) 108 224.33 T
(F) 180 224.33 T
(ALSE) 184.82 224.33 T
(Procs:) 108 212.33 T
(create, get, set) 180 212.33 T
FMENDPAGE
%%EndPage: "48" 10
%%Page: "47" 10
612 792 0 FMBEGINPAGE
0 8 Q
0 X
0 K
(SlingShot 2.0 Programmer\325s Handbook) 72 37.99 T
(47) 531.11 37.99 T
0 10 Q
(DRA) 72 713.33 T
(WRECT_BORDER3) 92.73 713.33 T
1 F
(The space between the illustrated border and the children.) 108 697.33 T
(Ar) 108 681.33 T
(gument:) 118.36 681.33 T
(int) 180 681.33 T
(Default:) 108 669.33 T
(0) 180 669.33 T
(Procs:) 108 657.33 T
(create, get, set) 180 657.33 T
0 F
(DRA) 72 633.33 T
(WTEXT_EDIT) 92.73 633.33 T
(ABLE) 155.29 633.33 T
1 F
(If TRUE, the drawtext can be edited.) 108 617.33 T
(Ar) 108 601.33 T
(gument:) 118.36 601.33 T
(Boolean) 180 601.33 T
(Default:) 108 589.33 T
(F) 180 589.33 T
(ALSE) 184.82 589.33 T
(Procs:) 108 577.33 T
(create, get, set) 180 577.33 T
0 F
(DRA) 72 553.33 T
(WTEXT_FONT) 92.73 553.33 T
1 F
(The font used to display the object. The minimum size of the Drawtext is determined by the font and the) 108 537.33 T
(string.) 108 525.33 T
(Ar) 108 509.33 T
(gument:) 118.36 509.33 T
(Xv_Font) 180 509.33 T
(Default:) 108 497.33 T
(CANV) 180 497.33 T
(AS_SHELL_FONT) 207.02 497.33 T
(Procs:) 108 485.33 T
(create, get, set) 180 485.33 T
0 F
(DRA) 72 461.33 T
(WTEXT_JUSTIFY) 92.73 461.33 T
1 F
(When the XV_WIDTH of the drawtext is set to be lar) 108 445.33 T
(ger than the drawtext object, this controls how it is) 322.65 445.33 T
(positioned within the available space.) 108 433.33 T
(Ar) 108 417.33 T
(gument:) 118.36 417.33 T
(Drawtext_justify_style) 180 417.33 T
2 9 Q
(DRAWTEXT_JUSTIFY_LEFT) 180 406 T
(DRAWTEXT_JUSTIFY_CENTER) 180 395 T
(DRAWTEXT_JUSTIFY_RIGHT) 180 384 T
1 10 Q
(Default:) 108 372.33 T
(DRA) 180 372.33 T
(WTEXT_JUSTIFY_LEFT) 200.3 372.33 T
(Procs:) 108 360.33 T
(create, get, set) 180 360.33 T
0 F
(DRA) 72 336.33 T
(WTEXT_LENGTH) 92.73 336.33 T
1 F
(Set the width to allow for this number of characters. The string is justi\336ed within this space.) 108 320.33 T
(Ar) 108 304.33 T
(gument:) 118.36 304.33 T
(int) 180 304.33 T
(Default:) 108 292.33 T
(0) 180 292.33 T
(Procs:) 108 280.33 T
(create, get, set) 180 280.33 T
0 F
(DRA) 72 256.33 T
(WTEXT_SHOW_UNDERLINE) 92.73 256.33 T
1 F
(If TRUE, a line indicating that this object is editable will be shown even when the drawtext does not have) 108 240.33 T
(the focus.) 108 228.33 T
(Ar) 108 212.33 T
(gument:) 118.36 212.33 T
(Boolean) 180 212.33 T
(Default:) 108 200.33 T
(F) 180 200.33 T
(ALSE) 184.82 200.33 T
(Procs:) 108 188.33 T
(create, get, set) 180 188.33 T
0 F
(DRA) 72 164.33 T
(WTEXT_STRING) 92.73 164.33 T
1 F
(The string to be displayed. The Drawtext allocates space for) 108 148.33 T
(, and copies the string.) 347.97 148.33 T
(Ar) 108 132.33 T
(gument:) 118.36 132.33 T
(char *) 180 132.33 T
(Default:) 108 120.33 T
(NULL) 180 120.33 T
(Procs:) 108 108.33 T
(create, get, set) 180 108.33 T
FMENDPAGE
%%EndPage: "47" 9
%%Page: "46" 9
612 792 0 FMBEGINPAGE
0 8 Q
0 X
0 K
(SlingShot 2.0 Programmer\325s Handbook) 72 37.99 T
(46) 531.11 37.99 T
0 10 Q
(DRA) 72 713.33 T
(WLINE_ARROW_LENGTH) 92.73 713.33 T
1 F
(The length of the lines along the cutting edge of the arrowhead, in pixels.) 108 697.33 T
(Ar) 108 681.33 T
(gument:) 118.36 681.33 T
(int) 180 681.33 T
(Default:) 108 669.33 T
(10) 180 669.33 T
(Procs:) 108 657.33 T
(create, get, set) 180 657.33 T
0 F
(DRA) 72 633.33 T
(WLINE_ARROW_STYLE) 92.73 633.33 T
1 F
(The style for the arrowhead.) 108 617.33 T
(Ar) 108 601.33 T
(gument:) 118.36 601.33 T
(ARROW_FILLED, ARROW_HOLLOW) 180 601.33 T
(, ARROW_SIMPLE, or ARROW_NONE.) 346.19 601.33 T
(Default:) 108 589.33 T
(ARROW_NONE) 180 589.33 T
(Procs:) 108 577.33 T
(create, get, set) 180 577.33 T
0 F
(DRA) 72 553.33 T
(WLINE_X) 92.73 553.33 T
(DRA) 72 541.33 T
(WLINE_Y) 92.73 541.33 T
1 F
(Set and get the endpoints of the line relative to the parent.) 108 525.33 T
(Ar) 108 509.33 T
(gument:) 118.36 509.33 T
(int pair \050endpoint [0,1], value\051) 180 509.33 T
(Default:) 108 497.33 T
(N/A) 180 497.33 T
(Procs:) 108 485.33 T
(create, get, set) 180 485.33 T
(Usage:) 108 473.33 T
(When used with xv_get\050\051 one ar) 180 473.33 T
(g indicates which endpoint to retrieve.) 308.33 473.33 T
0 F
(DRA) 72 449.33 T
(WLINE_X0) 92.73 449.33 T
(DRA) 72 437.33 T
(WLINE_X1) 92.73 437.33 T
(DRA) 72 425.33 T
(WLINE_Y0) 92.73 425.33 T
(DRA) 72 413.33 T
(WLINE_Y1) 92.73 413.33 T
1 F
(These four attributes are functionally equivalent to DRA) 108 397.33 T
(WLINE_X and DRA) 333.43 397.33 T
(WLINE_Y) 417.56 397.33 T
(, except that they) 460.68 397.33 T
(are positioned relative to the coordinate space of the canvas shell paint window) 108 385.33 T
(.) 424.34 385.33 T
(Ar) 108 369.33 T
(gument:) 118.36 369.33 T
(int) 180 369.33 T
(Procs:) 108 357.33 T
(create, get, set) 180 357.33 T
0 F
(DRA) 72 333.33 T
(WOBJ_FILLED \050DRA) 92.73 333.33 T
(WOBJ_OP) 187.88 333.33 T
(AQUE\051) 236.01 333.33 T
1 F
(If TRUE, the interior is \336lled.) 108 317.33 T
(Ar) 108 301.33 T
(gument:) 118.36 301.33 T
(Boolean) 180 301.33 T
(Default:) 108 289.33 T
(TRUE) 180 289.33 T
(Procs:) 108 277.33 T
(create, get, set) 180 277.33 T
0 F
(DRA) 72 253.33 T
(WRECT_BORDER1) 92.73 253.33 T
1 F
(The distance \050in pixels\051 from the object\325) 108 237.33 T
(s XV_RECT to the illustrated border) 268.44 237.33 T
(.) 415.3 237.33 T
(Ar) 108 221.33 T
(gument:) 118.36 221.33 T
(int) 180 221.33 T
(Default:) 108 209.33 T
(0) 180 209.33 T
(Procs:) 108 197.33 T
(create, get, set) 180 197.33 T
0 F
(DRA) 72 173.33 T
(WRECT_BORDER2) 92.73 173.33 T
1 F
(The size of the illustrated border) 108 157.33 T
(.) 237.63 157.33 T
(Ar) 108 141.33 T
(gument:) 118.36 141.33 T
(int) 180 141.33 T
(Default:) 108 129.33 T
(1) 180 129.33 T
(Procs:) 108 117.33 T
(create, get, set) 180 117.33 T
FMENDPAGE
%%EndPage: "46" 8
%%Page: "45" 8
612 792 0 FMBEGINPAGE
0 8 Q
0 X
0 K
(SlingShot 2.0 Programmer\325s Handbook) 72 37.99 T
(45) 531.11 37.99 T
0 10 Q
(DRA) 72 713.33 T
(WICON_TEXT_COLOR) 92.73 713.33 T
1 F
(Sets the RECT) 108 697.33 T
(OBJ_FG of the Drawicon\325) 167.24 697.33 T
(s text.) 273 697.33 T
(Ar) 108 681.33 T
(gument:) 118.36 681.33 T
(int) 180 681.33 T
(Default:) 108 669.33 T
(-1) 180 669.33 T
(Procs:) 108 657.33 T
(create, get, set) 180 657.33 T
0 F
(DRA) 72 633.33 T
(WIMAGE_IMAGE1 \050DRA) 92.73 633.33 T
(WIMAGE_IMAGE\051) 204.54 633.33 T
1 F
(The XV) 108 617.33 T
(iew Server image to be displayed when not selected.) 139.87 617.33 T
(Ar) 108 601.33 T
(gument:) 118.36 601.33 T
(Server_image) 180 601.33 T
(Default:) 108 589.33 T
(NULL) 180 589.33 T
(Procs:) 108 577.33 T
(create, get, set) 180 577.33 T
0 F
(DRA) 72 553.33 T
(WIMAGE_IMAGE1_MASK) 92.73 553.33 T
1 F
-0.03 (The mask for DRA) 108 537.33 P
-0.03 (WIMAGE_IMAGE1. The image is not painted and events are not recognized where bits) 184 537.33 P
(are of) 108 525.33 T
(f in the mask.) 130.85 525.33 T
(Ar) 108 509.33 T
(gument:) 118.36 509.33 T
(Server_image) 180 509.33 T
(Default:) 108 497.33 T
(NULL) 180 497.33 T
(Procs:) 108 485.33 T
(create, get, set) 180 485.33 T
0 F
(DRA) 72 461.33 T
(WIMAGE_IMAGE2 \050DRA) 92.73 461.33 T
(WIMAGE_HIGHLIGHT_IMAGE\051) 204.54 461.33 T
1 F
(The XV) 108 445.33 T
(iew server image to be displayed when selected.) 139.87 445.33 T
(Ar) 108 429.33 T
(gument:) 118.36 429.33 T
(Server_image) 180 429.33 T
(Default:) 108 417.33 T
(NULL) 180 417.33 T
(Procs:) 108 405.33 T
(create, get, set) 180 405.33 T
0 F
(DRA) 72 381.33 T
(WIMAGE_IMAGE2_MASK) 92.73 381.33 T
1 F
-0.03 (The mask for DRA) 108 365.33 P
-0.03 (WIMAGE_IMAGE2. The image is not painted and events are not recognized where bits) 184 365.33 P
(are of) 108 353.33 T
(f in the mask.) 130.85 353.33 T
(Ar) 108 337.33 T
(gument:) 118.36 337.33 T
(Server_image) 180 337.33 T
(Default:) 108 325.33 T
(NULL) 180 325.33 T
(Procs:) 108 313.33 T
(create, get, set) 180 313.33 T
0 F
(DRA) 72 289.33 T
(WLINE_ARROW_ANGLE) 92.73 289.33 T
1 F
(The angle of the tip of the arrow) 108 273.33 T
(, measured in degrees * 64, maximum is 360*64.) 236.97 273.33 T
(Ar) 108 257.33 T
(gument:) 118.36 257.33 T
(int) 180 257.33 T
(Default:) 108 245.33 T
(60 * 64) 180 245.33 T
(Procs:) 108 233.33 T
(create, get, set) 180 233.33 T
0 F
(DRA) 72 209.33 T
(WLINE_ARROW_INSET_LENGTH) 92.73 209.33 T
1 F
(The length from the arrow tip to the \322neck\323 of the arrowhead. Measured in pixel dimensions.) 108 193.33 T
(Ar) 108 177.33 T
(gument:) 118.36 177.33 T
(int) 180 177.33 T
(Default:) 108 165.33 T
(7) 180 165.33 T
(Procs:) 108 153.33 T
(create, get, set) 180 153.33 T
FMENDPAGE
%%EndPage: "45" 7
%%Page: "44" 7
612 792 0 FMBEGINPAGE
0 8 Q
0 X
0 K
(SlingShot 2.0 Programmer\325s Handbook) 72 37.99 T
(44) 531.11 37.99 T
0 10 Q
(DRA) 72 713.33 T
(W) 92.73 713.33 T
(AREA_MIN_ALLOC) 101.79 713.33 T
1 F
(As drawing commands are issued, the display list grows. The minimum amount of memory used by the) 108 697.33 T
-0.01 (display list can be controlled with this attribute, this can improve performance for lengthy display lists. The) 108 685.33 P
(current length will be used as the minimum if this is set to zero.) 108 673.33 T
(Ar) 108 657.33 T
(gument:) 118.36 657.33 T
(int) 180 657.33 T
(Default:) 108 645.33 T
(100) 180 645.33 T
(Procs:) 108 633.33 T
(create, set, get) 180 633.33 T
0 F
(DRA) 72 609.33 T
(WICON_GAP) 92.73 609.33 T
1 F
(The amount of space, in pixels, between the image and the text.) 108 593.33 T
(Ar) 108 577.33 T
(gument:) 118.36 577.33 T
(int) 180 577.33 T
(Default:) 108 565.33 T
(1) 180 565.33 T
(Procs:) 108 553.33 T
(create, get, set) 180 553.33 T
0 F
(DRA) 72 529.33 T
(WICON_IMAGE) 92.73 529.33 T
1 F
(Returns the Drawimage object owned by the Drawicon. This is useful for setting attributes such as color or) 108 513.33 T
(callback procs on the image of a Drawicon.) 108 501.33 T
(Ar) 108 485.33 T
(gument:) 118.36 485.33 T
(Default:) 108 473.33 T
(n/a) 180 473.33 T
(Procs:) 108 461.33 T
(get) 180 461.33 T
(Usage:) 108 449.33 T
2 9 Q
(image = \050Drawimage\051 xv_get\050drawimage, DRAWICON_IMAGE\051;) 144 438 T
0 10 Q
(DRA) 72 414.33 T
(WICON_IMAGE_COLOR) 92.73 414.33 T
1 F
(Sets the RECT) 108 398.33 T
(OBJ_FG of the Drawicon\325) 167.24 398.33 T
(s image.) 273 398.33 T
(Ar) 108 382.33 T
(gument:) 118.36 382.33 T
(int) 180 382.33 T
(Default:) 108 370.33 T
(-1) 180 370.33 T
(Procs:) 108 358.33 T
(create, get, set) 180 358.33 T
0 F
(DRA) 72 334.33 T
(WICON_LA) 92.73 334.33 T
(YOUT_VER) 144.19 334.33 T
(TICAL) 197.88 334.33 T
1 F
(Sets the layout of the Drawicon. If TRUE, the text is below the image. If F) 108 318.33 T
(ALSE, the text is to the right of) 405.95 318.33 T
(the image.) 108 306.33 T
(Ar) 108 290.33 T
(gument:) 118.36 290.33 T
(Boolean) 180 290.33 T
(Default:) 108 278.33 T
(TRUE) 180 278.33 T
(Procs:) 108 266.33 T
(create, get, set) 180 266.33 T
0 F
(DRA) 72 242.33 T
(WICON_TEXT) 92.73 242.33 T
1 F
(Returns the Drawtext object owned by the Drawicon. This is useful for setting attributes such as color or) 108 226.33 T
(callback procs on the text of a Drawicon.) 108 214.33 T
(Ar) 108 198.33 T
(gument:) 118.36 198.33 T
(Default:) 108 186.33 T
(n/a) 180 186.33 T
(Procs:) 108 174.33 T
(get) 180 174.33 T
(Usage:) 108 162.33 T
2 9 Q
(text = \050Drawtext\051 xv_get\050drawicon, DRAWICON_TEXT\051;) 144 151 T
FMENDPAGE
%%EndPage: "44" 6
%%Page: "43" 6
612 792 0 FMBEGINPAGE
0 8 Q
0 X
0 K
(SlingShot 2.0 Programmer\325s Handbook) 72 37.99 T
(43) 531.11 37.99 T
0 10 Q
(CLOCKOBJ_MOV) 72 713.33 T
(ABLE) 153.46 713.33 T
1 F
(Allows the user to set the time by clicking and dragging on either of the hands of the clock.) 108 697.33 T
(Ar) 108 681.33 T
(gument:) 118.36 681.33 T
(Boolean) 180 681.33 T
(Default:) 108 669.33 T
(F) 180 669.33 T
(ALSE) 184.82 669.33 T
(Procs:) 108 657.33 T
(create, get, set) 180 657.33 T
0 F
(CLOCKOBJ_MOVE_PROC) 72 633.33 T
1 F
-0.05 (A noti\336cation callback for the application. This is called after the user has changed the time by clicking and) 108 617.33 P
(dragging of the clock hands. The done parameter is TRUE when the mouse has been released.) 108 605.33 T
(Ar) 108 589.33 T
(gument:) 118.36 589.33 T
(Proc_ptr) 180 589.33 T
(Default:) 108 577.33 T
(NULL) 180 577.33 T
(Procs:) 108 565.33 T
(create, get, set) 180 565.33 T
(Usage:) 108 553.33 T
2 9 Q
(void clockobj_time_changed\050) 144 542 T
(Clockobj) 180 531 T
(clockobj,) 252 531 T
(int) 180 520 T
(new_hour,) 252 520 T
(int) 180 509 T
(new_min,) 252 509 T
(int) 180 498 T
(done\051) 252 498 T
0 10 Q
(DRA) 72 474.33 T
(W) 92.73 474.33 T
(AREA_LAST_MARK_KEY) 101.79 474.33 T
1 F
(Returns the last key that was speci\336ed when an event was mapped to a display list entry) 108 458.33 T
(. It is only useful to) 458.78 458.33 T
(get this in an event callback.) 108 446.33 T
(Ar) 108 430.33 T
(gument:) 118.36 430.33 T
(Xv_opaque) 180 430.33 T
(Default:) 108 418.33 T
(n/a) 180 418.33 T
(Procs:) 108 406.33 T
(get) 180 406.33 T
0 F
(DRA) 72 382.33 T
(W) 92.73 382.33 T
(AREA_LEFT_X) 101.79 382.33 T
(DRA) 72 370.33 T
(W) 92.73 370.33 T
(AREA_RIGHT_X) 101.79 370.33 T
(DRA) 72 358.33 T
(W) 92.73 358.33 T
(AREA_UPPER_Y) 101.79 358.33 T
(DRA) 72 346.33 T
(W) 92.73 346.33 T
(AREA_LOWER_Y) 101.79 346.33 T
1 F
(Con\336gures the dimensions of the drawarea.) 108 330.33 T
(Ar) 108 314.33 T
(gument:) 118.36 314.33 T
(double *) 180 314.33 T
(Default:) 108 302.33 T
(\0500, 0, 10000, 10000\051) 180 302.33 T
(Procs:) 108 290.33 T
(Usage:) 108 278.33 T
2 9 Q
(double current_value, new_value;) 180 267 T
(current_value = *\050double*\051 xv_get\050drawarea, DRAWAREA_LEFT_X\051;) 180 245 T
(new_value = 1.5;) 180 223 T
(xv_set\050drawarea,) 180 212 T
(DRAWAREA_UPPER_X, &new_value,) 216 201 T
(NULL\051;) 216 190 T
0 10 Q
(DRA) 72 155.33 T
(W) 92.73 155.33 T
(AREA_MAP_EVENTS) 101.79 155.33 T
1 F
(Controls how events are mapped to display list entries.) 108 139.33 T
(Ar) 108 123.33 T
(gument:) 118.36 123.33 T
(Drawarea_map_event_mode) 180 123.33 T
(Default:) 108 111.33 T
(DRA) 180 111.33 T
(W) 200.3 111.33 T
(AREA_MAP_ANY) 208.62 111.33 T
(Procs:) 108 99.33 T
(create, get, set) 180 99.33 T
FMENDPAGE
%%EndPage: "43" 5
%%Page: "42" 5
612 792 0 FMBEGINPAGE
0 8 Q
0 X
0 K
(SlingShot 2.0 Programmer\325s Handbook) 72 37.99 T
(42) 531.11 37.99 T
0 10 Q
(CANV) 72 713.33 T
(AS_SHELL_DROP_SITE) 99.03 713.33 T
1 F
(Returns the drop site that is created if CANV) 108 697.33 T
(AS_SHELL_AUT) 287.14 697.33 T
(O_DROP_SITE is TRUE. Y) 361.36 697.33 T
(ou can get this) 475.3 697.33 T
(attribute from the paint window only) 108 685.33 T
(.) 254.76 685.33 T
(Default:) 108 669.33 T
(N/A) 180 669.33 T
(Procs:) 108 657.33 T
(get \050on paint window\051) 180 657.33 T
0 F
(CANV) 72 633.33 T
(AS_SHELL_EVENT_PROC) 99.03 633.33 T
1 F
(The Canvas_shell uses the WIN_EVENT_PROC on each of it\325) 108 617.33 T
(s paint windows to track events. If you need) 360.05 617.33 T
(to get the event before it is processed by the canvas_shell, use this attribute. Return TRUE if the event) 108 605.33 T
-0.26 (should not be further passed onto the rectobjs within the canvas_shell. A typical use of this may be to handle) 108 593.33 P
(ACTION_CUT) 108 581.33 T
(, ACTION_COPY) 170 581.33 T
(, and ACTION_P) 243.11 581.33 T
(ASTE events.) 312.42 581.33 T
(Ar) 108 565.33 T
(gument:) 118.36 565.33 T
(int \050*\051\050\051) 180 565.33 T
(Default:) 108 553.33 T
(NULL) 180 553.33 T
(Procs:) 108 541.33 T
(create, get, set) 180 541.33 T
(Usage:) 108 529.33 T
2 9 Q
(int miscellaneous_event_proc\050) 180 518 T
(Xv_window) 216 507 T
(paint_window,) 288 507 T
(Event) 216 496 T
(*event,) 288 496 T
(Canvas_shell) 216 485 T
(canvas_shell\051) 288 485 T
0 10 Q
(CANV) 72 461.33 T
(AS_SHELL_FONT) 99.03 461.33 T
1 F
(The default font for Drawtext and Drawarea objects for this Canvas_shell. Use in case you need a default) 108 445.33 T
(font that is dif) 108 433.33 T
(ferent from the font from the frame.) 164.18 433.33 T
(Ar) 108 417.33 T
(gument:) 118.36 417.33 T
(Xv_font) 180 417.33 T
(Default:) 108 405.33 T
(The XV_FONT of the frame) 180 405.33 T
(Procs:) 108 393.33 T
(create) 180 393.33 T
0 F
(CLOCKOBJ_HR) 72 369.33 T
1 F
(The hour to display) 108 353.33 T
(. V) 185.36 353.33 T
(alue ranges from 1 to 12.) 196.46 353.33 T
(Ar) 108 337.33 T
(gument:) 118.36 337.33 T
(int) 180 337.33 T
(Default:) 108 325.33 T
(12) 180 325.33 T
(Procs:) 108 313.33 T
(create, get, set) 180 313.33 T
0 F
(CLOCKOBJ_MIN) 72 281.33 T
1 F
(The minute to display) 108 265.33 T
(. [0..59]) 194.8 265.33 T
(Ar) 108 249.33 T
(gument:) 118.36 249.33 T
(int) 180 249.33 T
(Default:) 108 237.33 T
(0) 180 237.33 T
(Procs:) 108 225.33 T
(create, get, set) 180 225.33 T
0 F
(CLOCKOBJ_HR_DRA) 72 201.33 T
(W) 172.15 201.33 T
(AREA) 181.21 201.33 T
(CLOCKOBJ_MIN_DRA) 72 189.33 T
(W) 176.03 189.33 T
(AREA) 185.1 189.33 T
1 F
(The drawarea uses a separate object to draw the hour and min hand into. These attribute returns the handles) 108 173.33 T
(of these objects so the colors or callbacks can be set.) 108 161.33 T
(Ar) 108 145.33 T
(gument:) 118.36 145.33 T
(Drawarea) 180 145.33 T
(Default:) 108 133.33 T
(n/a) 180 133.33 T
(Procs:) 108 121.33 T
(get) 180 121.33 T
FMENDPAGE
%%EndPage: "42" 4
%%Page: "41" 4
612 792 0 FMBEGINPAGE
0 8 Q
0 X
0 K
(SlingShot 2.0 Programmer\325s Handbook) 72 37.99 T
(41) 531.11 37.99 T
0 10 Q
(BOX_GAP) 72 713.33 T
1 F
(The gap in pixels between the children.) 108 697.33 T
(Ar) 108 681.33 T
(gument:) 118.36 681.33 T
(int) 180 681.33 T
(Default:) 108 669.33 T
(1) 180 669.33 T
(Procs:) 108 657.33 T
(create, set, get) 180 657.33 T
0 F
(BOX_LA) 72 633.33 T
(YOUT) 110.15 633.33 T
1 F
(The direction that the box lays it\325) 108 617.33 T
(s children out.) 240.7 617.33 T
(Ar) 108 601.33 T
(gument:) 118.36 601.33 T
(Box_layout) 180 601.33 T
2 9 Q
(BOX_LAYOUT_HORIZONTAL, BOX_LAYOUT_VERTICAL) 180 590 T
1 10 Q
(Default:) 108 578.33 T
(BOX_LA) 180 578.33 T
(YOUT_HORIZONT) 218.5 578.33 T
(AL) 301.52 578.33 T
(Procs:) 108 566.33 T
(create, get, set) 180 566.33 T
0 F
(CANV) 72 542.33 T
(AS_SHELL_AUT) 99.03 542.33 T
(O_DROP_SITE) 174.94 542.33 T
1 F
-0.13 (If this is TRUE, the canvas_shell will create and maintain a XV) 108 526.33 P
-0.13 (iew drop site object. This is necessary if you) 360.76 526.33 P
(want RECT) 108 514.33 T
(OBJ_DROP_PROC callbacks to operate.) 155.29 514.33 T
(Ar) 108 498.33 T
(gument:) 118.36 498.33 T
(Boolean) 180 498.33 T
(Default:) 108 486.33 T
(F) 180 486.33 T
(ALSE) 184.82 486.33 T
(Procs:) 108 474.33 T
(create, get, set) 180 474.33 T
0 F
(CANV) 72 450.33 T
(AS_SHELL_BA) 99.03 450.33 T
(TCH_REP) 167.73 450.33 T
(AINT) 213.63 450.33 T
1 F
-0.36 (When this is TRUE, an of) 108 434.33 P
-0.36 (fscreen pixmap is used to buf) 209.84 434.33 P
-0.36 (fer repaints. This reduces \337ashing considerable, at the) 325.27 434.33 P
(cost of repaint speed and memory consumption.) 108 422.33 T
(If the server doesn\325) 108 406.33 T
(t have enough memory) 185.25 406.33 T
(, or if the user overrides this by setting the X resource) 276.48 406.33 T
3 F
(SlingShot.Batching) 108 394.33 T
1 F
( to F) 184.91 394.33 T
(ALSE, no pixmap will be created.) 202.5 394.33 T
(The size of the of) 108 378.33 T
(fscreen pixmap is reset to new dimensions whenever the canvas_shell is resized. This is) 177.76 378.33 T
(done by the default CANV) 108 366.33 T
(AS_RESIZE_PROC, canvas_shell_resize_proc.) 214.41 366.33 T
(Ar) 108 350.33 T
(gument:) 118.36 350.33 T
(Boolean) 180 350.33 T
(Default:) 108 338.33 T
(F) 180 338.33 T
(ALSE) 184.82 338.33 T
(Procs:) 108 326.33 T
(create, get, set) 180 326.33 T
0 F
(CANV) 72 302.33 T
(AS_SHELL_DELA) 99.03 302.33 T
(Y_REP) 180.5 302.33 T
(AINT) 212.53 302.33 T
1 F
(At the end of each xv_set\050\051 call, changes to visual appearance of objects are \337ushed to the screen. In many) 108 286.33 T
(circumstances, this can cause thrashing during repaint because multiple calls are made to xv_set\050\051. This) 108 274.33 T
(attribute is used to work around this problem.) 108 262.33 T
(Setting this attribute to TRUE will prohibit repainting until it is set to F) 108 246.33 T
(ALSE again. This can be set to) 392.41 246.33 T
(TRUE several times, but it must be set to F) 108 234.33 T
(ALSE an equal number of times.) 279.95 234.33 T
(The canvas shell event handler uses this internally) 108 218.33 T
(, so you usually won\325) 308.04 218.33 T
(t need to use this in event callbacks) 393.64 218.33 T
(such as RECT) 108 206.33 T
(OBJ_DOUBLE_CLICK_PROC.) 165.01 206.33 T
(Ar) 108 190.33 T
(gument:) 118.36 190.33 T
(Boolean) 180 190.33 T
(Default:) 108 178.33 T
(F) 180 178.33 T
(ALSE) 184.82 178.33 T
(Procs:) 108 166.33 T
(get, set) 180 166.33 T
FMENDPAGE
%%EndPage: "41" 3
%%Page: "40" 3
612 792 0 FMBEGINPAGE
0 8 Q
0 X
0 K
(SlingShot 2.0 Programmer\325s Handbook) 72 37.99 T
(40) 531.11 37.99 T
0 10 Q
(ARRA) 72 713.33 T
(Y_TILE_ROW) 99.03 713.33 T
1 F
(The row index of the object \050child\051 referenced.) 108 697.33 T
(Ar) 108 681.33 T
(gument:) 118.36 681.33 T
(object, int) 180 681.33 T
(Default:) 108 669.33 T
(n/a) 180 669.33 T
(Procs:) 108 657.33 T
(get, set) 180 657.33 T
(Usage:) 108 645.33 T
2 9 Q
(xv_set\050array_tile,) 144 634 T
(ARRAY_TILE_ROW, child, 7,) 180 623 T
(NULL\051;) 180 612 T
(child_row = \050int\051 xv_get\050array_tile, ARRAY_TILE_ROW, child\051;) 144 589 T
0 10 Q
(ARRA) 72 565.33 T
(Y_TILE_ROW_GAP) 99.03 565.33 T
1 F
(The vertical distance in pixels between the rows of the array_tile.) 108 549.33 T
(Ar) 108 533.33 T
(gument:) 118.36 533.33 T
(int) 180 533.33 T
(Default:) 108 521.33 T
(15) 180 521.33 T
(Procs:) 108 509.33 T
(create, get, set) 180 509.33 T
0 F
(ARRA) 72 485.33 T
(Y_TILE_ROW_HEIGHT) 99.03 485.33 T
1 F
(The vertical space in pixels allocated to rows. All rows in an array_tile are of the same size. Adding a child) 108 469.33 T
(that is wider than this value causes to increase to \336t the child within the column.) 108 457.33 T
(Ar) 108 441.33 T
(gument:) 118.36 441.33 T
(int) 180 441.33 T
(Default:) 108 429.33 T
(20) 180 429.33 T
(Procs:) 108 417.33 T
(create, get, set) 180 417.33 T
0 F
(ARRA) 72 393.33 T
(Y_TILE_VLINES) 99.03 393.33 T
1 F
(Display vertical lines around the children.) 108 377.33 T
(Ar) 108 361.33 T
(gument:) 118.36 361.33 T
(Boolean) 180 361.33 T
(Default:) 108 349.33 T
(F) 180 349.33 T
(ALSE) 184.82 349.33 T
(Procs:) 108 337.33 T
(create, set, get) 180 337.33 T
0 F
(BAG_ANCHORED) 72 313.33 T
1 F
(If TRUE, the bag\325) 108 297.33 T
(s origin \050i.e. its upper left edge\051 will remain \336xed when children are added or change) 180.17 297.33 T
-0.05 (geometry) 108 285.33 P
-0.05 (. If F) 145.1 285.33 P
-0.05 (ALSE, the upper left edge will dynamically change to shrink close to the upper leftmost child.) 163.98 285.33 P
(Ar) 108 269.33 T
(gument:) 118.36 269.33 T
(Boolean) 180 269.33 T
(Default:) 108 257.33 T
(TRUE) 180 257.33 T
(Procs:) 108 245.33 T
(create, get, set) 180 245.33 T
0 F
(BAG_AUT) 72 221.33 T
(O_SHRINK) 118.47 221.33 T
1 F
-0.29 (The bag always gets lar) 108 205.33 P
-0.29 (ger to keep expanding children within the bag\325) 201.01 205.33 P
-0.29 (s bounds. If this attribute is TRUE, the) 385.21 205.33 P
(bag will reduce it\325) 108 193.33 T
(s size when children shrink or are deleted.) 180.45 193.33 T
(Ar) 108 177.33 T
(gument:) 118.36 177.33 T
(Boolean) 180 177.33 T
(Default:) 108 165.33 T
(F) 180 165.33 T
(ALSE) 184.82 165.33 T
(Procs:) 108 153.33 T
(create, get, set) 180 153.33 T
FMENDPAGE
%%EndPage: "40" 2
%%Page: "39" 2
612 792 0 FMBEGINPAGE
0 8 Q
0 X
0 K
(SlingShot 2.0 Programmer\325s Handbook) 72 37.99 T
(39) 531.11 37.99 T
0 10 Q
(ARRA) 72 713.33 T
(Y_TILE_HLINES) 99.03 713.33 T
1 F
(Display horizontal lines around the children.) 108 697.33 T
(Ar) 108 681.33 T
(gument:) 118.36 681.33 T
(Boolean) 180 681.33 T
(Default:) 108 669.33 T
(F) 180 669.33 T
(ALSE) 184.82 669.33 T
(Procs:) 108 657.33 T
(create, set, get) 180 657.33 T
0 F
(ARRA) 72 633.33 T
(Y_TILE_LA) 99.03 633.33 T
(YOUT) 149.4 633.33 T
1 F
-0.14 (This controls automatic layout of objects when they are added to an array_tile. It also controls the growth of) 108 617.33 P
(the array_tile when all positions are taken.) 108 605.33 T
-0.16 (If set to ARRA) 108 589.33 P
-0.16 (Y_TILE_LA) 167.4 589.33 P
-0.16 (YOUT_COLUMN, new columns will be added when the array_tile is full. If set) 218.67 589.33 P
(to ARRA) 108 577.33 T
(Y_TILE_LA) 145.12 577.33 T
(YOUT_ROW) 196.38 577.33 T
(, new rows will be added when the array_tile is full. When not full, a) 251.53 577.33 T
(newly added object will be positioned at the \336rst available spot.) 108 565.33 T
(Ar) 108 549.33 T
(gument:) 118.36 549.33 T
(Array_tile_layout) 180 549.33 T
2 9 Q
(ARRAY_TILE_LAYOUT_ROW,) 180 538 T
(ARRAY_TILE_LAYOUT_COLUMN) 180 527 T
1 10 Q
(Default:) 108 515.33 T
(ARRA) 180 515.33 T
(Y_TILE_LA) 206.85 515.33 T
(YOUT_ROW) 258.11 515.33 T
(Procs:) 108 503.33 T
(create, get, set) 180 503.33 T
0 F
(ARRA) 72 479.33 T
(Y_TILE_N_COLUMNS) 99.03 479.33 T
1 F
(The number of columns in the array_tile.) 108 463.33 T
(Ar) 108 447.33 T
(gument:) 118.36 447.33 T
(int) 180 447.33 T
(Default:) 108 435.33 T
(4) 180 435.33 T
(Procs:) 108 423.33 T
(create, get, set) 180 423.33 T
0 F
(ARRA) 72 399.33 T
(Y_TILE_N_ROWS) 99.03 399.33 T
1 F
(The number of rows in the array_tile.) 108 383.33 T
(Ar) 108 367.33 T
(gument:) 118.36 367.33 T
(int) 180 367.33 T
(Default:) 108 355.33 T
(1) 180 355.33 T
(Procs:) 108 343.33 T
(create, get, set) 180 343.33 T
0 F
(ARRA) 72 319.33 T
(Y_TILE_POSITION) 99.03 319.33 T
1 F
(The row and column of the object \050child\051 referenced.) 108 303.33 T
(The array_tile does not allow two children to be placed at the same position. If this happens, the object) 108 287.33 T
(previously at that spot will be repositition to \050-1, -1\051 and will not be visible.) 108 275.33 T
(Ar) 108 259.33 T
(gument:) 118.36 259.33 T
(object, int, int) 180 259.33 T
(Default:) 108 247.33 T
(n/a) 180 247.33 T
(Procs:) 108 235.33 T
(get, set) 180 235.33 T
(Usage:) 108 223.33 T
2 9 Q
(xv_set\050array_tile,) 144 212 T
(ARRAY_TILE_POSITION, child, 4, 5,) 180 201 T
(NULL\051;) 180 190 T
(child = \050Rectobj\051 xv_get\050array_tile, ARRAY_TILE_POSITION, 7, 6\051;) 144 167 T
FMENDPAGE
%%EndPage: "39" 1
%%Page: "38" 1
612 792 0 FMBEGINPAGE
0 8 Q
0 X
0 K
(SlingShot 2.0 Programmer\325s Handbook) 72 37.99 T
(38) 531.11 37.99 T
72 710 540 720 C
72 719 540 719 2 L
1 H
2 Z
0 X
0 K
N
0 0 612 792 C
4 14 Q
0 X
0 K
(Appendix A: Attributes) 72 700.67 T
0 10 Q
(ARRA) 72 679.33 T
(Y_TILE_ALIGN) 99.03 679.33 T
1 F
(Controls the positioning of children within the column and rows.) 108 663.33 T
(Ar) 108 647.33 T
(gument:) 118.36 647.33 T
(Array_tile_align) 180 647.33 T
2 9 Q
(ARRAY_TILE_ALIGN_NORTHWEST,) 216 636 T
(ARRAY_TILE_ALIGN_NORTH,) 216 625 T
(ARRAY_TILE_ALIGN_NORTHEAST,) 216 614 T
(ARRAY_TILE_ALIGN_WEST,) 216 603 T
(ARRAY_TILE_ALIGN_CENTER,) 216 592 T
(ARRAY_TILE_ALIGN_EAST,) 216 581 T
(ARRAY_TILE_ALIGN_SOUTHWEST,) 216 570 T
(ARRAY_TILE_ALIGN_SOUTH,) 216 559 T
(ARRAY_TILE_ALIGN_SOUTHEAST) 216 548 T
1 10 Q
(Default:) 108 536.33 T
(ARRA) 180 536.33 T
(Y_TILE_ALIGN_CENTER) 206.85 536.33 T
(Procs:) 108 524.33 T
(create, get, set) 180 524.33 T
0 F
(ARRA) 72 500.33 T
(Y_TILE_AUT) 99.03 500.33 T
(O_POSITION) 157.72 500.33 T
1 F
-0.17 (If TRUE, children are positioned automatically when they are added and deleted. Children are positioned so) 108 484.33 P
(that there are no holes in the array_tile. It is useful to set this to F) 108 472.33 T
(ALSE if you have speci\336c positioning) 367.65 472.33 T
(needs and are explicitly positioning children with the other array_tile attributes.) 108 460.33 T
(Ar) 108 444.33 T
(gument:) 118.36 444.33 T
(Boolean) 180 444.33 T
(Default:) 108 432.33 T
(TRUE) 180 432.33 T
(Procs:) 108 420.33 T
(create, set, get) 180 420.33 T
0 F
(ARRA) 72 396.33 T
(Y_TILE_COLUMN) 99.03 396.33 T
1 F
(The column index of the object \050child\051 referenced.) 108 380.33 T
(Ar) 108 364.33 T
(gument:) 118.36 364.33 T
(object, int) 180 364.33 T
(Default:) 108 352.33 T
(n/a) 180 352.33 T
(Procs:) 108 340.33 T
(get, set) 180 340.33 T
(Usage:) 108 328.33 T
2 9 Q
(xv_set\050array_tile,) 144 317 T
(ARRAY_TILE_COLUMN, child, 12,) 180 306 T
(NULL\051;) 180 295 T
(child_column = \050int\051 xv_get\050array_tile, ARRAY_TILE_COLUMN, child\051;) 144 273 T
0 10 Q
(ARRA) 72 249.33 T
(Y_TILE_COLUMN_GAP) 99.03 249.33 T
1 F
(The horizontal distance in pixels between the columns of the array_tile.) 108 233.33 T
(Ar) 108 217.33 T
(gument:) 118.36 217.33 T
(int) 180 217.33 T
(Default:) 108 205.33 T
(15) 180 205.33 T
(Procs:) 108 193.33 T
(create, get, set) 180 193.33 T
0 F
(ARRA) 72 169.33 T
(Y_TILE_COLUMN_WIDTH) 99.03 169.33 T
1 F
(The horizontal space in pixels allocated to columns. All columns in an array_tile are of the same size.) 108 153.33 T
(Adding a child that is wider than this value causes this value to increase to \336t the child within the column.) 108 141.33 T
(Ar) 108 125.33 T
(gument:) 118.36 125.33 T
(int) 180 125.33 T
(Default:) 108 113.33 T
(40) 180 113.33 T
(Procs:) 108 101.33 T
(create, get, set) 180 101.33 T
FMENDPAGE
%%EndPage: "38" 0
%%Trailer
%%BoundingBox: 0 0 612 792
%%Pages: 21 -1
%%DocumentFonts: Helvetica
%%+ Times-Roman
%%+ Courier
%%+ Times-Italic
%%+ Helvetica-Bold
