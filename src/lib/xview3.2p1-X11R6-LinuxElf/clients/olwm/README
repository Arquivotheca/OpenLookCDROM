Topics Covered in This README File:
----------------------------------
What Is OLWM
Changes for This Release  
Reporting Bugs
Building OLWM
Sample Build and Installation
Sample Build and Installation with xmkmf
 

What Is OLWM:
------------
Olwm (OpenLook window manager) is an ICCCM compliant window manager
supplied for use with the XView toolkit.  It requires the graphics
library, olgx, in the contrib/lib/olgx section to build.  Olwm is also
dependent upon the OpenLook fonts found in the contrib/toolkits/XView/fonts
directory.  By default, these fonts are already included in the FCS
X Version 11 Release 4 distribution.  You will only need these fonts if
you are using an older version of the server.

A man page for olwm, olwm.man, can be found in this directory.  

Changes For This Release: 
------------------------  
This version of olwm has an improved README and Imakefile. A couple of bug fixes
have been made since the version included with X11 Release 4 FCS.  The
affected files are AdTitleBar.c, CheckMap.c, README and Imakefile.  This
assumes that you have replaced some of the original source files with the 
new files in the CHANGED directory on the X11 release 4 FCS tape.  This
version incoorporates those changes in addition to the files mentioned
above.

Reporting Bugs:
--------------
For reporting bugs, please see the bug_report file in this directory.
Bugs can be reported to comp.windows.x or the xpert mailing alias, but 
we would prefer to have them go to xviewbugs@sun.com in the format provided
by the bug_report file.  Please direct questions about usage or
topics of general interest to the xpert mailing alias or the comp.windows.x
news group.

If you do not have an email connection, bug reports may be faxed to
(415) 969-9131 or telexed to 3729639 SUN UR.  Please put 
	Atten:  XView Bugs M/S 14-40
on the cover sheet of the fax or telex.  Bug reports may also be 
mailed to:
	Sun Microsystems
	Atten:  XView Bugs M/S 14-40
	2550 Garcia Ave.
	Mountain View, CA 94043
	USA

Building OLWM:
-------------
Step 1: Change variables in the Imakefile to reflect where olgx is installed
	and where olwm should be installed.  The default uses /home/xview.

	OLGXINCDIR is the place where the olgx header files have been installed.
	OLGXLIBDIR is the place where the olgx library has been installed.
	BINDIR is the location to install the olwm binary.
	MANDIR is the location to install the olwm man page.
	These all depend upon the XVDESTDIR variable.

Step 2:	Change the MKDIRHIER and DEPEND variables in the Imakefile (or delete
	it from there and add it to the site.def file) to reflect where you
        have the scripts installed or mounted.  Change DESTDIR, XBINDIR, and
	LIBDIR to reflect where X11 is installed on your system.
 
Step 3: Be sure sure you have the following:
        imake binary installed or mounted someplace on your system.
        imake binary location is in your PATH.
        X11 header files installed or mounted someplace on your system.
        X11 config files installed or mounted someplace on your system.
	Two scripts, mkdirhier and makedepend, installed or mounted someplace
	    on your system.
	You have write permission for the installation directories above.

Step 4: Run imake with appropriate includes:
        imake -DUseInstalled -I<config files location> \
		-DTOPDIR=<X11 header files> -DCURDIR=.
 
Step 5: Run make World to create the olwm binary, install it and install
	the olwm man page.

Sample Build and Installation:
-----------------------------
In this scenario, I have the X11 Release 4 installed in /home/X.
I have changed directory to the location of the olgx source.
 
1:      In the Imakefile, leave XVDESTDIR to install in /home/xview
        % touch /home/xview/foo
        to verify I have write permission and the directory exists.
        % rm /home/xview/foo            
 
2:      In either the Imakefile or the site.def file, set DESTDIR to the
        location of your installed X11 files.  In my case, I set DESTDIR
        to /home/X in the Imakefile.  If you set it in site.def, remove it
        from the Imakefile.
 
3:      The scripts makedepend and mkdirhier should be installed in $(XBINDIR).
	Verify that the imake binary is in $(XBINDIR).
        The config files should be installed in $(DESTDIR)/usr/lib/X11/config.
        The X11 include files should be installed in $(DESTDIR)/usr/include/X11.
        If you do not already do this,
        % set path=($path /home/X/usr/bin/X11)
        to add the imake binary to your PATH (using csh).
 
4:      % imake -DUseInstalled -I/home/X/usr/lib/X11/config \
                -DTOPDIR=/home/X/usr/include -DCURDIR=.
        to create the Makefile.
         
5:      % make World
        to build and install the binary and man page.
 
 
Sample Build and Installation with xmkmf:
----------------------------------------
In this scenario, I have X11 Release 4 installed in the default locations
in /usr.  I have already installed the needed files from $(TOP)/util and
have installed $(TOP)/config.
 
The xmkmf script is included with the X11 Release 4 distribution.  It will
move the current Makefile to Makefile.bak and call imake with pre-defined
arguments.
 
1:      same as above.
 
2:      DESTDIR should be blank in this case.
 
3:      same as above.  Plus xmkmf should be in your PATH.
 
4:      % xmkmf
        or
        % imake -DUseInstalled -I/usr/lib/X11/config

5:      % make World

