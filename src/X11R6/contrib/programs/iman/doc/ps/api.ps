%!PS-Adobe-3.0
%%Creator: groff version 1.08
%%DocumentNeededResources: font Times-Bold
%%+ font Times-Roman
%%+ font Times-Italic
%%+ font Courier
%%DocumentSuppliedResources: procset grops 1.08 0
%%Pages: 47
%%PageOrder: Ascend
%%Orientation: Portrait
%%EndComments
%%BeginProlog
%%BeginResource: procset grops 1.08 0
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll 
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}bind def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/FL{
currentgray exch setgray fill setgray
}bind def
/BL/fill load def
/LW/setlinewidth load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
}bind def
/PEND{
clear
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Italic
%%IncludeResource: font Courier
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72 def/PL
792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron/scaron/zcaron
/Ydieresis/trademark/quotesingle/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/space
/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright/parenleft
/parenright/asterisk/plus/comma/hyphen/period/slash/zero/one/two/three/four
/five/six/seven/eight/nine/colon/semicolon/less/equal/greater/question/at/A/B/C
/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash
/bracketright/circumflex/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q
/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase
/guillemotleft/guillemotright/bullet/florin/fraction/perthousand/dagger
/daggerdbl/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guilsinglleft/logicalnot/minus
/registered/macron/degree/plusminus/twosuperior/threesuperior/acute/mu
/paragraph/periodcentered/cedilla/onesuperior/ordmasculine/guilsinglright
/onequarter/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde
/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute
/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve
/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis]def/Courier@0 ENC0/Courier RE/Times-Italic@0
ENC0/Times-Italic RE/Times-Roman@0 ENC0/Times-Roman RE/Times-Bold@0 ENC0
/Times-Bold RE
%%EndProlog
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 28/Times-Bold@0 SF(Iman API Pr)105.744 104 Q(ogrammer')-.504 E 7(sM)-1.036
G(anual)439.336 104 Q/F1 10/Times-Bold@0 SF -1(Ve)90 256 S(rsion 1 Release 2)1
E(Copyright \(c\) 1993,1994 Bruno RIV)90 268 Q(AS)-1.35 E/F2 10/Times-Roman@0
SF .203(This manual presents all the techniques)90 304 R .203
(and capabilities of the toolkit meant for)5.406 F .202(the X de)5.404 F -.15
(ve)-.25 G .202(lopers who use).15 F(the windo)90 316 Q 2.5(wm)-.25 G 2.5
(anager IMAN)146.97 316 R(.)2.5 E 1.846(The de)90 346 R -.15(ve)-.25 G 1.846
(lopment kit respects the mains con).15 F -.15(ve)-.4 G 1.847
(ntions of the ICCCM de\214ned by the X Consortium and).15 F .604(enables an)90
358 R 3.104(ya)-.15 G .604(pplication using it to "beha)144.928 358 R .904 -.15
(ve a)-.2 H 3.104(sag).15 G .604(ood citizen" independently from the windo)
291.486 358 R 3.103(wm)-.25 G .603(anager or)483.917 358 R
(from another X11 client.)90 370 Q(Ne)90 394 Q -.15(ve)-.25 G
(rtheless, the toolkit \214nds its best use if you intend to de).15 E -.15(ve)
-.25 G(lop specially for IMAN.).15 E
(Programming an application requires the follo)90 418 Q(wing phases:)-.25 E 2.5
(*o)126 442 S(pening and initializing a ne)138.5 442 Q 2.5(ws)-.25 G
(ession with an X serv)260.74 442 Q(er)-.15 E 2.5(*c)126 466 S(reating windo)
137.94 466 Q(ws)-.25 E 2.5(*c)126 490 S(reating widgets)137.94 490 Q 2.5(*c)126
514 S(apture and reaction to e)137.94 514 Q -.15(ve)-.25 G(nts).15 E
(These four stages will be e)90 538 Q(xplained in detail in the follo)-.15 E
(wing manual.)-.25 E -.15(Fo)90 562 S 2.5(rl).15 G
(ater application programming, here is some useful tips that e)109.02 562 Q
-.15(ve)-.25 G(ry e).15 E(xample in this book implies:)-.15 E 2.5(*t)126 586 S
(he programmer must master perfectly the C language and Xlib)136.28 586 Q(.)-.4
E 3.26(*a)126 610 S .761(ll C \214les using the de)138.7 610 R -.15(ve)-.25 G
.761(lopment kit must include the headers <X11/iman/widgets.h>,).15 F
(<X11/iman/windo)126 622 Q 3.244
(ws.h> and <X11/iman/messages.h>. X11 declaration \214les must of)-.25 F
(course ha)126 634 Q .3 -.15(ve b)-.2 H(een pre).15 E(viously declared.)-.25 E
3.041(*l)126 658 S .542
(inking applications with the IMAN library \(libXiman.a\) is done in the follo)
136.821 658 R .542(wing w)-.25 F(ay:)-.1 E(cc \214le.c -lXiman -lX11 -lrpcscvc)
126 670 Q EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-2-)296.004 48 S/F1 30/Times-Bold@0 SF(1)507 107 Q
(Managing the sessions)236.97 142 Q/F2 10/Times-Roman@0 SF 2.575(This chapter \
presents the procedure to initialize a session with the toolkit. All clients m\
ust use the)90 317 R(techniques described hereafter)90 329 Q(.)-.55 E/F3 14
/Times-Bold@0 SF 3.5(1.1 Connection)90 389 R(to a ser)3.5 E -.14(ve)-.14 G(r)
.14 E F2 .488(Before starting an acti)90 437 R .489(vity with an X serv)-.25 F
(er)-.15 E 2.989(,e)-.4 G .489
(ach client must connect himself to it and establish a netw)275.57 437 R(ork)
-.1 E(link, allocate memory space and initialize data.)90 449 Q .797(When e)90
473 R(xclusi)-.15 E -.15(ve)-.25 G .797
(ly programming with Xlib, this operation is done with the function).15 F/F4 10
/Times-Italic@0 SF(XOpenDisplay)3.297 E F2 5.796(.S)C(ince)505.34 473 Q 1.882
(the Iman technology is more comple)90 485 R 1.883(x, it is mandatory to kno)
-.15 F 4.383(wi)-.25 G 1.883(ts o)366.958 485 R 1.883
(wn connection and disconnection)-.25 F(functions.)90 497 Q 1.6 -.8(To e)90 521
T(stablish dialog with an X serv).8 E(er)-.15 E 2.5(,y)-.4 G
(ou must use the function)243.63 521 Q F4(tk_OpenSession)2.5 E F2
(de\214ned as follo)2.5 E(ws:)-.25 E/F5 8/Courier@0 SF
(TkDisplay *tk_OpenSession\(display_name,argc,argv\))90 545 Q
(char *display_name;)90 555 Q(int argc;)90 565 Q(char **argv;)90 575 Q/F6 10
/Times-Bold@0 SF(display_name)90 595 Q F2 2.5(:n)3 G(ame of the serv)162.18 595
Q(er to be contacted \(to the format de\214ned by the API Xlib\).)-.15 E F6(ar)
90 607 Q(gc)-.1 E F2 2.5(:n)2.5 G(umber of ar)121.56 607 Q
(guments of the command line.)-.18 E F6(ar)90 619 Q(gv)-.1 E F2 2.5(:a)2.5 G
-.18(rg)121.56 619 S(uments of the command line of the program you are e).18 E
-.15(xe)-.15 G(cuting;).15 E 1.831
(The function returns a pointer on a structure of)90 643 R F6(TkDisplay)4.331 E
F2 1.83(type which you will ha)4.331 F 2.13 -.15(ve t)-.2 H 4.33(oe).15 G 1.83
(nter as \214rst)473.9 643 R(ar)90 655 Q(gument when using an)-.18 E 2.5(yA)
-.15 G(PI function.)202.43 655 Q
(If connection has been denied, the function returns a NULL pointer)90 667 Q(.)
-.55 E F4(tk_OpenSession)90 691 Q F2(tak)3.191 E .691(es care of initializing \
the numerous data and resources in the TkDisplay structure, and)-.1 F
(checks whether the Iman WM is there or not.)90 703 Q EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-3-)296.004 48 S/F1 14/Times-Bold@0 SF 7(1.2 The)90
88 R(TkDisplay structur)3.5 E(e)-.252 E/F2 10/Times-Roman@0 SF 2.524 -.8(We a)
90 136 T .923(bsolutely need to spend some time on this C structure. It is the\
 foundation stone of).8 F .923(all the toolkit')5.923 F(s)-.55 E
(functions. Once ag)90 148 Q(ain, you will ha)-.05 E .3 -.15(ve t)-.2 H 2.5(oe)
.15 G(nter it as ar)253.74 148 Q(gument when using an)-.18 E 2.5(yA)-.15 G
(PI function.)403.11 148 Q/F3 10/Times-Bold@0 SF(TkDisplay)90 172 Q F2 .111
(is de\214ned as follo)2.611 F .112
(ws in the <X11/iman/tk_system.h> \214le included in the <X11/iman/widgets.h>)
-.25 F(\214le:)90 184 Q(typedef struct {)90 208 Q(Display *display;)162 220 Q
(/* Display of the X serv)306 220 Q(er */)-.15 E(int screen;)162 232 Q
(/* Screen of the X serv)306 232 Q(er */)-.15 E(int depth;)162 244 Q(/*Def)306
244 Q(ault depth */)-.1 E(int ar)162 256 Q 108.63(gc; /*)-.18 F(Number of ar)
2.5 E(guments */)-.18 E(char **ar)162 268 Q 91.42(gv; /*)-.18 F(Ar)2.5 E
(guments */)-.18 E(TkInfos infos;)162 280 Q(/* Infos on the toolkit */)306 280
Q(WmInfos wm;)162 292 Q(/* Infos on the Iman WM */)306 292 Q(HsInfos hs;)162
304 Q(/* Infos on the Help Serv)306 304 Q(er */)-.15 E 7.5(TkAtoms atoms;)162
316 R(/* Collection of atoms */)306 316 Q(TkF)162 328 Q(onts fonts;)-.15 E
(/* Collection of fontes */)306 328 Q(TkPixmaps pixmaps;)162 340 Q
(/* Collection of pixmaps */)306 340 Q 2.5(TkCursors cursors;)162 352 R
(/* Collection of cursors */)306 352 Q -.4(Wi)162 364 S 5
(dgetColors bn_colors;).4 F(/* Button colors */)306 364 Q -.4(Wi)162 376 S 5
(dgetColors sb_colors;).4 F(/* Scrollbar colors */)306 376 Q -.4(Wi)162 388 S 5
(dgetColors ed_colors;).4 F(/* Edit colors */)306 388 Q -.4(Wi)162 400 S 5
(dgetColors ls_colors;).4 F(/* List colors */)306 400 Q -.4(Wi)162 412 S 5
(dgetColors mn_colors;).4 F(/* Menu colors */)306 412 Q -.4(Wi)162 424 S(ndo).4
E 2.5(wColors win_colors;)-.25 F(/* W)306 424 Q(indo)-.4 E 2.5(wc)-.25 G
(olors */)357.01 424 Q -.4(Wi)162 436 S(ndo).4 E(wColors dlg_colors;)-.25 E
(/* Dialog box colors */)306 436 Q(IconColors icn_colors;)162 448 Q
(/* Icon colors */)306 448 Q(ActionStruct action;)162 460 Q
(/* Current action */)306 460 Q -.4(Wi)162 472 S(dgetStruct *widgets;).4 E
(/* List of acti)306 472 Q .3 -.15(ve w)-.25 H(idgets */).15 E
(unsigned int numwidgets;)162 484 Q(/* Number of widgets */)306 484 Q
(unsigned int maxwidgets;)162 496 Q(/* Maximum of widgets */)306 496 Q
(unsigned long widget_double_click; /* Double-click speed */)162 508 Q 2.5(}T)
162 520 S(kDisplay;)175.41 520 Q -.15(Fo)90 556 S 2.814(re).15 G .314(ach serv)
110.994 556 R .314(er you wish to connect yourself to, you will need)-.15 F/F4
10/Times-Italic@0 SF(tk_openSession)2.814 E F2 .313
(to return a pointer on a ne)2.814 F(w)-.25 E(structure.)90 568 Q F1 3.5
(1.3 Initialized)90 604 R -.252(re)3.5 G(sour).252 E(ces)-.252 E F2 1.109
(All initialized resources are used by the toolkit')90 652 R 3.609(sw)-.55 G
1.109(idgets. Ne)302.182 652 R -.15(ve)-.25 G 1.11
(rtheless, you retain direct access to these).15 F
(resources as long as you do not modify or destro)90 664 Q 2.5(yt)-.1 G(hem.)
294.32 664 Q F3 2.5(1.3.1. Colors)90 700 R EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-4-)296.004 48 S/F1 10/Times-Roman@0 SF .992(Color i\
s a precious resource under X. The toolkit only allocates it to widgets and wi\
ndo)90 84 R .991(ws. Y)-.25 F .991(ou can use)-1.1 F 2.481(them as dra)90 96 R
2.481(wing colors for your applications; the TkDisplay->win_colors and TkDispl\
ay->dig_colors)-.15 F 1.256
(structures contain on a permanent basis the suggested and/or ef)90 108 R
(fecti)-.25 E 1.555 -.15(ve c)-.25 H 1.255(olor of the dif).15 F 1.255
(ferent elements of)-.25 F(windo)90 120 Q(ws and dialog box)-.25 E(es.)-.15 E
1.295(If WM is not acti)90 144 R -.15(ve)-.25 G 3.795(,t).15 G 1.296
(hese structures contain the colors possibly de\214ned in the resource \214les)
182.175 144 R/F2 10/Courier@0 SF(.imanrc)3.796 E F1(\(user')90 156 Q 2.5(sl)
-.55 G(ocal \214le\) or)121.94 156 Q/F3 8/Courier@0 SF(/usr/lib/iman/.imanrc)
2.5 E F2(.)A F1 .123(Otherwise, WM instructs the windo)90 168 R 1.423 -.65
(w, t)-.25 H .123
(hrough an Xlib ClientMessage type of message, to update the colors).65 F
(WM de\214nes as standard and stores in the root windo)90 180 Q(w')-.25 E(s)
-.55 E F2(_IMAN_WM_DATA)2.5 E F1(property:)2.5 E 1.427(Only the windo)90 204 R
3.927(wm)-.25 G 1.427(anager can modify the contents of this property and deci\
de of the system colors of)173.751 204 R(widgets and windo)90 216 Q(ws.)-.25 E
.94(In the same w)90 240 R(ay)-.1 E 3.439(,t)-.65 G .939(he TkDisplay->bn_colo\
rs, TkDisplay->ed_colors, etc., structures contain the colors for)166.048 240 R
2.16(the widgets and follo)90 252 R 4.66(wt)-.25 G 2.16
(he same protocole as for the windo)195.05 252 R 4.66(ws. Their)-.25 F 2.16
(importance is ho)4.66 F(we)-.25 E -.15(ve)-.25 G 4.66(rg).15 G(reater)499.24
252 Q 1.02(because all widgets refer to it by def)90 264 R 1.019
(ault for their display)-.1 F 3.519(,w)-.65 G 1.019
(hereas the display of windo)339.307 264 R 1.019(ws' colors is not)-.25 F
(managed automatically: it')90 276 Q 2.5(su)-.55 G 2.5(pt)208.05 276 S 2.5(oy)
218.33 276 S(ou, you mak)230.83 276 Q 2.5(et)-.1 G(he call!)290.17 276 Q .641
(If you wish to modify the toolkit')90 300 R 3.142(ss)-.55 G .642
(ystem colors \(something only feasible with widgets\), you can call the)238.11
300 R(function)90 312 Q/F4 10/Times-Italic@0 SF(tk_SetSystemColor)2.5 E(s)-.1 E
F1(:)A F3
(int tk_SetSystemColors\(tk_display, widget_class, *wid_colors, delay\))90 336
Q(TkDisplay *tk_display;)130.8 346 Q(unsigned int widget_class;)128.4 356 Q
(WidgetColors *wid_colors;)128.4 366 Q(Bool delay;)128.4 376 Q/F5 10
/Times-Bold@0 SF(widget_class)90 396 Q F1(can ha)2.5 E .3 -.15(ve o)-.2 H
(ne of the follo).15 E(wing v)-.25 E(alues :)-.25 E(#de\214ne WI_B)126 420 Q
(UTT)-.1 E 51.52(ON 1)-.18 F(#de\214ne WI_SCR)126 432 Q(OLLB)-.4 E 33.64(AR 2)
-.35 F(#de\214ne WI_EDIT)126 444 Q(3)270 444 Q(#de\214ne WI_LIST)126 456 Q(4)
270 456 Q(#de\214ne WI_COMBO)126 468 Q(5)270 468 Q(#de\214ne WI_MENU)126 480 Q
(6)270 480 Q F5 1.404(wid_colors :)90 504 R F1 1.404(structure of W)3.904 F
1.404
(idgetColors type containing the colors that are meant to be allocated ot the)
-.4 F(components of each widget.)90 516 Q(typedef struct {)90 540 Q
(unsigned long bg;)162 552 Q(unsigned long fg;)162 564 Q(unsigned long light;)
162 576 Q(unsigned long shado)162 588 Q(w;)-.25 E(unsigned long te)162 600 Q
(xt;)-.15 E(unsigned long te)162 612 Q(xt_grayed;)-.15 E
(unsigned long selected;)162 624 Q(unsigned long selected_inacti)162 636 Q -.15
(ve)-.25 G(;).15 E(unsigned long te)162 648 Q(xt_selected;)-.15 E
(unsigned long te)162 660 Q(xt_grayed_selected;)-.15 E(unsigned long te)162 672
Q(xt_selected_inacti)-.15 E -.15(ve)-.25 G(;).15 E(unsigned long te)162 684 Q
(xt_grayed_selected_inacti)-.15 E -.15(ve)-.25 G(;).15 E EP
%%Page: 5 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-5-)296.004 48 S/F1 10/Times-Roman@0 SF
(unsigned long cursor;)162 84 Q(unsigned long focus;)162 96 Q
(unsigned long nofocus;)162 108 Q
(unsigned long cross, check, radio_bg, radio_light;)162 120 Q(}W)162 132 Q
(idgetColors;)-.4 E/F2 10/Times-Bold@0 SF(delay :)90 156 Q F1 -.35(Tr)4.8 G
(ue= refreshing of widgets postponed, F).35 E(alse= immediate refreshing.)-.15
E(If e)90 180 Q -.15(ve)-.25 G
(rything goes well the function returns a zero, otherwise it returns a ne).15 E
-.05(ga)-.15 G(ti).05 E .3 -.15(ve v)-.25 H(alue.)-.1 E
(If you wish to load colors from a resource \214le, you can use)90 216 Q/F3 10
/Times-Italic@0 SF(tk_LoadSystemColor)2.5 E(sF)-.1 E -.45(ro)-.55 G(mF).45 E
(ile)-.45 E F1(:)5 E/F4 8/Courier@0 SF
(extern int tk_LoadSystemColorsFromFile\(tk_display,filename\);)90 240 Q
(TkDisplay *tk_display;)128.4 250 Q(char *filename;)128.4 260 Q F1 .289
(Both functions only w)90 280 R .289(ork if the WM is absent, otherwise the la\
tter decides of the colors of the widgets and)-.1 F(windo)90 292 Q(ws.)-.25 E
.434(Last point: if you wish to kno)90 316 R 2.934(ww)-.25 G .434
(ether the toolkit is using a particular color)228.068 316 R 2.934(,h)-.4 G
.434(ere is a v)408.62 316 R .434(ery useful function)-.15 F(before risking v)
90 328 Q(acating a color cell that might be missed later:)-.25 E F4
(Bool IsColorUsed\(tk_display,pixel\))90 352 Q(TkDisplay *tk_display;)90 362 Q
(unsigned long pixel;)90 372 Q F1 1.119(If the function returns T)90 392 R
1.119(rue, it means that the toolkit)-.35 F 1.119
(is using this color for one of its widgets \(only the)6.119 F 1.638
(system colors of widgets are e)90 404 R 1.638(xamined by)-.15 F F3
(IsColorUsed)4.138 E F1 6.638(\)a)C 1.638(nd it thus shouldn')337.084 404 R
4.138(tb)-.18 G 4.138(ev)428.466 404 S 1.638(acated or modi\214ed.)441.794 404
R(Otherwise, when the function returns F)90 416 Q
(alse, you are free to do whate)-.15 E -.15(ve)-.25 G 2.5(ry).15 G(ou please.)
383.82 416 Q F2 2.5(1.3.2 Atoms)90 452 R(and pr)2.5 E(operties)-.18 E F1
(The toolkit uses se)90 488 Q -.15(ve)-.25 G(ral properties to store informati\
on, dialog with the WM or with other applications.).15 E
(These properties are de\214ned as follo)90 500 Q(ws in the TkAtoms structure:)
-.25 E(typedef struct {)90 524 Q(Atom _IMAN_WINDO)126 536 Q(W_MAN)-.35 E -.4
(AG)-.35 G(ER;).4 E(Atom _IMAN_HELP_SER)126 548 Q(VER;)-.8 E
(Atom _IMAN_WM_TYPE;)126 560 Q(Atom _IMAN_WM_D)126 572 Q -1.21 -1.11(AT A)-.4 H
(;)1.11 E(Atom _IMAN_WM_FOCUS;)126 584 Q(Atom _IMAN_WM_MD)126 596 Q -.37(W;)-.3
G(Atom _IMAN_WM_MESSA)126 608 Q(GES;)-.4 E(Atom _IMAN_DR)126 620 Q(OP_SITES;)
-.4 E(Atom _IMAN_DR)126 632 Q(OP_T)-.4 E(ARGETS;)-.93 E(Atom _IMAN_DR)126 644 Q
(OP_A)-.4 E(CTION;)-.4 E(Atom _IMAN_DR)126 656 Q(OP_MESSA)-.4 E(GES;)-.4 E
(Atom _IMAN_HS_D)126 668 Q -1.21 -1.11(AT A)-.4 H(BOOK;)1.11 E(Atom _IMAN_HS_T)
126 680 Q(OPIC;)-.18 E(Atom WM_ST)126 692 Q -1.11(AT)-.93 G(E;)1.11 E EP
%%Page: 6 6
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-6-)296.004 48 S/F1 10/Times-Roman@0 SF
(Atom WM_COLORMAP_WINDO)126 84 Q(WS;)-.35 E(Atom WM_PR)126 96 Q -1.88 -.4(OT O)
-.4 H(COLS;).4 E(Atom WM_CHANGE_ST)126 108 Q -1.11(AT)-.93 G(E;)1.11 E
(Atom WM_T)126 120 Q(AKE_FOCUS;)-.93 E(Atom WM_SA)126 132 Q(VE_Y)-1.35 E
(OURSELF;)-.3 E(Atom WM_DELETE_WINDO)126 144 Q -.37(W;)-.35 G(Atom WM_T)126 156
Q(OP_LEVEL;)-.18 E 2.5(}T)126 168 S(kAtoms;)139.41 168 Q 1.978
(The properties starting by _IMAN_ are used by the applications concei)90 204 R
-.15(ve)-.25 G 4.479(dw).15 G 1.979(ith the toolkit, the other)419.914 204 R
2.027(properties correspond to those listed in the ICCCM for the information o\
f windo)90 216 R 5.027(wm)-.25 G 2.027(anagers and the)455.746 216 R -.15(ex)90
228 S(change of messages.).15 E -1.1(Yo)90 240 S 2.826(uc)1.1 G .327
(an use them by addressing them directly \(e)113.386 240 R 2.827(x:t)-.15 G
.327(k_display->atoms._IMAN_WM_TYPE\), b)303.099 240 R .327(ut under no)-.2 F
(circumstances must you try to rede\214ne them.)90 252 Q/F2 10/Times-Bold@0 SF
2.5(1.3.3 Pixmaps)90 288 R F1 -.4(Wi)90 324 S .812(dgets use se).4 F -.15(ve)
-.25 G .812(ral bitmaps \(depth 1\) or pixmaps for their o).15 F .812
(wn display according to their status \(gre)-.25 F(yed,)-.15 E(etc.\).)90 336 Q
1.381(These are the only resources you must not use because the WM often order\
s to modi\214y them when he)90 360 R
(informs the application of a modi\214cation of def)90 372 Q(ault colors.)-.1 E
(At the end of the session, all those pixmaps are automatically cleared by the)
90 396 Q/F3 10/Times-Italic@0 SF(tk_CloseSession)2.5 E F1(function.)2.5 E F2
2.5(1.3.4 Cursors)90 432 R F1 .741(The toolkit also stores the ID of se)90 468
R -.15(ve)-.25 G .741(ral standard cursors a).15 F -.25(va)-.2 G .74
(ilable in the X serv).25 F(er)-.15 E 5.74(.T)-.55 G(he)439.21 468 Q 3.24(ya)
-.15 G .74(re found in the)461.18 468 R(TkCursors structure.)90 480 Q
(typedef struct {)90 504 Q(Cursor normal;)162 516 Q(/* XC_left_ptr)270 516 Q
(*/)378 516 Q(Cursor te)162 528 Q 43.15(xtedit; /*)-.15 F 53(XC_xterm */)2.5 F
(Cursor top_left;)162 540 Q(/* XC_top_left_corner)270 540 Q(*/)378 540 Q
(Cursor top_right;)162 552 Q(/* XC_top_right_corner)270 552 Q(*/)378 552 Q
(Cursor bottom_left;)162 564 Q(/* XC_bottom_left_corner */)270 564 Q
(Cursor bottom_right;)162 576 Q(/* XC_bottom_right_corner */)270 576 Q
(Cursor up_do)162 588 Q 36.03(wn; /*)-.25 F(XC_sb_v_double_arro)2.5 E 2.5(w*)
-.25 G(/)385.85 588 Q(Cursor left_right;)162 600 Q(/* XC_sb_h_double_arro)270
600 Q 2.5(w*)-.25 G(/)385.85 600 Q(Cursor sb_up;)162 612 Q(/* XC_sb_left_arro)
270 612 Q 23.54(w*)-.25 G(/)383 612 Q(Cursor sb_left;)162 624 Q
(/* XC_sb_up_arro)270 624 Q 26.87(w*)-.25 G(/)383 624 Q 2.5(}T)162 638 S
(kCursors;)175.41 638 Q -1.1(Yo)90 674 S 2.5(uc)1.1 G(an use them for your app\
lications by addressing them directly in the structure.)113.06 674 Q F2 2.5
(1.3.5 F)90 710 R(onts)-.25 E EP
%%Page: 7 7
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-7-)296.004 48 S/F1 10/Times-Roman@0 SF
(The last resource allocated by the toolkit, fonts, are loaded)90 84 Q(for te)5
E(xt display in the widgets.)-.15 E -1.1(Yo)90 96 S 2.5(uc)1.1 G
(an \214nd them in the TkF)113.06 96 Q(onts structure :)-.15 E
(typedef struct {)90 120 Q(XF)162 132 Q 2.5(ontStruct *e)-.15 F -.05(ga)-.15 G
68.24(;/).05 G 2.5(*e)308.78 132 S .1 -.05(ga f)320.57 132 T
(ont, on PC only */).05 E(XF)162 144 Q 2.5(ontStruct *vg)-.15 F 65.03(a; /*)
-.05 F(vg)2.5 E 2.5(af)-.05 G(ont, on PC only */)336.5 144 Q(XF)162 156 Q 2.5
(ontStruct *f8_13;)-.15 F(/* 8x13 */)306 156 Q(XF)162 168 Q 2.5
(ontStruct *f6_10;)-.15 F(/* 6x10 */)306 168 Q(XF)162 180 Q 2.5
(ontStruct *\214x)-.15 F 59.57(ed; /*)-.15 F<8c78>2.5 E(ed */)-.15 E(XF)162 192
Q(ontStruct *helv)-.15 E 35.97(etica12; /*)-.15 F(helv)2.5 E(etica-bold-r)-.15
E(--12 */)-.2 E(XF)162 204 Q 2.5(ontStruct *times12;)-.15 F(/* times-bold-r)306
204 Q(--12 */)-.2 E(XF)162 216 Q 2.5(ontStruct *f5_7;)-.15 F(/* 5x7 */)306 216
Q(unsigned int \215ag;)162 228 Q(/* \215ags */)306 228 Q 2.5(}T)162 242 S(kF)
175.41 242 Q(onts;)-.15 E/F2 12/Times-Bold@0 SF 3(1.4 Simultaneous)90 290 R
(opening of se)3 E -.12(ve)-.18 G(ral sessions).12 E F1 2.102
(There is no particular procedure to simultaneously open se)90 332 R -.15(ve)
-.25 G 2.103(ral connections to dif).15 F 2.103(ferent serv)-.25 F 2.103
(ers. This)-.15 F(paragraph just gi)90 344 Q -.15(ve)-.25 G 2.5(sy).15 G
(ou an e)177.64 344 Q(xample and some advice:)-.15 E/F3 8/Courier@0 SF
(Exemple :)90 392 Q(TkDisplay *server1, *server2, *server3;)90 412 Q
(void main\(argc,argv\))90 432 Q(int argc;)90 442 Q(char **argv;)90 452 Q({)90
462 Q(server1=tk_OpenSession\("unix:0.0",argc,argv\);)99.6 472 Q
(server2=tk_OpenSession\("market:0.0",argc,argv\);)99.6 482 Q
(server3=tk_OpenSession\("financial:0.0",argc,argv\);)99.6 492 Q
(if\(server1==NULL || server2==NULL || server3==NULL\))99.6 512 Q({)99.6 522 Q
(fprintf\(stderr,"Error: one of the server cannot be reached\\n"\);)109.2 532 Q
(exit\(-1\);)109.2 542 Q(})99.6 552 Q(........)90 562 Q(})90 572 Q F1 -1.1(Yo)
90 612 S 2.5(us)1.1 G(ee that this is quite a simple procedure. Ho)112.51 612 Q
(we)-.25 E -.15(ve)-.25 G .8 -.4(r, t).15 H(ry to a).4 E -.2(vo)-.2 G
(id the follo).2 E(wing pitf)-.25 E(alls:)-.1 E 3.226(*u)126 636 S .725
(sing the resources allocated by the toolkit on another serv)139.226 636 R .725
(er than the one who created it. This)-.15 F -.1(wo)126 648 S .21
(uld lead to the end of your application and maybe to the f).1 F .21(all of se)
-.1 F -.15(ve)-.25 G .21(ral of the serv).15 F .21(ers contacted.)-.15 F 2.65
(*f)126 672 S(or)136.98 672 Q .15(getting to close the session on a serv)-.18 F
.15(er with the tk_CloseSession function. Some serv)-.15 F .15(ers don')-.15 F
(t)-.18 E 1.064(automatically disallocate the resources used by their clients.\
 This will cause memory losses and)126 684 R(ultimately the end of the X serv)
126 696 Q(er)-.15 E(.)-.55 E EP
%%Page: 8 8
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-8-)296.004 48 S/F1 12/Times-Bold@0 SF 3(1.5 Closing)
90 86 R 3(as)3 G(ession)166.344 86 Q/F2 10/Times-Roman@0 SF .534
(The toolkit pro)90 128 R .533(vides you with one and only one function to dis\
allocate the resources he creates in a serv)-.15 F(er)-.15 E
(and to close the connection with it :)90 140 Q/F3 8/Courier@0 SF
(int tk_CloseSession\(tk_display\))90 176 Q(TkDisplay *tk_display;)90 186 Q F2
.619(The function returns 0 if e)90 216 R -.15(ve)-.25 G .619
(rything went well, otherwise it returns a ne).15 F -.05(ga)-.15 G(ti).05 E .92
-.15(ve v)-.25 H 3.12(alue. It)-.1 F(doesn')3.12 E 3.12(tp)-.18 G .62(ut in an)
485.91 216 R(y)-.15 E -.1(wa)90 228 S 2.5(ya).1 G 2.5(ne)113.5 228 S
(nd to your application. Y)125.44 228 Q
(ou are free to reconnect yourself to the same serv)-1.1 E
(er or to another later)-.15 E(.)-.55 E F1
(1.6 Using TkDisplay with the Xlib functions)90 276 Q F2 .584
(Xlib functions and Iman')90 318 R 3.084(sd)-.55 G(on')203.996 318 Q 3.084(tu)
-.18 G .584(se the same ar)228.01 318 R .583
(guments. In general, all the Xlib functions need a Display)-.18 F
(type of structure as \214rst ar)90 330 Q(gument .)-.18 E .524(The TkDisplay s\
tructure contains itself a pointer on an element of Display type. T)90 354 R
3.024(op)-.8 G .524(ass it as an ar)436.764 354 R(gument)-.18 E
(to an Xlib function, all you need to do is address it as follo)90 366 Q(ws:)
-.25 E F3(XMapWindow\(tk_display->display,win\);)92 402 Q F2 -1.1(Yo)90 432 S
2.5(uc)1.1 G(an also use one of the toolkit')113.06 432 Q 2.5(sm)-.55 G(acros,)
245 432 Q/F4 10/Times-Italic@0 SF(mGetDisplay)2.5 E F2(:)A F3
(Display *mGetDisplay\(tk_display\))90 468 Q(TkDisplay *tk_display;)90 478 Q F2
2.5(As)90 508 S(econd macro enables you to kno)103.61 508 Q 2.5(wt)-.25 G
(he def)245 508 Q(ault width of widgets created:)-.1 E F3
(int mGetDefaultDepth\(tk_display\))90 544 Q(TkDisplay *tk_display;)90 554 Q F2
-1.1(Yo)90 584 S 2.5(uc)1.1 G(an use this macro when creating your windo)113.06
584 Q(ws.)-.25 E F1 3(1.7 Using)90 632 R(the macr)3 E(os)-.216 E F2(Iman')90
674 Q 2.591(sA)-.55 G .091(PI also has at its disposition a set of macros func\
tions whose sole purpose is to e)127.031 674 R .09(xtract information)-.15 F
(internal to the toolkit.)90 686 Q EP
%%Page: 9 9
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-9-)296.004 48 S/F1 10/Times-Bold@0 SF 2.5(1.7.1 T)90
84 R(oolkit)-.92 E/F2 10/Times-Roman@0 SF -1.1(Yo)90 120 S 2.5(uc)1.1 G
(an use 4 macros to get information on the origin and the v)113.06 120 Q
(ersion of the toolkit:)-.15 E/F3 8/Courier@0 SF
(char *mGetVendorString\(tk_display\))90 144 Q(TkDisplay *tk_display;)90 154 Q
F2(This function returns a chain of caracters containing the name of the selle\
r of the toolkit.)90 174 Q F3(int mGetTkVersion\(tk_display\))90 198 Q
(TkDisplay *tk_display;)90 208 Q(int mGetTkRelease\(tk_display\))90 228 Q
(TkDisplay *tk_display;)90 238 Q F2(Those tw)90 260 Q 2.5(of)-.1 G
(unctions return the toolkit')137.67 260 Q 2.5(sv)-.55 G
(ersion and its update number)255.3 260 Q(.)-.55 E F3
(char *mGetTkComment\(tk_display\))90 284 Q(TkDisplay *tk_display;)90 294 Q F2
.337(This function returns a chain of caracters which the v)90 314 R .337
(endor might w)-.15 F .337(ant to pro)-.1 F .338
(vide along with the toolkit. It)-.15 F(is usually a Cop)90 326 Q(yright line.)
-.1 E F1 2.5(1.7.2 W)90 362 R(indo)-.18 E 2.5(wm)-.1 G(anager)161.67 362 Q F2
(In the same manner)90 398 Q 2.5(,t)-.4 G(hree functions are a)175.97 398 Q
-.25(va)-.2 G(ilable to you if you wish to get information on WM Iman.).25 E F3
(int mGetWmVersion\(tk_display\))90 434 Q(TkDisplay *tk_display;)90 444 Q
(int mGetWmRelease\(tk_display\))90 464 Q(TkDisplay *tk_display;)90 474 Q
(char *mGetWmComment\(tk_display\))90 494 Q(TkDisplay *tk_display;)90 504 Q F2
-1 -.8(Tw o)90 534 T .939(additional functions permit to kno)4.239 F 3.438(wt)
-.25 G .938(he ID of WM')263.922 534 R 3.438(sm)-.55 G .938(ain windo)338.774
534 R 3.438(wa)-.25 G .938(nd to ascertain whether WM is)394.28 534 R
(loaded in the memory)90 546 Q(.)-.65 E F3
(Window mGetWmMainWindow\(tk_display\))90 570 Q(TkDisplay *tk_display;)90 580 Q
(Bool mIsWmActive\(tk_display\))90 600 Q(TkDisplay *tk_display;)90 610 Q EP
%%Page: 10 10
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-1)293.004 48 S 3(0-)306 48 S/F1 30/Times-Bold@0 SF
(2)507 107 Q(Cr)257.85 142 Q(eation of windo)-.54 E(ws)-.3 E/F2 10
/Times-Roman@0 SF
(This chapter is about the creation, display and destruction of windo)90 212 Q
(ws.)-.25 E 1.442(The functions presented al)90 224 R -.1(wa)-.1 G 1.442
(ys apply).1 F 3.942(,n)-.65 G 3.942(om)257.44 224 S 1.442(atter what windo)
274.162 224 R 3.942(wm)-.25 G 1.442(anager is acti)362.948 224 R -.15(ve)-.25 G
3.942(.T).15 G 1.442(he IMAN WM will)440.184 224 R(kno)90 236 Q 2.5(wh)-.25 G
.5 -.25(ow t)119.47 236 T 2.5(oh).25 G
(andle the additional information the toolkit installs in the windo)149.22 236
Q(ws' properties.)-.25 E/F3 12/Times-Bold@0 SF 3(2.1 Classes)90 296 R(of windo)
3 E(ws)-.12 E F2(Iman')90 338 Q 2.5(st)-.55 G
(oolkit proposes three classes of windo)122.5 338 Q(ws:)-.25 E 2.5(#d)126 362 S
(e\214ne T)138.5 362 Q(OP_LEVEL_WINDO)-.18 E 5.67(W0)-.35 G 2.5(#d)126 374 S
(e\214ne DIALOG_BO)138.5 374 Q 45.53(X1)-.4 G(00)275 374 Q 2.5(#d)126 386 S
(e\214ne ICON_WINDO)138.5 386 Q 36.6(W1)-.35 G(01)275 386 Q
(These classes de\214ne the w)90 422 Q(ay your windo)-.1 E(ws beha)-.25 E .3
-.15(ve w)-.2 H(hen the IMAN WM is loaded.).15 E(The other windo)90 434 Q 2.5
(wm)-.25 G(anagers may not tak)173.35 434 Q 2.5(et)-.1 G
(hese classes into account and manage windo)263.23 434 Q(ws as the)-.25 E 2.5
(yl)-.15 G(ik)487.51 434 Q(e.)-.1 E/F4 10/Times-Bold@0 SF -.18(TO)90 458 S
(P_LEVEL_WINDO).18 E(W)-.5 E F2(It is the windo)90 482 Q 2.5(wi)-.25 G 2.5(ng)
159.75 482 S(eneral, the w)172.25 482 Q(ay you should \214nd it under an)-.1 E
2.5(yW)-.15 G(M.)359.75 482 Q .681(It can be iconi\214ed, redimensioned, zoome\
d, it can lead or be a member of a group, etc. It is subject to no)90 494 R
(restriction.)90 506 Q F4(DIALOG_BO)90 542 Q(X)-.4 E F2
(It is a special kind of windo)90 566 Q 1.3 -.65(w. I)-.25 H
(ts caracteristics are :).65 E 2.575(*i)126 590 S .075(ts size is \214x)136.355
590 R .075(ed and it can')-.15 F 2.575(tb)-.18 G 2.575(er)247.93 590 S .075
(edimensioned \(or zoomed, therefore\) by the user)258.275 590 R 5.075(.H)-.55
G -.25(ow)467.64 590 S -2.15 -.25(ev e).25 H .875 -.4(r, i).25 H 2.575(ft).4 G
(he)512.56 590 Q(program asks for a windo)126 602 Q 2.5(wt)-.25 G 2.5(ob)240.45
602 S 2.5(er)252.95 602 S(edimensioned, the command will be e)263.22 602 Q -.15
(xe)-.15 G(cuted.).15 E 2.5(*i)126 626 S 2.5(tc)136.28 626 S(an')146 626 Q 2.5
(tb)-.18 G 2.5(ei)168.87 626 S(coni\214ed.)178.59 626 Q 3.443(*i)126 650 S
3.443(tc)137.223 650 S .943(an block the acti)147.886 650 R .943
(vity of a mother windo)-.25 F 3.443(wi)-.25 G 3.443(fi)324.91 650 S .942
(ts WM_TRANSIENT_FOR property contains)334.463 650 R 1.32(the ID of that windo)
126 662 R 2.62 -.65(w. T)-.25 H 1.32(his mother windo).65 F 3.82(ww)-.25 G 1.32
(ill only be allo)321.78 662 R 1.32(wed to return to normal once the)-.25 F
(dialog box is remo)126 674 Q -.15(ve)-.15 G 2.5(df).15 G(rom the screen.)
220.69 674 Q 2.5(*i)126 698 S 2.5(tc)136.28 698 S
(an lead or be a member of a group.)146 698 Q EP
%%Page: 11 11
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-1)293.004 48 S 3(1-)306 48 S/F1 10/Times-Bold@0 SF
(ICON_WINDO)90 84 Q(W)-.5 E/F2 10/Times-Roman@0 SF .008(This class w)90 108 R
.008(as de\214ned to pre)-.1 F -.15(ve)-.25 G .008
(nt the WM from reparenting as a true top-le).15 F -.15(ve)-.25 G 2.508(lw).15
G(indo)410.812 108 Q 2.507(wt)-.25 G .007(he windo)440.849 108 R 2.507(wm)-.25
G .007(eant to)495.053 108 R(serv)90 120 Q 2.5(ea)-.15 G 2.5(si)117.89 120 S
(con for another windo)127.06 120 Q -.65(w.)-.25 G(ICON_WINDO)90 132 Q 2.5(Ww)
-.35 G(ill remain unused until the leading windo)172.68 132 Q 2.5(wa)-.25 G
(sks for its iconi\214cation.)351.03 132 Q(Other classes of windo)90 156 Q
(ws should appear in the ne)-.25 E(xt v)-.15 E(ersion of the toolkit.)-.15 E
.51(By def)90 168 R .51(ault, if the _IMAN_WM_TYPE property doesn')-.1 F 3.01
(tc)-.18 G .51(ontain information re)323.81 168 R -.05(ga)-.15 G .51
(rding the windo).05 F(w')-.25 E 3.01(sc)-.55 G(lass,)504.5 168 Q
(the class will be T)90 180 Q(OP_LEVEL_WINDO)-.18 E -.92(W.)-.35 G/F3 12
/Times-Bold@0 SF 3(2.2 Attrib)90 228 R(utes of windo)-.24 E(ws)-.12 E F2 -1.1
(Yo)90 270 S 4.47(uc)1.1 G 1.97(an use a combination of the follo)115.03 270 R
1.97(wing attrib)-.25 F 1.97(utes to f)-.2 F 1.97
(acilitate the management and decoration of)-.1 F(windo)90 282 Q(ws:)-.25 E 2.5
(#d)90 306 S(e\214ne T)102.5 306 Q 74.08(itleBar 1)-.35 F(/* T)270 306 Q
(itle bar */)-.35 E 2.5(#d)90 318 S(e\214ne CloseBox)102.5 318 Q 31(2/)234 318
S 2.5(*B)272.78 318 S(utton to close the windo)286.95 318 Q 2.5(w*)-.25 G(/)
397.53 318 Q 2.5(#d)90 330 S(e\214ne IconifyBox)102.5 330 Q 31(4/)234 330 S 2.5
(*B)272.78 330 S(utton to iconify the windo)286.95 330 Q 2.5(w*)-.25 G(/)405.31
330 Q 2.5(#d)90 342 S(e\214ne ZoomBox)102.5 342 Q 31(8/)234 342 S 2.5(*B)272.78
342 S(utton to zoom the windo)286.95 342 Q 5(w*)-.25 G(/)401.7 342 Q 2.5(#d)90
354 S(e\214ne Border)102.5 354 Q 23.5(16 /*)234 354 R(Resizing border */)2.5 E
2.5(#d)90 366 S(e\214ne GroupLeader)102.5 366 Q(128)234 366 Q 2.5(#d)90 378 S
(e\214ne GroupMember)102.5 378 Q(256)234 378 Q 2.5(#d)90 390 S(e\214ne Ov)102.5
390 Q 60.56(erlapped 512)-.15 F(/* The members of the group al)270 390 Q -.1
(wa)-.1 G(ys o).1 E -.15(ve)-.15 G(rlap it */).15 E 2.5(#d)90 402 S(e\214ne Al)
102.5 402 Q -.1(wa)-.1 G(ysOnT).1 E 49.18(op 1024)-.8 F(/* The windo)270 402 Q
2.5(wa)-.25 G -.1(lwa)337.24 402 S(ys o).1 E -.15(ve)-.15 G
(rlaps its leader */).15 E 2.5(#d)90 414 S(e\214ne Unmo)102.5 414 Q -.15(ve)
-.15 G 56.26(able 2048).15 F 2.5(#d)90 426 S(e\214ne Unresizable)102.5 426 Q
(4096)234 426 Q 2.5(#d)90 438 S(e\214ne Mo)102.5 438 Q -.15(ve)-.15 G 10.16
(ableWhenZoomed 8192).15 F 2.5(#d)90 450 S(e\214ne Iconic)102.5 450 Q 8.5
(16384 /*)234 450 R(The windo)2.5 E 2.5(wi)-.25 G 2.5(sa)335.58 450 S -.1(lwa)
346.41 450 S(ys iconi\214ed */).1 E(These attrib)90 474 Q(utes are e)-.2 E
(xamined only by the IMAN WM. The)-.15 E 2.5(yw)-.15 G
(ill go unnoticed by other windo)341.95 474 Q 2.5(wm)-.25 G(anagers.)485.03 474
Q F1 -.18(Ti)90 510 S(tleBar).18 E F2(This attrib)90 534 Q
(ute enables the windo)-.2 E 2.5(wt)-.25 G 2.5(oh)230.37 534 S -2.25 -.2(av e)
242.87 534 T 2.5(at)2.7 G(itle bar to display the program')268.62 534 Q 2.5(sn)
-.55 G(ame.)403.61 534 Q F1(CloseBox)90 570 Q F2 1.285(This attrib)90 594 R
1.285(ute gi)-.2 F -.15(ve)-.25 G 3.785(st).15 G 1.286(he title bar a b)175.755
594 R 1.286(utton which, when click)-.2 F 1.286(ed on by the user)-.1 F 3.786
(,a)-.4 G 1.286(sks the windo)421.556 594 R 3.786(wt)-.25 G 3.786(oc)492.664
594 S(lose)505.89 594 Q(itself.)90 606 Q -.15(Fo)90 618 S 5.067(rt).15 G 2.567
(his to happen, the windo)111.587 618 R 5.067(wm)-.25 G 2.567
(ust be in accordance with the WM_DELETE_WINDO)239.722 618 R 5.066(Wp)-.35 G
(rotocol)493.67 618 Q(inscribed in the windo)90 630 Q(w')-.25 E 2.5(sW)-.55 G
(M_PR)204.74 630 Q -1.88 -.4(OT O)-.4 H(COLS property).4 E(.)-.65 E F1
(IconifyBox)90 666 Q F2(This attrib)90 690 Q(ute gi)-.2 E -.15(ve)-.25 G 2.5
(st).15 G(he title bar a b)171.9 690 Q
(utton responsible for the iconi\214cation of the windo)-.2 E 2.5(wo)-.25 G 2.5
(ro)446.42 690 S 2.5(fi)457.25 690 S(ts group.)465.86 690 Q EP
%%Page: 12 12
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-1)293.004 48 S 3(2-)306 48 S/F1 10/Times-Bold@0 SF
(Zoom box)90 84 Q/F2 10/Times-Roman@0 SF(This attrib)90 108 Q(ute gi)-.2 E -.15
(ve)-.25 G 2.5(st).15 G(he title bar a b)171.9 108 Q(utton causing the windo)
-.2 E 2.5(wt)-.25 G 2.5(oz)336.99 108 S(oom.)348.93 108 Q F1(Border)90 144 Q F2
.045(This attrib)90 168 R .045(ute gi)-.2 F -.15(ve)-.25 G 2.545(st).15 G .045
(he windo)172.035 168 R 2.546(wad)-.25 G .046(ecoration border)230.522 168 R
2.546(.I)-.55 G 2.546(ft)304.204 168 S .046(he windo)312.86 168 R 2.546(wb)-.25
G .046(elongs to the T)364.362 168 R(OP_LEVEL_WINDO)-.18 E(W)-.35 E .296(class\
, this border will possess zones enabling the user to redimension the windo)90
180 R 1.596 -.65(w. I)-.25 H 2.796(fi).65 G(t')435.988 180 Q 2.796(saD)-.55 G
(IALOG_BO)462.69 180 Q(X,)-.4 E(the border will be plain and unchangeable.)90
192 Q F1(Gr)90 228 Q(oupLeader)-.18 E F2(This attrib)90 252 Q
(ute informs the WM that the windo)-.2 E 2.5(ww)-.25 G(ill be a group leader)
288.98 252 Q(.)-.55 E F1(Gr)90 288 Q(oupMember)-.18 E F2 .226(This attrib)90
312 R .227(ute informs the WM that the windo)-.2 F 2.727(wi)-.25 G 2.727(sam)
286.354 312 S .227(ember of a group. The parameter WM_HINTS.group)307.918 312 R
(must contain the leader')90 324 Q 2.5(sw)-.55 G(indo)199.43 324 Q(w')-.25 E
2.5(sI)-.55 G(D.)236.68 324 Q F1(Ov)90 360 Q(erlapped)-.1 E F2 1.73
(This attrib)90 384 R 1.73(ute informs the WM that the windo)-.2 F 4.23(ww)-.25
G 1.729(ishes to be co)302.82 384 R -.15(ve)-.15 G 1.729
(red by the members of the group it).15 F(manages. If the windo)90 396 Q 2.5
(wd)-.25 G(oesn')193.34 396 Q 2.5(th)-.18 G -2.25 -.2(av e)225.1 396 T
(the GroupLeader attrib)2.7 E(ute, Ov)-.2 E(erlapped is not used.)-.15 E F1
(AlwaysOnT)90 432 Q(op)-.92 E F2 .015(This attrib)90 456 R .015
(ute informs the WM that the windo)-.2 F 2.515(ww)-.25 G .015(ants to al)289
456 R -.1(wa)-.1 G .015(ys co).1 F -.15(ve)-.15 G 2.515(ri).15 G .015
(ts group leader)375.21 456 R 5.016(.I)-.55 G 2.516(ft)444.966 456 S .016
(he windo)453.592 456 R 2.516(wi)-.25 G 2.516(sn)502.814 456 S(ot)514.22 456 Q
2.5(am)90 468 S(ember of a group or if it is a leader)104.72 468 Q 2.5(,t)-.4 G
(his attrib)251.23 468 Q(ute is not used.)-.2 E F1(Unmo)90 504 Q -.1(ve)-.1 G
(able).1 E F2 .781(This attrib)90 528 R .781
(ute informs the WM that the user must not be able to mo)-.2 F 1.08 -.15(ve t)
-.15 H .78(he windo).15 F 3.28(ww)-.25 G .78(hen it is in a normal)438.38 528 R
(state.)90 540 Q F1(Mo)90 576 Q -.1(ve)-.1 G(ableWhen Zoomed).1 E F2 .104
(This attrib)90 600 R .104(ute informs the WM that the windo)-.2 F 2.604(wc)
-.25 G .104(an be mo)287.032 600 R -.15(ve)-.15 G 2.604(dw).15 G .104
(hen zoomed. By def)347.864 600 R .105(ault, a zoomed windo)-.1 F(w)-.25 E
(is not mo)90 612 Q -.15(ve)-.15 G(able.).15 E F1(Unr)90 648 Q(esizable)-.18 E
F2 .891(This attrib)90 672 R .891(ute informs the WM that the windo)-.2 F 3.391
(wd)-.25 G .89(oes not wish the user to be able to redimension it. This)293.888
672 R(attrib)90 684 Q .43(ute is v)-.2 F .43(alid only when the windo)-.25 F
2.93(wi)-.25 G 2.931(si)256.47 684 S 2.931(nt)266.071 684 S .431
(he "NormalState" mode"; in the "ZoomState" mode, the size)276.782 684 R
(of the windo)90 696 Q 2.5(wi)-.25 G 2.5(sa)152.8 696 S -.1(lwa)163.63 696 S
(ys \214x).1 E(ed.)-.15 E EP
%%Page: 13 13
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-1)293.004 48 S 3(3-)306 48 S/F1 10/Times-Bold@0 SF
(Iconic)90 84 Q/F2 10/Times-Roman@0 SF .184(This attrib)90 108 R .184
(ute informs the WM that the windo)-.2 F 2.684(ww)-.25 G .184(ill al)290.452
108 R -.1(wa)-.1 G .184(ys remain an icon, whate).1 F -.15(ve)-.25 G 2.683(rt)
.15 G .183(he action undertak)438.424 108 R(en)-.1 E
(by the user or the particulars of the X serv)90 120 Q(er)-.15 E(.)-.55 E 1.506
(If the _IMAN_WM_TYPE property doesn')90 156 R 4.006(tc)-.18 G 1.506
(ontain information concerning the windo)281.48 156 R(w')-.25 E 4.007(sa)-.55 G
(ttrib)473.463 156 Q 1.507(utes, its)-.2 F(def)90 168 Q(ault attrib)-.1 E
(utes will be:)-.2 E(attrib)126 192 Q(utes=T)-.2 E
(itleBar+ZoomBox+IconifyBox+CloseBox+Border)-.35 E/F3 12/Times-Bold@0 SF 3
(2.3 Cr)90 240 R(eating a windo)-.216 E(w)-.12 E F2(Creation of a windo)90 282
Q 1.3 -.65(w, w)-.25 H(hate).65 E -.15(ve)-.25 G 2.5(ri).15 G
(ts parent, is done through the follo)222.56 282 Q(wing function:)-.25 E/F4 8
/Courier@0 SF(Window)90 306 Q(win_Create\(tk_display,parent,top_level,class,at\
tributes,x,y,width,height,depth,type,visual,mask,)90 316 Q
(params,initialstate\))90 326 Q(TkDisplay *tk_display;)90 336 Q
(Window parent, top_level;)90 346 Q(long class, attributes,initialstate;)90 356
Q(int x, y;)90 366 Q(unsigned int width, height, depth,type;)90 376 Q
(Visual *visual;)90 386 Q(unsigned long mask;)90 396 Q
(XSetWindowAttributes *params;)90 406 Q F1(tk_display)90 436 Q F2 2.5(:p)C
(ointer on the structure returned by tk_OpenSession)144.74 436 Q F1(par)90 448
Q(ent)-.18 E F2 2.5(:p)C(arent windo)128.43 448 Q 2.5(wi)-.25 G 2.5(nw)188.17
448 S(hich the ne)202.89 448 Q 2.5(ww)-.25 G(indo)263.46 448 Q 2.5(ww)-.25 G
(ill be located)297.93 448 Q F1(top-le)90 460 Q -.1(ve)-.15 G(l).1 E F2 3.197
(:t)C .697(op le)135.167 460 R -.15(ve)-.25 G 3.197(lw).15 G(indo)177.821 460 Q
3.197(wc)-.25 G .697(ontaining "parent" and the windo)210.208 460 R 3.196(wb)
-.25 G .696(eing created. If top-le)360.752 460 R -.15(ve)-.25 G 3.196(li).15 G
3.196(ss)466.716 460 S .696(et to 0, the)477.692 460 R .506
(function will infer that the windo)90 472 R 3.006(wb)-.25 G .506
(eing created is also the top le)239.994 472 R -.15(ve)-.25 G 3.006(lw).15 G
(indo)381.166 472 Q 1.806 -.65(w. O)-.25 H .506(therwise the function will).65
F 1.513(inscribe the past windo)90 484 R 4.012(wi)-.25 G 1.512
(denti\214cator in its WM_T)200.79 484 R 1.512(OP_LEVEL property)-.18 F 4.012
(.T)-.65 G 1.512(his property is useful if you)404.17 484 R
(intend to drag and drop.)90 496 Q F1(class)90 508 Q F2 2.5(:w)C(indo)122.5 508
Q(w')-.25 E 2.5(sc)-.55 G(lass)160.86 508 Q F1(attrib)90 520 Q(utes)-.2 E F2
2.5(:w)C(indo)143.96 520 Q(w')-.25 E 2.5(sa)-.55 G(ttrib)182.32 520 Q(utes)-.2
E F1(x,y)90 532 Q(,width,height)-.55 E F2 2.5(:w)C(indo)170.57 532 Q(w')-.25 E
2.5(sp)-.55 G(osition and initial size)209.49 532 Q F1(depth)90 544 Q F2 2.5
(:w)C(indo)126.95 544 Q(w')-.25 E 2.5(sd)-.55 G(epth)165.87 544 Q F1(type)90
556 Q F2 2.5(:I)C(nputOnly or InputOutput \(see Xlib')116.94 556 Q 2.5(sp)-.55
G(rogrammer')269.99 556 Q 2.5(sm)-.55 G(anual\))331.37 556 Q F1(visual)90 568 Q
F2 2.5(:p)C(ointer on a V)125.29 568 Q(isual type of structure)-.6 E F1(mask)90
580 Q F2 2.5(:m)C(ask of parameters chosen in params)125.84 580 Q F1(params)90
592 Q F2 2.5(:p)C(ointer on a structure containing the windo)132.5 592 Q(w')
-.25 E 2.5(sX)-.55 G(lib parameters)323.06 592 Q F1(initialstate)90 604 Q F2
2.5(:i)C(nitial state of the windo)143.06 604 Q 2.5(w\()-.25 G
(IconicState, NormalState,ZoomState\))250.3 604 Q .061(This function is a sur)
90 628 R .061(-set of Xlib')-.2 F 2.561(sX)-.55 G(CreateW)236.607 628 Q(indo)
-.4 E 2.561(wf)-.25 G .061
(unction. It parameters the standard data and adds those)302.388 628 R
(necessitated by the IMAN WM.)90 640 Q
(If creation went well, the function returns the windo)90 652 Q(w')-.25 E 2.5
(si)-.55 G(denti\214cator)317.49 652 Q 2.5(,o)-.4 G(therwise it returns NULL.)
372.64 652 Q F3 3(2.4 Mapping)90 700 R(the windo)3 E 3(wc)-.12 G -.216(re)
227.892 700 S(ated).216 E EP
%%Page: 14 14
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-1)293.004 50 S 3(4-)306 50 S/F1 10/Times-Roman@0 SF
(The mapping or deletion of a windo)90 84 Q 2.5(wa)-.25 G
(re done through the three follo)247.78 84 Q(wing functions.)-.25 E/F2 8
/Courier@0 SF(int win_Map\(tk_display,window\))90 108 Q(TkDisplay *tk_display;)
90 118 Q(Window window;)90 128 Q(int win_MapRaised\(tk_display,window\))90 148
Q(TkDisplay *tk_display;)90 158 Q(Window window;)90 168 Q
(int win_Unmap\(tk_display,window\))90 188 Q(TkDisplay *tk_display;)90 198 Q
(Window window;)90 210 Q F1(The)90 240 Q 2.5(yr)-.15 G(eturn a ne)116.23 240 Q
-.05(ga)-.15 G(ti).05 E .3 -.15(ve v)-.25 H
(alue if an error took place, otherwise the)-.1 E 2.5(yr)-.15 G(eturn 0.)359.05
240 Q/F3 12/Times-Bold@0 SF 3(2.5 Destruction)90 288 R(of a windo)3 E(w)-.12 E
F1 -1.1(Yo)90 330 S 3.174(um)1.1 G .674(ust ne)117.074 330 R -.15(ve)-.25 G
3.174(rf).15 G(or)160.232 330 Q .674(get to destro)-.18 F 3.174(yt)-.1 G .674
(he windo)230.024 330 R .674(ws you ha)-.25 F .974 -.15(ve n)-.2 H 3.173(ou).15
G .673(se for an)339.723 330 R .673(ymore. The)-.15 F 3.173(yt)-.15 G(ak)
432.925 330 Q 3.173(eu)-.1 G 3.173(ps)454.878 330 S .673(pace in the X)466.941
330 R(serv)90 342 Q(er)-.15 E(.)-.55 E(The follo)90 354 Q
(wing function will tak)-.25 E 2.5(ec)-.1 G(are of deleting your windo)226.58
354 Q(w:)-.25 E F2(Window win_Destroy\(tk_display,window\))90 378 Q
(TkDisplay *tk_display;)90 388 Q(Window window;)90 398 Q F1 .45(Do not for)90
428 R .45(get ho)-.18 F(we)-.25 E -.15(ve)-.25 G 2.95(rt).15 G 2.95<6f8c>187.06
428 S .45(rst destro)200.57 428 R 2.95(yt)-.1 G .45(he daughter windo)248.59
428 R .45(ws and the widgets contained in the windo)-.25 F 2.95(wy)-.25 G(ou)
512 428 Q(wish to destro)90 440 Q -.65(y.)-.1 G EP
%%Page: 15 15
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-1)293.004 48 S 3(5-)306 48 S/F1 30/Times-Bold@0 SF
(3)507 107 Q -.54(Wi)91.32 142 S(ndo).54 E 7.5(wg)-.3 G -.54(ro)221.34 142 S
(ups and r).54 E(elationships)-.54 E/F2 10/Times-Roman@0 SF -.4(Wi)90 317 S
(ndo).4 E(ws can use group relationships and beha)-.25 E
(viors when certains parameters are present.)-.2 E/F3 12/Times-Bold@0 SF 3
(3.1 Notion)90 365 R(of gr)3 E(oup)-.216 E F2 3.393(Xi)90 407 S .894(mplements\
 the idea of group through the group parameter found in the WM_HINTS property \
of each)103.393 407 R(windo)90 419 Q -.65(w.)-.25 G 3.364(Aw)90 431 S(indo)
107.804 431 Q 3.364(w\()-.25 G .864(or a dialog box\) can be leader of a group\
, member of a group or both at the same time. This)139.248 431 R
(relation permits to b)90 443 Q(uild sub-groups and to manage a set of windo)
-.2 E(ws more easily)-.25 E(.)-.65 E(All the windo)90 467 Q
(ws in a group meet the follo)-.25 E(wing conditions:)-.25 E 2.5(*t)126 491 S
(heir "group" parameter contains the leader')136.28 491 Q 2.5(sw)-.55 G(indo)
322.17 491 Q(w')-.25 E 2.5(sI)-.55 G(D.)359.42 491 Q .052
(The leader has its parameter either set at 0, or containing its o)126 503 R
.052(wn identi\214cator)-.25 F 2.552(,o)-.4 G 2.552(rc)445.464 503 S .052
(ontaining that of)455.786 503 R(its o)126 515 Q
(wn leader in case it is itself a member of another group.)-.25 E 3.733(*t)126
539 S 1.232(he iconi\214cation of the leader or of a member of the group cause\
s the iconi\214cation of all the)137.513 539 R(members, and vice-v)126 551 Q
(ersa. The group')-.15 E 2.5(si)-.55 G(con is that of the leader)283.87 551 Q
(.)-.55 E 2.5(*w)126 575 S(hen the leader is destro)140.72 575 Q
(yed, group links disappear)-.1 E(.)-.55 E F3 3(3.2 Being)90 623 R 3(ag)3 G
-.216(ro)158.34 623 S(up member).216 E F2 1.6 -.8(To b)90 665 T 2.5(eam).8 G
(ember of a group, you must declare it with the)129.47 665 Q/F4 10
/Times-Italic@0 SF(win_SetGr)2.5 E(oupLeader)-.45 E F2(function:)2.5 E/F5 8
/Courier@0 SF(int win_SetGroupLeader\(tk_display,window,group_leader_ID\))90
701 Q EP
%%Page: 16 16
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-1)293.004 46 S 3(6-)306 46 S/F1 8/Courier@0 SF
(TkDisplay *tk_display;)90 82 Q(Window window;)90 92 Q(Window group_leader_ID;)
90 102 Q/F2 10/Times-Roman@0 SF .278(If you put a windo)90 132 R(w')-.25 E
2.779(si)-.55 G .279(denti\214cator in)184.193 132 R/F3 10/Times-Bold@0 SF(gr)
2.779 E(oup_leader_ID)-.18 E F2 2.779(,t)C .279(hat windo)324.29 132 R 2.779
(ww)-.25 G .279(ill be link)381.258 132 R .279(ed to its group. If you set)-.1
F(the identi\214cator to 0, the windo)90 144 Q 2.5(ww)-.25 G
(ill be free from an)232.24 144 Q 2.5(yg)-.15 G(roup.)316.79 144 Q/F4 12
/Times-Bold@0 SF 3(3.3 In\215uence)90 192 R(of windo)3 E 3(wa)-.12 G(ttrib)
223.224 192 Q(utes on gr)-.24 E(oup stacking)-.216 E F2 .384(When the windo)90
234 R 2.884(wi)-.25 G 2.884(sl)169.502 234 S(ink)179.056 234 Q .384
(ed to a group, its mapping v)-.1 F .384(aries according to its attrib)-.25 F
.383(utes and those of its leader)-.2 F(in the follo)90 246 Q(wing manner:)-.25
E 4.234(*i)126 270 S 4.234(ft)138.014 270 S 1.734(he leader possesses the Ov)
148.358 270 R 1.734(erlapped attrib)-.15 F 1.734(ute, it is al)-.2 F -.1(wa)-.1
G 1.735(ys co).1 F -.15(ve)-.15 G 1.735(red by the members of its).15 F(group.)
126 282 Q 2.5(*i)126 306 S 2.5(ft)136.28 306 S(he member windo)144.89 306 Q 2.5
(wp)-.25 G(ossesses the Al)231.57 306 Q -.1(wa)-.1 G(ysOnT).1 E(op attrib)-.8 E
(ute, it will al)-.2 E -.1(wa)-.1 G(ys co).1 E -.15(ve)-.15 G 2.5(ri).15 G
(ts leader)464.01 306 Q(.)-.55 E 2.794(*i)126 330 S 2.794(fn)136.574 330 S .294
(one of these tw)147.698 330 R 2.794(oa)-.1 G(ttrib)221.534 330 Q .293
(utes are used, the windo)-.2 F 2.793(wh)-.25 G -.2(av)350.309 330 S .293
(ing last recei).2 F -.15(ve)-.25 G 2.793(df).15 G .293(ocus will be placed on)
431.398 330 R(top of the stack.)126 342 Q 2.554(*a)126 366 S 2.554(sA)137.994
366 S -.1(lwa)151.658 366 S(ysOnT).1 E .054(op and Ov)-.8 F .054(erlapped ha)
-.15 F .354 -.15(ve i)-.2 H .054
(n\215uence only with respect to the leader of a group, if the).15 F 1.232
(leader uses Al)126 378 R -.1(wa)-.1 G(ysOnT).1 E 1.232(op or a member uses Ov)
-.8 F 1.231(erlapped, these attrib)-.15 F 1.231(utes will not be tak)-.2 F
1.231(en into)-.1 F(account and the abo)126 390 Q -.15(ve)-.15 G
(-mentioned case will pre).15 E -.25(va)-.25 G(il.).25 E F4 3
(3.4 WM_TRANSIENT_FOR)90 438 R(type of r)3 E(elationships)-.216 E F2 2.892(Xd)
90 480 S .392
(e\214nes a property named WM_TRANSIENT_FOR which permits to establish a)
105.112 480 R .393(blocking link)5.393 F(between)5.393 E(tw)90 492 Q 2.5(ow)-.1
G(indo)114.62 492 Q(ws.)-.25 E .445(When a \(master\) windo)90 504 R 2.945(wp)
-.25 G .445(uts another \(sla)200.39 504 R -.15(ve)-.2 G 2.945(\)w).15 G(indo)
284.965 504 Q(w')-.25 E 2.945(si)-.55 G 2.944(ni)322.11 504 S .444
(ts WM_TRANSIENT_FOR property)332.834 504 R 2.944(,i)-.65 G 2.944(tc)490.176
504 S(auses)500.34 504 Q(the follo)90 516 Q(wing phenomena to happen:)-.25 E
4.106(*t)126 540 S 1.606(he sla)137.886 540 R 1.906 -.15(ve w)-.2 H(indo).15 E
4.106<778c>-.25 G 1.606(nds itself "block)217.374 540 R 1.606
(ed", i.e. its widgets can')-.1 F 4.106(tf)-.18 G 1.607
(unction as long as the master)398.146 540 R(windo)126 552 Q 4.652(wi)-.25 G
4.652(sd)165.402 552 S 2.152(isplayed on the screen, it can')178.944 552 R
4.651(tr)-.18 G(ecei)319.143 552 Q 2.451 -.15(ve f)-.25 H 2.151(ocus an).15 F
2.151(ymore, it can')-.15 F 4.651(tc)-.18 G -.15(ove)456.348 552 S 4.651(rt).15
G 2.151(he master)481.249 552 R(windo)126 564 Q -.65(w.)-.25 G 2.738(*w)126 588
S .238(hen the master windo)140.958 588 R 2.738(wd)-.25 G .239
(isappears from the screen , the sla)242.2 588 R .539 -.15(ve w)-.2 H(indo).15
E 2.739(wr)-.25 G .239(esumes its autonomous)428.742 588 R(acti)126 600 Q(vity)
-.25 E(.)-.65 E 1.148(In a fe)90 624 R 3.647(ww)-.25 G 1.147
(ords, this relationship \(essentially used by dialog box)135.572 624 R 1.147
(es\) forces the user to carry out dif)-.15 F(ferent)-.25 E
(actions in the master windo)90 636 Q 2.5(wb)-.25 G(efore being allo)214.46 636
Q(wed access ag)-.25 E(ain to the sla)-.05 E .3 -.15(ve w)-.2 H(indo).15 E -.65
(w.)-.25 G 1.55(This beha)90 648 R 1.55(vior can v)-.2 F 1.55
(ary from one windo)-.25 F 4.05(wm)-.25 G 1.55(anager to the ne)275.95 648 R
1.55(xt and can e)-.15 F -.15(ve)-.25 G 4.05(nn).15 G 1.55
(ot be used at all. IMAN)419.82 648 R(perfectly tolerates it.)90 660 Q F4 3
(3.5 Establishing)90 708 R 3(aW)3 G(M_TRANSIENT_FOR link)198.36 708 Q EP
%%Page: 17 17
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-1)293.004 50 S 3(7-)306 50 S/F1 10/Times-Roman@0 SF
(The de)90 84 Q -.15(ve)-.25 G
(lopment kit possesses a function to establish this relationship:).15 E/F2 8
/Courier@0 SF(win_SetTransientFor\(tk_display,window,transient_for_ID\))90 120
Q(TkDisplay *tk_display;)90 130 Q(Window window;)90 140 Q
(Window transient_for_ID;)90 150 Q F1 .516
(If you put the identi\214cator of a windo)90 180 R 3.015(wi)-.25 G 3.015(nt)
256.635 180 S .515(ransient_for_ID, the link betwwen the tw)267.43 180 R 3.015
(ow)-.1 G(indo)450.11 180 Q .515(ws will come)-.25 F(into ef)90 192 Q
(fect when windo)-.25 E 2.5(wi)-.25 G 2.5(sd)194.48 192 S
(isplayed on the screen.)205.87 192 Q 1.36(If on the contrary the identi\214ca\
tor is set to 0, the link is deletedand the sla)90 204 R 1.661 -.15(ve w)-.2 H
(indo).15 E 3.861(wi)-.25 G 3.861(sg)456.377 204 S -2.15 -.25(iv e)469.128 204
T 3.861(nb).25 G 1.361(ack its)494.809 204 R(autonomy)90 216 Q(.)-.65 E EP
%%Page: 18 18
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-1)293.004 48 S 3(8-)306 48 S/F1 30/Times-Bold@0 SF
(4)507 107 Q(Con\214gurating a windo)212.25 142 Q(w)-.3 E/F2 10/Times-Roman@0
SF -1.1(Yo)90 317 S 2.5(uc)1.1 G(an act on a windo)113.06 317 Q(w')-.25 E 2.5
(sd)-.55 G(if)204.74 317 Q(ferent parameters, e)-.25 E -.15(ve)-.25 G 2.5(na)
.15 G(fter its creation.)310.71 317 Q(At an)90 329 Q 2.5(ym)-.15 G
(oment you can thus modify its decoration, its display)127.07 329 Q 2.5(,i)-.65
G(ts dimensions or its state.)346.14 329 Q/F3 12/Times-Bold@0 SF 3(4.1 T)90 377
R(itles)-.216 E F2(The title is an essential piece of information that a windo)
90 419 Q 2.5(wm)-.25 G(ust transmit.)335 419 Q -1.1(Yo)90 431 S 2.5(uc)1.1 G
(an decide to modify it at an)113.06 431 Q 2.5(ym)-.15 G
(oment with this function:)237.62 431 Q/F4 8/Courier@0 SF
(int win_SetTitleName\(tk_display,window,title_name\))90 455 Q
(TkDisplay *tk_display;)90 465 Q(Window window;)90 475 Q(char *title_name;)90
485 Q F2 1.57(All windo)90 505 R 4.07(wm)-.25 G 1.57
(anagers are required by the ICCCM to display the windo)150.67 505 R(w')-.25 E
4.07(st)-.55 G 1.57(itle and to modify it upon)412.2 505 R 1.33
(simple request of the client, whether it be in a list of windo)90 517 R 1.33
(ws on the screen or in the title bar of each)-.25 F(windo)90 529 Q -.65(w.)
-.25 G -1.1(Yo)90 541 S 2.5(uc)1.1 G
(an also modify the title present in the icon bar:)113.06 541 Q F4
(int win_SetIconName\(tk_display,window,icon_name\))90 565 Q
(TkDisplay *tk_display;)90 575 Q(Window window;)90 585 Q(char *icon_name;)90
595 Q F3 3(4.2 Dimensions)90 635 R F2 -1.1(Yo)90 677 S 6.017(uc)1.1 G 3.517
(an modify a windo)116.577 677 R(w')-.25 E 6.017(sd)-.55 G 3.517
(imensions in an)227.055 677 R 6.017(yo)-.15 G 6.017(ft)312.736 677 S 3.517
(he windo)324.863 677 R(w')-.25 E 6.017(ss)-.55 G 3.517
(tates \(NormalState, ZoomState,)388.867 677 R(IconicState\):)90 689 Q EP
%%Page: 19 19
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-1)293.004 48 S 3(9-)306 48 S/F1 8/Courier@0 SF
(int win_Resize\(tk_display,window,width,height\))90 82 Q
(TkDisplay *tk_display;)90 92 Q(Window window;)90 102 Q
(unsigned int width, height;)90 112 Q/F2 10/Times-Roman@0 SF .233
(When the WM recei)90 134 R -.15(ve)-.25 G 2.733(st).15 G .234
(his request, it can either reject it or accept it in its o)190.502 134 R .234
(wn w)-.25 F(ay)-.1 E 2.734(,w)-.65 G .234(hich means that it is)441.064 134 R
(free to choose the true dimension the windo)90 146 Q 2.5(ww)-.25 G(ill tak)
281.94 146 Q 2.5(eo)-.1 G 2.5(nt)316.84 146 S(he screen.)327.12 146 Q .218(It \
can either grant the space required or \214rst refer to a certain number of pa\
rameters it has been allocated in)90 158 R
(the WM_NORMAL_HINTS, WM_ZOOM_HINTS and WM_HINTS properties.)90 170 Q
(It will particularly look at the follo)90 194 Q(wing elements:)-.25 E 28.06
(WM_NORMAL_HINTS.min_width /*)92.5 218 R(Minimum width of the windo)2.5 E 5(w*)
-.25 G(/)415.59 218 Q 25.84(WM_NORMAL_HINTS.min_height /*)92.5 232 R
(Minimum height of the windo)2.5 E(w)-.25 E F0(*/)3 E F2 26.4
(WM_NORMAL_HINTS.max_width /*)92.5 244 R(Maximum width */)2.5 E 24.18
(WM_NORMAL_HINTS.max_height /*)92.5 256 R(Maximum height */)2.5 E 5.95
(WM_ZOOM_HINTS.min_width /*)92.5 268 R(Minimum width when zoomed */)2.5 E 3.73
(WM_ZOOM_HINTS.min_height /*)92.5 280 R(Minimum height when zoomed */)2.5 E
4.29(WM_ZOOM_HINTS.max_width /*)92.5 292 R(Maximum width when zoomed */)2.5 E
2.07(WM_ZOOM_HINTS.max_height /*)92.5 304 R(Maximum height when zoomed */)2.5 E
(These properties can be modi\214ed by the program with the follo)90 340 Q
(wing functions:)-.25 E F1(int win_SetNormalHints\(tk_display,window,hints\))90
376 Q(Tkdisplay *tk_display;)90 386 Q(Window window;)90 396 Q
(XSizeHints hints;)90 406 Q(int win_SetZoomlHints\(tk_display,window,hints\))90
426 Q(Tkdisplay *tk_display;)90 436 Q(Window window;)90 446 Q
(XSizeHints hints;)90 456 Q F2(The windo)90 486 Q 2.5(ww)-.25 G(ill recei)
149.74 486 Q .3 -.15(ve a)-.25 H 2.5(nX).15 G(lib e)210.71 486 Q -.15(ve)-.25 G
(nt of Con\214gureNotify type presenting the ne).15 E 2.5(wd)-.25 G(imensions.)
429.48 486 Q/F3 12/Times-Bold@0 SF 3(4.3 Icon)90 534 R F2 1.619(The ICCCM perm\
its you to de\214ne 3 main caracteristics concerning the display of a windo)90
576 R(w')-.25 E 4.12(si)-.55 G 1.62(con.: a)493.72 576 R
(pixmap, its mask and an icon windo)90 588 Q 2.5(wt)-.25 G 2.5(od)246.41 588 S
(ra)258.91 588 Q 2.5(wi)-.15 G 2.5(ni)279.03 588 S 2.5(tr)289.31 588 S
(epeatedly)297.92 588 Q(.)-.65 E -1.1(Yo)90 612 S 2.5(uc)1.1 G
(an con\214gurate these caracteristics at an)113.06 612 Q 2.5(ym)-.15 G
(oment with these functions:)284.53 612 Q F1
(int win_SetIconPixmap\(tk_display,window,icon_pixmap\))90 636 Q
(TkDisplay *tk_display;)90 646 Q(Window window;)90 656 Q(Pixmap icon_pixmap;)90
666 Q F2(If icon_pixmap is set to 0, the pixmap representing the windo)90 686 Q
(w')-.25 E 2.5(si)-.55 G(con will be withdra)354.73 686 Q(wn from the screen.)
-.15 E EP
%%Page: 20 20
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-2)293.004 48 S 3(0-)306 48 S/F1 8/Courier@0 SF
(int win_SetIconPixmapMask\(tk_display,window,icon_pixmap_mask\))90 82 Q
(TkDisplay *tk_display;)90 92 Q(Window window;)90 102 Q
(Pixmap icon_pixmap_mask;)90 112 Q
(int win_SetIconWindow\(tk_display,window,icon_window\))90 132 Q
(TkDisplay *tk_display;)90 142 Q(Window window, icon_window;)90 152 Q/F2 10
/Times-Roman@0 SF 1.012(If icon_windo)90 182 R 3.512(wc)-.25 G 1.011
(ontains the ID of a windo)162.314 182 R 3.511(wo)-.25 G 3.511(fI)284.78 182 S
(CON_WINDO)294.951 182 Q 3.511(Wc)-.35 G 1.011
(lass, this ID will be used as icon by)372.532 182 R(windo)90 194 Q 2.467 -.65
(w. I)-.25 H 3.667(fo).65 G 3.667(nt)142.814 194 S 1.167
(he contrary icon_windo)154.261 194 R 3.667(wi)-.25 G 3.667(ss)264.992 194 S
1.167(et to 0, the icon windo)276.439 194 R 3.667(wc)-.25 G 1.167
(urrently used \(supposing there is)386.791 194 R(one\) will be withdra)90 206
Q(wn from the screen.)-.15 E .943(Some windo)90 230 R 3.443(wm)-.25 G .943
(anagers can pro)159.416 230 R .943(vide by def)-.15 F .943(ault an icon windo)
-.1 F 3.443(wi)-.25 G 3.443(nw)360.86 230 S .943(hich a program can dra)376.523
230 R 3.443(wd)-.15 G .942(uring its)487.998 230 R(iconic phase.)90 242 Q
(The ID is stored in the WM_ST)90 254 Q -1.11(AT)-.93 G 2.5(Ep)1.11 G
(roperty and can be obtained with the follo)242.11 254 Q(wing function:)-.25 E
F1(Window win_GetIconWindow\(tk_display,window\))90 278 Q
(TkDisplay *tk_display;)90 288 Q(Window window;)90 298 Q/F3 12/Times-Bold@0 SF
3(4.4 Changing)90 338 R(state)3 E F2 .113(WMs can authorize se)90 380 R -.15
(ve)-.25 G .113(ral states depending on their capabilities: NormalState, ZoomS\
tate and IconicState.).15 F .818(Since the display and beha)90 392 R .817
(vior of your windo)-.2 F 3.317(wc)-.25 G .817(an v)292.17 392 R .817
(ary depending on its current state, you can obtain it)-.25 F
(with this function :)90 404 Q F1(long win_GetState\(tk_display, window\))90
428 Q(TkDisplay *tk_display;)90 438 Q(Window window;)90 448 Q F2 .328
(This function e)90 468 R .328(xtracts the current state of the windo)-.15 F
2.828(ww)-.25 G(indo)316.122 468 Q 2.828(wt)-.25 G .329
(hat the WM must place in the WM_ST)346.48 468 R -1.11(AT)-.93 G(E)1.11 E
(property)90 480 Q 2.5(.Y)-.65 G(ou can also ask the windo)134.35 480 Q 2.5(wm)
-.25 G(anager to ha)254.64 480 Q .3 -.15(ve y)-.2 H(our windo).15 E 2.5(we)-.25
G -.2(vo)374.59 480 S(lv).2 E 2.5(ef)-.15 G(rom one state to another:)402.29
480 Q F1(int win_SetState\(tk_display,window,state\))90 504 Q
(TkDisplay *tk_display;)90 514 Q(Window window;)90 524 Q(unsigned int state;)90
534 Q(/* NormalState, IconicState or ZoomState */)198 534 Q
(int win_Zoom\(tk_display,window\))90 554 Q(TkDisplay *tk_display;,)90 564 Q
(Window window;)90 574 Q(int win_Unzoom\(tk_display,window\);)90 594 Q
(TkDisplay *tk_display,)90 604 Q(Window window;)90 614 Q F3 3(4.5 Repar)90 654
R(enting a windo)-.216 E(w)-.12 E F2(If you decide to reparent a windo)90 696 Q
1.3 -.65(w, y)-.25 H(ou must absolutely use the).65 E/F4 10/Times-Italic@0 SF
(win_Repar)2.5 E(ent)-.37 E F2(function:)2.5 E EP
%%Page: 21 21
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-2)293.004 48 S 3(1-)306 48 S/F1 8/Courier@0 SF
(int win_Reparent\(tk_status,window,parent,top_level,x,y\))90 82 Q
(TkStatus *tk_status;)90 92 Q(Window window, parent, top_level;)90 102 Q
(int x,y;)90 112 Q(/* Position in the new window */)198 112 Q/F2 10
/Times-Roman@0 SF .076(Indeed, this function adds the top-le)90 142 R -.15(ve)
-.25 G 2.576(le).15 G .076(lement \(top le)253.086 142 R -.15(ve)-.25 G 2.576
(lw).15 G(indo)330.404 142 Q 2.576(wc)-.25 G .076(ontaining windo)362.17 142 R
2.576(wa)-.25 G .076(nd maybe parent\) in)441.512 142 R(the WM_T)90 154 Q
(OP_LEVEL property used for dragging and dropping.)-.18 E(The Xlib)90 178 Q/F3
10/Times-Italic@0 SF(XRepar)2.5 E(entW)-.37 E(indow)-.55 E F2(function doesn')
2.5 E 2.5(tt)-.18 G(ak)275.83 178 Q 2.5(ei)-.1 G
(nto account this important parameter)294.89 178 Q(.)-.55 E EP
%%Page: 22 22
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-2)293.004 48 S 3(2-)306 48 S/F1 30/Times-Bold@0 SF
(5)507 107 Q -.54(Wi)326.73 142 S(dgets theory).54 E/F2 10/Times-Roman@0 SF -.4
(Wi)90 317 S .846(dgets \(from windo).4 F 3.346(wa)-.25 G .846(nd g)192.148 317
R .846(adget\) are v)-.05 F .846(ery particular windo)-.15 F .847(ws. Their ha)
-.25 F 1.147 -.15(ve t)-.2 H .847(heir o).15 F .847(wn intelligence which)-.25
F .04(enables them to function autonomously from the moment the)90 329 R 2.539
(ya)-.15 G .039(re created.)346.579 329 R(The)5.039 E 2.539(yl)-.15 G .039
(ie at the heart of the man-)419.016 329 R(machine interf)90 341 Q
(ace and represent the toolkit')-.1 E 2.5(sc)-.55 G(entral nucleus.)274.3 341 Q
/F3 12/Times-Bold@0 SF 3(5.1 Classes)90 389 R(and objects)3 E F2 .398(Iman de)
90 431 R -.15(ve)-.25 G .399(lopment kit puts at your disposal a v).15 F .399
(ast number of graphic objects grouped in 6 classes: b)-.25 F(uttons,)-.2 E
(scrollbars, edit zones, lists, combo box)90 443 Q(es and \215oating menus.)
-.15 E(These classes are de\214ned in the follo)90 455 Q(wing w)-.25 E
(ay in the <X11/iman/e)-.1 E(v_struct.h> \214le :)-.25 E(#de\214ne WI_B)126 479
Q(UTT)-.1 E 51.52(ON 1)-.18 F(#de\214ne WI_SCR)126 491 Q(OLLB)-.4 E 33.64(AR 2)
-.35 F(#de\214ne WI_EDIT)126 503 Q(3)270 503 Q(#de\214ne WI_LIST)126 515 Q(4)
270 515 Q(#de\214ne WI_COMBO)126 527 Q(5)270 527 Q(#de\214ne WI_MENU)126 539 Q
(6)270 539 Q F3 3(5.2 Identi\214cators)90 575 R F2(In referring to a widget yo\
u can use either an identi\214cator corresponding to the type of widget:)90 603
Q(typedef int ButtonID;)90 627 Q(/* Button)234 627 Q(*/)306 627 Q
(typedef int ScrollbarID;)90 639 Q(/* Scrollbar)234 639 Q(*/)306 639 Q
(typedef int EditID;)90 651 Q(/* Edit)234 651 Q(*/)306 651 Q
(typedef int ListID;)90 663 Q(/* List)234 663 Q(*/)306 663 Q
(typedef int ComboID;)90 675 Q(/* Combo box)234 675 Q(*/)306 675 Q
(typedef int MenuID;)90 687 Q(/* Menu)234 687 Q(*/)306 687 Q EP
%%Page: 23 23
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-2)293.004 48 S 3(3-)306 48 S/F1 10/Times-Roman@0 SF
(or a generic identi\214cator:)90 84 Q(typedef int W)90 108 Q 53.58
(idgetID; /*)-.4 F(An)2.5 E 2.5(yw)-.15 G(idget */)271.07 108 Q/F2 12
/Times-Bold@0 SF 3(5.3 T)90 156 R(ypes and beha)-.888 E(viors)-.3 E F1
(Each class has se)90 198 Q -.15(ve)-.25 G
(ral types of widgets at its disposal that de\214ne its display and its beha)
.15 E(vior)-.2 E(.)-.55 E/F3 10/Times-Bold@0 SF 2.5(5.3.1 Buttons)90 234 R F1
(/******* T)162 258 Q(ypes of BOUT)-.8 E(ON *******/)-.18 E(#de\214ne BN_PUSHB)
126 282 Q(UTT)-.1 E 60.84(ON 1)-.18 F(#de\214ne BN_CR)126 294 Q(OSSB)-.4 E(UTT)
-.1 E 55.12(ON 2)-.18 F(#de\214ne BN_CHECKB)126 306 Q(UTT)-.1 E 52.51(ON 3)-.18
F(#de\214ne BN_RADIOB)126 318 Q(UTT)-.1 E 54.74(ON 4)-.18 F(#de\214ne BN_REPEA)
126 330 Q(TB)-1.11 E(UTT)-.1 E 49.73(ON 5)-.18 F(#de\214ne BN_POPUPB)126 342 Q
(UTT)-.1 E 55.28(ON 10)-.18 F(#de\214ne BN_POPUPRADIOB)126 354 Q(UTT)-.1 E
23.62(ON 11)-.18 F(Buttons can be grouped in 3 cate)90 378 Q
(gories, depending on their beha)-.15 E(vior:)-.2 E 3.528(*n)126 402 S 1.028
(ormal b)139.528 402 R 1.028(uttons: the)-.2 F 3.528(yg)-.15 G 1.028
(enerate an e)227.542 402 R -.15(ve)-.25 G 1.027
(nt when pushed or released. The).15 F 3.527(yd)-.15 G 3.527(on)434.309 402 S
1.027(ot remain block)447.836 402 R(ed)-.1 E .153
(when pushed and do not repetiti)126 414 R -.15(ve)-.25 G .154
(ly send other messages. This is the most common type of b).15 F(utton)-.2 E
(\(BN_PUSHB)126 426 Q(UTT)-.1 E(ON\).)-.18 E 3.202(*b)126 450 S .702(locking b)
139.202 450 R .702(uttons: the)-.2 F 3.202(yg)-.15 G .702(enerate an e)232.908
450 R -.15(ve)-.25 G .701(nt when pushed and remain block).15 F .701
(ed until the user clicks)-.1 F(ag)126 462 Q 3.208(ain to unlock them \(BN_CR)
-.05 F(OSSB)-.4 E(UTT)-.1 E 3.209(ON, BN_CHECKB)-.18 F(UTT)-.1 E 3.209
(ON, BN_RADIOB)-.18 F(UTT)-.1 E(ON,)-.18 E(BN_POPUPB)126 474 Q(UTT)-.1 E
(ON, BN_POPUPRADIOB)-.18 E(UTT)-.1 E(ON\).)-.18 E 2.5(*r)126 498 S(epetiti)
136.83 498 Q .3 -.15(ve b)-.25 H(uttons: the)-.05 E 2.5(yg)-.15 G
(enerate a repetiti)232.47 498 Q .3 -.15(ve e)-.25 H -.15(ve)-.1 G
(nt when pushed \(BN_REPEA).15 E(TB)-1.11 E(UTT)-.1 E(ON\).)-.18 E F3 2.5
(5.3.2 Scr)90 534 R(ollbars)-.18 E F1(/******* T)162 558 Q(ypes of SCR)-.8 E
(OLLB)-.4 E(AR *******/)-.35 E(#de\214ne SB_LEFT)126 582 Q 74.27(ALIGN 20)-.93
F(#de\214ne SB_RIGHT)126 594 Q 67.61(ALIGN 21)-.93 F(#de\214ne SB_T)126 606 Q
(OP)-.18 E 79.44(ALIGN 22)-.92 F(#de\214ne SB_BO)126 618 Q(TT)-.4 E 55.59
(OMALIGN 23)-.18 F(#de\214ne SB_HTHUMB)126 630 Q(24)306 630 Q
(#de\214ne SB_VTHUMB)126 642 Q(25)306 642 Q(Scrollbars all ha)90 666 Q .3 -.15
(ve t)-.2 H(he same beha).15 E(vior)-.2 E 2.5(.D)-.55 G(if)250.81 666 Q
(ferent types correspond to dif)-.25 E(ferent displays.)-.25 E F3 2.5
(5.3.3 Edit)90 702 R(zones)2.5 E EP
%%Page: 24 24
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-2)293.004 48 S 3(4-)306 48 S/F1 10/Times-Roman@0 SF
(/******* T)162 84 Q(ypes of EDIT *******/)-.8 E(#de\214ne ED_NORMALEDIT)126
108 Q(30)306 108 Q(#de\214ne ED_SECRETEDIT)126 120 Q(31)306 120 Q
(#de\214ne ED_FULLSELECT)126 132 Q(32)306 132 Q .289
(Edits all react in the same manner to the user')90 156 R 2.789(sa)-.55 G .289
(ctions. Some ho)286.19 156 R(we)-.25 E -.15(ve)-.25 G 2.789(rm).15 G .289
(ight display nothing on the screen)385.287 156 R 1.48(to k)90 168 R 1.48
(eep things secret \(ED-SECRETEDIT\) or on the contrary select e)-.1 F -.15(ve)
-.25 G 1.48(rything as soon as the widget is).15 F(acti)90 180 Q -.25(va)-.25 G
(ted \(ED_FULLSELECT\).).25 E/F2 10/Times-Bold@0 SF 2.5(5.3.4 Lists)90 216 R F1
(/******* T)162 240 Q(ypes of LIST *******/)-.8 E(#de\214ne LS_SIMPLE)126 264 Q
(40)306 264 Q(#de\214ne LS_HSCR)126 276 Q 83.73(OLL 41)-.4 F
(#de\214ne LS_LEFTVSCR)126 288 Q 59.84(OLL 42)-.4 F(#de\214ne LS_RIGHTVSCR)126
300 Q 53.18(OLL 43)-.4 F(#de\214ne LS_HLEFTVSCR)126 312 Q 52.62(OLL 44)-.4 F
(#de\214ne LS_HRIGHTVSCR)126 326 Q 45.96(OLL 45)-.4 F .097(Lists all beha)90
350 R .397 -.15(ve i)-.2 H 2.597(nt).15 G .097(he same w)168.368 350 R .097
(ay re)-.1 F -.05(ga)-.15 G .097(rdless of their type. Only their display v).05
F 2.597(aries. Some)-.25 F .096(will not possess a)2.597 F 2.668
(scrollbar \(LS_SIMPLE\), others will ha)90 362 R 2.968 -.15(ve a h)-.2 H 2.668
(orizontal scrollbar \(LS_HSCR).15 F 2.668(OLL\), a v)-.4 F 2.669
(ertical scrollbar)-.15 F(\(LS_LEFTVSCR)90 374 Q .386(OLL, LS_RIGHTVSCR)-.4 F
.386(OLL\) or both \(LS_HLEFTVSCR)-.4 F .386(OLL, LS_HRIGHTVSCR)-.4 F(OLL\).)
-.4 E F2 2.5(5.3.5 Combo)90 410 R(boxes)2.5 E F1(/******* T)162 434 Q
(ypes of COMBO *******/)-.8 E(#de\214ne CB_LEFTNOEDITION)126 458 Q(50)306 458 Q
(#de\214ne CB_LEFTEDITION)126 470 Q(51)306 470 Q(#de\214ne CB_RIGHTNOEDITION)
126 482 Q(52)306 482 Q(#de\214ne CB_RIGHTEDITION)126 494 Q(53)306 494 Q
(#de\214ne CB_SLEFTNOEDITION)126 506 Q(54)306 506 Q(#de\214ne CB_SLEFTEDITION)
126 518 Q(55)306 518 Q(#de\214ne CB_SRIGHTNOEDITION)126 530 Q(56)2.63 E
(#de\214ne CB_SRIGHTEDITION)126 542 Q(57)306 542 Q(All combo box)90 566 Q
(es don')-.15 E 2.5(tb)-.18 G(eha)189.11 566 Q .3 -.15(ve t)-.2 H(he same w).15
E(ay:)-.1 E 2.5(*s)126 590 S(ome forbid the entry of te)137.39 590 Q
(xt in the box')-.15 E 2.5(se)-.55 G
(dit zone \(those CB_ ending wiht NOEDITION\).)303.61 590 Q 5.603(*t)126 614 S
.604(he others accept it and will send the program a message if the user v)
139.383 614 R .604(alidates the te)-.25 F .604(xt he typed)-.15 F(there.)126
626 Q F2 2.5(5.3.6 Floating)90 662 R(menus)2.5 E F1(/******* T)162 686 Q
(ypes of MENU *******/)-.8 E EP
%%Page: 25 25
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-2)293.004 48 S 3(5-)306 48 S/F1 10/Times-Roman@0 SF
(#de\214ne MN_MENUB)126 84 Q 38.8(AR 60)-.35 F(#de\214ne MN_FLO)126 96 Q -1.11
(AT)-.35 G 39.92(ING 61)1.11 F 4.565(Only 2 types of menus e)90 120 R 4.565
(xist so f)-.15 F 4.565(ar: the menu bar \(MN_MENUB)-.1 F 4.564
(AR\) and the \215oating menu)-.35 F(\(MN_FLO)90 132 Q -1.11(AT)-.35 G(ING\).)
1.11 E .068(The menu bar is al)90 144 R -.1(wa)-.1 G .068
(ys located in the top right-hand corner of the main windo).1 F 1.369 -.65
(w, w)-.25 H .069(hereas the \215oating menu).65 F(can be located an)90 156 Q
(ywhere on the screen.)-.15 E EP
%%Page: 26 26
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-2)293.004 48 S 3(6-)306 48 S/F1 30/Times-Bold@0 SF
(6)507 107 Q(Cr)305.07 142 Q(eating widgets)-.54 E/F2 10/Times-Roman@0 SF
(One of the main interests of the Iman de)90 317 Q -.15(ve)-.25 G
(lopment kit is the modest size of its API.).15 E
(One function is enough to create an)90 329 Q 2.5(yw)-.15 G
(idget, and one function is also enough to destro)246.76 329 Q 2.5(yi)-.1 G(t.)
446.09 329 Q/F3 12/Times-Bold@0 SF(6.1 Cr)90 377 Q(eating a widget)-.216 E F2
(The only function you must use to create your widgets is the follo)90 419 Q
(wing:)-.25 E .364(This function returns your widget')90 431 R 2.863(si)-.55 G
(denti\214cator)238.197 431 Q 2.863(,w)-.4 G .363(hich you must al)295.93 431 R
-.1(wa)-.1 G .363(ys gi).1 F .663 -.15(ve t)-.25 H 2.863(ot).15 G .363
(he other functions. If this)419.728 431 R(ID is null or ne)90 443 Q -.05(ga)
-.15 G(ti).05 E -.15(ve)-.25 G 2.5(,a).15 G 2.5(ne)183.83 443 S
(rror has occurred.)195.77 443 Q/F4 8/Courier@0 SF(WidgetID)90 467 Q(wid_Creat\
e\(tk_display,widget_class,widget_type,wnd_parent,wnd_top_level,x,y,width,heig\
ht,)90 477 Q(wid_attributes,state\))90 487 Q(TkDisplay *tk_display;)90 497 Q
(int widget_class, widget_type;)90 507 Q(Window wnd_parent, wnd_top_level;)90
517 Q(int x, y, width, height;)90 527 Q(WidgetAttributes *wid_attributes;)90
537 Q(unsigned int state;)90 547 Q/F5 10/Times-Bold@0 SF(tk_display)90 577 Q F2
2.5(:p)C(ointer on the structure that you get when connecting to a serv)144.74
577 Q(er)-.15 E(.)-.55 E F5(widget_class)90 589 Q F2 2.5(:c)C
(lass of the widget you wish to create \(see paragraph 5.1\).)153.05 589 Q F5
(widget_type)90 601 Q F2 2.5(:t)C
(ype of the widget to be created \(see paragraph 5.3\).)149.72 601 Q F5
(wnd_par)90 613 Q(ent)-.18 E F2 2.5(:w)C(indo)153.99 613 Q 2.5(wi)-.25 G 2.5
(nw)184.02 613 S(hich the widget will be located.)198.74 613 Q F5(wnd_top_le)90
625 Q -.1(ve)-.15 G(l).1 E F2 3.932(:t)C 1.432(op le)160.912 625 R -.15(ve)-.25
G 3.932(lw).15 G(indo)205.036 625 Q 3.932(wc)-.25 G 1.431
(ontaining or not wnd_parent and the widget. This parameter is v)238.158 625 R
(ery)-.15 E(important to manage the focus and the WM_T)90 637 Q
(OP_LEVEL property used to drag and drop.)-.18 E F5(x,y)90 649 Q F2 2.5(:w)C
(idget')115 649 Q 2.5(sc)-.55 G(oordinates in wnd_parent.)148.61 649 Q F5
(width, height:)90 661 Q F2(widget')2.5 E 2.5(sd)-.55 G(imensions.)193.34 661 Q
F5(wid_attrib)90 673 Q(utes:)-.2 E F2 2.938(address of a W)5.438 F(idgetAttrib)
-.4 E 2.938(utes structure \(see paragraph 6.2\) containing the widget')-.2 F
(s)-.55 E(original attrib)90 685 Q(utes.)-.2 E EP
%%Page: 27 27
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-2)293.004 48 S 3(7-)306 48 S/F1 10/Times-Roman@0 SF
(state: the initial state of the widget. It must be a OR combination of the fo\
llo)90 84 Q(wing v)-.25 E(alues :)-.25 E(#de\214ne Ungrayed)126 108 Q(0)234 108
Q(#de\214ne Uncheck)126 120 Q 28.68(ed 0)-.1 F(#de\214ne Unpushed)126 132 Q(0)
234 132 Q(#de\214ne Unblock)126 144 Q 29.78(ed 0)-.1 F(#de\214ne Pushed)126 156
Q(1)234 156 Q(#de\214ne Grayed)126 168 Q(2)234 168 Q(#de\214ne Block)126 180 Q
40.33(ed 4)-.1 F(#de\214ne Check)126 192 Q 38.67(ed 8)-.1 F/F2 12/Times-Bold@0
SF 3(6.2 W)90 240 R(idgetAttrib)-.216 E(utes structur)-.24 E(e)-.216 E F1(Let')
90 282 Q 2.5(ss)-.55 G(ee ho)116.39 282 Q 2.5(wt)-.25 G 2.5(ou)150.02 282 S
(se this structure. It partly determines your widget')162.52 282 Q 2.5(ss)-.55
G(tate and beha)372.22 282 Q(vior)-.2 E(.)-.55 E(typedef struct {)90 306 Q
(unsigned long mask;)162 318 Q(int lighting;)162 330 Q(int direction;)162 342 Q
(unsigned int range;)162 354 Q(unsigned int pagerange;)162 366 Q
(unsigned int thumbsize;)162 378 Q(Bool ne)162 390 Q -.15(ve)-.25 G(rF).15 E
(ocus;)-.15 E(Bool multipleSelection;)162 402 Q(Bool border;)162 414 Q
(int htype, vtype;)162 426 Q(unsigned int itemheight;)162 438 Q
(unsigned int position;)162 450 Q(unsigned int crosstype;)162 462 Q
(Colormap colormap;)162 474 Q -.6(Vi)162 486 S(sual *visual;).6 E
(Cursor cursor;)162 498 Q(}W)143.5 510 Q(idgetAttrib)-.4 E(utes;)-.2 E/F3 10
/Times-Bold@0 SF(mask)90 534 Q F1 2.5(:i)C 2.5(ti)120.84 534 S 2.5(sac)128.9
534 S(ombination in logical OR of the follo)146.67 534 Q(wing v)-.25 E(alues:)
-.25 E(#de\214ne SALighting)126 558 Q(1)306 558 Q(#de\214ne SADirection)126 570
Q(2)306 570 Q(#de\214ne SARange)126 582 Q(4)306 582 Q(#de\214ne SAP)126 594 Q
91.28(agerange 8)-.15 F(#de\214ne SA)126 606 Q 89.45(Thumbsize 16)-1.11 F
(#de\214ne SANe)126 618 Q -.15(ve)-.25 G(rF).15 E 85.01(ocus 32)-.15 F
(#de\214ne SAMultipleSelection)126 630 Q(64)306 630 Q(#de\214ne SABorder)126
642 Q(128)306 642 Q(#de\214ne SAHVtype)126 654 Q(256)306 654 Q
(#de\214ne SAItemHeight)126 666 Q(512)306 666 Q(#de\214ne SAPosition)126 678 Q
(1024)306 678 Q(#de\214ne SA)126 690 Q(CrossT)-.4 E 90.65(ype 2048)-.8 F EP
%%Page: 28 28
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-2)293.004 48 S 3(8-)306 48 S/F1 10/Times-Roman@0 SF
(#de\214ne SA)126 84 Q 93.18(Colormap 4096)-.4 F(#de\214ne SA)126 96 Q -.6(Vi)
-1.35 G 108.62(sual 8192).6 F(#de\214ne SA)126 108 Q 105.96(Cursor 16384)-.4 F
.283(Each v)90 144 R .283(alue corresponds to an element of the structure. If \
you set mask at 0, no \214eld of the structure will be)-.25 F(used.)90 156 Q/F2
10/Times-Bold@0 SF(lighting)90 180 Q F1 3.307(:t)C .807
(his \214eld is used by b)131.657 180 R .807(uttons. If you gi)-.2 F 1.107 -.15
(ve i)-.25 H 3.307(tt).15 G .807(he T)307.747 180 R .808(rue v)-.35 F .808
(alue, your b)-.25 F .808(utton will be highlighted when)-.2 F
(pushed, otherwise it will k)90 192 Q(eep its re)-.1 E(gular background color)
-.15 E(.)-.55 E F2(dir)90 204 Q(ection)-.18 E F1 2.5(:t)C(his \214eld is e)
136.21 204 Q(xclusi)-.15 E -.15(ve)-.25 G(ly for the toolkit').15 E 2.5(su)-.55
G(se. Do not use it.)296.5 204 Q F2 .999(range, pagerange)90 216 R F1 3.499(:t)
C .998(hese 2 \214elds are used to create scrollbars, range determines the num\
ber of times the)173.938 216 R .388(user will ha)90 228 R .688 -.15(ve t)-.2 H
2.888(op).15 G .388(ush a scroobar')165.082 228 R 2.888(sb)-.55 G .388
(utton to ha)237.976 228 R .688 -.15(ve ")-.2 H .389(the lift" go all the w).15
F .389(ay do)-.1 F .389(wn. pagerange determines the)-.25 F
(number of those "rungs" climbed up or do)90 240 Q
(wn each time the user cliks on the lift itself.)-.25 E F2(thumbsize)90 252 Q
F1 2.5(:t)C(his \214eld determines the thumbb)141.95 252 Q(utton')-.2 E 2.5(ss)
-.55 G(ize in the scrollbar)301.48 252 Q(.)-.55 E F2(ne)90 264 Q -.1(ve)-.15 G
(rF).1 E(ocus)-.25 E F1 2.5(:t)C
(his \214eld determines if the widget wished to be able to obtain the focus.)
146.44 264 Q F2(multipleSelection:)90 276 Q F1 2.793
(this \214eld decides whether it is possible to select se)5.293 F -.15(ve)-.25
G 2.793(ral elements in the widget).15 F
(simultaneously \(for lists and combo box)90 288 Q(es\).)-.15 E F2(border)90
300 Q F1 2.5(:t)C(his \214eld decides if the widget must ha)127.5 300 Q .3 -.15
(ve a b)-.2 H(order \(for lists and edits\).).15 E F2(htype, vtype)90 312 Q F1
2.5(:t)C(hese 2 \214elds determine the type of scrollbar used in the lists and\
 the combo box)150.28 312 Q(es.)-.15 E(The type used can be one of the follo)90
324 Q(wing:)-.25 E(/******* T)162 348 Q(ypes of SCR)-.8 E(OLLB)-.4 E
(AR *******/)-.35 E(#de\214ne SB_LEFT)126 372 Q 74.27(ALIGN 20)-.93 F
(#de\214ne SB_RIGHT)126 384 Q 67.61(ALIGN 21)-.93 F(#de\214ne SB_T)126 396 Q
(OP)-.18 E 79.44(ALIGN 22)-.92 F(#de\214ne SB_BO)126 408 Q(TT)-.4 E 55.59
(OMALIGN 23)-.18 F(#de\214ne SB_HTHUMB)126 420 Q(24)306 420 Q
(#de\214ne SB_VTHUMB)126 432 Q(25)306 432 Q F2(itemheight)90 468 Q F1 2.668(:t)
C .168(his \214eld decides what the standard size \(height in pix)143.778 468 R
.169(els\) of an element in a widget \(list, menu)-.15 F
(or combo box\) will be.)90 480 Q F2(position:)90 492 Q F1 .691(this \214eld d\
ecides on what element the cursor bar must be positioned \(list, menu or combo\
 box\).)3.192 F(By def)90 504 Q(ault, the cursor is not positioned.)-.1 E F2
(cr)90 516 Q(osstype)-.18 E F1 2.881(:t)C .381
(his \214eld decides what the BN_CR)138.251 516 R .382(OSSTYPE b)-.4 F .382
(utton will look lik)-.2 F .382(e. The v)-.1 F .382(alue can be one of the)-.25
F(follo)90 528 Q(wing:)-.25 E(/*********** Cross T)162 552 Q
(ypes *************/)-.8 E(#de\214ne NoCross)126 576 Q(0)234 576 Q
(#de\214ne BigCross)126 588 Q(1)234 588 Q(#de\214ne LittleCross)126 600 Q(2)234
600 Q(#de\214ne CheckMark)126 612 Q(3)234 612 Q(An erroneous parameter can cau\
se irrecuperable errors and the end of your application.)90 648 Q
(Most of these parameters can be modi\214ed later with the follo)90 660 Q
(wing function:)-.25 E/F3 8/Courier@0 SF
(int wid_SetAttributes\(tk_display,widgetid,wid_attributes,delay\))90 684 Q
(TkDisplay *tk_display;)90 694 Q EP
%%Page: 29 29
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-2)293.004 46 S 3(9-)306 46 S/F1 8/Courier@0 SF
(WidgetID widgetid;)90 82 Q(WidgetAttributes *wid_attributes;)90 92 Q
(Bool delay;)90 102 Q/F2 10/Times-Roman@0 SF 1.6 -.8(To o)90 122 T
(btain information concerning a widget').8 E 2.5(sc)-.55 G
(urrent con\214guration, you can use the follo)274.73 122 Q(wing function:)-.25
E F1(int wid_GetAttributes\(tk_display,widgetid,wid_attributes\))90 146 Q
(TkDisplay *tk_display;)90 156 Q(WidgetID widgetid;)90 166 Q
(WidgetAttributes *wid_attributes;)90 176 Q/F3 12/Times-Bold@0 SF 3
(6.3 Mapping)90 216 R 3(aw)3 G(idget cr)178.344 216 Q(eated)-.216 E F2(The wid\
gets' display is simple. One function is enough to put the widget on the scree\
n:)90 258 Q F1(int wid_Map\(tk_display,widgetid\))90 282 Q
(TkDisplay *tk_display;)90 292 Q(WidgetID widgetid;)90 302 Q F2
(In the same manner)90 322 Q 2.5(,y)-.4 G(ou can withdra)178.19 322 Q 2.5(waw)
-.15 G(idget from the screen:)261.35 322 Q F1
(int wid_Unmap\(tk_display,widgetid\))90 346 Q(TkDisplay *tk_display;)90 356 Q
(WidgetID widgetid;)90 366 Q F3 3(6.4 Destr)90 406 R(oying a widget)-.216 E F2
.223(When you don')90 448 R 2.723(tn)-.18 G .223(eed a widget an)162.979 448 R
.223(ymore, you must destro)-.15 F 2.723(yi)-.1 G 2.723(tt)331.49 448 S 2.723
(ov)339.773 448 S .222(acate the space it occupies in the memory)352.246 448 R
(.)-.65 E(This operation is done with the follo)90 460 Q(wing function:)-.25 E
F1(int wid_Destroy\(tk_display,widgetid\))90 484 Q(TkDisplay *tk_display;)90
494 Q(WidgetID widgetid;)90 504 Q F2 1.055
(Be careful when entering the widget')90 524 R 3.555(sI)-.55 G 1.056
(D, you might otherwise destro)254.07 524 R 3.556(ya)-.1 G 1.056
(nother widget than the one you)392.57 524 R(intended to.)90 536 Q EP
%%Page: 30 30
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-3)293.004 48 S 3(0-)306 48 S/F1 30/Times-Bold@0 SF
(7)507 107 Q(Modifying the widgets' display)127.8 142 Q/F2 10/Times-Roman@0 SF
2.187 -.8(We s)90 317 T .587(till ha).8 F -.15(ve)-.2 G(n').15 E 3.087(tl)-.18
G(ook)159.591 317 Q .586(ed at the question of the widgets' display)-.1 F 3.086
(.T)-.65 G .586(his most important point concerns almost)353.79 317 R .135
(all the widgets and permits to modify the follo)90 329 R .135
(wing components: the display font, the te)-.25 F .136(xt, the image dra)-.15 F
(wn)-.15 E(and the positioning of elements in the widget.)90 341 Q/F3 12
/Times-Bold@0 SF 3(7.1 Modifying)90 389 R(the text)3 E F2
(Only one function permits to modify all the te)90 431 Q(xt')-.15 E 2.5(sp)-.55
G(arameters in all the widgets:)295.68 431 Q/F4 8/Courier@0 SF
(int wid_SetTextDecoration\(tk_display,widgetid,wid_text,delay\))90 455 Q
(TkDisplay *tk_display;)90 465 Q(WidgetID widgetid;)90 475 Q
(WidgetTextDecoration *wid_text;)90 485 Q(Bool delay;)90 495 Q/F5 10
/Times-Bold@0 SF(tk_display)90 525 Q F2 2.5(:p)C
(ointer on the structure returned by tk_OpenSession.)144.74 525 Q F5(widgetid:)
90 537 Q F2(identi\214cator of the widget to be modi\214ed.)2.5 E F5(wid_text:)
90 549 Q F2(pointer on a wid_te)2.5 E(xt structure.)-.15 E F5(delay:)90 561 Q
F2 .269(bool v)2.769 F .268(alue de\214ning whether the widget')-.25 F 2.768
(sr)-.55 G .268(efreshing must tak)289.108 561 R 2.768(ep)-.1 G .268(lace no)
375.632 561 R 2.768(w\()-.25 G -.15(Fa)417.568 561 S .268(lse\) or later \(T)
.15 F .268(rue\) with)-.35 F(the function wid_Refresh.)90 573 Q F3 3(7.1.1 W)90
621 R(idgetT)-.216 E(extDecoration type of structur)-1.104 E(e)-.216 E F2
(This structure contains all the elements to modify if need be:)90 663 Q
(typedef struct {)90 687 Q EP
%%Page: 31 31
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-3)293.004 48 S 3(1-)306 48 S/F1 10/Times-Roman@0 SF
(unsigned long mask;)162 84 Q(char *te)162 96 Q(xt;)-.15 E(XF)162 108 Q
(ontStruct *font;)-.15 E(unsigned int k)162 120 Q -.15(ey)-.1 G(;).15 E
(unsigned int gra)162 132 Q(vity;)-.2 E(int x, y;)162 144 Q 2.5(}W)162 156 S
(idgetT)178.34 156 Q -.15(ex)-.7 G(tDecoration;).15 E/F2 10/Times-Bold@0 SF
(mask)90 192 Q F1 2.5(:c)C(omposition of the follo)122.5 192 Q(wing v)-.25 E
(alues :)-.25 E(#de\214ne STT)126 216 Q -.15(ex)-.7 G 46.91(t1).15 G
(#de\214ne STF)126 228 Q 43.7(ont 2)-.15 F(#de\214ne STK)126 240 Q 45.93 -.15
(ey 4)-.25 H(#de\214ne STGra)126 252 Q 31.54(vity 8)-.2 F(#de\214ne STX)126 264
Q(16)234 264 Q(#de\214ne STY)126 276 Q(32)234 276 Q(each v)90 312 Q
(alue corresponds to a \214eld of the structure.)-.25 E F2(text)90 336 Q F1 2.5
(:c)C(hain of caracters to be displayed in the widget. This \214eld is selecte\
d with the v)115.82 336 Q(alue STT)-.25 E -.15(ex)-.7 G(t.).15 E F2 -.25(fo)90
348 S(nt).25 E F1 2.5(:d)C(ef)117.25 348 Q(ault font for the widget')-.1 E 2.5
(sd)-.55 G(isplay)231.3 348 Q 2.5(.T)-.65 G(his \214eld is selcted with STF)
265.65 348 Q(ont.)-.15 E F2 -.1(ke)90 360 S(y).1 E F1 2.83(:k)C -.15(ey)115.41
360 S .33(board k).15 F .63 -.15(ey p)-.1 H .331
(utting the focus on the widget. This option only concerns b).15 F .331
(uttons and corresponds to a)-.2 F .271(letter inscribed in the te)90 372 R
.271(xt \214eld. If k)-.15 F .571 -.15(ey i)-.1 H 2.771(ss).15 G .271
(et to 3, the 3rd te)258.689 372 R .271
(xt caracter will be underlined and when the user)-.15 F .755(pushes the k)90
384 R 1.056 -.15(ey c)-.1 H .756(orresponding to the caracter).15 F 3.256(,t)
-.4 G .756(he widget will recei)280.15 384 R 1.056 -.15(ve t)-.25 H .756
(he focus. This \214eld is selected with).15 F(STK)90 396 Q -.15(ey)-.25 G(.)
-.5 E F2(gra)90 408 Q(vity)-.25 E F1 2.5(:p)C(ositioning of the te)130.58 408 Q
(xt in the widget. The positioning of the te)-.15 E(xt can be one of the follo)
-.15 E(wing:)-.25 E(#de\214ne CenterT)126 432 Q -.15(ex)-.7 G 67.92(t5).15 G
(/* Centered */)306 432 Q(#de\214ne UserDe\214nedT)126 444 Q -.15(ex)-.7 G
44.04(t1).15 G 26(0/)275 444 S 2.5(*D)308.78 444 S(epend on X and Y */)323.5
444 Q(This \214eld is selected with STGra)90 480 Q(vity)-.2 E(.)-.65 E F2(x, y)
90 504 Q F1 2.5(:c)C(oordinates of the te)114.72 504 Q(xt in the widget if gra)
-.15 E(vity is set at UserDe\214nedT)-.2 E -.15(ex)-.7 G 2.5(t. widget').15 F
2.5(sd)-.55 G(imensions.)445.15 504 Q F2 2.5(7.1.2 Getting)90 540 R
(the widget')2.5 E 2.5(st)-.37 G(ext)206.56 540 Q F1 -.15(Fo)90 564 S 3.077(rs)
.15 G .577(ome widgets \(edits, combo box)110.707 564 R .577
(es\), it is essential to be able to get the te)-.15 F .576(xt the)-.15 F 3.076
(yc)-.15 G .576(ontain since the user)438.342 564 R
(can modify it to send information.)90 576 Q(The follo)90 600 Q
(wing function permits to get the widgets' te)-.25 E(xt:)-.15 E/F3 8/Courier@0
SF(int wid_GetText\(tk_display,widgetid,text\))90 624 Q(TkDisplay *tk_display;)
90 634 Q(WidgetID widgetid;)90 644 Q(unsigned char **text;)90 654 Q F1(te)90
676 Q .249(xt: address of a pointer to allocate memory and store the widget')
-.15 F 2.75(st)-.55 G -.15(ex)366.69 676 S .25(t. Y).15 F .25
(ou must use free\(te)-1.1 F .25(xt\) to free the)-.15 F
(chain of caracters once the)90 688 Q 2.5(ya)-.15 G(re no longer useful.)208.41
688 Q EP
%%Page: 32 32
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-3)293.004 48 S 3(2-)306 48 S/F1 12/Times-Bold@0 SF 3
(7.2 Modifying)90 86 R(the image)3 E/F2 10/Times-Roman@0 SF 1.068
(In the same w)90 128 R(ay)-.1 E 3.568(,o)-.65 G 1.067(nly one function permit\
s to modify the display of an image in the widget. So f)168.782 128 R(ar)-.1 E
3.567(,t)-.4 G(he)512.56 128 Q(function only af)90 140 Q(fects b)-.25 E
(uttons.)-.2 E/F3 8/Courier@0 SF
(int wid_SetPixmapDecoration\(tk_display,widgetid,wid_pixmap,delay\))90 164 Q
(TkDisplay *tk_display;)90 174 Q(WidgetID widgetid;)90 184 Q
(WidgetPixmapDecoration *wid_pixmap;)90 194 Q(Bool delay;)90 204 Q/F4 10
/Times-Bold@0 SF(tk_display)90 224 Q F2 2.5(:p)C
(ointer on the structure returned by)144.74 224 Q/F5 10/Times-Italic@0 SF
(tk_OpenSession.)2.5 E F4(widgetid)90 236 Q F2 2.5(:i)C
(ndenti\214cator of the widget to be modi\214ed.)134.73 236 Q F4(wid_text)90
248 Q F2 2.5(:p)C(ointer on a wid_te)136.94 248 Q(xt structure .)-.15 E F4
(delay:)90 260 Q F2 .268(bool v)2.768 F .268
(alue de\214ning whether the widget')-.25 F 2.768(sr)-.55 G .268
(efreshing must tak)289.106 260 R 2.768(ep)-.1 G .268(lace no)375.63 260 R
2.768(w\()-.25 G -.15(Fa)417.566 260 S .268(lse\) or later \(T).15 F .269
(rue\) with)-.35 F(the)90 272 Q F5(wid_Refr)2.5 E(esh)-.37 E F2(function.)2.5 E
F4 2.5(7.2.1 W)90 308 R(idgetPixmapDecoration structur)-.18 E(e)-.18 E F2
(This structure contains all the items that might need modifying:)90 344 Q
(typedef struct {)90 368 Q(unsigned long mask;)162 380 Q
(Pixmap pixmap, pixmap_mask;)162 392 Q(unsigned int depth;)162 404 Q
(unsigned int gra)162 416 Q(vity;)-.2 E(int x, y;)162 428 Q
(unsigned int width, height;)162 440 Q 2.5(}W)162 452 S(idgetPixmapDecoration;)
178.34 452 Q F4(mask)90 488 Q F2 2.5(:c)C
(omposition in logical ORs of the follo)122.5 488 Q(wing v)-.25 E(alues)-.25 E
(#de\214ne SPPixmap)126 512 Q(1)270 512 Q(#de\214ne SPPixmapMask)126 524 Q(2)
270 524 Q(#de\214ne SPDepth)126 536 Q(4)270 536 Q(#de\214ne SPGra)126 548 Q
68.09(vity 8)-.2 F(#de\214ne SPX)126 560 Q(16)270 560 Q(#de\214ne SPY)126 572 Q
(32)270 572 Q(#de\214ne SPW)126 584 Q 73.84(idth 64)-.4 F(#de\214ne SPHeight)
126 596 Q(128)270 596 Q F4(pixmap)90 620 Q F2 2.5(:p)C(ixmap to be displayed)
132.51 620 Q F4(pixmap_mask)90 632 Q F2 2.5(:p)C(ixmap')160.29 632 Q 2.5(sm)
-.55 G(ask. It is necessarily a depth 1 pixmap.)202.24 632 Q F4(depth)90 644 Q
F2 2.5(:p)C(ixmap')124.73 644 Q 2.5(sd)-.55 G(epth.)163.9 644 Q F4(gra)90 656 Q
(vity)-.25 E F2 2.5(:o)C(ne of the follo)130.58 656 Q(wing positionings:)-.25 E
(/********* Bitmap Gra)162 692 Q(vity *********/)-.2 E EP
%%Page: 33 33
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-3)293.004 48 S 3(3-)306 48 S/F1 10/Times-Roman@0 SF
(#de\214ne NoBitmap)126 84 Q(0)270 84 Q(#de\214ne NorthW)126 96 Q 37.03
(estBitmap 1)-.8 F(#de\214ne NorthBitmap)126 108 Q(2)270 108 Q
(#de\214ne NorthEastBitmap)126 120 Q(3)270 120 Q(#de\214ne W)126 132 Q 60.36
(estBitmap 4)-.8 F(#de\214ne CenterBitmap)126 144 Q(5)270 144 Q
(#de\214ne EastBitmap)126 156 Q(6)270 156 Q(#de\214ne SouthW)126 168 Q 37.02
(estBitmap 7)-.8 F(#de\214ne SouthBitmap)126 180 Q(8)270 180 Q
(#de\214ne SouthEastBitmap)126 192 Q(9)270 192 Q(#de\214ne UserDe\214nedBitmap)
126 204 Q(10)270 204 Q/F2 10/Times-Bold@0 SF(x, y:)90 240 Q F1
(position of the pixmap in case gra)2.5 E(vity is UserDe\214nedBitmap:)-.2 E F2
(width, height)90 252 Q F1 2.5(:p)C(ixmap')156.4 252 Q 2.5(sw)-.55 G
(idth and height.)197.79 252 Q/F3 12/Times-Bold@0 SF 3(7.3 Changing)90 300 R
(cursors)3 E F1 -.4(Wi)90 342 S(dgets ha).4 E .3 -.15(ve p)-.2 H(re-attrib).15
E(uted cursors. If you wish to modify them, call the follo)-.2 E
(wing function:)-.25 E/F4 8/Courier@0 SF
(extern int wid_SetCursor\(tk_display,widgetid,cursor\);)90 366 Q
(TkDisplay *tk_display;)90 376 Q(WidgetID widgetid;)90 386 Q(Cursor cursor;)90
396 Q F2(cursor)90 416 Q F1 7.06(:t)C 4.56
(his parameter must contain the identi\214cator of a v)130.39 416 R 4.56
(alid cursor)-.25 F 7.06(.Y)-.55 G 4.56(ou can use those in)427.66 416 R
(tk_display->cursors, enter yours as ar)90 428 Q
(gument or put 0 to restore the def)-.18 E(ault cursor)-.1 E(.)-.55 E F3 3
(7.4 Assigning)90 476 R 3(an)3 G(ew colormap)179.688 476 Q F1 -.4(Wi)90 518 S
.077(dgets ha).4 F .377 -.15(ve a d)-.2 H(ef).15 E .078
(ault colormap, the standard one installed on the serv)-.1 F(er)-.15 E 2.578
(.I)-.55 G 2.578(fy)390.982 518 S .078(ou wish to assign your widget)401.89 518
R 2.5(an)90 530 S .5 -.25(ew c)101.94 530 T(olormap, you must use).25 E/F5 10
/Times-Italic@0 SF(wid_SetColormap)2.5 E F1(:)A F4
(extern int wid_SetColormap\(tk_display,widgetid,colormap\);)90 554 Q
(TkDisplay *tk_display;)90 564 Q(WidgetID widgetid;)90 574 Q
(Colormap colormap;)90 584 Q F2(colormap)90 604 Q F1 4.606(:t)C 2.106
(his parameter must contain the identi\214cator of a v)140.716 604 R 2.106
(alid colormap. Y)-.25 F 2.105(ou can use one of the)-1.1 F
(colormaps de\214ned by the X serv)90 616 Q
(er or set colormap to 0 to restore the toolkit')-.15 E 2.5(sd)-.55 G(ef)407.31
616 Q(ault colormap.)-.1 E F4(extern int wid_SetPrivateColors\()90 640 Q
(TkDisplay *tk_display,)126 650 Q(WidgetID widgetid,)126 660 Q
(WidgetColors *wid_colors,)126 670 Q(Bool delay)126 680 Q(\);)90 690 Q EP
%%Page: 34 34
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-3)293.004 46 S 3(4-)306 46 S/F1 10/Times-Roman@0 SF
(This function hasn')90 84 Q 2.5(tb)-.18 G(een tested. W)177.87 84 Q 2.5(es)-.8
G(trongly advise you ag)242.05 84 Q(ainst using it.)-.05 E/F2 12/Times-Bold@0
SF 3(7.5 Setting)90 132 R(pri)3 E -.12(va)-.12 G(te colors).12 E F1 .314
(All the objects in the de)90 174 R -.15(ve)-.25 G .314
(lopment kit refer to the def).15 F .314
(ault color tables contained in the TkDisplay structure.)-.1 F 7.338 -.8(To c)
90 186 T(ircumv).8 E 5.738
(ent this rule and choose colors speci\214c to a particular widget , you can)
-.15 F(call)507.56 186 Q/F3 10/Times-Italic@0 SF(wid_SetPrivateColor)90 198 Q
(s)-.1 E F1 3.985(.B)C 3.485(ec)191.395 198 S .986(areful ho)203.76 198 R(we)
-.25 E -.15(ve)-.25 G 1.786 -.4(r, t).15 H .986
(his function requires a careful w).4 F .986(ording of the)-.1 F -.4(Wi)5.986 G
(dgetColors).4 E(structure:)90 210 Q/F4 8/Courier@0 SF
(extern int wid_SetPrivateColors\(tk_display,widgetid,wid_colors,delay\);)90
234 Q(TkDisplay *tk_display;)90 244 Q(WidgetID widgetid;)90 254 Q
(WidgetColors *wid_colors;)90 264 Q(Bool delay;)90 274 Q/F5 10/Times-Bold@0 SF
(wid_colors)90 294 Q F1 4.27(:t)C 1.77(his parameter must point on a W)145.94
294 R 1.77(idgetColors structure, e)-.4 F -.15(ve)-.25 G 1.77
(ry \214eld of which must contain).15 F(allocated colors.)90 306 Q F5(delay:)90
318 Q F1(if T)2.5 E(rue, the widget')-.35 E 2.5(sr)-.55 G(efreshing is put of)
205.19 318 Q(f, otherwise F)-.25 E(alse causes it to be)-.15 E(gin immediately)
-.15 E(.)-.65 E F2 3(7.6 Refr)90 366 R(eshing a widget)-.216 E F1 -.15(Fo)90
408 S 2.5(rr).15 G(easons speci\214c to your program, you can decide at an)
109.57 408 Q 2.5(ym)-.15 G(oment to refresh your widget')338.54 408 Q 2.5(sc)
-.55 G(ontents.)468.24 408 Q(This operation tak)90 420 Q
(es place with the follo)-.1 E(wing function:)-.25 E F4
(int wid_Refresh\(tk_display,widgetid\))90 444 Q(TkDisplay *tk_display;)90 454
Q(int widgetid;)90 464 Q EP
%%Page: 35 35
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-3)293.004 48 S 3(5-)306 48 S/F1 30/Times-Bold@0 SF
(8)507 107 Q(Managing widgets)287.82 142 Q/F2 10/Times-Roman@0 SF(This chapter\
 is most important because it deals with all the topics essential to manage yo\
ur objects easily)90 317 Q(.)-.65 E/F3 12/Times-Bold@0 SF 3(8.1 W)90 365 R
(idgets' state)-.216 E F2 -.4(Wi)90 407 S(dgets all admit se).4 E -.15(ve)-.25
G(ral states which can be used together:).15 E
(/********* Common states to all widgets *********/)162 431 Q
(#de\214ne Ungrayed)126 455 Q(0)234 455 Q(#de\214ne Unpushed)126 467 Q(0)234
467 Q(#de\214ne Unblock)126 479 Q 29.78(ed 0)-.1 F(#de\214ne Pushed)126 491 Q
(1)234 491 Q(#de\214ne Grayed)126 503 Q(2)234 503 Q(#de\214ne Block)126 515 Q
40.33(ed 4)-.1 F/F4 10/Times-Bold@0 SF(Ungray)90 539 Q(ed/Gray)-.1 E(ed)-.1 E
F2 3.264(:t)C .764(he widget is grayed and totally out of user')175.844 539 R
3.264(sr)-.55 G .764(each. It doesn')363.53 539 R 3.264(tr)-.18 G .764
(eturn an)432.842 539 R 3.264(ye)-.15 G -.15(ve)478.4 539 S .765(nt to the).15
F(program.)90 551 Q F4(Unpushed/Pushed)90 563 Q F2 2.5(:t)C
(he widget is pushed or released.)175.31 563 Q F4(Unblock)90 575 Q(ed/Block)-.1
E(ed)-.1 E F2 2.762(:t)C .262(he widget is "technically block)181.472 575 R
.261(ed", that is to say that the user cannot get access to it.)-.1 F
(It is not grayed, ho)90 587 Q(we)-.25 E -.15(ve)-.25 G .8 -.4(r, a).15 H
(nd returns e).4 E -.15(ve)-.25 G(nts to the program.).15 E(The follo)90 611 Q
(wing function tak)-.25 E(es care of modifying the widget')-.1 E 2.5(sc)-.55 G
(urrent state:)337.67 611 Q/F5 8/Courier@0 SF
(int wid_SetState\(tk_display,widgetid,state\))90 635 Q(TkDisplay *tk_display;)
90 645 Q(WidgetID widgetid;)90 655 Q(unsigned int state;)90 665 Q F2 1.445
(The v)90 685 R 1.445(ariable state is the sum of all chosen states \(e.g. Gra\
yed+Unpushed\). The widget is automatically)-.25 F(refreshened.)90 697 Q EP
%%Page: 36 36
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-3)293.004 48 S 3(6-)306 48 S/F1 10/Times-Roman@0 SF
.347(If you wish to mak)90 84 R 2.847(ea)-.1 G .347(ll the widgets of a windo)
178.565 84 R 2.847(wa)-.25 G .347(nd its subwindo)293.717 84 R .346
(ws momentarily inoperant, you must use)-.25 F/F2 10/Times-Italic@0 SF
(wid_SetF)90 96 Q -.37(re)-.55 G(eze).37 E F1(:)A/F3 8/Courier@0 SF
(wid_SetFreeze\(tk_display,window, action\))90 120 Q(TkDisplay *tk_display;)90
130 Q(Window window;)90 140 Q .2(Bool action;)90 150 R .2
(/* True paralyses the widgets, False makes them accessible again */)198.4 150
R F1 1.6 -.8(To k)90 180 T(no).8 E 2.5(waw)-.25 G(idget')141.44 180 Q 2.5(ss)
-.55 G(tate, you can use wid_GetState:)174.5 180 Q F3
(int wid_GetState\(tk_display,widgetid\))90 204 Q(TkDisplay *tk_display;)90 214
Q(WidgetID widgetid;)90 226 Q/F4 12/Times-Bold@0 SF 3(8.2 F)90 266 R(ocus)-.3 E
F1 .746(The focus is an important topic and should be seriously tak)90 308 R
.746(en into consideration.)-.1 F 2.346 -.8(To f)5.746 H .746
(acilitate its transfer).7 F(from one widget to another)90 320 Q 2.5(,y)-.4 G
(ou must absolutely use the)208.47 320 Q F2(wid_GiveF)5 E(ocus)-1.05 E F1
(function.)2.5 E F3(int wid_GiveFocus\(tk_display,widgetid\))90 344 Q
(TkDisplay *tk_display;)90 354 Q(WidgetID widgetid;)90 364 Q F1 .499
(This function tak)90 384 R .499(es the focus a)-.1 F -.1(wa)-.15 G 2.999(yf).1
G .499(rom the current user and gi)237.614 384 R -.15(ve)-.25 G 3(si).15 G 3
(tt)366.85 384 S 3(ot)375.41 384 S .5(he speci\214ed widget. If the widget)
386.19 384 R 1.037(or one of the windo)90 396 R 1.036
(ws containing it is not displayed on the screen, the function returns a v)-.25
F 1.036(alue dif)-.25 F(ferent)-.25 E(from 0.)90 408 Q(Otherwise it returns 0.)
3 E F4 3(8.3 Dimensions)90 456 R(and coordinates)3 E F1 .767
(Users often redimension windo)90 498 R .767(ws as \214ts their needs. T)-.25 F
3.268(or)-.8 G .768(earrange the positioning and size of the widgets)325.824
498 R(contained, you must use this function:)90 510 Q F3
(int wid_Configure\(tk_display,widgetid,x,y,width,height,mask\))90 534 Q
(TkDisplay *tk_display;)90 544 Q(WidgetID widgetid;)90 554 Q(int x,y;)90 564 Q
(unsigned int width,height;)90 574 Q(unsigned long mask;)90 584 Q/F5 10
/Times-Bold@0 SF(x, y)90 604 Q F1 2.5(:w)C(idget')117.5 604 Q 2.5(sc)-.55 G
(oordinates)151.11 604 Q F5(width, height)90 616 Q F1 2.5(:w)C(idget')158.62
616 Q 2.5(ss)-.55 G(ize. These 2 parameters must absolutely be greater than 0.)
191.68 616 Q F5(mask:)90 628 Q F1(composition of the follo)2.5 E(wing v)-.25 E
(alues which de\214ne what parameter to modify:)-.25 E(#de\214ne CFX)126 652 Q
(1)234 652 Q(#de\214ne CFY)126 664 Q(2)234 664 Q(#de\214ne CFW)126 676 Q 36.73
(idth 4)-.4 F(#de\214ne CFHeight)126 688 Q(8)234 688 Q EP
%%Page: 37 37
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-3)293.004 48 S 3(7-)306 48 S/F1 10/Times-Roman@0 SF
(If an error occurs, the function returns a v)90 84 Q(alue dif)-.25 E
(ferent from 0, otherwise it returns 0.)-.25 E .248(On the in)90 108 R -.15(ve)
-.4 G .248(rse, if you wish to kno).15 F 2.748(waw)-.25 G(idget')251.412 108 Q
2.748(sd)-.55 G .247(imensions \(this is v)285.83 108 R .247
(ery practical for the menu bars that can)-.15 F
(change height dynamically\), call this function:)90 120 Q/F2 8/Courier@0 SF
(int wid_GetGeometry\(tk_display,widgetid,parent,top_level,x,y,width,height\))
90 144 Q(TkDisplay *tk_display;)90 154 Q(WidgetID widgetid;)90 164 Q
(Window *parent, *top_level;)90 174 Q(/* RETURN */)234 174 Q(int *x, *y;)90 184
Q(/* RETURN */)234 184 Q(unsigned int *width, *height; /* RETURN */)90 194 Q/F3
10/Times-Bold@0 SF(par)90 214 Q(ent)-.18 E F1 2.5(:w)C(indo)130.65 214 Q 2.5
(wc)-.25 G(ontaining the widget:)162.34 214 Q F3(top_le)90 226 Q -.1(ve)-.15 G
(l).1 E F1 2.5(:t)C(op le)136.14 226 Q -.15(ve)-.25 G 2.5(lw).15 G(indo)177.4
226 Q 2.5(wc)-.25 G(ontaining possibly the parent and the widget.)209.09 226 Q
F3(x, y)90 238 Q F1 2.5(:w)C(idget')117.5 238 Q 2.5(sp)-.55 G(osition.)151.67
238 Q F3(width, height)90 250 Q F1 2.5(:w)C(idget')158.62 250 Q 2.5(sd)-.55 G
(imensions.)192.79 250 Q/F4 12/Times-Bold@0 SF 3(8.4 Repar)90 298 R(enting)
-.216 E F1 -1.1(Yo)90 340 S 2.515(uc)1.1 G .015(an mo)113.075 340 R .315 -.15
(ve y)-.15 H .015(our widgets from one windo).15 F 2.515(wt)-.25 G 2.515(oa)
280.11 340 S .015(nother by reparenting them. W)292.065 340 R 2.516(ed)-.8 G
(on')426.312 340 Q 2.516(tr)-.18 G .016(ecommend you do)448.088 340 R(it, b)90
352 Q(ut if you need to, here is the function you will need:)-.2 E F2
(wid_Reparent\(tk_display,widgetid,parent,top_level\))90 376 Q
(TkDisplay *display;)90 386 Q(WidgetID widgetid;)90 396 Q
(Window parent, top_level;)90 406 Q F3(par)90 426 Q(ent:)-.18 E F1(windo)2.5 E
2.5(wi)-.25 G 2.5(nw)161.23 426 S(hich the widget is supposed to be located.)
175.95 426 Q F3(top_le)90 438 Q -.1(ve)-.15 G(l).1 E F1 4.409(:t)C 1.909(op le)
138.049 438 R -.15(ve)-.25 G 4.409(lw).15 G(indo)183.127 438 Q 4.409(wc)-.25 G
1.909(ontaining the widget and possibly the parent if parent and top_le)216.726
438 R -.15(ve)-.25 G 4.408(la).15 G(re)514.23 438 Q(dif)90 450 Q(ferent.)-.25 E
EP
%%Page: 38 38
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-3)293.004 48 S 3(8-)306 48 S/F1 30/Times-Bold@0 SF
(9)507 107 Q(Items)450.36 142 Q/F2 10/Times-Roman@0 SF 3.275(Ac)90 317 S .775(\
ertain number of widgets can contain items to be displayed, each item being an\
 independent object in)104.935 317 R 1.06(itself. The best kno)90 329 R 1.059
(wn widget is the \215oating menu. Others function in the same w)-.25 F 1.059
(ay and share the same)-.1 F(API.)90 341 Q
(What we will study in this chapter is the item programming interf)90 353 Q
(ace.)-.1 E/F3 12/Times-Bold@0 SF 3(9.1 Adding)90 401 R(or deleting an item)3 E
F2 .688(Items, contrary to widgets, don')90 443 R 3.188(td)-.18 G .689
(epend on the X serv)231.3 443 R(er')-.15 E 3.189(sr)-.55 G .689
(esources \(windo)334.845 443 R .689(ws, properties, etc.\). The)-.25 F 3.189
(ya)-.15 G(re)514.23 443 Q 1.17
(managed dynamically and locally by the toolkit. Y)90 455 R 1.17
(ou can add items, delete some, mo)-1.1 F 1.47 -.15(ve t)-.15 H 1.17
(hem or modify).15 F(them at an)90 467 Q 2.5(ym)-.15 G(oment.)146.79 467 Q 1.6
-.8(To a)90 491 T(dd an item, you must call item_Add:).8 E/F4 8/Courier@0 SF(i\
nt item_Add\(tk_display,widgetid,subwidgetid,position,type,text,key,font,state\
,delay\))90 515 Q(TkDisplay *tk_display;)90 525 Q(WidgetID widgetid;)90 535 Q
(WidgetID subwidgetid;)90 545 Q(int position, type;)90 555 Q(char *text;)90 565
Q(unsigned int key;)90 575 Q(XFontStruct *font;)90 585 Q(unsigned int state;)90
595 Q(Bool delay;)90 605 Q/F5 10/Times-Bold@0 SF(widgetid)90 625 Q F2 2.5(:w)C
(idget supposed to contain the item.)139.17 625 Q F5(subwidgetid)90 637 Q F2
3.2(:w)C .7(idget to which the item must be link)154.88 637 R .701
(ed. This option is v)-.1 F .701(alid only for a \215oating menu item)-.25 F
(used as entry point by another menu. Y)90 649 Q
(ou can set it to 0 if you use it on a list or a combo box.)-1.1 E F5(position)
90 661 Q F2 3.008(:p)C .508(osition of the item in the widget')134.688 661 R
3.008(ss)-.55 G .508(et of items: either the ST)279.084 661 R(AR)-.93 E 3.008
(Tv)-.6 G .508(alue, or the END v)407.012 661 R .508(alue, or a)-.25 F(positi)
90 673 Q .3 -.15(ve i)-.25 H(nte).15 E
(ger between 0 and the number of already e)-.15 E(xisting items.)-.15 E F5
(type)90 685 Q F2 2.5(:t)C(ype of the item:)116.39 685 Q EP
%%Page: 39 39
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-3)293.004 48 S 3(9-)306 48 S/F1 10/Times-Roman@0 SF
(#de\214ne MN_ITEM)126 84 Q 31(0/)270 84 S 2.5(*D)308.78 84 S(ef)323.5 84 Q
(ault */)-.1 E(#de\214ne MN_SUBMENU)126 96 Q(1)270 96 Q(#de\214ne MN_HB)126 108
Q 61.02(AR 2)-.35 F(#de\214ne MN_VB)126 120 Q 61.02(AR 3)-.35 F(These v)90 144
Q(alues apply only to menu. F)-.25 E(or other widgets, enter 0.)-.15 E/F2 10
/Times-Bold@0 SF(text)90 156 Q F1 3.068(:c)C .569(hain of caracters supposed t\
o appear in the widget to represent the item. Be careful, no cop)116.388 156 R
3.069(yo)-.1 G 3.069(ft)501.151 156 S(his)510.33 156 Q .276
(chain is made. Therefore you mustn')90 168 R 2.775(td)-.18 G .275
(isallocate or mo)248.945 168 R .575 -.15(ve t)-.15 H .275
(his chain in the memory).15 F 2.775(.T)-.65 G .275(he widget only k)436.565
168 R(eeps)-.1 E 5.337(ap)90 180 S 2.837
(ointer on the chain, and a modi\214cation could lead to a memory error)104.777
180 R 5.337(.T)-.55 G 5.338(oc)424.428 180 S 2.838(hange the te)439.206 180 R
2.838(xt, use)-.15 F/F3 10/Times-Italic@0 SF(item_SetT)90 192 Q -.2(ex)-.92 G
(tDecor).2 E(ation)-.15 E F1(\(cf paragraph 9.3.1\) .)2.5 E F2 -.1(ke)90 204 S
(y).1 E F1 2.5(:i)C -1.95 -.4(nv a)112.96 204 T(lid option. Al).4 E -.1(wa)-.1
G(ys set it to 0.).1 E(font: typef)90 216 Q(ace used to dra)-.1 E 2.5(wt)-.15 G
(he item')203.89 216 Q 2.5(st)-.55 G -.15(ex)245.56 216 S
(t. If font is NULL, the widget').15 E 2.5(sd)-.55 G(ef)387.34 216 Q
(ault font is used.)-.1 E F2(state)90 228 Q F1 2.5(:i)C(tem')118.05 228 Q 2.5
(ss)-.55 G(tate, it')146.11 228 Q 2.5(sac)-.55 G(ombination of the follo)191.66
228 Q(wing v)-.25 E(alues:)-.25 E(#de\214ne Ungrayed)126 252 Q(0)234 252 Q
(#de\214ne Uncheck)126 264 Q 28.68(ed 0)-.1 F(#de\214ne Unpushed)126 276 Q(0)
234 276 Q(#de\214ne Unblock)126 288 Q 29.78(ed 0)-.1 F(#de\214ne Pushed)126 300
Q(1)234 300 Q(#de\214ne Grayed)126 312 Q(2)234 312 Q(#de\214ne Block)126 324 Q
40.33(ed 4)-.1 F(#de\214ne Check)126 336 Q 38.67(ed 8)-.1 F F2(delay)90 360 Q
F1 3.395(:d)C .895(etermines if the widget must be redra)123.955 360 R .895
(wn immediately or w)-.15 F .895(ait for other e)-.1 F -.15(ve)-.25 G .894
(nts or other actions to).15 F(refreshen itself.)90 372 Q
(The function returns 0 if e)90 396 Q -.15(ve)-.25 G
(rything goes well, otherwise it returns a ne).15 E -.05(ga)-.15 G(ti).05 E .3
-.15(ve v)-.25 H(alue.)-.1 E
(If you wish to delete this item or another one, use item_Delete:)90 420 Q/F4 8
/Courier@0 SF(int item_Delete\(tk_display,widgetid,number,delay\))90 444 Q
(TkDisplay *tk_display;)90 454 Q(WidgetID widgetid;)90 464 Q(int number;)90 474
Q(Bool delay;)90 484 Q F2(number)90 504 Q F1 2.68(:p)C .18
(osition of the item to be deleted: either the v)134.35 504 R .18(alue ST)-.25
F(AR)-.93 E 1.66 -.74(T, o)-.6 H 2.68(rt).74 G .18(he v)380.36 504 R .18
(alue END, or a positi)-.25 F .48 -.15(ve i)-.25 H(nte).15 E(ger)-.15 E
(between 0 and the number of already e)90 516 Q(xisting items minus 1.)-.15 E
F2(delay)90 528 Q F1 2.682(:d)C .182(etermines if the widget must be redra)
123.242 528 R .182(wn immediately or w)-.15 F .182(ait for other e)-.1 F -.15
(ve)-.25 G .181(nts or other actions to be).15 F(refreshed.)90 540 Q 1.6 -.8
(To d)90 564 T(elete all items at once, you can prefer the f).8 E(aster)-.1 E
2.5(,m)-.4 G(ore ef)308.92 564 Q(\214cient, function hereafter:)-.25 E F4
(int item_DeleteAll\(tk_display,widgetid\))90 588 Q(TkDisplay *tk_display;)90
598 Q(WidgetID widgetid;)90 608 Q F1 .404(It is sometimes necessary to kno)90
638 R 2.904(wh)-.25 G .904 -.25(ow m)236.604 638 T(an).25 E 2.904(yi)-.15 G
.404(tems are in a widget, for that,)279.232 638 R F3(wid_GetNumItems)2.904 E
F1 .405(returns the)2.905 F(right number:)90 650 Q F4
(int wid_GetNumItems\(tk_display,widgetid\))90 674 Q(TkDisplay *tk_display;)90
684 Q(WidgetID widgetid;)90 694 Q EP
%%Page: 40 40
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-4)293.004 46 S 3(0-)306 46 S/F1 12/Times-Bold@0 SF
(9.2 P)90 86 Q(ositioning items)-.24 E/F2 10/Times-Roman@0 SF
(The position of items is not static. At an)90 128 Q 2.5(ym)-.15 G
(oment you can mo)265.41 128 Q .3 -.15(ve o)-.15 H(ne with this function :).15
E/F3 8/Courier@0 SF(int item_Move\(tk_display,widgetid,current,new,delay\))90
152 Q(TkDisplay *tk_display;)90 162 Q(WidgetID widgetid;)90 172 Q
(int current, new;)90 182 Q(Bool delay;)90 192 Q/F4 10/Times-Bold@0 SF(curr)90
212 Q(ent)-.18 E F2 3.872(:i)C(tem')131.462 212 Q 3.872(sc)-.55 G 1.372
(urrent position. It must imperati)161.444 212 R -.15(ve)-.25 G 1.372
(ly be an inte).15 F 1.372(ger between 0 and the number of items)-.15 F
(minus 1.)90 224 Q F4(new)90 236 Q F2 2.861(:i)C(tem')115.641 236 Q 2.861(sn)
-.55 G .861 -.25(ew p)145.172 236 T .361(osition. Either ST).25 F(AR)-.93 E
1.841 -.74(T, o)-.6 H 2.861(rE).74 G .361(ND, or a positi)276.397 236 R .661
-.15(ve i)-.25 H(nte).15 E .361(ger between 0 and the number of items)-.15 F
(minus 1.)90 248 Q(The function returns 0 if e)90 272 Q -.15(ve)-.25 G
(rything goes well, otherwise it returns a ne).15 E -.05(ga)-.15 G(ti).05 E .3
-.15(ve v)-.25 H(alue.)-.1 E .961(Each widget able to contain items has a curs\
or current position. This crusor highlights the item acti)90 296 R 1.261 -.15
(ve o)-.25 H(r).15 E(selected by the user)90 308 Q(.)-.55 E 1.6 -.8(To c)90 320
T(hange this current position, the toolkit pro).8 E(vides the function)-.15 E
/F5 10/Times-Italic@0 SF(wid_SetP)2.5 E(osition)-.8 E F2(:)A F3
(int wid_SetPosition\(tk_display,widgetid,position\))90 344 Q
(TkDisplay *tk_display;)90 354 Q(WidgetID widgetid;)90 364 Q(int position;)90
374 Q F4(position)90 394 Q F2 2.5(:n)C(umber of the item to be selected as ne)
134.18 394 Q 2.5(wi)-.25 G(tem.)297.51 394 Q(The function returns 0 if e)90 418
Q -.15(ve)-.25 G(rything goes well, otherwise it returns a ne).15 E -.05(ga)
-.15 G(ti).05 E .3 -.15(ve v)-.25 H(alue.)-.1 E(In)90 430 Q -.15(ve)-.4 G
(rsely).15 E 3.48(,i)-.65 G 3.48(fy)134.77 430 S .98(ou w)146.58 430 R .98
(ant to obtain the current position follo)-.1 F .98(wing an e)-.25 F -.15(ve)
-.25 G .98(nt \(double click, te).15 F .98(xt entered on the)-.15 F -.1(ke)90
442 S 1.104(yboard, etc.\), the function)-.05 F F5(wid_GetP)3.604 E(osition)-.8
E F2 1.104(will pro)3.604 F 1.104
(vide you with the desired information by returning)-.15 F
(the correct position or -1 if there is no current position:)90 454 Q F1 3
(9.3 Decoration)90 502 R(and composition of items)3 E F2(Each item of a widget\
 can be represented by a chain of caracters, a pixmap or both.)90 544 Q F4 2.5
(9.3.1 Chain)90 580 R(of caracters)2.5 E F2 .03
(When you add an element, you usually enter the chain of caracters as ar)90 616
R .03(gument of the function. If this is not)-.18 F .734
(the case or if you wish to modify the)90 628 R .733
(chain later on, the function)3.734 F F5(item_SetT)3.233 E -.2(ex)-.92 G
(tDecor).2 E(ation)-.15 E F2 .733(must al)3.233 F -.1(wa)-.1 G .733(ys be).1 F
(used.)90 640 Q F3
(int item_SetTextDecoration\(tk_display,widgetid,number,item_text,delay\))90
664 Q(TkDisplay *tk_display;)90 674 Q(WidgetID widgetid;)90 684 Q(int number;)
90 694 Q EP
%%Page: 41 41
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-4)293.004 46 S 3(1-)306 46 S/F1 8/Courier@0 SF
(ItemTextDecoration *item_text;)90 82 Q(Bool delay;)90 92 Q/F2 10/Times-Bold@0
SF(widgetid)90 112 Q/F3 10/Times-Roman@0 SF 2.5(:w)C
(idget containing the element to be modi\214ed.)139.17 112 Q F2(number:)90 124
Q F3(number of the item to be modi\214ed)2.5 E F2(item_text)90 136 Q F3 2.5(:p)
C(ointer on an ItemT)140.26 136 Q -.15(ex)-.7 G
(tDecoration structure correctly \214lled.).15 E F2(delay)90 148 Q F3 2.5(:b)C
(ool v)123.06 148 Q(alue deciding whether the widget')-.25 E 2.5(sr)-.55 G
(efreshing must tak)288.34 148 Q 2.5(ep)-.1 G(lace no)374.06 148 Q 2.5(w\()-.25
G -.15(Fa)415.46 148 S(lse\) or later \(T).15 E(rue\).)-.35 E(Let')90 172 Q
3.553(sl)-.55 G 1.053(ook at the ItemT)116.333 172 R -.15(ex)-.7 G 1.054
(tDecoration structure in a little more detail. This structure is some).15 F
1.054(what lik)-.25 F 3.554(et)-.1 G(he)512.56 172 Q -.4(Wi)90 184 S(dgetT).4 E
-.15(ex)-.7 G(tDecoration structure for widgets. Here is its composition:).15 E
(typedef struct {)90 208 Q(unsigned long mask;)162 220 Q(char *te)162 232 Q
(xt;)-.15 E(XF)162 244 Q(ontStruct *font;)-.15 E(unsigned int k)162 256 Q -.15
(ey)-.1 G(;).15 E 2.5(}I)162 268 S(temT)172.63 268 Q -.15(ex)-.7 G
(tDecoration;).15 E F2(mask)90 292 Q F3 2.5(:c)C
(omposition in logical ORs of the follo)122.5 292 Q(wing v)-.25 E(alues:)-.25 E
(#de\214ne STT)126 316 Q -.15(ex)-.7 G 46.91(t1).15 G(#de\214ne STF)126 328 Q
43.7(ont 2)-.15 F(#de\214ne STK)126 340 Q 45.93 -.15(ey 4)-.25 H(each v)90 364
Q(alue corresponds to a \214eld in the structure.)-.25 E F2(text)90 388 Q F3
2.5(:c)C(hain of caracters to be displayed in the widget. This \214eld is sele\
cted with the v)115.82 388 Q(alue STT)-.25 E -.15(ex)-.7 G(t.).15 E F2 -.25(fo)
90 400 S(nt).25 E F3 2.5(:d)C(ef)117.25 400 Q(ault font for the widget')-.1 E
2.5(sd)-.55 G(isplay)231.3 400 Q 2.5(.T)-.65 G
(his \214eld is selected with STF)265.65 400 Q(ont.)-.15 E F2 -.1(ke)90 412 S
(y).1 E F3 3.96(:k)C 1.76 -.15(ey s)116.54 412 T 1.46
(hifting the focus to the widget. This option is not v).15 F 1.459
(alid right no)-.25 F 3.259 -.65(w. T)-.25 H 1.459(he \214eld is selected with)
.65 F(STK)90 424 Q -.15(ey)-.25 G(.)-.5 E 1.6 -.8(To g)90 448 T(et the te).8 E
(xt of an item, you must use the foll)-.15 E(wing function:)-.1 E F1
(int wid_GetText\(tk_display,widgetid,text\))90 472 Q(TkDisplay *tk_display;)90
482 Q(WidgetID widgetid;)90 492 Q(unsigned char **text;)90 502 Q F3 .267
(It allocates memory and copies the chain of caracters in te)90 522 R .267
(xt. Once you don')-.15 F 2.768(tn)-.18 G .268(eed it an)408.06 522 R .268
(ymore, you can call)-.15 F(free to free memory space.)90 534 Q F2 2.5
(9.3.2 Pixmap)90 570 R(and bitmap)2.5 E F3(In the same manner)90 606 Q 2.5(,y)
-.4 G(ou can act on the image that can appear in the item with the follo)178.19
606 Q(wing function:)-.25 E F1
(int item_SetPixmapDecoration\(tk_display,widgetid,number,item_pixmap,delay\))
90 630 Q(TkDisplay *tk_display;)90 640 Q(WidgetID widgetid;)90 650 Q
(int number;)90 660 Q(ItemPixmapDecoration *item_pixmap;)90 670 Q(Bool delay;)
90 680 Q F2(widgetid)90 700 Q F3 2.5(:w)C
(idget containing the item to be modi\214ed.)139.17 700 Q EP
%%Page: 42 42
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-4)293.004 48 S 3(2-)306 48 S/F1 10/Times-Bold@0 SF
(number)90 84 Q/F2 10/Times-Roman@0 SF 2.5(:n)C
(umber of the item to be modi\214ed.)134.17 84 Q F1(item_pixmap)90 96 Q F2 2.5
(:p)C(ointer on an ItemPixmapDecoration structure correctly \214lled.)156.39 96
Q F1(delay)90 108 Q F2 2.5(:b)C(ool v)123.06 108 Q
(alue deciding whether the widget')-.25 E 2.5(sr)-.55 G(efreshing must tak)
288.34 108 Q 2.5(ep)-.1 G(lace no)374.06 108 Q 2.5(w\()-.25 G -.15(Fa)415.46
108 S(lse\) or later \(T).15 E(rue\).)-.35 E .899
(ItemPixmapDecoration is to items what W)90 132 R .899
(idgetPixmapDecoration is to widgets. The)-.4 F 3.399(yf)-.15 G .899(unction e)
448.692 132 R .899(xactly in)-.15 F(the same w)90 144 Q(ay:)-.1 E
(typedef struct {)90 168 Q(unsigned long mask;)162 180 Q
(Pixmap pixmap, pixmap_mask;)162 192 Q(unsigned int depth;)162 204 Q
(unsigned int width, height;)162 216 Q 2.5(}I)162 228 S(temPixmapDecoration;)
172.63 228 Q F1(mask)90 252 Q F2 2.5(:c)C
(omposition in logical ORs of the follo)122.5 252 Q 2.5(wing v)-.25 F(alues:)
-.25 E(#de\214ne SPPixmap)126 276 Q(1)270 276 Q(#de\214ne SPPixmapMask)126 288
Q(2)270 288 Q(#de\214ne SPDepth)126 300 Q(4)270 300 Q(#de\214ne SPW)126 312 Q
73.84(idth 64)-.4 F(#de\214ne SPHeight)126 324 Q(128)270 324 Q F1(pixmap)90 348
Q F2 2.5(:p)C(ixmap to be displayed.)132.51 348 Q F1(pixmap_mask)90 360 Q F2
2.5(:p)C(ixmap')160.29 360 Q 2.5(sm)-.55 G(ask. It')202.24 360 Q 2.5(si)-.55 G
2.5(sn)238.63 360 S(ecessarily a pixmap of depth 1.)250.02 360 Q F1(depth)90
372 Q F2 2.5(:p)C(ixmap')124.73 372 Q 2.5(sd)-.55 G(epth.)163.9 372 Q F1
(width, height)90 384 Q F2 2.5(:p)C(ixmap')156.4 384 Q 2.5(sw)-.55 G
(idth and height.)197.79 384 Q F1 2.5(9.3.3 Pr)90 420 R(ecedency of components)
-.18 E F2 .796(There must be a precedenc)90 456 R 3.296(yb)-.15 G .796
(etween the chain of caracters and the pixmap. By def)213.51 456 R .796
(ault, the te)-.1 F .797(xt is dra)-.15 F(wn)-.15 E
(\214rst, then on its right appears the)90 468 Q(image, if there is one.)3 E
(If you wish to re)90 480 Q -.15(ve)-.25 G(rse this order).15 E 2.5(,y)-.4 G
(ou can de\214ne a precedenc)226.95 480 Q 2.5(yw)-.15 G(ith)344.81 480 Q/F3 10
/Times-Italic@0 SF(item_SetPr)2.5 E(ecedency)-.37 E F2(:)2.5 E/F4 8/Courier@0
SF(int item_SetPrecedency\(tk_display,widgetid,number,precedency,delay\))90 504
Q(TkDisplay *tk_display;)90 514 Q(WidgetID widgetid;)90 524 Q(int number;)90
534 Q(unsigned int precedency;)90 544 Q(Bool delay;)90 554 Q F1(number)90 574 Q
F2 2.5(:n)C(umber of the element to be modi\214ed.)134.17 574 Q F1(pr)90 586 Q
(ecedency)-.18 E F2 2.5(:e)C(ither T)147.86 586 Q -.15(ex)-.7 G
(tFlag, or PixmapFlag.).15 E F1(delay:)90 598 Q F2(bool v)2.5 E
(alue deciding whether the widget')-.25 E 2.5(sr)-.55 G(efreshing must tak)
288.89 598 Q 2.5(ep)-.1 G(lace no)374.61 598 Q 2.5(w\()-.25 G -.15(Fa)416.01
598 S(lse\) or later \(T).15 E(rue\).)-.35 E F1 2.5(9.3.4 Obtaining)90 634 R
(an item')2.5 E 2.5(sc)-.37 G(omposition)206.58 634 Q F2 1.6 -.8(To o)90 670 T
(btain all the information about an element, call this function:).8 E F4
(int wid_GetItem\(tk_display,widgetid,number,widgetitem\))90 694 Q EP
%%Page: 43 43
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-4)293.004 46 S 3(3-)306 46 S/F1 8/Courier@0 SF
(TkDisplay *tk_display;)90 82 Q(WidgetID widgetid;)90 92 Q
(unsigned int number;)90 102 Q(WidgetItem *widgetitem;)90 112 Q(/* RETURN */)
234 112 Q/F2 10/Times-Bold@0 SF(widgetid)90 142 Q/F3 10/Times-Roman@0 SF 2.5
(:i)C(dentifcator of the widget containing the desired item.)134.73 142 Q F2
(number)90 154 Q F3 2.5(:i)C(tem')131.95 154 Q 2.5(sn)-.55 G(umber)161.12 154 Q
F2(widgetitem:)90 166 Q F3(pointer on a W)2.5 E
(idgetItem type of structure that the function will \214ll:)-.4 E
(typedef struct{)90 190 Q(int \215ags;)126 202 Q(/* Reserv)306 202 Q(ed */)-.15
E(int precedenc)126 214 Q 116.28(y; /*)-.15 F(Components precedenc)2.5 E 2.5
(y*)-.15 G(/)422.22 214 Q(int type;)126 226 Q(/* T)306 226 Q
(ype of the item */)-.8 E(int state;)126 238 Q(/* Current state */)306 238 Q
(int number;)126 250 Q(/* Current position in the list of items)306 250 Q(*/)5
E(MenuID submenu;)126 262 Q(/* Sub-menu \(for menus\) */)306 262 Q(int x, y)126
274 Q 2.5(,w)-.65 G(idth, height;)165.63 274 Q(/* Unused */)306 274 Q(char *te)
126 286 Q 135.16(xt; /*)-.15 F(String */)2.5 E(int k)126 298 Q -.15(ey)-.1 G
149.97(;/).15 G 2.5(*U)308.78 298 S(nused */)323.5 298 Q(XF)126 310 Q
(ontStruct *font;)-.15 E(/* F)306 310 Q(ont for te)-.15 E(xt dra)-.15 E
(wing */)-.15 E(Pixmap pixmap, pix_mask;)126 322 Q(/* Pixmap and its mask */)
306 322 Q(Pixmap pix_grayed, pix_maskgrayed;)126 334 Q(/* Unused */)306 334 Q
(int pix_width, pix_height, pix_depth;)126 346 Q
(/* Dimensions of the pixmap */)306 346 Q(Bool selected;)126 358 Q
(/* Is the item selected ? */)306 358 Q(}W)126 370 Q(idgetItem;)-.4 E/F4 12
/Times-Bold@0 SF 3(9.4 Changing)90 418 R(states)3 E F3 1.12(Items can ha)90 460
R 1.42 -.15(ve n)-.2 H 1.12(umerous dif).15 F 1.12
(ferent states at the same time: grayed, selected, normal, etc. T)-.25 F 3.62
(om)-.8 G 1.12(odify this)482.82 460 R(attrib)90 472 Q
(ute, one and only one function is a)-.2 E -.25(va)-.2 G(ilable:).25 E F1
(int item_SetState\(tk_display,widgetid,number,state,selected\))90 496 Q
(TkDisplay *tk_display;)90 506 Q(WidgetID widgetid;)90 516 Q(int number;)90 526
Q(unsigned int state;)90 536 Q(Bool selected;)90 546 Q F2(widgetid)90 566 Q F3
2.5(:i)C(denti\214cator of the widget containing the desired item.)134.73 566 Q
F2(number)90 578 Q F3 2.5(:i)C(tem')131.95 578 Q 2.5(sn)-.55 G(umber)161.12 578
Q(.)-.55 E F2(state)90 590 Q F3 2.5(:i)C(tem')118.05 590 Q 2.5(ss)-.55 G
(tate. It')146.11 590 Q 2.5(sac)-.55 G(omposition of the follo)192.21 590 Q
(wing v)-.25 E(alues:)-.25 E(#de\214ne Ungrayed)126 614 Q(0).63 E
(#de\214ne Uncheck)126 626 Q 28.68(ed 0)-.1 F(#de\214ne Grayed)126 638 Q(2)234
638 Q(#de\214ne Check)126 650 Q 38.67(ed 8)-.1 F F2(selected)90 674 Q F3 2.5
(:t)C(he item is selected if selected=T)131.38 674 Q
(rue, otherwise it is deselected with F)-.35 E(alse.)-.15 E 1.6 -.8(To k)90 698
T(no).8 E 2.5(wy)-.25 G(our item')132.28 698 Q 2.5(ss)-.55 G(tate, the in)
178.95 698 Q -.15(ve)-.4 G(rse function is the follo).15 E(wing:)-.25 E EP
%%Page: 44 44
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-4)293.004 48 S 3(4-)306 48 S/F1 8/Courier@0 SF
(int item_GetState\(tk_display,widgetid,number,state,selected\))90 82 Q
(TkDisplay *tk_display;)90 92 Q(WidgetID widgetid;)90 102 Q(int number;)90 112
Q(unsigned int *state;)90 122 Q(/* RETURN */)198 122 Q(int *selected;)90 132 Q
(/* RETURN */)198 132 Q/F2 10/Times-Roman@0 SF .691(Sometimes se)90 152 R -.15
(ve)-.25 G .692(ral elements are selected together \(it').15 F 3.192(st)-.55 G
.692(he case for multiple selection lists\). If you wish to)315.792 152 R(kno)
90 164 Q 2.5(wt)-.25 G(he selected items' number)117.25 164 Q 2.5(,y)-.4 G
(ou can use the)231.55 164 Q/F3 10/Times-Italic@0 SF(wid_GetSelectedItems)2.5 E
F2(function:)2.5 E F1
(int wid_GetSelectedItems\(tk_display,widgetid,indexes,numitems\))90 188 Q
(TkDisplay *tk_display;)90 198 Q(WidgetID widgetid;)90 208 Q
(unsigned int **indexes;)90 218 Q(/* RETURN */)234 218 Q(int *numitems;)90 228
Q(/* RETURN */)234 228 Q/F4 10/Times-Bold@0 SF(widgtetid)90 248 Q F2 2.5(:i)C
(denti\214cator of the widget containing the desired item.)138.06 248 Q F4
(indexes)90 260 Q F2 3.605(:p)C 1.104
(ointer on a table containing the selected items' numbers. Y)133.055 260 R
1.104(ou can)-1.1 F 1.104(free this table after using it)4.104 F
(with the free function.)90 272 Q F4(numitems)90 284 Q F2 2.5(:n)C
(umber of items selected returned in the table.)142.5 284 Q EP
%%Page: 45 45
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-4)293.004 48 S 3(5-)306 48 S/F1 30/Times-Bold@0 SF
(10)492 107 Q(Managing e)305.25 142 Q -.3(ve)-.45 G(nts).3 E/F2 10
/Times-Roman@0 SF(Ev)90 317 Q .229
(ent programming is the basis of X. It is therefore normal that Iman')-.15 F
2.73(st)-.55 G .23(oolkit should function on the same)382.24 317 R(principles.)
90 329 Q/F3 12/Times-Bold@0 SF 3(10.1 Reading)90 377 R -2.76 -.18(ev e)3 H(nts)
.18 E F2(Iman')90 405 Q 2.79(sd)-.55 G -2.15 -.25(ev e)125.01 405 T .29
(lopment kit only has one function to get widgets and windo).25 F .29(ws' e)
-.25 F -.15(ve)-.25 G .29(nts. This can be a dra).15 F(wback)-.15 E 3.158
(for programs necessitating Xlib calls other than)90 417 R/F4 10/Times-Italic@0
SF(XGetNe)5.658 E(xtEvent)-.2 E F2 5.658(.T)C 3.158
(he function to be called then is)380.292 417 R F4(tk_GetW)90 429 Q(idg)-.55 E
(etEvents)-.1 E F2(:)A/F5 8/Courier@0 SF
(int tk_GetWidgetEvents\(tk_display,tk_event,dont_wait\))90 453 Q
(TkDisplay *tk_display;)90 463 Q(TkEvent *tk_event;)90 473 Q(Bool dont_wait;)90
483 Q/F6 10/Times-Bold@0 SF(tk_display)90 503 Q F2 2.5(:s)C(erv)143.63 503 Q
(er to which the application is connected.)-.15 E F6(tk_e)90 515 Q -.1(ve)-.15
G(nt).1 E F2 2.5(:p)C(ointer on a TkEv)136.69 515 Q
(ent type of structure that the function will \214ll.)-.15 E F6(dont_wait)90
527 Q F2 2.5(:i)C 2.5(fT)140.84 527 S(rue, the function returns immediately)
152.43 527 Q 2.5(,o)-.65 G(therwise it w)310.37 527 Q(aits for an e)-.1 E -.15
(ve)-.25 G(nt to occur).15 E(.)-.55 E .049(If an e)90 551 R -.15(ve)-.25 G .049
(nt occurred, the function returns 1, otherwise it returns 0. A).15 F(ne)3.049
E -.05(ga)-.15 G(ti).05 E .349 -.15(ve v)-.25 H .049(alue means an unkno)-.1 F
2.548(we)-.25 G(rror)505.06 551 Q(.)-.55 E F3 3(10.2 TkEv)90 599 R
(ent type of structur)-.12 E(e)-.216 E F2(Let')90 641 Q 2.5(se)-.55 G
(xamine the contents of this structure:)116.79 641 Q(typedef struct {)90 665 Q
(int e)126 677 Q(v_type;)-.25 E(unsigned long e)126 689 Q(v_widget;)-.25 E EP
%%Page: 46 46
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-4)293.004 48 S 3(6-)306 48 S/F1 10/Times-Roman@0 SF
(ButtonID b)126 84 Q(utton;)-.2 E(ScrollbarID scroll;)126 96 Q 5(EditID edit;)
126 108 R 5(ListID list;)126 120 R 2.5(ComboID combo;)126 132 R 5
(MenuID menu;;)126 144 R(XEv)126 156 Q(ent e)-.15 E -.15(ve)-.25 G(nt;).15 E
(short deb)126 168 Q(ug;)-.2 E 2.5(}T)126 180 S(kEv)139.41 180 Q(ent;)-.15 E/F2
10/Times-Bold@0 SF -.15(ev)90 204 S(_type).15 E F1 2.5(:t)C(ype of e)130.68 204
Q -.15(ve)-.25 G(nt occurred: it is one of the follo).15 E(wing v)-.25 E
(alues:)-.25 E(/******* T)198 228 Q(ypes d'e)-.8 E -.15(ve)-.25 G
(nements *******/).15 E(#de\214ne NO_EVENT)90 252 Q 31(0/)234 252 S 2.5(*N)
272.78 252 S 2.5(oe)287.5 252 S -.15(ve)299.19 252 S(nt */).15 E
(#de\214ne JUSTFOCUS)90 264 Q 31(1/)234 264 S 2.5(*e)272.78 264 S
(v_widget recei)284.47 264 Q -.15(ve)-.25 G 2.5(dt).15 G(he focus */)362.94 264
Q(#de\214ne BN_PUSHED)90 276 Q 31(2/)234 276 S 2.5(*T)272.78 276 S(he b)286.39
276 Q(utton is pushed */)-.2 E(#de\214ne BN_RELEASED)90 288 Q 31(3/)234 288 S
2.5(*T)272.78 288 S(he b)286.39 288 Q(utton is released */)-.2 E
(#de\214ne BN_MO)90 300 Q 54.51(VED 4)-.5 F(/* Reserv)270 300 Q(ed */)-.15 E
(#de\214ne BN_PRESSED)90 312 Q 31(5/)234 312 S 2.5(*T)272.78 312 S(he b)286.39
312 Q(utton w)-.2 E(as pressed b)-.1 E(ut not pushed \(Block)-.2 E(ed\) */)-.1
E(#de\214ne BN_UNPRESSED)90 324 Q 31(6/)234 324 S 2.5(*T)272.78 324 S(he b)
286.39 324 Q(uton w)-.2 E(as unpressed b)-.1 E(ut not released \(Block)-.2 E
(ed\) */)-.1 E(#de\214ne BN_KEYUNKNO)90 336 Q 17.71(WN 31)-.35 F(/* Unkno)270
336 Q(wn k)-.25 E .3 -.15(ey p)-.1 H(ressed in the b).15 E(utton */)-.2 E
(#de\214ne SB_DO)90 348 Q 61.58(WN 7)-.35 F(/* The scrollbar is pushed do)270
348 Q(wn of one unit*/)-.25 E(#de\214ne SB_UP)90 360 Q 31(8/)234 360 S 2.5(*T)
272.78 360 S(he scrollbar is pushed up of one unit */)286.39 360 Q
(#de\214ne SB_LEFT)90 372 Q 31(9/)234 372 S 2.5(*T)272.78 372 S
(he scrollbar is pushed left of one unit */)286.39 372 Q(#de\214ne SB_RIGHT)90
384 Q 23.5(10 /*)234 384 R(The scrollbar is pushed right of one unit */)2.5 E
(#de\214ne SB_P)90 396 Q -.4(AG)-.92 G(EDO).4 E 36.79(WN 11)-.35 F
(/* The scrollbar is pushed do)270 396 Q(wn of one page */)-.25 E
(#de\214ne SB_P)90 408 Q -.4(AG)-.92 G 54.76(EUP 12).4 F
(/* The scrollbar is pushed up of one page */)270 408 Q(#de\214ne SB_P)90 420 Q
-.4(AG)-.92 G 43.65(ELEFT 13).4 F
(/* The scrollbar is pushed left of one unit */)270 420 Q(#de\214ne SB_P)90 432
Q -.4(AG)-.92 G 36.99(ERIGHT 14).4 F
(/* The scrollbar is pushed right of one unit */)270 432 Q
(#de\214ne SB_THUMBMO)90 444 Q 20.06(VED 15)-.5 F(/* The thumb is being mo)270
444 Q -.15(ve)-.15 G 2.5(d*).15 G(/)394.7 444 Q(#de\214ne SB_ST)90 456 Q -1.11
(AT)-.93 G 56.59(US 16)1.11 F(/* Ev)270 456 Q(ery action on the scrollbar is o)
-.15 E -.15(ve)-.15 G 2.5(r*).15 G(/)432.3 456 Q(#de\214ne ED_V)90 468 Q(ALID)
-1.35 E -1.11(AT)-.4 G 31.89(ION 17)1.11 F(/* ENTER w)270 468 Q
(as pressed in the edit*/)-.1 E(#de\214ne ED_KEYUNKNO)90 480 Q 18.27(WN 18)-.35
F(/* Unkno)270 480 Q(wn k)-.25 E .3 -.15(ey p)-.1 H(ressed in the edit */).15 E
(#de\214ne LS_CLICKED)90 492 Q 23.5(20 /*)234 492 R(An item w)2.5 E(as click)
-.1 E(ed in the list */)-.1 E(#de\214ne LS_RELEASED)90 504 Q 23.5(21 /*)234 504
R(Ev)2.5 E(ery action in the list is o)-.15 E -.15(ve)-.15 G 2.5(r*).15 G(/)
407.32 504 Q(#de\214ne LS_DOUBLECLICKED)90 516 Q 23.5(22 /*)234 516 R
(An item w)2.5 E(as double-click)-.1 E(ed */)-.1 E(#de\214ne LS_V)90 528 Q
(ALID)-1.35 E -1.11(AT)-.4 G 33.55(ION 23)1.11 F(/* ENTER w)270 528 Q
(as pressed on an item */)-.1 E(#de\214ne LS_KEYUNKNO)90 540 Q 19.93(WN 24)-.35
F(/* Unkno)270 540 Q(wn k)-.25 E .3 -.15(ey p)-.1 H(ressed in the list */).15 E
(#de\214ne CB_V)90 552 Q(ALID)-1.35 E -1.11(AT)-.4 G 31.88(ION 25)1.11 F
(/* ENTER w)270 552 Q(as pressed in the combo box */)-.1 E(#de\214ne CB_PR)90
564 Q 26.62(OPOSITION 26)-.4 F 2.5(/* ENTER)270 564 R -.1(wa)2.5 G 2.5(sp).1 G
(ressed in the edit zone of the combo box*/)340.45 564 Q(#de\214ne CB_KEYUNKNO)
90 576 Q 18.26(WN 27)-.35 F(/* Unkno)270 576 Q(wn k)-.25 E .3 -.15(ey p)-.1 H
(ressed in the combo box */).15 E(#de\214ne MN_SELECTED)90 588 Q 23.5(28 /*)234
588 R(An item w)2.5 E(as selected in the menu */)-.1 E(#de\214ne XLIBEVENT)90
600 Q 23.5(50 /*)234 600 R(XLIB e)2.5 E -.15(ve)-.25 G(nt that doesn').15 E 2.5
(tc)-.18 G(oncern an)383.57 600 Q 2.5(yw)-.15 G(idget */)437.29 600 Q F2 -.15
(ev)90 636 S(_widget).15 E F1 2.5(:c)C(lass of the widget generating the e)
142.34 636 Q -.15(ve)-.25 G(nt:).15 E 2.5(#de\214ne WI_B)90 660 R(UTT)-.1 E
49.02(ON 1)-.18 F 2.5(#de\214ne WI_SCR)90 672 R(OLLB)-.4 E 31.14(AR 2)-.35 F
2.5(#de\214ne WI_EDIT)90 684 R(3)234 684 Q EP
%%Page: 47 47
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Roman@0 SF 3(-4)293.004 48 S 3(7-)306 48 S/F1 10/Times-Roman@0 SF
2.5(#de\214ne WI_LIST)90 84 R(4)234 84 Q 2.5(#de\214ne WI_COMBO)90 96 R(5)234
96 Q 2.5(#de\214ne WI_MENU)90 108 R(6)234 108 Q 3.263
(According to this parameter)90 144 R 5.763(,t)-.4 G 3.263(he b)222.352 144 R
3.264(utton, list, scroll, edit, combo or menu components contain the)-.2 F
(identi\214cator of the widget concerned.)90 156 Q/F2 10/Times-Bold@0 SF -2.3
-.15(ev e)90 180 T(nt).15 E F1 4.314(:X)C 1.814(lib type of e)126.834 180 R
-.15(ve)-.25 G 1.813(nt. This structure is \214lled with the e).15 F -.15(ve)
-.25 G 1.813(nt recei).15 F -.15(ve)-.25 G 4.313(di).15 G 4.313(fe)405.974 180
S(v_type=XLIBEVENT)417.807 180 Q 6.813(.I)-.74 G(f)518.67 180 Q 13.441
(toolkit e)90 192 R -.15(ve)-.25 G 13.442(nts concerning the k).15 F -.15(ey)
-.1 G 13.442(board \(BN_KEYUNKNO).15 F 13.442(WN, ED_KEYUNKNO)-.35 F(WN,)-.35 E
(LS_KEYUNKNO)90 204 Q .135(WN or CB_KEYUNKNO)-.35 F .135(WN\) occur)-.35 F
2.635(,t)-.4 G .135(he e)320.22 204 R -.15(ve)-.25 G .134
(nt structure is also \214lled with the Xlib e).15 F -.15(ve)-.25 G(nt).15 E
(transmitted.)90 216 Q F2(deb)90 240 Q(ug)-.2 E F1 2.5(:r)C(eserv)124.53 240 Q
(ed for a later v)-.15 E(ersion.)-.15 E/F3 12/Times-Bold@0 SF 3(10.3 Example)90
288 R/F4 8/Courier@0 SF(int ret;)90 330 Q(ButtonID B1;)90 340 Q
(ScrollbarID SB1;)90 350 Q(EditID ED1;)90 360 Q(TkDisplay *tk_display;)90 370 Q
(TkEvent tk_event;)90 380 Q
(/* Connection to the X server and creation of the widgets */)90 400 Q
(...........)90 410 Q(START :)90 430 Q
(ret=tk_GetWidgetEvent\(tk_display,&tk_event,False\);)90 440 Q
(if \(ret==0\) goto START;)90 450 Q(switch\(tk_event.ev_type\))90 460 Q({)90
470 Q(case BN_PUSHED :)126 480 Q(if\(tk_event.buttonid==B1\))198 490 Q
(....................................................)198 500 Q(break;)198 510
Q(case ED_VALIDATION :)126 530 Q(if\(tk_event.editid==ED1\))198 540 Q
(....................................................)198 550 Q(break;)198 560
Q(case XLIBEVENT :)126 580 Q(/* XLIB events handling */)198 590 Q
(switch\(tk_event.event.type\))198 600 Q
(....................................................)198 610 Q(break;)198 620
Q(})90 640 Q EP
%%Trailer
end
%%EOF
