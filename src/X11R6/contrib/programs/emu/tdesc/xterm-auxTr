/* xterm-auxTr,v 1.2 1994/05/26 21:02:50 me Exp */

/*
 * This file is part of the Emu system.
 *
 * Copyright 1990 by PCS Computer Systeme, GmbH. Munich, West Germany.
 * 
 * Copyright 1994 by Jordan K. Hubbard and Michael W. Elbel
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL PCS, THE AUTHORS, OR THEIR HOUSEPETS BE LIABLE FOR
 * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. SO DON'T SUE US.
 * THANK YOU.
 */

/*
 * Auxilliary keyboard translation definitions for the emu "xterm" terminal.
 *
 * Author: Michael Elbel
 * Date: September 30th, 1991
 * Description: This file contains translations for various different
 *		keyboard settings a xterm might have.
 *
 * Revision History:
 *
 * xterm-auxTr,v
 * Revision 1.2  1994/05/26  21:02:50  me
 * New copyright
 *
 * Revision 1.1.1.1  1994/05/22  11:22:42  me
 * Initial import into CVS
 */

/* Application Keypad */
*term.xterm-auxTrans-appKeypad:						\
	/* Group 1 */							\
	:<Key>KP_0:	key-input("Op")\n				\
	:<Key>KP_1:	key-input("Oq")\n				\
	:<Key>KP_2:	key-input("Or")\n				\
	:<Key>KP_3:	key-input("Os")\n				\
	:<Key>KP_4:	key-input("Ot")\n				\
	:<Key>KP_5:	key-input("Ou")\n				\
	:<Key>KP_6:	key-input("Ov")\n				\
	:<Key>KP_7:	key-input("Ow")\n				\
	:<Key>KP_8:	key-input("Ox")\n				\
	:<Key>KP_9:	key-input("Oy")\n				\
	/* Group 2 */							\
	:<Key>KP_Decimal: key-input("On")\n				\
	:<Key>KP_Subtract: key-input("Om")\n				\
	:<Key>KP_Separator: key-input("Ol")\n				\
	:<Key>KP_Enter:	key-input("OM")\n				\

/* Numeric Keypad */
*term.xterm-auxTrans-numKeypad:						\
	/* Group 1 */							\
	:<Key>KP_0:	key-input("0")\n				\
	:<Key>KP_1:	key-input("1")\n				\
	:<Key>KP_2:	key-input("2")\n				\
	:<Key>KP_3:	key-input("3")\n				\
	:<Key>KP_4:	key-input("4")\n				\
	:<Key>KP_5:	key-input("5")\n				\
	:<Key>KP_6:	key-input("6")\n				\
	:<Key>KP_7:	key-input("7")\n				\
	:<Key>KP_8:	key-input("8")\n				\
	:<Key>KP_9:	key-input("9")\n				\
	/* Group 2 */							\
	:<Key>KP_Decimal: key-input(".")\n				\
	:<Key>KP_Subtract: key-input("-")\n				\
	:<Key>KP_Separator: key-input(",")\n				\
	:<Key>KP_Enter:	key-input("\r")\n				\

/* Application Cursor Keys */
*term.xterm-auxTrans-appCKeys:						\
	~Shift <Key>Left:	key-input("OD")\n			\
	~Shift <Key>Right:	key-input("OC")\n			\
	~Shift <Key>Down:	key-input("OB")\n			\
	~Shift <Key>Up:		key-input("OA")\n			\
	
/* Normal Cursor Keys */
*term.xterm-auxTrans-normCKeys:						\
	~Shift <Key>Left:	key-input("[D")\n			\
	~Shift <Key>Right:	key-input("[C")\n			\
	~Shift <Key>Down:	key-input("[B")\n			\
	~Shift <Key>Up:		key-input("[A")\n			\

/* Function Keys */
*term.xterm-auxTrans-fkeys:						\
	:<Key>F1:	key-input("[11~")\n				\
	:<Key>F2:	key-input("[12~")\n				\
	:<Key>F3:	key-input("[13~")\n				\
	:<Key>F4:	key-input("[14~")\n				\
	:<Key>F5:	key-input("[15~")\n				\
	:<Key>F6:	key-input("[17~")\n				\
	:<Key>F7:	key-input("[18~")\n				\
	:<Key>F8:	key-input("[19~")\n				\
	:<Key>F9:	key-input("[20~")\n				\
	:<Key>F10:	key-input("[21~")\n				\
	:<Key>F11:	key-input("[23~")\n				\
	:<Key>F12:	key-input("[24~")\n				\
	:<Key>F13:	key-input("[25~")\n				\
	:<Key>F14:	key-input("[26~")\n				\
	:<Key>F15:	key-input("[28~")\n				\
	:<Key>F16:	key-input("[29~")\n				\
	:<Key>F17:	key-input("[31~")\n				\
	:<Key>F18:	key-input("[32~")\n				\
	:<Key>F19:	key-input("[33~")\n				\
	:<Key>F20:	key-input("[34~")\n				\

/* Misc. Function Keys (the ones above the cursor keys) */
*term.xterm-auxTrans-miscFkeys:						\
	~Shift <Key>Find:	key-input("[1~")\n			\
	~Shift <Key>Insert:	key-input("[2~")\n			\
	~Shift <Key>Cancel:	key-input("[3~")\n			\
	~Shift <Key>Select:	key-input("[4~")\n			\
	~Shift <Key>Prior:	key-input("[5~")\n			\
	~Shift <Key>Next:	key-input("[6~")\n			\

/* Umlaute on braces and so on */
*term.xterm-auxTrans-multiKeys:						  \
  ~Shift Mod1<Key>bracketleft:	call-parser(ROP_INSERT_CHAR, "", A, 228)\n\
  Shift Mod1<Key>bracketleft:	call-parser(ROP_INSERT_CHAR, "", A, 196)\n\
  ~Shift Mod1<Key>bracketright:	call-parser(ROP_INSERT_CHAR, "", A, 252)\n\
  Shift Mod1<Key>bracketright:	call-parser(ROP_INSERT_CHAR, "", A, 220)\n\
  ~Shift Mod1<Key>backslash:	call-parser(ROP_INSERT_CHAR, "", A, 246)\n\
  Shift Mod1<Key>backslash:	call-parser(ROP_INSERT_CHAR, "", A, 214)\n\
  ~Shift Mod1<Key>grave:	call-parser(ROP_INSERT_CHAR, "", A, 223)\n\
  Shift Mod1<Key>grave:		call-parser(ROP_INSERT_CHAR, "", A, 167)\n
