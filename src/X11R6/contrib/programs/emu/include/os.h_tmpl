#ifndef _OS_H_INCLUDE
#define _OS_H_INCLUDE

/* os.h_tmpl,v 1.2 1994/05/26 21:01:28 me Exp */

/*
 * This file is part of the Emu system.
 *
 * Copyright 1990 by PCS Computer Systeme, GmbH. Munich, West Germany.
 * 
 * Copyright 1994 by Jordan K. Hubbard and Michael W. Elbel
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL PCS, THE AUTHORS, OR THEIR HOUSEPETS BE LIABLE FOR
 * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. SO DON'T SUE US.
 * THANK YOU.
 */

/*
 * Operating system specific interface.
 *
 * Author: Jordan K. Hubbard and Digital Equipment Corporation
 * Date: March 20th, 1990.
 * Description: This file contains (or includes) all OS specific portions
 *		of emu. Make any OS specific changes to (and only to)
 *		this file if you absolutely have to, but you probably won't
 *		even want to look at it. I just LOVE all the different Unix's
 *		we have out there these days. Wish we had a few more.
 *
 * Revision History:
 *
 * os.h_tmpl,v
 * Revision 1.2  1994/05/26  21:01:28  me
 * New copyright
 *
 * Revision 1.1.1.1  1994/05/22  11:22:38  me
 * Initial import into CVS
 *
 * Revision 1.11  93/08/11  16:02:36  me
 * Added define TERMIO
 * 
 * Revision 1.9  92/02/26  13:09:34  me
 * Steve Crooks' clix port and general code cleanup
 */


/***************************************************************************
 * START OF SYSTEM CONFIGURATION SECTION - ADD YOUR SYSTEM TYPE TO ANY OF  *
 * THE DEFINES BELOW THAT LOOK APPROPRIATE AND/OR MODIFY THE LIST OF       *
 * INCLUDED SYSTEM HEADERS AS NECESSARY                                    *
 ***************************************************************************/

/* THIS FILE IS USED TO GENERATE os.h */

#ifdef SYSTYPE_SYSV
#ifndef SYSV
#define SYSV
#endif 
#endif

/* If your system doesn't typedef pid_t in <sys/types.h>, define this. */
#if defined(MACH386) || defined(PCS)
#define _NO_PID_T		1
#endif

/* If you need <sys/time.h> for things like timeval, define this. */
#if defined(PCS)
#define _NEED_SYS_TIME_H	1
#endif

/*
 * If you have an alloca, define this unless you have GCC, in which case
 * it will be defined automatically.
 */
#if (defined(PCS) && !defined(PCSFBOX)) || defined(__clipper__)
#define _HAVE_ALLOCA		1
#define _HAVE_ALLOCA_H		1	/* If you also have <alloca.h> */
#endif

/* If you have vfork(), define this */
#if defined(__clipper__) || defined(__386BSD__)
#define _HAVE_VFORK		1
#endif

/* If you'd rather (or must) use stdargs rather than varargs, define this */
#if 0	/* no one I know of yet */
#define _USE_STDARGS		1
#endif

/* How big is your byte? */
#if 1	/* Everybody so far */
#define BYTE_SIZE		8
#endif

/*
 *  What type would you like to use for the "generic" type?  Warning:
 * "void *" doesn't actually work everywhere Generic is used with some
 * compilers (like gcc), so be careful before selecting that option.
 */
typedef char *Generic;

#if !defined(NFILES)
#define NFILES	64	/* take a wild guess */
#endif

#if defined(SYSV)
#if defined(PCS)
#define killpg(x, sig)	kill(0, sig)
#else
#define	killpg(x,sig)	kill(-x,sig)
#endif /* PCS */
#if !defined(CRAY) && !defined(hpux)
#define	dup2(fd1,fd2)	((fd1 == fd2) ? fd1 : \
			 (close(fd2), fcntl(fd1, F_DUPFD, fd2)))
#endif
#endif	/* SYSV */

#if defined(SYSV) && !defined(__clipper__)
#include <memory.h>
#define bzero(s, n) memset(s, 0, n)
#ifndef __GNUC__
#define bcopy(f, t, n) memcpy(t, f, n)
#else
Import char *bcopy();
#endif
#else
#if !(defined(__386BSD__) || defined(linux))
Import char *bcopy(), *memcopy();
#endif
#endif /* SYSV && !__clipper__ */

/* These includes shouldn't have to change */
#include <X11/Intrinsic.h>
#include <X11/StringDefs.h>
#include <X11/Shell.h>
#include <X11/Xos.h>

/* But these might! */
#include <stdio.h>
#include <ctype.h>
#include <signal.h>
#include <errno.h>
#include <setjmp.h>
#include <fcntl.h>
#include <sys/types.h>
#include <sys/file.h>
#include <sys/stat.h>

#ifdef	sun
#include <sys/ttydev.h>
#include <sys/termio.h>
#include <sys/filio.h>
#include <sys/sockio.h>
#else
#include <sys/ioctl.h>
#endif	/* sun */

#ifdef linux
#include <sys/cdefs.h>
#endif

/***************************************************************************
 * END OF SYSTEM CONFIGURATION SECTION - WHAT FOLLOWS SHOULD NOT GENERALLY *
 * NEED FURTHER MODIFICATION                                               *
 ***************************************************************************/

#ifdef _NEED_SYS_TIME_H
#include <sys/time.h>	/* for timeval */
#endif

#ifdef _USE_STDARGS
#include <stdarg.h>
#else
#include <varargs.h>
#endif

#ifdef _NO_PID_T
typedef int		pid_t;
#endif


/* #include <mtrace.h> */

#ifdef __GNUC__
#define alloca __builtin_alloca
#define Inline __inline__
#ifndef _HAVE_ALLOCA	/* If it isn't already defined */
#define _HAVE_ALLOCA
#endif
#else
#ifdef _HAVE_ALLOCA_H
#include <alloca.h>
#endif
#define Inline
#endif

/*
 * If your compiler supports elipses prototypes for vararg decls, add
 * yourself.
 */
#if defined(__GNUC__)
# ifdef _USE_STDARGS
#   define _VARARGS(start) start, ...
#   define _VA_DCL(fname, arg) fname(arg, ...)
# else
#   define _VARARGS(start) ...
#   define _VA_DCL(fname, arg) fname(va_alist) va_dcl
# endif
#else
#   define _VARARGS(start)
#   define _VA_DCL(fname, arg) fname(va_alist) va_dcl
#endif

/*
 * Constants used by bitstream.h.  Adjust to fit your machine accordingly.
 */

/* how many bits in the unit returned by sizeof ? */
#define	_bit_charsize	BYTE_SIZE

/* what type will the bitstring be an array of ? */
#define	_bit_type	unsigned int

/* how many bits in an int ? */
#define	_bit_intsiz	(sizeof(_bit_type) * _bit_charsize)

/* an int of all '0' bits */
#define	_bit_0s		((_bit_type)0)

/* an int of all '1' bits */
#define	_bit_1s		((_bit_type)~0)

#define Fresh(type) ((type *)malloc_and_clear(sizeof(type)))

/* Where debugging output goes */
#define DEBUGFILE	"/tmp/emu.log"

/* predefined subprocess exit codes */
#define PROC_EXEC_FAILED	-4
#define PROC_TTYOPEN_FAILED	-5


#if (defined(SYSV) || defined(USG)) && !defined(_HAVE_VFORK)
#define vfork()	fork()
#endif

#if !defined (SIGCHLD) && defined (SIGCLD)
#define SIGCHLD SIGCLD
#endif /* SIGCLD */


#if !defined(UTMP_FILENAME)
#define UTMP_FILENAME "/etc/utmp"
#endif
#if !defined(WTMP_FILENAME)
#if defined(SYSV)
#define WTMP_FILENAME "/etc/wtmp"
#else
#define WTMP_FILENAME "/usr/adm/wtmp"
#endif /* SYSV */
#endif /* !WTMP_FILENAME */

#if !defined(PTYDEV)
#if defined(hpux)
#define	PTYDEV		"/dev/ptym/pty%c%c"
#else	/* !hpux */
#define	PTYDEV		"/dev/pty%c%c"
#endif	/* !hpux */
#endif	/* !PTYDEV */

#if !defined(TTYDEV)
#if defined(hpux)
#define TTYDEV		"/dev/pty/tty%c%c"
#else	/* !hpux */
#define	TTYDEV		"/dev/tty%c%c"
#endif	/* !hpux */
#endif	/* !TTYDEV */

#if !defined(PTYCHAR1)
#if defined(hpux)
#define PTYCHAR1	"zyxwvutsrqp"
#else	/* !hpux */
#if defined(PCS)
#define PTYCHAR1        "qrstuvw"
#else   /* !hpux && !PCS */
#if defined(__clipper__)
#define PTYCHAR1	"pqr"
#else
#define	PTYCHAR1	"pqrstuvwxyz"
#endif  /* !__clipper__ */
#endif  /* !PCS */
#endif	/* !hpux */
#endif	/* !PTYCHAR1 */

#if !defined(PTYCHAR2)
#if defined(hpux)
#define	PTYCHAR2	"fedcba9876543210"
#else	/* !hpux */
#define	PTYCHAR2	"0123456789abcdef"
#endif	/* !hpux */
#endif	/* !PTYCHAR2 */

#endif	/* _OS_H_INCLUDE */
