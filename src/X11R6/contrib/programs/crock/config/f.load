#
#Set up some variables.  Format
# is: set varname value
#
set pathprefix /n/weather/0/frank/frames/fine/
set bmsuffix .xbm
set bmmsuffix .m
set face right
set version 1
# allow projectile (freeze) + fatality
set startattribute 513
# size of steps he takes
set stepsize 20
#
#to load bitmaps use: load tag filename attack, high, middle, low
# where attack is: ax1 ay1 ax2 ay2
#   which represent the x and y coords of the top and bottom part
#   of the attacking item (-1 if not applicable)
# where high, middle and low are: x1 y1 x2 y2
#   which represent the x and y coords of the top and bottom boundaries
#   of the respective danger zones of the body
# e.g. load punch p0 50 100 45 110, 70 0 70 90, 60 90 60 200, 70 200 70 400
#

#stances
load fs0 s0 -1 -1 -1 -1, 169 44 159 88, 138 101 121 275, 121 275 109 400
load fs1 s1 -1 -1 -1 -1, 171 38 165 89, 147 100 143 274, 143 274 114 412
load fs2 s2 -1 -1 -1 -1, 190 42 180 93, 174 97 165 276, 165 276 165 404

#left jab
load flj0 lj0 227 78 238 98, 144 27 146 76, 146 76 154 275, 154 275 129 392
load flj1 lj1 255 65 254 86, 124 23 148 72, 148 72 165 273, 165 273 125 400
load flj2 lj2 258 69 249 94, 97 28 141 68, 141 68 171 262, 171 262 131 391

#right jab
load frj0 rj0 224 83 235 104, 174 31 165 83, 147 93 151 267, 151 267 136 398
load frj1 rj1 260 71 272 88, 183 43 169 83, 155 89 148 276, 148 276 127 403
load frj2 rj2 313 68 307 88, 187 47 164 89, 164 89 150 263, 150 263 123 403

#losing
load fd0 d0 -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1 
load fd1 d1 -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1
load fd2 d2 -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1
load fd3 d3 -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1
load fd4 d4 -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1

#winning  (screw up masks, since we don't have them)
set bmmsuffix .xxx
load fv0 v0 -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1
load fv1 v1 -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1
load fv2 v2 -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1
load fv3 v3 -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1
load fv4 v4 -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1
load fv5 v5 -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1
load fv6 v6 -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1
load fv7 v7 -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1
load fv8 v8 -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1
load fv9 v9 -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1
set bmmsuffix .m

#right upper cut
load frH0 jH0 -1 -1 -1 -1, 222 111 192 177, 174 178 144 290, 144 290 135 429
load frH1 jH1 -1 -1 -1 -1, -1 -1 -1 -1, 217 162 162 296, 162 296 135 433
load frH2 jH2 312 128 313 148, 211 39 204 113, 204 113 150 284, 150 284 125 427
load frH3 jH3 276 11 248 97, 156 0 166 64, 166 64 175 274, 175 274 130 430
load frH4 jH4 -1 -1 -1 -1, 93 14 128 59, 128 59 196 273, 196 273 132 428
load frH5 jH5 -1 -1 -1 -1, 138 4 142 65, 139 69 159 274, 259 274 129 428

#block
load fb0 b0 -1 -1 -1 -1, 110 25 134 69, 134 69 165 255, 165 255 119 415

#getting hit
#load fh0 h0 -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1
#load fh1 h1 -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1

set version 2
set pathprefix /n/weather/0/frank/frames/ctest/
#projectile
load fp1 tshot1 0 200 50 9 48 54, -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1
load fp2 tshot2 0 200 50 9 48 54, -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1 
load fp3 tshot3 0 200 50 9 48 54, -1 -1 -1 -1, -1 -1 -1 -1, -1 -1 -1 -1
set version 1

#
#define a move with: define movename
# followed by lines containing the tags and delays (in ticks, where each
# tick is a 1/10th of a second) for each frame of the move, terminated 
# by a line with enddef.  Note that first sequence defined will be assumed
# to be the "default" sequence that is used when nothing is happening.
#
define stance 0 0 0 0
  fs0   2
  fs1   2
  fs2   2
  fs1   2
enddef

define leftjab 10 5 0 0
  fs0   3
  flj0  1
  flj1  1
  flj2  1
  flj1  1
  flj0  1
  fs0   3
enddef

define rightjab 10 5 0 0
  fs0   3
  frj0  1
  frj1  1
  frj2  1
  frj1  1
  frj0  1
  fs0   3
enddef

define uppercut 20 10 30 0
  fs0   3
  frH0  2
  frH1  3
  frH2  2
  frH3  2
  frH4  5
  frH5  5
  fs0   5
enddef

define fatality 100 0 100 512
  fs0   2
  frH0  2
  frH1  10
  frH2  1
  frH3  1
  frH4  5
  frH5  2
  fs0   20
enddef

define lose 0 0 0 0
  fd0   6
  fd1   6
  fd2   4
  fd3   3
  fd4   50
enddef

define win 0 0 0 0
  fv0   4
  fv1   3
  fv2   3
  fv3   4
  fv4   3
  fv5   5
  fv6   3
  fv7   8
  fv8   3
  fv9   20
enddef

define bighit 0 0 0 0
  fd0   2
  fd1   3
  fd0   2
  fs0   2
enddef

define freeze 0 0 0 1
  fs0   3
  frj1  2
  flj1  2
  frj1  2
  fs0   5
enddef

define freezeball 15 25 3 4
  fp1   1
  fp2   1
  fp3   1
enddef

define stun 0 0 0 0
  fs0   1
  fd0   1
enddef

define stun 0 0 0 0
  fs0   1
  fd0   1
enddef

define block 0 0 0 0
  fb0   20
enddef

define unblock 0 0 0 0
enddef

define crouch 0 0 0 0
  frH0  20
enddef

define uncrouch 0 0 0 0
enddef

define moveleft 0 0 0 0
  fs0   2
  fs1   2
  fs2   2
  fs1   2
enddef

define moveright 0 0 0 0
  fs0   2
  fs1   2
  fs2   2
  fs1   2
enddef

#
#bind a move name to an action.
# format: bind movename action
#
#bind leftjab <Btn1Down>
#bind rightjab <Btn3Down>
#bind uppercut Shift<Btn1Down>
bind leftjab <Key>KP_Enter
bind rightjab <Key>KP_Add
bind uppercut Shift<Key>KP_Enter
#bind die <Btn2Down>
#bind bighit Shift<Btn2Down>
bind quit    <Key>q
bind moveright <Key>Right
bind moveleft <Key>Left
bind block <Key>space
bind unblock <KeyUp>space
bind crouch <Key>Down
bind uncrouch <KeyUp>Down
bind fatality <Key>f
bind freeze   <Key>Return
