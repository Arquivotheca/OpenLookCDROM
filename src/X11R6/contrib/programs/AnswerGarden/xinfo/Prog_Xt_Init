@begin(header)
author: ackerman@ics.uci.edu
show_author: ShowNone
author_organization: MIT
node_expert: ackerman=ag@ics.uci.edu 
expiration_date: 08/29/93
last_modifier: ackerman@ics.uci.edu
last_mod_date: 08/29/91
mod_num: 6
@end(header)
@b(XtInitialize versus XtAppInitialize)

Essentially, these routines are equivalent with
a few caveats.  XtInitialize is a backwards-compatibility call
for XtAppInitialize.  It uses a default application context,
whereas you must supply a variable for an XtApplicationContext
to XtAppInitialize.  For almost all applications, except those
that use poorly written R3 widgets, it will not make any
difference which application context is used.

In addition, XtAppInitialize has a parameter for a fallback
resource list.  You can also use XtInitialize and XtSetFallbackResources 
to the same effect.

For more info, would you like to learn more about:
@button(application contexts,Xt_AppContext)
@button(fallback resources,Prog_Xt_Fallback)
You can also see code that uses both.  Both of these
programs do equivalent things.
@button(XtAppInitialize code,Prog_Xt_Code_App1)
@button(XtInitialize code,Prog_Xt_Code_R3)
