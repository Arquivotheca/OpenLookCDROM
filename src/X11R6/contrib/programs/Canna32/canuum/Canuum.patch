/* Copyright 1994 NEC Corporation, Tokyo, Japan.
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without
 * fee, provided that the above copyright notice appear in all copies
 * and that both that copyright notice and this permission notice
 * appear in supporting documentation, and that the name of NEC
 * Corporation not be used in advertising or publicity pertaining to
 * distribution of the software without specific, written prior
 * permission.  NEC Corporation makes no representations about the
 * suitability of this software for any purpose.  It is provided "as
 * is" without express or implied warranty.
 *
 * NEC CORPORATION DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
 * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN
 * NO EVENT SHALL NEC CORPORATION BE LIABLE FOR ANY SPECIAL, INDIRECT OR
 * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF
 * USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
 * OTHER TORTUOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 * PERFORMANCE OF THIS SOFTWARE.
 */

$Id: Canuum.patch,v 2.7 1994/05/10 07:19:38 kon Exp $

*** 1.1.1.2	1993/10/30 14:48:55
--- ./commonhd.h	1994/04/19 11:46:09
***************
*** 51,56 ****
--- 51,61 ----
  /****************
   * Common header 
   ****************/
+ 
+ #ifdef CANNA
+ #include "cannaconf.h"
+ #endif
+ 
  #include <stdio.h>
  #ifdef linux
  #include <unistd.h>
***************
*** 58,65 ****
  #define	JSERVER_VERSION	0x4109	/* minor version */
  #define	_SERVER_VERSION	"4.10"
  
- #include "wnnerror.h"
- 
  #ifndef JS
  typedef  unsigned int  UINT;
  typedef  unsigned char UCHAR;
--- 63,68 ----
***************
*** 123,129 ****
  #  define	TERMCAP
  # endif
  #else
! #if defined(SVR4) || defined(hpux) 
  # ifndef	SYSVR2
  #  define	SYSVR2
  # endif
--- 126,132 ----
  #  define	TERMCAP
  # endif
  #else
! #if defined(SVR4) || defined(hpux) || defined(SYSV) || defined(USG)
  # ifndef	SYSVR2
  #  define	SYSVR2
  # endif
***************
*** 140,146 ****
  # ifndef	TERMCAP
  #  define	TERMCAP
  # endif
! #endif /* defined(SVR4) || defined(hpux) */
  #endif /* DGUX */
  #endif /* sun */
  #endif /* luna */
--- 143,149 ----
  # ifndef	TERMCAP
  #  define	TERMCAP
  # endif
! #endif /* defined(SVR4) || defined(hpux) || defined(SYSV) || defined(USG) */
  #endif /* DGUX */
  #endif /* sun */
  #endif /* luna */
*** Uum4.109/config.h	Wed Jul 28 14:16:16 1993
--- ./config.h	Thu Jul 29 21:19:21 1993
***************
*** 63,69 ****
  #define WNN_CSERVER_ENV		"CSERVER"
  #define WNN_KSERVER_ENV		"KSERVER"
  #define WNN_TSERVER_ENV		"TSERVER"
! #define WNN_J_LANG		"ja_JP"
  #define WNN_C_LANG		"zh_CN"
  #define WNN_K_LANG		"ko_KR"
  #define WNN_T_LANG		"zh_TW"
--- 63,74 ----
  #define WNN_CSERVER_ENV		"CSERVER"
  #define WNN_KSERVER_ENV		"KSERVER"
  #define WNN_TSERVER_ENV		"TSERVER"
! 
! #ifndef JAPANESE_LOCALE
! #define JAPANESE_LOCALE "ja_JP"
! #endif
! 
! #define WNN_J_LANG		JAPANESE_LOCALE
  #define WNN_C_LANG		"zh_CN"
  #define WNN_K_LANG		"ko_KR"
  #define WNN_T_LANG		"zh_TW"
*** 1.1.1.2	1993/10/30 14:49:17
--- ./header.c	1994/04/19 12:43:24
***************
*** 49,57 ****
  /*	Version 4.0
   */
  #include <stdio.h>
- #include "jllib.h"
- #include "config.h"
  #include "commonhd.h"
  #include "sdefine.h"
  #include "sheader.h"
  #include "buffer.h"
--- 49,56 ----
  /*	Version 4.0
   */
  #include <stdio.h>
  #include "commonhd.h"
+ #include "config.h"
  #include "sdefine.h"
  #include "sheader.h"
  #include "buffer.h"
***************
*** 150,156 ****
  
  FuncDataBase function_db[] = {
  #ifdef JAPANESE
!     { "ja_JP",
  	{ NULL,   NULL,   call_t_redraw_move_normal,
          call_t_redraw_move_1_normal, call_t_redraw_move_2_normal,
          call_t_print_l_normal, NULL, char_len_normal, char_q_len_normal,
--- 149,155 ----
  
  FuncDataBase function_db[] = {
  #ifdef JAPANESE
!     { WNN_J_LANG,
  	{ NULL,   NULL,   call_t_redraw_move_normal,
          call_t_redraw_move_1_normal, call_t_redraw_move_2_normal,
          call_t_print_l_normal, NULL, char_len_normal, char_q_len_normal,
***************
*** 173,179 ****
    },
  #endif /* JAPANESE */
  #ifdef CHINESE
!     { "zh_CN", 	/* Simplified Chinese */
  	{ print_out_yincod, input_yincod, call_t_redraw_move_yincod,
          call_t_redraw_move_1_yincod, call_t_redraw_move_2_yincod,
          call_t_print_l_yincod, redraw_when_chmsig_yincod, char_len_yincod,
--- 172,178 ----
    },
  #endif /* JAPANESE */
  #ifdef CHINESE
!     { WNN_C_LANG, 	/* Simplified Chinese */
  	{ print_out_yincod, input_yincod, call_t_redraw_move_yincod,
          call_t_redraw_move_1_yincod, call_t_redraw_move_2_yincod,
          call_t_print_l_yincod, redraw_when_chmsig_yincod, char_len_yincod,
***************
*** 195,201 ****
  	NULL, NULL, NULL, NULL, NULL, NULL
        }
    },
!     { "zh_TW", 	/* Traditional Chinese */
  	{ print_out_yincod, input_yincod, call_t_redraw_move_yincod,
          call_t_redraw_move_1_yincod, call_t_redraw_move_2_yincod,
          call_t_print_l_yincod, redraw_when_chmsig_yincod, char_len_yincod,
--- 194,200 ----
  	NULL, NULL, NULL, NULL, NULL, NULL
        }
    },
!     { WNN_T_LANG, 	/* Traditional Chinese */
  	{ print_out_yincod, input_yincod, call_t_redraw_move_yincod,
          call_t_redraw_move_1_yincod, call_t_redraw_move_2_yincod,
          call_t_print_l_yincod, redraw_when_chmsig_yincod, char_len_yincod,
*** 1.1.1.2	1993/10/30 14:49:02
--- ./jhlp.c	1994/05/10 07:12:40
***************
*** 50,56 ****
   */
  #include <stdio.h>
  #include <signal.h>
- #include "jllib.h"
  #include "commonhd.h"
  #include "sdefine.h"
  #include "sheader.h"
--- 50,55 ----
***************
*** 65,77 ****
  #ifdef UX386
  #include <sys/kdef.h>
  #endif
  
  struct passwd *getpwuid();
  
- #ifdef SYSVR2
  #	include <setjmp.h>
  /*	don't define bcopy!!!!		*/
- #endif /* SYSVR2 */
  /* jlib.hの中でsetjmp.hがincludeされている!! */
  
  jmp_buf kk_env;
--- 64,77 ----
  #ifdef UX386
  #include <sys/kdef.h>
  #endif
+ #ifdef __MACHTEN__
+ #include <stdlib.h>
+ #endif
  
  struct passwd *getpwuid();
  
  #	include <setjmp.h>
  /*	don't define bcopy!!!!		*/
  /* jlib.hの中でsetjmp.hがincludeされている!! */
  
  jmp_buf kk_env;
***************
*** 194,205 ****
--- 194,210 ----
  
      if(*lang_dir == '\0') {
  	if ((p = getenv("LANG")) != NULL) {
+ #ifndef CANNA
  	    if (strlen(p) >= 4) {
  		strncpy(lang_dir, p, 5);
  		lang_dir[5] = '\0';
  	    } else {
  		strcpy(lang_dir, p);
  	    }
+ #else
+ 	    strncpy(lang_dir, p, 32);
+ 	    lang_dir[31] = '\0';
+ #endif
  	}
      }
      for (f = function_db; *lang_dir && f && f->lang; f++) {
***************
*** 253,259 ****
--- 258,268 ----
      }
  
      if((p = getenv(WNN_COUNTDOWN_ENV)) == NULL) {
+ #ifdef __MACHTEN__
+       setenv(WNN_COUNTDOWN_ENV,"0",1);
+ #else
        setenv(WNN_COUNTDOWN_ENV,"0");
+ #endif
      } else if (atoi(p) <= 0) {
  	puteustring(MSG_GET(4), stdout);
  	/*
***************
*** 262,268 ****
--- 271,281 ----
  	exit(126);
      } else {
        sprintf(p,"%d",atoi(p) - 1);
+ #ifdef __MACHTEN__
+       setenv(WNN_COUNTDOWN_ENV,p,1);
+ #else
        setenv(WNN_COUNTDOWN_ENV,p);
+ #endif
      }
  
      if((tname = getenv("TERM")) == NULL) {
***************
*** 356,361 ****
--- 369,375 ----
  	err("term initialize fault.");
      }
  
+ #ifndef CANNA
      if (!jl_isconnect(bun_data_)) {
        if (!servername || *servername == 0){
  	  printf("%s\r\n", wnn_perror());
***************
*** 364,369 ****
--- 378,384 ----
        }
        flush();
      }
+ #endif
  
      puteustring(MSG_GET(1),
  	/*
***************
*** 837,844 ****
--- 852,861 ----
  static void
  do_main()
  {
+ #ifndef CANNA
      unsigned char *buf;
      int ml;
+     extern void canna_mainloop();
  
      if ((buf = (unsigned char *)malloc(maxchg * 4)) == NULL) {
  	printf(MSG_GET(2));
***************
*** 849,854 ****
--- 866,872 ----
  	epilogue();
  	do_end();
      }
+ #endif
  
      pty_bit = 1 << ptyfd;
      tty_bit = 1 << ttyfd;
***************
*** 858,863 ****
--- 876,882 ----
  	disp_mode();
      }
  
+ #ifndef CANNA
      for (;;) {
  
        ml = kk();
***************
*** 874,879 ****
--- 893,901 ----
        if (ml > 0)
  	write(ptyfd, buf, ml);
      }
+ #else /* CANNA */
+     canna_mainloop();
+ #endif /* CANNA */
  }
  
  unsigned char keyin0();
***************
*** 909,914 ****
--- 931,953 ----
      return(conv_keyin(inkey));
  }
  
+ /*
+   through もどき
+   char の配列内の各文字を w_char にして w_char の配列に移す。
+   uum オリジナルの through とは違って void なので注意。
+  */
+ 
+ static void
+ throughlike(dest, src, n)
+ w_char *dest;
+ unsigned char *src;
+ int n;
+ {
+   while (n-- > 0) {
+     *dest++ = (w_char)*src++;
+   }
+ }
+ 
  /** キー入力関数 2 */
  unsigned char keyin0()
  {
***************
*** 948,955 ****
  	    return(*bufstart++);
          }
  
! 	time_out.tv_sec = 2; /* 2 sec 間待つのだゾ! */
! 	time_out.tv_usec = 0;
  	for(rfds = sel_ptn;
  #ifdef linux
  	    (sel_ret = select(20, &rfds, 0, 0, NULL)) < 0 && errno == EINTR;
--- 987,994 ----
  	    return(*bufstart++);
          }
  
! 	time_out.tv_sec = 0; /* 30 msec 間待つのだゾ! */
! 	time_out.tv_usec = 30000;
  	for(rfds = sel_ptn;
  #ifdef linux
  	    (sel_ret = select(20, &rfds, 0, 0, NULL)) < 0 && errno == EINTR;
***************
*** 1106,1117 ****
      struct winsize win;
      extern Term_RowWidth,crow;
  #endif
  #if defined(SYSVR2) && !defined(linux)
  	setpgrp();
  	close(open(ttyname(ttypfd), O_WRONLY, 0));
  #endif /* SYSVR2 */
- 
-     if (!(child_id = fork())) {
  #ifdef BSD42
  #ifdef TIOCNOTTY
  	/* set notty */
--- 1145,1156 ----
      struct winsize win;
      extern Term_RowWidth,crow;
  #endif
+ 
+     if (!(child_id = fork())) {
  #if defined(SYSVR2) && !defined(linux)
  	setpgrp();
  	close(open(ttyname(ttypfd), O_WRONLY, 0));
  #endif /* SYSVR2 */
  #ifdef BSD42
  #ifdef TIOCNOTTY
  	/* set notty */
***************
*** 1193,1198 ****
--- 1232,1238 ----
      }
  }
  
+ #ifndef HAVE_SETENV
  /** 環境変数のセット */
  void
  setenv(var, value)
***************
*** 1229,1234 ****
--- 1269,1275 ----
      strcat(environ[i], "=");
      strcat(environ[i], value);
  }
+ #endif /* !HAVE_SETENV */
  
  #ifdef SVR4
  static int
***************
*** 1248,1254 ****
      return(0);
  }
  
! static int
  set_euc_term(ttyfd)
  int ttyfd;
  {
--- 1289,1295 ----
      return(0);
  }
  
! static void
  set_euc_term(ttyfd)
  int ttyfd;
  {
***************
*** 1265,1273 ****
      eucioc.scrw[3] = 2;
      if (euc_set(&eucioc, ttyfd) != 0) {
  	fprintf(stderr, "eucwidth set failed\n");
! 	return(1);
      }
!     return(0);
  }
  
  #endif /* SVR4 */
--- 1306,1314 ----
      eucioc.scrw[3] = 2;
      if (euc_set(&eucioc, ttyfd) != 0) {
  	fprintf(stderr, "eucwidth set failed\n");
! 	return;
      }
!     return;
  }
  
  #endif /* SVR4 */
***************
*** 1292,1299 ****
--- 1333,1387 ----
  }
  #endif /* nec_ews_svr2 */
  
+ #ifdef sony
+ static void
+ set_sony_jterm(ttyfd, ttypfd)
+ int ttyfd, ttypfd;
+ {
+ #ifdef TIOCKGET
+   int tmode, jmode = 0;
+   struct jtchars jtc;
+ 
+   if (ioctl(ttyfd, TIOCKGET, &tmode) < 0) {
+     fprintf(stderr, "error in ioctl TIOCKGET.\n");
+     exit(1);
+   }
+   jmode = tmode;
+   tmode &= ~(KM_SYSCODE | KM_TTYPE);
+   switch (pty_c_flag) {
+   case J_EUJIS:
+     tmode |= KM_EUC | KM_SYSEUC;
+     break;
+   case J_JIS:
+     tmode |= KM_ASCII;
+     break;
+   case J_SJIS:
+     tmode |= KM_SJIS | KM_SYSSJIS;
+     break;
+   }
+   if (ioctl(ttypfd, TIOCKSET, &tmode) < 0) {
+     fprintf(stderr, "error in ioctl TIOCKSET.\n");
+     exit(1);
+   }
+ #endif /* TIOCKGET */
+ 
+ #ifdef TIOCKGETC    
+   if ((jmode & KM_TTYPE) == KM_JIS) {
+     ioctl(ttyfd, TIOCKGETC, &jtc);
+     jtc.t_ascii = 'B';
+     jtc.t_kanji = 'B';
+     if (ioctl(ttypfd, TIOCKSETC, &jtc) < 0) {
+       fprintf(stderr, "error in ioctl TIOCKSETC.\n");
+       exit(1);
+     }
+   }
+ #endif
+ }
+ #endif /* sony */
+ 
  /** ttyp のオープン */
  
+ #define MAXPTYNO (0x10 * (('z' - 'p' + 1) + ('Z' - 'P' + 1)))
  int ptyno;
  char *ptynm = "/dev/pty";
  char *ttypnm = "/dev/tty";
***************
*** 1343,1353 ****
      ioctl(ttypfd, TIOCSLTC, &ltcharsv);
      ioctl(ttypfd, TIOCSETP, &ttyb);
      ioctl(ttypfd, TIOCLSET, &local_mode);
- #ifdef TIOCSSIZE
-     pty_rowcol.ts_lines = crow; /* instead of lines */
-     pty_rowcol.ts_cols = maxlength; /* instead of columns */
-     ioctl(ttypfd, TIOCSSIZE, &pty_rowcol);
- #endif /* TIOCSSIZE */
  #ifdef notdef
      pid = getpid();
      ioctl(ttypfd, TIOCSPGRP, &pid);
--- 1431,1436 ----
***************
*** 1357,1362 ****
--- 1440,1452 ----
  	ioctl(ttypfd, TIOCLBIC, &word);
      }
  #endif /* BSD42 */
+ 
+ #ifdef TIOCSSIZE
+     pty_rowcol.ts_lines = crow; /* instead of lines */
+     pty_rowcol.ts_cols = maxlength; /* instead of columns */
+     ioctl(ttypfd, TIOCSSIZE, &pty_rowcol);
+ #endif /* TIOCSSIZE */
+ 
  #if defined(SYSVR2) && !defined(linux)
      if (ioctl(ttyfd, TCGETA, &buf1) == -1) {
  	buf1 = terms;
***************
*** 1426,1435 ****
--- 1516,1533 ----
  */
  #endif	/* defined(uniosu) */
  
+ #ifdef SVR4
+     set_euc_term(ttypfd);
+ #endif
+ 
  #if defined(nec_ews_svr2)
      set_jterm(ttyfd, ttypfd);
  #endif
  
+ #ifdef sony
+     set_sony_jterm(ttyfd, ttypfd);
+ #endif
+ 
  /*
      setpgrp();
      close(open(ttyname(ttypfd), O_WRONLY, 0));
***************
*** 1446,1452 ****
      struct termio	buf1;
  #endif
  
!     for (ptyno = 0; ptyno < 32; ptyno++) {
          ptyname(nmbuf, ptynm, ptyno);
          if ((ptyfd = open(nmbuf, O_RDWR, 0)) != ERROR) {
  #if defined(uniosu)
--- 1544,1550 ----
      struct termio	buf1;
  #endif
  
!     for (ptyno = 0; ptyno < MAXPTYNO; ptyno++) {
          ptyname(nmbuf, ptynm, ptyno);
          if ((ptyfd = open(nmbuf, O_RDWR, 0)) != ERROR) {
  #if defined(uniosu)
***************
*** 1461,1466 ****
--- 1559,1570 ----
  	    }
  	    savetmio = buf1;
  #endif
+ #ifdef	linux
+ 	    if (ioctl(0, TCGETA, &buf1) == -1) {
+ 		buf1 = terms;
+ 	    }
+ 	    savetmio = buf1;
+ #endif
              return;
          }
      }
***************
*** 1602,1608 ****
--- 1706,1717 ----
  char *b, *pty;
  int no;
  {
+   if (no < 0x10 * ('z' - 'p' + 1)) {
      sprintf(b, "%s%1c%1x", pty, 'p' + (no >> 4), no & 0x0f);
+   } else {
+     no -= 0x10 * ('z' - 'p' + 1);
+     sprintf(b, "%s%1c%1x", pty, 'P' + (no >> 4), no & 0x0f);
+   }
  }
  
  /* Move to etc/xutoj.c
***************
*** 1748,1753 ****
--- 1857,1863 ----
  #endif	/* sun */
  #endif /* linux */
  
+ #ifndef CANNA
  		set_scroll_region(0, crow - 1);
  		if (henkan_off_flag) {
  			kk_restore_cursor();
***************
*** 1765,1770 ****
--- 1875,1885 ----
  			set_screen_vars_default();
  			t_print_l();
  		}
+ #else /* CANNA */
+ 		set_scroll_region(0, crow - 1);
+ 		set_screen_vars_default();
+ 		t_print_l();
+ #endif /* CANNA */
  	}
  }
  #endif	/* SIGWINCH */
*** Uum4.109/printf.c	Wed Jul 28 14:16:23 1993
--- ./printf.c	Tue Jul 27 20:08:04 1993
***************
*** 52,58 ****
  #include "commonhd.h"
  #include "sdefine.h"
  #include "sheader.h"
- #include "jllib.h"
  
  extern int cursor_colum;
  
--- 52,57 ----
*** Uum4.109/screen.c	Wed Jul 28 14:16:23 1993
--- ./screen.c	Tue Jul 27 20:08:04 1993
***************
*** 54,60 ****
  #include "config.h"
  #include "sdefine.h"
  #include "sheader.h"
- #include "wnn_os.h"
  #include "buffer.h"
  
  /*
--- 54,59 ----
*** Uum4.109/sdefine.h	Wed Jul 28 14:16:18 1993
--- ./sdefine.h	Thu Jul 29 21:13:47 1993
***************
*** 159,165 ****
  #define OPTIONS	    "hHPxXkcrlDnv"
  
  /* for message file */
! #include "msg.h"
  #define	MSG_GET(no)	msg_get(cd, no, NULL, NULL)
  
  #define	CWNN_PINYIN	       	0
--- 159,171 ----
  #define OPTIONS	    "hHPxXkcrlDnv"
  
  /* for message file */
! 
! struct msg_cat { /* dummy */
!   int dummy;
! };
! 
! struct msg_cat *msg_open();
! 
  #define	MSG_GET(no)	msg_get(cd, no, NULL, NULL)
  
  #define	CWNN_PINYIN	       	0
*** 1.1.1.2	1993/10/30 14:49:11
--- sheader.h	1994/04/26 07:55:03
***************
*** 52,59 ****
   * header of standard i/o 
   **************************/
  
! #include "jslib.h"
! #include "wnn_os.h"
  
  typedef struct _WnnEnv {
      char                *host_name;     /* server name */
--- 52,58 ----
   * header of standard i/o 
   **************************/
  
! typedef int WNN_DIC_INFO; /* dummy */
  
  typedef struct _WnnEnv {
      char                *host_name;     /* server name */
***************
*** 205,213 ****
  extern int (*default_code_trans[])();
  
  /* extern function defines */
- #include "rk_spclval.h"
- #include "rk_fundecl.h"
- #include "wnn_string.h"
  
  extern void b_s_off_raw();
  extern void b_s_on_raw();
--- 204,209 ----
***************
*** 340,346 ****
--- 336,347 ----
  extern void set_keypad_on();
  extern void set_keypad_off();
  extern void set_scroll_region();
+ #if defined(linux) || defined(__FreeBSD__) || defined(__MACHTEN__)
+ #define HAVE_SETENV
+ #endif
+ #ifndef HAVE_SETENV
  extern void setenv();
+ #endif
  extern int setutmp();
  extern int st_colum();
  extern void t_cont_line_note_delete();
*** Uum4.109/termio.c	Wed Jul 28 14:16:20 1993
--- ./termio.c	Thu Jul 29 21:14:44 1993
***************
*** 95,100 ****
--- 95,101 ----
      }
      strcpy(Term_Name, cp);
  
+ #ifndef CANNA
      if ((strlen(Term_Name) > 2) && (strcmp(Term_Name + (strlen(Term_Name) - 2),"-j") == 0)) {
  	fprintf(stderr, MSG_GET(4));
  	/*
***************
*** 102,107 ****
--- 103,109 ----
  	*/
  	return(-1);
      }
+ #endif /* CANNA */
      setupterm(0,1,&status);
      reset_shell_mode();
      if (status != 1){
***************
*** 119,128 ****
--- 121,132 ----
           fprintf(stderr, "Your terminal is not strong enough. Goodbye !\n");
           return(-1);
      }
+ #ifndef CANNA
      termchar[0] = 0;
      strcat(termchar,cp);
      strcat(termchar,"-j");
      setenv("TERM", termchar);
+ #endif /* CANNA */
  
      sprintf(lcode,"%d", lines - conv_lines);
      setenv("LINES", lcode);
*** Uum4.109/xutoj.c	Wed Jul 28 14:16:22 1993
--- ./xutoj.c	Wed Aug 11 15:00:11 1993
***************
*** 52,58 ****
  
  #include "commonhd.h"
  #include "config.h"
- #include "wnn_os.h"
  
  #define ECNS_IS_UCNS 1	/* The trust CNS is CNS11643 based on ISO2022,
  			   but the CNS is binded on EUC */
--- 52,57 ----
***************
*** 283,288 ****
--- 282,288 ----
  	    }
  ESC_SWITCH:
  	    switch(*ec) {
+ #ifndef CANNA /* This should be removed even if not Canna */
  	     case LS1R:
  		glr_mode[GR] = G1;
  		break;
***************
*** 298,303 ****
--- 298,304 ----
  	     case LS3R:
  		glr_mode[GR] = G3;
  		break;
+ #endif /* CANNA */
  	     default:
  		ret = check_designate(ec, eend, &ret_buf);
  		ec += ret;
*** 1.1.1.2	1993/10/30 14:49:37
--- ./termcap.c	1994/05/10 07:13:35
***************
*** 55,61 ****
  
  #include "sdefine.h"
  #include "sheader.h"
! 
  #ifdef DGUX	/* copied from JLS5.4.2 */
  #include <sys/ioctl.h>
  #endif /* DGUX */
--- 55,63 ----
  
  #include "sdefine.h"
  #include "sheader.h"
! #ifdef __MACHTEN__
! #include <stdlib.h>
! #endif
  #ifdef DGUX	/* copied from JLS5.4.2 */
  #include <sys/ioctl.h>
  #endif /* DGUX */
***************
*** 267,274 ****
  {
      char *name1;
      char *c;
      extern char *malloc();
! 
      if ((name1 = malloc(strlen(name) + 1024)) == NULL) {
  	return(-1);
      }
--- 269,277 ----
  {
      char *name1;
      char *c;
+ #ifndef __MACHTEN__
      extern char *malloc();
! #endif
      if ((name1 = malloc(strlen(name) + 1024)) == NULL) {
  	return(-1);
      }
***************
*** 292,298 ****
--- 295,305 ----
      }
      remove(name1,":sc");
      remove(name1,":rc");
+ #ifdef __MACHTEN__
+     setenv("TERMCAP" , name1 , 1);
+ #else
      setenv("TERMCAP" , name1);
+ #endif
      free(name1);
      return(0);
  }
