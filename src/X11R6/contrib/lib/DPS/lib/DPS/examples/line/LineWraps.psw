/*
 * $RCSfile: LineWraps.psw,v $
 *
 * (c) Copyright 1992-1994 Adobe Systems Incorporated.
 * All rights reserved.
 * 
 * Permission to use, copy, modify, distribute, and sublicense this software
 * and its documentation for any purpose and without fee is hereby granted,
 * provided that the above copyright notices appear in all copies and that
 * both those copyright notices and this permission notice appear in
 * supporting documentation and that the name of Adobe Systems Incorporated
 * not be used in advertising or publicity pertaining to distribution of the
 * software without specific, written prior permission.  No trademark license
 * to use the Adobe trademarks is hereby granted.  If the Adobe trademark
 * "Display PostScript"(tm) is used to describe this software, its
 * functionality or for any other purpose, such use shall be limited to a
 * statement that this software works in conjunction with the Display
 * PostScript system.  Proper trademark attribution to reflect Adobe's
 * ownership of the trademark shall be given whenever any such reference to
 * the Display PostScript system is made.
 * 
 * ADOBE MAKES NO REPRESENTATIONS ABOUT THE SUITABILITY OF THE SOFTWARE FOR
 * ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT EXPRESS OR IMPLIED WARRANTY.
 * ADOBE DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL
 * IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NON- INFRINGEMENT OF THIRD PARTY RIGHTS.  IN NO EVENT SHALL ADOBE BE LIABLE
 * TO YOU OR ANY OTHER PARTY FOR ANY SPECIAL, INDIRECT, OR CONSEQUENTIAL
 * DAMAGES OR ANY DAMAGES WHATSOEVER WHETHER IN AN ACTION OF CONTRACT,
 * NEGLIGENCE, STRICT LIABILITY OR ANY OTHER ACTION ARISING OUT OF OR IN
 * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.  ADOBE WILL NOT
 * PROVIDE ANY TRAINING OR OTHER SUPPORT FOR THE SOFTWARE.
 * 
 * Adobe, PostScript, and Display PostScript are trademarks of Adobe Systems
 * Incorporated which may be registered in certain jurisdictions
 * 
 * Author:  Adobe Systems Incorporated
 */

/***************************************************************
**
** FUNCTION:	PSWDefs
**
** DESCRIPTION:	Defines procedures that are called often and binds
** to save operator look up time.
**
** PARAMETERS:	None
**
** RETURN:		None
**
***************************************************************/
defineps PSWDefs()
	/EVB { % BGRect BGStrWidth BGStrColor BGColor
		setgray 2 index rectfill
		setgray setlinewidth rectstroke
	} bind def

	/DLB { % X1 Y1 X Y lineColor lineWidth
		setlinewidth
		setgray
		moveto
		lineto
		stroke
	} bind def

	/MLB { % X1 Y1 X Y
		moveto
		lineto
	} bind def

	/SLB { % LineColor LineWidth
		setlinewidth
		setgray
		stroke
	} bind def

	/DLRB { % i
		0 1 3 -1 roll 1 sub { % for
			dup PSW exch get setlinewidth
			dup PSC exch get setgray
			dup PSX exch get PSY 2 index get moveto
			dup PSX1 exch get PSY1 2 index get lineto
			stroke pop
		} for
	} bind def
endps

/***************************************************************
**
** FUNCTION:	PSWEraseView
**
** DESCRIPTION:	Erases the view.
**
** PARAMETERS:	BGColor		background color
**		BGStrColor	background color for border stroke
** 		BGStrWidth	line width for border stroke
**		BGRect		rectangle describing view
**				(x, y, width, height)
**
** RETURN:	None
**
***************************************************************/
defineps PSWEraseView (float BGColor, BGStrColor, BGStrWidth, BGRect[4])
	BGColor setgray
	BGRect rectfill
	BGStrColor setgray
	BGStrWidth setlinewidth
	BGRect rectstroke
endps

/***************************************************************
**
** FUNCTION:	PSWDrawLine
**
** DESCRIPTION:	Draws a line.
**
** PARAMETERS:	LineWidth	line width
**		LineColor	gray scale color value (0 to 1)
** 		X, Y		coordinates of start of line
**		X1, Y1		coordinates of end of line
**
** RETURN:	None
**
***************************************************************/
defineps PSWDrawLine (float LineWidth, LineColor, X, Y, X1, Y1)
	LineWidth setlinewidth
	LineColor setgray
	X Y moveto
	X1 Y1 lineto
	stroke
endps

/***************************************************************
**
** FUNCTION:	PSWEraseViewBind
**
** DESCRIPTION:	Erases the view using a binding.
**
** PARAMETERS:	BGColor		background color
**		BGStrColor	background color for border stroke
** 		BGStrWidth	line width for border stroke
**		BGRect		rectangle describing view
**				(x, y, width, height)
**
** RETURN:	None
**
***************************************************************/
defineps PSWEraseViewBind (float BGColor, BGStrColor, BGStrWidth, BGRect[4])
	BGRect BGStrWidth BGStrColor BGColor EVB
endps

/***************************************************************
**
** FUNCTION:	PSWDrawLineBind
**
** DESCRIPTION:	Draws a line with binding.
**
** PARAMETERS:	LineWidth	line width
**		LineColor	gray scale color value (0 to 1)
** 		X, Y		coordinates of start of line
**		X1, Y1		coordinates of end of line
**
** RETURN:	None
**
***************************************************************/
defineps PSWDrawLineBind (float LineWidth, LineColor, X, Y, X1, Y1)
	X1 Y1 X Y LineColor LineWidth DLB
endps

/***************************************************************
**
** FUNCTION:	PSWMakeLineBind
**
** DESCRIPTION:	Makes a line to be drawn later with optimized
**		stroking using PSWStrokeLineBind.
**
** PARAMETERS:	X, Y		coordinates of start of line
**		X1, Y1		coordinates of end of line
**
** RETURN:	None
**
***************************************************************/
defineps PSWMakeLineBind (float X, Y, X1, Y1)
	X1 Y1 X Y MLB 
endps

/***************************************************************
**
** FUNCTION:	PSWStrokeLineBind
**
** DESCRIPTION:	Draws lines previously made with PSWMakeLineBind.
**
** PARAMETERS:	LineWidth	line width
**		LineColor	gray scale color value (0 to 1)
**
** RETURN:	None
**
***************************************************************/
defineps PSWStrokeLineBind (float LineWidth, LineColor)
	LineWidth LineColor SLB 
endps

/***************************************************************
**
** FUNCTION:	PSWDrawLineRepeatBind
**
** DESCRIPTION:	Draws lines from arrays of points, line widths,
**		and colors.
**
** PARAMETERS:	W		array of line widths
**		C		array of gray scale color values (0 to 1)
** 		X, Y		array of coordinates of start of lines
**		X1, Y1		array of coordinates of end of lines
**		i		number of elements in each array
**
** RETURN:	None
**
***************************************************************/
defineps PSWDrawLineRepeatBind (float W[i], C[i], X[i], Y[i], X1[i], Y1[i]; int i)
	/PSW W def /PSC C def /PSX X def /PSY Y def /PSX1 X1 def /PSY1 Y1 def
	i DLRB
endps

/***************************************************************
**
** FUNCTION:	PSWGetTransform
**
** DESCRIPTION:	Gets the current transform matrices and offset
**		coordinates.
**
** PARAMETERS:	Ctxt		DPS context
**
** RETURN:	Ctm		array containing current transform matrix
**		Invctm		array containing inverted matrix
**		XOffset		X offset value
**		YOffset		Y offset value
**
***************************************************************/
defineps PSWGetTransform(DPSContext Ctxt | float Ctm[6],
     Invctm[6]; int *XOffset, *YOffset)
   matrix currentmatrix dup Ctm
   matrix invertmatrix Invctm
   currentXoffset YOffset XOffset
endps

