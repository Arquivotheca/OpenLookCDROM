/* 
 * XDPSpwraps.psw
 *
 * (c) Copyright 1990-1994 Adobe Systems Incorporated.
 * All rights reserved.
 * 
 * Permission to use, copy, modify, distribute, and sublicense this software
 * and its documentation for any purpose and without fee is hereby granted,
 * provided that the above copyright notices appear in all copies and that
 * both those copyright notices and this permission notice appear in
 * supporting documentation and that the name of Adobe Systems Incorporated
 * not be used in advertising or publicity pertaining to distribution of the
 * software without specific, written prior permission.  No trademark license
 * to use the Adobe trademarks is hereby granted.  If the Adobe trademark
 * "Display PostScript"(tm) is used to describe this software, its
 * functionality or for any other purpose, such use shall be limited to a
 * statement that this software works in conjunction with the Display
 * PostScript system.  Proper trademark attribution to reflect Adobe's
 * ownership of the trademark shall be given whenever any such reference to
 * the Display PostScript system is made.
 * 
 * ADOBE MAKES NO REPRESENTATIONS ABOUT THE SUITABILITY OF THE SOFTWARE FOR
 * ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT EXPRESS OR IMPLIED WARRANTY.
 * ADOBE DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL
 * IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NON- INFRINGEMENT OF THIRD PARTY RIGHTS.  IN NO EVENT SHALL ADOBE BE LIABLE
 * TO YOU OR ANY OTHER PARTY FOR ANY SPECIAL, INDIRECT, OR CONSEQUENTIAL
 * DAMAGES OR ANY DAMAGES WHATSOEVER WHETHER IN AN ACTION OF CONTRACT,
 * NEGLIGENCE, STRICT LIABILITY OR ANY OTHER ACTION ARISING OUT OF OR IN
 * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.  ADOBE WILL NOT
 * PROVIDE ANY TRAINING OR OTHER SUPPORT FOR THE SOFTWARE.
 * 
 * Adobe, PostScript, and Display PostScript are trademarks of Adobe Systems
 * Incorporated which may be registered in certain jurisdictions
 * 
 * Author:  Adobe Systems Incorporated
 */

defineps _DPSPSetMatrix(DPSContext ctxt; int xOffset, yOffset;
			double pixelsPerPoint)
	gsave
	initmatrix
        1 1 idtransform abs exch abs exch scale
	    % matrix is identity modulo sign
        pixelsPerPoint dup scale
        xOffset yOffset translate
endps

defineps _DPSPClearArea(DPSContext ctxt; int x, y, width, height)
	1 setgray
	x y width height rectfill
endps

defineps _DPSPSetMaskTransfer(DPSContext ctxt)
	{pop 0} dup dup dup setcolortransfer
        {pop 0} settransfer
endps

defineps _DPSPDefineExecFunction(DPSContext ctxt)
	$Adobe$DPS$Lib$Dict begin
	/ExecPS {
	        $Adobe$DPS$Lib$Dict /doclientsync 3 -1 roll put
		$Adobe$DPS$Lib$Dict /execSuccess false put
		(%stdin) (r) file
		cvx stopped
		pop	% always true
		% Flush until you get the magic line
		{
			{currentfile 256 string readline} stopped
			pop % don't care stopped result
			pop % don't care readline bool result
(Magic end of data line \)\)\)\)\)\)\)\)\)\) 99#2 2#99 <xyz> // 7gsad,32h4ghNmndFgj2)
			eq
			{exit} if
		} loop
		$Adobe$DPS$Lib$Dict /doclientsync get {
			clientsync
		} if
	} def end
endps

defineps _DPSPSaveBeforeExec(DPSContext ctxt; boolean noWait)
	$Adobe$DPS$Lib$Dict /EPSFsave save put
	clear cleardictstack
	/showpage {} def
	0 setgray 0 setlinecap
	1 setlinewidth 0 setlinejoin
	10 setmiterlimit [] 0 setdash newpath
	noWait
	$Adobe$DPS$Lib$Dict /ExecPS get
endps

defineps _DPSPCheckForError(DPSContext ctxt | boolean *err)
	$Adobe$DPS$Lib$Dict /execSuccess get not err
	clear
	cleardictstack
endps
