============================================================
  USING THE DISPLAY POSTSCRIPT SYSTEM WITH X11R6 LIBRARIES
============================================================

 * (c) Copyright 1994 Adobe Systems Incorporated.
 * All rights reserved.
 * 
 * Permission to use, copy, modify, distribute, and sublicense this software
 * and its documentation for any purpose and without fee is hereby granted,
 * provided that the above copyright notices appear in all copies and that
 * both those copyright notices and this permission notice appear in
 * supporting documentation and that the name of Adobe Systems Incorporated
 * not be used in advertising or publicity pertaining to distribution of the
 * software without specific, written prior permission.  No trademark license
 * to use the Adobe trademarks is hereby granted.  If the Adobe trademark
 * "Display PostScript"(tm) is used to describe this software, its
 * functionality or for any other purpose, such use shall be limited to a
 * statement that this software works in conjunction with the Display
 * PostScript system.  Proper trademark attribution to reflect Adobe's
 * ownership of the trademark shall be given whenever any such reference to
 * the Display PostScript system is made.
 * 
 * ADOBE MAKES NO REPRESENTATIONS ABOUT THE SUITABILITY OF THE SOFTWARE FOR
 * ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT EXPRESS OR IMPLIED WARRANTY.
 * ADOBE DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL
 * IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NON- INFRINGEMENT OF THIRD PARTY RIGHTS.  IN NO EVENT SHALL ADOBE BE LIABLE
 * TO YOU OR ANY OTHER PARTY FOR ANY SPECIAL, INDIRECT, OR CONSEQUENTIAL
 * DAMAGES OR ANY DAMAGES WHATSOEVER WHETHER IN AN ACTION OF CONTRACT,
 * NEGLIGENCE, STRICT LIABILITY OR ANY OTHER ACTION ARISING OUT OF OR IN
 * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.  ADOBE WILL NOT
 * PROVIDE ANY TRAINING OR OTHER SUPPORT FOR THE SOFTWARE.
 * 
 * Adobe, PostScript, and Display PostScript are trademarks of Adobe Systems
 * Incorporated which may be registered in certain jurisdictions

===========================

Display PostScript applications work unchanged with Release 6 of the X Window
System libraries.  However, you might want to take advantage of the new
extension event handling routines in the R6 version of the X Toolkit
Intrinsics to simplify event handling.

The recommended way to handle events prior to R6 is to set pass-through
event dispatching and to write your event loop like this:

	while (1) {
	    XEvent event;
	    XtAppNextEvent(app, &event);
	    if (!XDPSDispatchEvent(&event)) XtDispatchEvent(&event);
	}

With R6, you can set an extension event dispatcher for Display PostScript
events by calling XDPSSetXtEventDispatching:

void XDPSSetXtEventDispatching(dpy)
    Display *dpy;

XDPSSetXtEventDispatching sets pass-through event dispatching for the
specified dispay and registers XDPSDispatchEvent with the X Toolkit as the
extension event dispatcher for Display PostScript events.  After this call
the X Toolkit will automatically dispatch all Display PostScript events.

Applications that use XDPSSetXtEventDispatching have several advantages:

- They no longer need the custom event dispatching event described above;
  XtAppMainLoop can be used to handle event dispatching.

- Subsidiary event dispatching loops that may exist in toolkits will
  correctly handle Display PostScript events instead of ignoring them.

- XtAppProcessEvent can once again be safely used to handle X events.

If the Display PostScript extension is not yet initialized,
XDPSSetXtEventDispatching initializes the extension to find out the
extension event codes.

If an application is using DPS NX software instead of the extension,
XDPSSetXtEventDispatching adds a special event dispatcher for ClientMessage
events.  This dispatcher passes any non-DPS events to the previously
installed ClientMessage event dispatcher (normally the default dispatcher).
Applications should install any custom ClientMessage event dispatchers
before calling XDPSSetXtEventDispatching.  If this is not possible, the
custom ClientMessage event dispatcher should call XDPSDispatchEvent to
dispatch any potential DPS NX ClientMessages.

