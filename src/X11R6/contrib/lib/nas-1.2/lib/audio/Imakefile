/*
 * Copyright 1994 Network Computing Devices, Inc.
 *
 * Permission to use, copy, modify, distribute, and sell this software and
 * its documentation for any purpose is hereby granted without fee, provided
 * that the above copyright notice appear in all copies and that both that
 * copyright notice and this permission notice appear in supporting
 * documentation, and that the name Network Computing Devices, Inc. not be
 * used in advertising or publicity pertaining to distribution of this 
 * software without specific, written prior permission.
 * 
 * THIS SOFTWARE IS PROVIDED 'AS-IS'.  NETWORK COMPUTING DEVICES, INC.,
 * DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING WITHOUT
 * LIMITATION ALL IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 * PARTICULAR PURPOSE, OR NONINFRINGEMENT.  IN NO EVENT SHALL NETWORK
 * COMPUTING DEVICES, INC., BE LIABLE FOR ANY DAMAGES WHATSOEVER, INCLUDING
 * SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES, INCLUDING LOSS OF USE, DATA,
 * OR PROFITS, EVEN IF ADVISED OF THE POSSIBILITY THEREOF, AND REGARDLESS OF
 * WHETHER IN AN ACTION IN CONTRACT, TORT OR NEGLIGENCE, ARISING OUT OF OR IN
 * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 * 
 * $NCDId: @(#)Imakefile,v 1.13 1994/06/01 18:40:13 greg Exp $
 */

#include "NetAudio.tmpl"

#if ProjectX < 5
/* Pre-X11R5 compatability */
#ifndef NormalLibX
#define NormalLibX	YES
#endif
#endif /* ProjectX < 5 */

#ifndef NormalLibAudio
#define NormalLibAudio NormalLibX
#endif
#ifndef SharedLibAudio
#define SharedLibAudio SharedLibX
#endif
#ifndef DebugLibAudio
#define DebugLibAudio DebugLibX
#endif
#ifndef ProfileLibAudio
#define ProfileLibAudio ProfileLibX
#endif

#define DoNormalLib NormalLibAudio
#define DoSharedLib SharedLibAudio
#define DoDebugLib DebugLibAudio
#define DoProfileLib ProfileLibAudio

/* must include <Library.tmpl> *after* the above 4 lines */
#include <Library.tmpl>

#if SystemV && !SystemV4 && !defined(XFree86Version)
   SYSV_DEFINES = -DAU_NOT_STDC_ENV -D_AuNEEDBCOPYFUNC -DNEED_FAKE_XWIN
#endif

#if Malloc0ReturnsNull
 MALLOC_DEFINES = -DMALLOC_0_RETURNS_NULL
#endif

#if ProjectX < 5
    COMPAT_SRCS = AuGetBest.c
    COMPAT_OBJS = AuGetBest.o
#endif /* ProjectX < 5 */

        DEFINES = $(MALLOC_DEFINES) -DNETAUDIO $(SYSV_DEFINES)
   CONN_DEFINES = ConnectionFlags
   INSTALLFLAGS = $(INSTINCFLAGS)

HEADERS = Alibint.h Alibnet.h Xtutil.h audiolib.h audioutil.h snd.h wave.h    \
          voc.h aiff.h sound.h soundlib.h fileutil.h 8svx.h Astreams.h

   SRCS = AlibAsync.c Alibint.c AuErrDes.c AuFreeEData.c CloseSvr.c ConnSvr.c \
          CrFlow.c DesFlow.c Flush.c HandleEv.c IDOfEvent.c KillClient.c      \
          NextEvent.c OpenSvr.c ReqEvent.c ScanEvents.c ScanTEvent.c	      \
          SetElState.c GetElState.c SetElement.c GetElement.c SvrName.c Sync.c\
          Xtutil.c ReadEl.c WriteEl.c Util.c SetElParms.c GetDevAttr.c	      \
          SetDevAttr.c CrBucket.c DesBucket.c GetBucAttr.c ListBucket.c	      \
          ListDevice.c GetSvrTime.c SetClsDwnMd.c GetClsDwnMd.c		      \
	  convutil.c fileutil.c monitor.c bcache.c			      \
	  globals.c Astreams.c $(COMPAT_SRCS)				      \
\
          snd.c wave.c voc.c aiff.c 8svx.c sound.c soundlib.c

   OBJS = AlibAsync.o Alibint.o AuErrDes.o AuFreeEData.o CloseSvr.o ConnSvr.o \
          CrFlow.o DesFlow.o Flush.o HandleEv.o IDOfEvent.o KillClient.o      \
          NextEvent.o OpenSvr.o ReqEvent.o ScanEvents.o ScanTEvent.o	      \
          SetElState.o GetElState.o SetElement.o GetElement.o SvrName.o Sync.o\
          Xtutil.o ReadEl.o WriteEl.o Util.o SetElParms.o GetDevAttr.o	      \
          SetDevAttr.o CrBucket.o DesBucket.o GetBucAttr.o ListBucket.o	      \
          ListDevice.o GetSvrTime.o SetClsDwnMd.o GetClsDwnMd.o		      \
	  convutil.o fileutil.o monitor.o bcache.o			      \
	  globals.o Astreams.o $(COMPAT_OBJS)				      \
\
          snd.o wave.o voc.o aiff.o 8svx.o sound.o soundlib.o

  FILES = $(SRCS) $(HEADERS) AuGetBest.c nameaddr.c nameserver.c

#if ProjectX >= 5
LibraryObjectRule()

SpecialLibObjectRule(ConnSvr.o,/**/,$(CONN_DEFINES))
SpecialLibObjectRule(OpenSvr.o,/**/,$(CONN_DEFINES))
SpecialLibObjectRule(Alibint.o,/**/,$(CONN_DEFINES))
SpecialLibObjectRule(Astreams.o,/**/,$(CONN_DEFINES))
SpecialLibObjectRule(globals.o,/**/,$(CONN_DEFINES))
#else 
/* Pre-X11R5 compatability */
NormalLibraryObjectRule()

all:: libaudio.a

SpecialObjectRule(ConnSvr.o,/**/,$(CONN_DEFINES))
SpecialObjectRule(OpenSvr.o,/**/,$(CONN_DEFINES))
SpecialObjectRule(Alibint.o,/**/,$(CONN_DEFINES))
SpecialObjectRule(Astreams.o,/**/,$(CONN_DEFINES))
SpecialObjectRule(globals.o,/**/,$(CONN_DEFINES))

#endif

BuildIncludes($(HEADERS),audio,..)
InstallMultiple($(HEADERS),$(INCDIR))

#if DoSharedLib
#if DoNormalLib
SharedLibraryTarget(audio,$(SOAUDIOREV),$(OBJS),shared,..)
#else
SharedLibraryTarget(audio,$(SOAUDIOREV),$(OBJS),.,.)
#endif
#ifdef notyet
SharedLibraryDataTarget(audio,$(SOAUDIOREV),$(UNSHAREDOBJS))
#endif
InstallSharedLibrary(audio,$(SOAUDIOREV),$(USRLIBDIR))
#ifdef notyet
InstallSharedLibraryData(audio,$(SOAUDIOREV),$(USRLIBDIR))
#endif
#endif

#if DoNormalLib
NormalLibraryTarget(audio,$(OBJS))
InstallLibrary(audio,$(USRLIBDIR))
#endif

#if DoProfileLib
ProfiledLibraryTarget(audio,$(OBJS))
InstallLibrary(audio_p,$(USRLIBDIR))
#endif

#if DoDebugLib
DebuggedLibraryTarget(audio,$(OBJS))
InstallLibrary(audio_d,$(USRLIBDIR))
#endif

BuildReleaseHeader()

/* because nameaddr.c is conditionally included */
Astreams.o: nameaddr.c
Astreams.o: nameserver.c

depend:: $(SRCS)
  
DependTarget()
