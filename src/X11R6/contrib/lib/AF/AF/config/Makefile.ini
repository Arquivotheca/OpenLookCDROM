#
# @DEC_COPYRIGHT@
#
#
# HISTORY
# $Log: Makefile.ini,v $
# Revision 1.3  1993/11/23  02:13:06  tml
# AF3R1A bug fixes
#
# Revision 1.2  1993/02/06  21:18:27  tml
# rsp change -- not required I do not think, but anyway.
#
# Revision 1.1  1992/10/02  14:48:24  stewart
# Initial revision
#
# Revision 1.2.2.3  92/09/01  18:11:27  Dave_Hill
# 	changed loccc, and now generates imake.local
# 	[92/09/01  18:02:11  Dave_Hill]
# 
# Revision 1.2.2.2  91/12/23  10:49:48  Russ_Kuhn
# 	DEC 64-bit and cross-compilation patches applied
# 	[91/12/23  10:19:41  Russ_Kuhn]
# 
# Revision 1.2  91/12/15  12:42:16  devrcs
# 	Initial load of project
# 
# $EndLog$
#
#
#   WARNING    WARNING    WARNING    WARNING    WARNING    WARNING    WARNING
#
# This is NOT an automatically generated Makefile!  It is hand-crafted as a 
# bootstrap, may need editing for your system.  The BOOTSTRAPCFLAGS variable
# may be given at the top of the build tree for systems that do not define
# any machine-specific preprocessor symbols.
#


BOOTSTRAPCFLAGS = -D__alpha -D__osf__
#BOOTSTRAPCFLAGS = 			No flags on Sparc or MIPS/Ultrix
    CDEBUGFLAGS = 
       INCLUDES = -I../include
         CFLAGS = $(BOOTSTRAPCFLAGS) $(CDEBUGFLAGS) $(INCLUDES)
          SHELL = /bin/sh
             RM = rm -f
             LN = ln -s
           MAKE = make
         RM_CMD = $(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a \
			tags TAGS make.log
          NPROC = 1
          LOCCC = COMP_HOST_ROOT=/ COMP_TARGET_ROOT=/ /usr/bin/cc -O

imake::
	@echo "making imake with BOOTSTRAPCFLAGS=$(BOOTSTRAPCFLAGS)"

imake:: imake.o
	$(LOCCC) -o imake imake.o

imake.o: ccimake imake.c
	$(LOCCC) -c $(CFLAGS) `./ccimake` imake.c

ccimake: ccimake.c
	$(LOCCC) -o ccimake $(CFLAGS) ccimake.c

relink:
	$(RM) imake
	$(MAKE) $(MFLAGS) imake

clean:
	$(RM) ccimake imake.o imake
	$(RM_CMD) \#*

depend:


# for manual use

Makefile: imake
	imake -DNEWTOP=../

tags:

install:

install.man:

Makefiles: Makefile
