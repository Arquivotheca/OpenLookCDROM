# Makefile generated by imake - do not edit!
# $XConsortium: imake.c,v 1.65 91/07/25 17:50:17 rws Exp $
#
# The cpp used on this machine replaces all newlines and multiple tabs and
# spaces in a macro expansion with a single space.  Imake tries to compensate
# for this, but is not always successful.
#

###########################################################################
# Makefile generated from "Imake.tmpl" and <Imakefile>
# $RCS: Imake.tmpl,v 1.77 89/12/18 17:01:37 jim Exp $
#
# Platform-specific parameters may be set in the appropriate .cf
# configuration files.  Site-wide parameters may be set in the file
# site.def.  Full rebuilds are recommended if any parameters are changed.
#
# If your C preprocessor doesn't define any unique symbols, you'll need
# to set BOOTSTRAPCFLAGS when rebuilding imake (usually when doing
# "make Makefile", "make Makefiles", or "make World").
#
# If you absolutely can't get imake to work, you'll need to set the
# variables at the top of each Makefile as well as the dependencies at the
# bottom (makedepend will do this automatically).
#

###########################################################################
# platform-specific configuration parameters - edit sgi.cf to change

###########################################################################
# site-specific configuration parameters - edit site.def to change

            SHELL = 	/bin/sh

              TOP = ../../../.
      CURRENT_DIR = ./server/dda/sgi

               AR = ar scq
  BOOTSTRAPCFLAGS =
               CC = cc

         COMPRESS = CompressCmd
              CPP = /lib/cpp $(STD_CPP_DEFINES)
    PREPROCESSCMD = cc -E $(STD_CPP_DEFINES)
          INSTALL = $(SCRIPTSRC)/bsdinst.sh
               LD = ld
             LINT = lint
      LINTLIBFLAG = -o
         LINTOPTS = -ax
               LN = ln -s
             MAKE = make
               MV = mv
               CP = cp
           RANLIB = /bin/true
  RANLIBINSTFLAGS =
               RM = rm -f
     STD_INCLUDES =
  STD_CPP_DEFINES = -DSYSV
      STD_DEFINES = -DSYSV
 EXTRA_LOAD_FLAGS =
  EXTRA_LIBRARIES = -laudio -lsun -lmalloc -lc_s
             TAGS = ctags

    PROTO_DEFINES =  -DNARROWPROTO

     INSTPGMFLAGS =

     INSTBINFLAGS = -m 0755
     INSTUIDFLAGS = -m 4755
     INSTLIBFLAGS = -m 0664
     INSTINCFLAGS = -m 0444
     INSTMANFLAGS = -m 0444
     INSTDATFLAGS = -m 0444
    INSTKMEMFLAGS = -m 2755 -g sys

          DESTDIR =

     TOP_INCLUDES = -I$(TOP)

      CDEBUGFLAGS = -O
        CCOPTIONS = -prototypes -float -acpp -D__STDC__ -D__EXTENSIONS__  -Wf,-XNp9000,-XNd8000,-XNh2000
      COMPATFLAGS =

      ALLINCLUDES = $(STD_INCLUDES) $(TOP_INCLUDES) $(INCLUDES) $(EXTRA_INCLUDES)
       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(PROTO_DEFINES) $(DEFINES) $(COMPATFLAGS)
           CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(ALLDEFINES)
        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES)
           LDLIBS = $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)
        LDOPTIONS = $(CDEBUGFLAGS) $(CCOPTIONS)
   LDCOMBINEFLAGS = -r

        MACROFILE = sgi.cf
           RM_CMD = $(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut

    IMAKE_DEFINES =

         IRULESRC = $(CONFIGSRC)
        IMAKE_CMD = $(NEWTOP)$(IMAKE) -I$(NEWTOP)$(IRULESRC) $(IMAKE_DEFINES)

     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/Imake.rules \
			$(IRULESRC)/Project.tmpl $(IRULESRC)/site.def \
			$(IRULESRC)/$(MACROFILE) $(EXTRA_ICONFIGFILES)

###########################################################################
# AudioFile Build Parameters

###########################################################################
# AudioFile make variables; this need to be coordinated with rules

          PATHSEP = /
        USRLIBDIR = $(DESTDIR)/crl/audio/lib.mips/
           BINDIR =  $(DESTDIR)/crl/audio/bin.mips/
          INCROOT = $(DESTDIR)/crl/audio/include
     BUILDINCROOT = $(TOP)
      BUILDINCDIR = $(BUILDINCROOT)/audio
      BUILDINCTOP = ..
           INCDIR = $(INCROOT)/AF
           ADMDIR = $(DESTDIR)/usr/adm
           LIBDIR = $(USRLIBDIR)/AF
        CONFIGDIR = $(LIBDIR)/config
       LINTLIBDIR = $(USRLIBDIR)/lint

          MANPATH = $(DESTDIR)$(DESTDIR)/crl/audio/man/
    MANSOURCEPATH = $(MANPATH)/man
        MANSUFFIX = 1
     LIBMANSUFFIX = 3
           MANDIR = $(MANSOURCEPATH)1
        LIBMANDIR = $(MANSOURCEPATH)3
    SOAUDIOLIBREV = 0.0

            IMAKE = $(IMAKESRC)/imake
           DEPEND = $(DEPENDSRC)/makedepend
        MKDIRHIER = 	/bin/sh $(SCRIPTSRC)/mkdirhier.sh

        CONFIGSRC = $(TOP)/config
        CLIENTSRC = $(TOP)/clients
          DEMOSRC = $(TOP)/demos
           LIBSRC = $(TOP)/lib
       INCLUDESRC = $(TOP)/AF
        SERVERSRC = $(TOP)/server
          UTILSRC = $(TOP)/util
        SCRIPTSRC = $(UTILSRC)/scripts
       EXAMPLESRC = $(TOP)/examples
       CONTRIBSRC = $(TOP)/contrib
           DOCSRC = $(TOP)/doc
        DEPENDSRC = $(UTILSRC)/makedepend
         IMAKESRC = $(CONFIGSRC)
         AFLIBSRC = $(LIBSRC)/AF
     AFUTILLIBSRC = $(LIBSRC)/AFUtil

        UIDLIBDIR = $(USRLIBDIR)/uid
        MOTIFBASE = /usr/lib/DXM
           UILSRC = $(MOTIFBASE)/clients/uil
              UIL = $(UILSRC)/uil

     LINTAUDIOLIB =  $(AFLIBSRC)/llib-lAF.ln
            AFLIB =  -L$(AFLIBSRC) -lAF
         DEPAFLIB =  $(AFLIBSRC)/libAF.a
        AFUTILLIB =  -L$(AFUTILLIBSRC) -lAFUtil
     DEPAFUTILLIB =  $(AFUTILLIBSRC)/libAFUtil.a

         DEPLIBS = $(LOCAL_LIBRARIES)
         DEPLIBS1 = $(DEPLIBS)
         DEPLIBS2 = $(DEPLIBS)
         DEPLIBS3 = $(DEPLIBS)

###########################################################################
# Imake rules for building libraries, programs, scripts, and data files
# rules:  $XConsortium: Imake.rules,v 1.67 89/12/18 17:14:15 jim Exp $

###########################################################################
# start of Imakefile

# $XConsortium: Server.tmpl,v 1.3 89/10/20 11:14:52 jim Exp $

         CC = cc
  CCOPTIONS = -prototypes -float -acpp -D__STDC__ -D__EXTENSIONS__  -Wf,-XNp9000,-XNd8000,-XNh2000
STD_DEFINES = -DSYSV
CDEBUGFLAGS = -O
EXT_DEFINES =

CDEBUGFLAGS= -O
SRCS =  dda.c event.c sgi.c
OBJS =  dda.o event.o sgi.o

   INCLUDES = -I../mi -I../../../include -I../../include -I$(INCLUDESRC)
   LINTLIBS = ../../os/4.2bsd/llib-los.ln ../mi/llib-lmi.ln

.c.o:
	$(RM) $@
	$(CC) -c $(CFLAGS) $*.c

all:: libsgi.a

libsgi.a: $(OBJS)
	$(RM) $@
	$(AR) $@ $(OBJS)
	$(RANLIB) $@

lintlib:: llib-lsgi.ln

llib-lsgi.ln: $(SRCS)
	$(RM) $@
	$(LINT) $(LINTLIBFLAG)sgi $(LINTFLAGS) $(SRCS)

lint:
	$(LINT) $(LINTFLAGS) $(SRCS) $(LINTLIBS)
lint1:
	$(LINT) $(LINTFLAGS) $(FILE) $(LINTLIBS)

depend:: $(DEPEND)

$(DEPEND):
	@echo "checking $@ over in $(DEPENDSRC) first..."; \
	cd $(DEPENDSRC); $(MAKE); \
	echo "okay, continuing in $(CURRENT_DIR)"

depend::
	$(DEPEND) -s "# DO NOT DELETE" -- $(ALLDEFINES) -- $(SRCS)

###########################################################################
# common rules for all Makefiles - do not edit

emptyrule::

clean::
	$(RM_CMD) "#"*

Makefile:: $(IMAKE)

$(IMAKE):
	@(cd $(IMAKESRC); if [ -f Makefile ]; then \
	echo "checking $@ in $(IMAKESRC) first..."; $(MAKE) all; else \
	echo "bootstrapping $@ from Makefile.ini in $(IMAKESRC) first..."; \
	$(MAKE) -f Makefile.ini BOOTSTRAPCFLAGS=$(BOOTSTRAPCFLAGS); fi; \
	echo "okay, continuing in $(CURRENT_DIR)")

Makefile::
	-@if [ -f Makefile ]; then \
		echo "	$(RM) Makefile.bak; $(MV) Makefile Makefile.bak"; \
		$(RM) Makefile.bak; $(MV) Makefile Makefile.bak; \
	else exit 0; fi
	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)

tags::
	$(TAGS) -w *.[ch]
	$(TAGS) -xw *.[ch] > TAGS

###########################################################################
# empty rules for directories that do not have SUBDIRS - do not edit

install::
	@echo "install in $(CURRENT_DIR) done"

install.man::
	@echo "install.man in $(CURRENT_DIR) done"

Makefiles::

includes::

###########################################################################
# dependencies generated by makedepend

# DO NOT DELETE

dda.o: /usr/include/stdlib.h /usr/include/string.h
dda.o: ../../.././server/include/os.h ../../.././server/include/misc.h
dda.o: ../../../include/audio.h ../../.././server/include/os.h
dda.o: ../../.././server/include/audiodev.h
dda.o: ../../.././server/include/property.h
dda.o: ../../.././server/include/propertyst.h sgi.h
sgi.o: ../../../include/AFUtils.h ../../../include/audio.h
sgi.o: ../../.././server/include/os.h ../../.././server/include/misc.h
sgi.o: ../../.././server/include/os.h ../../.././server/include/dia.h
sgi.o: ../../.././server/include/misc.h ../../.././server/include/task.h
sgi.o: /usr/include/sys/time.h /usr/include/sys/time.h
sgi.o: /usr/include/sys/types.h ../../.././server/include/audiodev.h
sgi.o: ../../.././server/include/property.h
sgi.o: ../../.././server/include/propertyst.h ../../.././server/include/ac.h
sgi.o: ../../.././server/include/dia.h ../../.././server/include/audiodev.h
sgi.o: ../../.././server/include/acstruct.h /usr/include/math.h
sgi.o: /usr/include/audio.h
