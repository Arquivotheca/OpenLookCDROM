.ds xL AFUtillib \- C Language AF Utilities
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft 1
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de FD
.LP
.KS
.TA .5i 3i
.ta .5i 3i
.nf
..
.de FN
.fi
.KE
.LP
..
.de IN		\" send an index entry to the stderr
.tm \\n%:\\$1:\\$2:\\$3
..
.de C{
.KS
.nf
.D
.\"
.\"	choose appropriate monospace font
.\"	the imagen conditional, 480,
.\"	may be changed to L if LB is too
.\"	heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de PN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de NT
.ne 7
.ds NO Note
.if \\n(.$>$1 .if !'\\$2'C' .ds NO \\$2
.if \\n(.$ .if !'\\$1'C' .ds NO \\$1
.ie n .sp
.el .sp 10p
.TB
.ce
\\*(NO
.ie n .sp
.el .sp 5p
.if '\\$1'C' .ce 99
.if '\\$2'C' .ce 99
.in +5n
.ll -5n
.R
..
.		\" Note End -- doug kraft 3/85
.de NE
.ce 0
.in -5n
.ll +5n
.ie n .sp
.el .sp 10p
..
.ny0
.TH AoD 3 "Release 1" "AF Version 3" 
.SH NAME
\fBAoD\fP \- AssertOrDie
.SH SYNTAX
\fB#include <AF/AFUtils.h>\fP
.LP
extern void \fBAoD\fP(int \fIbool\fP, char \fI*errmsg\fP, ...);
.LP
.SH DESCRIPTION
.PN AoD
is essentially assert(3) except that the interface is more reasonable.
If the boolean is true (non zero), AoD returns.  If the boolean is false (0),
AoD treats the rest of its arguments as arguments to 
fprintf(stderr, errmsg, ...) and then calls exit(1);
.SH ARGUMENTS
.IP \fIbool\fP
is a boolean value or an expression that evaluates to a boolean.
.IP errmsg
is a format string in the style of printf(3).
.IP ...
are extra optional arguments required by the format string errmsg.
.SH EXAMPLES
Typical usage is:
.LP
.Ds 0
.TA .5i 3i
.ta .5i 3i
AoD(argc > 3, "%s: Usage, at least 2 arguments!\\n", argv[0]);
.De
.PP
The general idea is to replace the proliferation of "fatal" 
subroutines that seem to crop up everywhere with a single subroutine
that everyone can use.
.SH "SEE ALSO"
assert(3)
\.SH BUGS
If you encounter a \fBreproducible\fP bug, please 
submit a problem report to (af-bugs@crl.dec.com).
.SH COPYRIGHT
Copyright 1990-1994, Digital Equipment Corporation.
.br
See \fIAF(1)\fP for a full statement of rights and permissions.
.SH AUTHORS
Larry Stewart, 
Digital Cambridge Research Lab
