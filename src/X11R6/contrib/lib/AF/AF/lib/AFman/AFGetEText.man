.ds xL AFlib \- C Language AF Interface
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft 1
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de FD
.LP
.KS
.TA .5i 3i
.ta .5i 3i
.nf
..
.de FN
.fi
.KE
.LP
..
.de IN		\" send an index entry to the stderr
.tm \\n%:\\$1:\\$2:\\$3
..
.de C{
.KS
.nf
.D
.\"
.\"	choose appropriate monospace font
.\"	the imagen conditional, 480,
.\"	may be changed to L if LB is too
.\"	heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de PN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de NT
.ne 7
.ds NO Note
.if \\n(.$>$1 .if !'\\$2'C' .ds NO \\$2
.if \\n(.$ .if !'\\$1'C' .ds NO \\$1
.ie n .sp
.el .sp 10p
.TB
.ce
\\*(NO
.ie n .sp
.el .sp 5p
.if '\\$1'C' .ce 99
.if '\\$2'C' .ce 99
.in +5n
.ll -5n
.R
..
.		\" Note End -- doug kraft 3/85
.de NE
.ce 0
.in -5n
.ll +5n
.ie n .sp
.el .sp 10p
..
.ny0
.TH AFGetErrorText 3 "Release 1" "AF Version 3" 
.SH NAME
\fBAFSetErrorHandler, AFSetIOErrorHandler, AFGetErrorText, AFGetErrorDatabaseText\fP \- error handlers
.SH SYNTAX
\fB#include <AF/AFlib.h>\fP
.LP
int (*\fBAFSetErrorHandler\fP) \fI((*handler)(AFAudioConn *aud, 
.br
                                        AFErrorEvent *event))(\fP)
.LP
int (*\fBAFSetIOErrorHandler\fP) \fI((*handler)(AFAudioConn *aud))(\fP)
.LP
void \fBAFGetErrorText\fP (AFAudioConn \fI*aud\fP, int \fIcode\fP, char \fI*buffer\fP, int \fInbytes\fP)
.LP
void \fBAFGetErrorDatabaseText\fP (AFAudioConn \fI*aud\fP, char \fI*name\fP, char \fI*type\fP, 
.br
                                        char \fI*defaultp\fP, char \fI*buffer\fP, 
.br
                                        int \fInbytes\fP)
.SH ARGUMENTS
.IP \fIaud\fP 1i
Specifies the connection to the audio server.
.IP \fIbuffer\fP 1i
Returns the error description.
.IP \fIcode\fP 1i
Specifies the error code for which a description is desired.
.IP \fIdefaultp\fP 1i
Specifies the default error message if none is found in the database
.IP \fIevent\fP 1i
Specifies the error event to the error handler.
.IP \fIhandler\fP 1i
Specifies a new error handler.
.IP \fIname\fP 1i
Specifies the name of the application.
.IP \fInbytes\fP 1i
Specifies the size of the buffer.
.IP \fItype\fP 1i
Specifies the type of the error message.
.SH DESCRIPTION
AFlib usually calls the program's supplied error handler, if there is
one, when an error is received. These errors are not assumed to be fatal,
so it is safe for the handler to return.  It must not, however, call any
functions that generate protocol requests or read input events. The
.PN AFSetErrorHandler
function supplies a new error handler, returning the previous one.
.LP
The 
.PN AFSetIOErrorHandler
function sets a handler which is called when a system call fails.  This
is assumed to be a fatal condition, and the handler should not return.
If it does, the client process exits.
.LP
.PN AFGetErrorText
function copies a null-terminated string describing the specified error code
into the given buffer.
.LP
The
.PN AFGetErrorDatabaseText
function returns a null-terminated message (or the default message) from
the error message database. \fIThis error database is not currently
implemented, and this routine always returns the default message.\fP
.SH "SEE ALSO"
AF(1)

.SH BUGS
If you encounter a \fBreproducible\fP bug, please 
submit a problem report to (af-bugs@crl.dec.com).
.SH COPYRIGHT
Copyright 1990-1994, Digital Equipment Corporation.
.br
See \fIAF(1)\fP for a full statement of rights and permissions.
.SH AUTHORS
Digital Cambridge Research Lab
