.ds xL AFlib \- C Language AF Interface
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft 1
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de FD
.LP
.KS
.TA .5i 3i
.ta .5i 3i
.nf
..
.de FN
.fi
.KE
.LP
..
.de IN		\" send an index entry to the stderr
..
.de C{
.KS
.nf
.D
.\"
.\"	choose appropriate monospace font
.\"	the imagen conditional, 480,
.\"	may be changed to L if LB is too
.\"	heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de NT
.ne 7
.ds NO Note
.if \\n(.$>$1 .if !'\\$2'C' .ds NO \\$2
.if \\n(.$ .if !'\\$1'C' .ds NO \\$1
.ie n .sp
.el .sp 10p
.TB
.ce
\\*(NO
.ie n .sp
.el .sp 5p
.if '\\$1'C' .ce 99
.if '\\$2'C' .ce 99
.in +5n
.ll -5n
.R
..
.		\" Note End -- doug kraft 3/85
.de NE
.ce 0
.in -5n
.ll +5n
.ie n .sp
.el .sp 10p
..
.ny0
.TH AFInternAtom 3 "Release 1" "AF Version 3" 
.SH NAME
\fBAFInternAtom, AFGetAtomName\fR \- create or return atom names
.SH SYNTAX
\fB#include <AF/AFlib.h>\fP
.br
AAtom \fBAFInternAtom\fP(AFAudioConn \fI*aud\fP, char \fI*atom_name\fP, ABool \fIonly_if_exists\fP)
.LP
char *\fBAFGetAtomName\fP(AFAudioConn \fI*aud\fP, AAtom \fIatom\fP)
.SH ARGUMENTS
.IP \fIatom\fP 1i
Specifies the atom for the property name you want returned.
.IP \fIatom_name\fP 1i
Specifies the name associated with the atom you want returned.
.IP \fIaud\fP 1i
Specifies the connection to the AF server.
.IP \fIonly_if_exists\fP 1i
Specifies a Boolean value that indicates whether
.ZN AFInternAtom
creates the atom.
.SH DESCRIPTION
The
.ZN AFInternAtom
function returns the atom identifier associated with the specified atom_name
string.
If \fIonly_if_exists\fP is 
.ZN False ,
the atom is created if it does not exist.
Therefore,
.ZN AFInternAtom
can return
.ZN ANone .
If the atom name is not in the Host Portable Character Encoding
the result is implementation dependent.
Case matters; the strings \fIthing\fP, \fIThing\fP, and \fIthinG\fP 
all designate different atoms.  
The atom will remain defined even after the client's connection closes.
.LP
.ZN AFInternAtom
can generate
.ZN ABadAlloc 
and
.ZN ABadValue 
errors.
.LP
The
.ZN AFGetAtomName
function returns the name associated with the specified atom.
If the data returned by the server is in the Latin Portable Character Encoding,
then the returned string is in the Host Portable Character Encoding.
Otherwise, the result is implementation dependent.
To free the resulting string,
call
.ZN AFree .
.LP
.ZN AFGetAtomName
can generate a
.ZN BadAtom 
error.
.SH DIAGNOSTICS
.TP 1i
.ZN BadAlloc
The server failed to allocate the requested resource or server memory.
.TP 1i
.ZN ABadAtom
A value for an AAtom argument does not name a defined AAtom.
.TP 1i
.ZN ABadValue
Some numeric value falls outside the range of values accepted by the request.
Unless a specific range is specified for an argument, the full range defined
by the argument's type is accepted.  Any argument defined as a set of
alternatives can generate this error.
.SH "SEE ALSO"
AF(1), AFGetProperty(3)
.br

.SH BUGS
If you encounter a \fBreproducible\fP bug, please 
submit a problem report to (af-bugs@crl.dec.com).
.SH COPYRIGHT
Copyright 1990-1994, Digital Equipment Corporation.
.br
See \fIAF(1)\fP for a full statement of rights and permissions.
.SH AUTHORS
Digital Cambridge Research Lab
