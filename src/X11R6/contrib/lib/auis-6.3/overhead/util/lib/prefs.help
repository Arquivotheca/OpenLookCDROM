\begindata{text,537590936}
\textdsversion{12}
\template{help}
 \


\chapter{Preferences and System Defaults}


This help document contains the following sections:

\leftindent{
What preferences are

Rules for changing preferences

File name expansion

Machine-specific preferences

Environment-specific preferences

Warnings

Quick Reference list of preferences

\leftindent{Window and Mouse Properties

Shadows

Cursors

Dialog Boxes

Menus

Scrollbars

Old Scrollbars

Console

Fonts and Templates

EZ

Messages

Andrew Message System

Typescript

Raster

Zip

Printing

Help

Flames and Eli

Champ

Adew

Bush

Ness

Link}

Related Tools

}
\section{What preferences are

}\leftindent{
A "preference" is exactly that; you indicate your \bold{preference} as to 
how a program should behave for you, where there is a personalized choice 
to be made.  When a program starts up, it consults your personal 
"preferences" file, which is located in your home directory, to see if you 
have indicated any preference for how it should act.   Andrew programs 
search for one of the three file names below in the given order: \



preferences

.preferences

.Xdefaults


You may give your preferences file any one of these three names.  If you 
have more than one of these named files in your directory, Andrew programs 
will only follow the preferences contained in the first of the three that 
it finds.  \



If it finds any entries in your preferences file that pertain to its own 
settings, it acts accordingly; otherwise, it takes some default action that 
has been established by the program author.  \



Thus, the EZ editor has a font which it uses by default.  But when it 
starts up, before using this default font, it consults your preferences 
file to see if you prefer a different one.


If you decide to edit your preferences file, be sure to read the rules and 
warnings just below.  As with any form of customization, it is possible to 
"break" a program by setting a preference wrong.


Each line in the preferences file has the form \



\leftindent{\bold{programname.option: \italic{value}}}


where \bold{programname} is the program in which you want the default 
feature to change, \bold{option} is the name of the feature you want to 
change and \bold{\italic{value}} is the value you want to give it.  The 
lists of preferences below detail which\bold{ \italic{value}}s are 
permissible for each preference (they many be "yes/no,"  a number, or 
"on/off"). \



Some options apply to more than one program, though most do not (bodyfont 
is an example of one that does).   If you want an option to take on 
\bold{\italic{value}} in any program where it could apply, omit 
\bold{programname} and the period, leaving


\leftindent{\bold{option: }}\italic{\leftindent{\bold{value}} }\



}\section{Rules for changing preferences}


When changing preferences, keep these rules in mind:


\leftindent{\bold{Add a preference only when you want to change its default 
value.}  The default values for each preference are shown in the Quick 
Reference list below.  These values remain in effect until you change them, 
even though the preference does not appear in your preferences file.  (Note 
that all of the preferences in the new user preferences file at Carnegie 
Mellon are changed from their defaults; that is why system administrators 
have put them in that file.)


\bold{Change preferences with care.}  Keep a backup copy of your original 
preferences file (the one that works) under another name (perhaps 
 "preferences.old") so you can get it back if your new preferences file 
does not work. \



\bold{Spell and punctuate correctly.}  Do not put tabs or extra blank 
spaces in preferences entries.  Capitalization does not matter (entries in 
the Quick Reference list below have upper case letters only for ease of 
reading), except for Console names, which can not be capitalized.  It is 
important that you spell everything correctly.   Put each entry on a 
separate line, but do not put carriage returns into individual entries. \



\bold{Do not use\bold{ the}}\bold{ \bold{~} (tilde).}  Some Andrew 
application programs allow you to abbreviate full directory pathnames using 
the tilde.  This will not work in preferences. \



\flushleft{\bold{Use the # (crosshatch) character for comments. }} If you 
want the programs that look at the preferences file to ignore a line, put a 
crosshatch (#) at the start of the line.  This is useful for including 
explanatory comments, and for temporarily canceling preferences that you do 
not actually want to remove. \



\bold{Remove all formatting styles.}  Formatting styles in the preferences 
file will cause Startup Errors, and your preferences will not take effect. 
 To remove them, select the entire preferences file and choose 
\bold{Plainest} before saving the file.  This is especially important if 
you have copied preference entries from other files and pasted them into 
yours.


\bold{Remember to save the file. } As with any file, you must remember to 
save your preferences file to guarantee that the changes you make are 
stored permanently. \



\bold{Restart any relevant programs. } The changes you make to preferences 
that concern a given program will not take effect until you start up the 
program from scratch in a new "process."  For example, if you make a change 
to an EZ-related preference, it will not take effect until you start up EZ 
from scratch.   Because you can have more than one EZ process active at a 
time, it could happen that the preference is in effect in some of your EZ 
windows but not others.


\bold{A preferences tutorial.}  If you want to see a tutorial on changing 
your preferences, choose \bold{Show Tutorial }from the Help menus.

 }\


\section{File name expansion}


Some preferences let you specify file names.  A usual file name is a 
sequence of slashes and identifiers.  In addition, a file name in  most 
preferences can have the following:


\leftindent{\bold{Environment variables.}  A section of a name having the 
form $XXX will be replaced with the value of the environment variable XXX, 
if there is one.  (If there isn't one, the $XXX is left intact in the 
name.)  To set an environment variable in the csh, use the command

	setenv XXX value

For other shells, see their documentation.  WARNING:  If XXX is in your 
environment, You cannot have a file or directory named $XXX.


\bold{Initial /../ } Some systems allow names beginning with /../xxx to 
refer to files on other machines.  These names are allowed in file names in 
the Andrew System.


}\section{Machine-specific preferences}


\leftindent{If you need to have preferences that are only active on a 
specific machine or sys-type (rt, sun3, vax), you can use the following 
preference forms:


\bold{?M=\italic{machine.name:preference}

?C=\italic{systype:preference}}


For example, the following line would cause typescripts you start while on 
the machine "pgh.andrew.cmu.edu" to be 600x600 pixels.


?M=pgh.andrew.cmu.edu:typescript.geometry:600x600}


\section{Environment-specific preferences}


\leftindent{If you need to have preferences that are only active when a 
certain environment variable is set, you can use the following preference 
forms:


\bold{?E=\italic{environmentvariable=value:preference}

?E!\italic{environmentvariable=value:preference}

}
Meaningful colons within these specifications can be quoted with the 
backslash character ("\\").  For example, the following line would cause 
typescripts you start while the "DISPLAY" environment variable is "pgh:0" 
to be 600x600 pixels.


?E=DISPLAY=pgh\\:0:typescript.geometry:600x600


Please Note:  Machine-specific and environment-specific preferences should 
be listed prior to a standard preference  in order to be effective.  \


}
\section{Quick Reference list of preferences

}\leftindent{
The sections below detail options that you can put into your preferences 
file, and show the default value for each in italics.  \



Capitalization is not important in preferences (the uppercase letters in 
the options below are simply for ease of reading).  Punctuation and spacing 
are important.


In the following entries, anything for which you need to supply a value is 
in italics (this is usually just the value part after the colon).  The part 
in boldface must be typed with the spacing shown (but not the 
capitalization).  Some preferences have no default value, often because 
each user must type his or her own pathname; angle brackets ( \bold{< >} ) 
appear around those values.  \


}
\section{Window and Mouse Properties}


\leftindent{The preferences for geometry and color, which affect all 
applications, are documented in their own help files, 
 \italic{\helptopic{color}}  and  \italic{\helptopic{geometry}} .


\bold{AndyFontsFudgeFactor: \italic{75:2}}

\leftindent{This preference allows you to control the size difference when 
requesting X fonts with the Andy font names.  (e.g. andysans12 by default 
maps to a 14 point helvetica font.)  One suggested setting for this 
preference is:

75:2,100:0


The first number is the DPI of the display, typically near 75, or 100 dpi 
(dots per inch).  The second is the 'fudge' factor to be added to the andy 
font sizes to get the corresponding X font size.  (See the output of 
xdpyinfo for the DPI of your display.)}


\bold{XDPI}

\leftindent{If your X server reports an incorrect DPI (dots per inch), you 
can use this preference to override the server's report for ATK 
applications.}


\bold{XHorizontalDPI:}

\leftindent{If your X server reports an incorrect DPI (dots per inch) 
horizontally, you can use this preference to override the server's report 
for ATK applications.}


\bold{XVerticalDPI:}

\leftindent{If your X server reports an incorrect DPI (dots per inch) 
vertically, you can use this preference to override the server's report for 
ATK applications.}


\bold{MouseHysteresis: \italic{50}}

\leftindent{Under  some X servers with two button mice a problem occurs 
when the user presses both buttons:  Sometimes the server sends first the 
down stroke for one button and then the down stroke for both.  To adapt to 
this problem, ATK waits a short time after any mouse down operation to see 
if the other button is going to go down.  The wait time is given by the 
preference option MouseHysteresis, an integer number of milliseconds.  The 
default value of 1/20th second has worked well and should not need to be 
changed.}

\bold{
CtrlUCmds: yes}

\leftindent{When set to no, ^U can be used in normal key bindings, 
otherwise it controls the argument/repetition mechanism.

}\bold{
XStyleSelections: \italic{no}}

\leftindent{When set to yes, the selected region in any text insets (or 
other insets which support the X selection protocol.), will behave just 
like normal X application selections.

}\bold{
StrictXStyleSelections: \italic{yes}}

\leftindent{When set to yes, the selected region will be deselected if 
another application or inset grabs the selection.  (In insets which support 
the X selection protocol, current only text.)  This preference has no 
effect unless XStyleSelections is set to yes.  Setting this preference to 
yes will cause ezdiff to behave differently, since it tries to show the 
differences by highlighting the corresponding regions in two files.  But 
with StrictXStyleSelections set to yes only one region is allowed to be 
highlighted.  Some other insets and packages may suffer similar problems, 
but ezdiff is the only one known at this time.


}\bold{CopyOnSelect: \italic{yes}}

\leftindent{When set to yes, text (or other data in insets which support 
the X selection protocol) will be automatically placed in the cut buffer 
when it is selected.  (Making the Copy menu option redundant.)  Otherwise 
only explicit operations like Copy or Cut will place data in the cut 
buffer.  This preference has no effect unless XStyleSelections is set to 
yes.

}
\bold{LeftIncrement: \italic{10}

TopIncrement: \italic{10}}

\leftindent{Under X if the geometry specifies a size and position and the 
user brings up a second window with the same geometry, they overlay each 
other exactly.  To avoid this, ATK attempts to offset windows after the 
first.  The new window will be LeftIncrement pixels further to the right 
and TopIncrement pixels down from the previous window.}}

\quotation{
}\bold{\leftindent{UseBackingStore}\quotation{: yes}}\quotation{

}\leftindent{\leftindent{Under X11, you can run with the application using 
backing store.  In this case when menus are brought up the server will 
attempt to repaint the bits when they go down.  Also overlapping windows 
will use this feature.  Unfortunatley on some servers backing store is very 
expensive and having the client repaint is a better choice.}}

\quotation{
}\bold{\leftindent{DialogPriority}:\quotation{integer}}\quotation{

}\leftindent{\leftindent{This is a value between 0 and 100 that controls 
when dialog boxes are used as opposed to the message line.  A value of 
about 30 brings up most things in a dialog box.}}\section{

}
\leftindent{\bold{QuitWindowOnly}\bold{:\quotation{no}}\quotation{

}\leftindent{When yes, the Quit menu item will by default quit only the 
window it is chosen in.  By default this preference is no, and choosing 
quit will exit the application.}}


\leftindent{\bold{QuitBuffer: \italic{no}}

\leftindent{When both QuitWindowOnly and this preference are yes, the Quit 
menu item will by default delete the buffer and the window.  (Or only the 
window if the buffer is being viewed in other windows.)

}}\section{
}\leftindent{\bold{UseProgramNameInTitle: \italic{yes}}

\leftindent{If this is set to "no", then the program name will not be 
included in the window title bar.  The default is that the program name 
will be included in the window title bar.

}\leftindent{
}}\leftindent{\bold{MaxTitleLength: \italic{-1}}

\leftindent{The value limits the maximum length of the string in the window 
title bar.  The default value is -1, indicating that the length of the 
window title bar string is unlimited.  The title bar string is made up of 
two different parts: the first, which may be omitted, is the program name; 
the second, some application-specific string.  In the case of the Ez 
editor, the program name is "\bold{ez}" and the application-specific 
portion is the current file name or buffer.  When a positive value is 
specified, the front part of the application-specific string is truncated, 
limiting its total length to this value.  This preference is most useful 
with programs that place a potentially long, filename in the title bar.  \


}
\bold{MaxIconLabelLength: \italic{-1}}

\leftindent{The value limits the maximum length of the string in a window's 
icon label.  The default value is -1, indicating that the length of the 
window's icon label is unlimited.  The icon label is made up of two 
different parts: the first is the program name; the second some 
application-specific string.  In the case of the Ez editor, the program 
name is "\bold{ez}" and the application-specific portion is the current 
file name or buffer.  When a positive value is specified, the front part of 
the application-specific string is truncated, limiting its total length to 
this value.  This preference is most useful with programs that place a 
potentially long, filename in the icon label. \



}}\section{Shadows}\leftindent{

\bold{UseNewShadows: \italic{no}}

Determines whether the new improved shadow color computations are used for 
the scollbars, dialogs, sbuttons, menubars, and Motif-style popups.  This 
preference can be overridden with MenubarUseNewShadows, 
 PopupsUseNewShadows, or SbuttonUseNewShadows.  (Note that the 
SbuttonUseNewShadows will affect the dialogs and scrollbars as well.)


\bold{ShadowsLiteDarkenTop: \italic{5}}

When the background is deemed to be "Lite" (luminosity > 95 by default), 
the top shadow will be darkened by this percentage.


\bold{ShadowsLiteDarkenBottom: \italic{25}}

When the background is deemed to be "Lite" (luminosity > .95 by default), 
the bottom shadow will be darkened by this percentage.


\bold{ShadowsDarkLightenTop: \italic{40}}

When the background is deemed to be "Dark" (luminosity < .10 by default), 
the top shadow will be lightened by this percentage.


\bold{ShadowsDarkLightenBottom: \italic{20}}

When the background is deemed to be "Dark" (luminosity < .10 by default), 
the bottom shadow will be lightened by this percentage.


\bold{ShadowsMediumLightenTop: \italic{15}}

When the background is deemed to be "Medium" (.10 < luminosity < .95 by 
default), the top shadow will be lightened by this percentage.


\bold{ShadowsMediumDarkenBottom: \italic{15}}

When the background is deemed to be "Medium" (.10 < luminosity < .95 by 
default), the bottom shadow will be darkened by this percentage.


\bold{ShadowsLiteDarkenPressed: \italic{10}}

NOTE: this feature is currently not used.

Setting this preference will have no effect.

When the background is deemed to be "Lite" (luminosity > .95 by default), 
the interior of a depressed area will be darkened by this percentage.


\bold{ShadowsMediumDarkenPressed: \italic{5}}

NOTE: this feature is currently not used.

Setting this preference will have no effect.

When the background is deemed to be "Lite" (.10 < luminosity < .95 by 
default), the interior of a depressed area will be darkened by this 
percentage.


\bold{ShadowsDarkLightenPressed: \italic{30

}}NOTE: this feature is currently not used.

Setting this preference will have no effect.

When the background is deemed to be "Lite" (luminosity < .10 by default), 
the interior of a depressed area will be lightened by this 
percentage.\bold{\italic{

}}}
\section{Cursors}\leftindent{

\bold{CursorForegroundColor: \italic{black}

}\leftindent{ The color used for the foreground of the pointer cursor.


}\bold{CursorBackgroundColor:\leftindent{ \italic{white}}}\leftindent{

The color used for the background of the pointer cursor.


}}\section{Dialog Boxes}\leftindent{

\bold{UseBuiltinDialogs: \italic{no}

}\leftindent{ If set to \italic{yes} the old dialog boxes will be used, the 
default dialog boxes cause less redrawing and are much more customizable. 
 It is not guaranteed that the old (builtin) dialog boxes will be available 
in any future releases.

}
\bold{DialogButtonFont:} \bold{\italic{andysans12b}}

\leftindent{The font used to draw the labels on the dialog's buttons.

}
\bold{DialogButtonForeground:} \bold{\italic{ }<defaults to the foreground 
color for the application, as set by the foregroundcolor preference>}

\leftindent{The color in which the main features of the plainer dialog box 
buttons (see DialogStyle) will be drawn and from which several other colors 
will be computed to provide a "3D" effect for the "Three Dimensional" and 
"OSF/Motif" (TM) style buttons.

}
\bold{DialogButtonBackground:} \bold{ <defaults to the background color for 
the application, as set by the backgroundcolor preference>}

\leftindent{The color in which the background of the plainer dialog boxes 
(see DialogStyle) will be drawn and from which several other colors will be 
computed to provide a "3D" effect for the "Three Dimensional" and 
"OSF/Motif" (TM) style buttons.


}\bold{DialogButtonTop:} \bold{<by default this is computed from the 
foreground and background preferences>}

\leftindent{The color which will be drawn in the background behind a 
button's label.   (For the "3D"ish buttons.)

}
\bold{DialogButtonTopShadow:} \bold{<by default this is computed from the 
foreground and background preferences>

}\leftindent{The color which will be used to draw the upper shadow of a 
button when it is "inactive" (ie, not pressed).   (For the "3D"ish 
buttons.)

}
\bold{DialogButtonBottomShadow:} \bold{<by default this is computed from 
the foreground and background preferences>

}\leftindent{The color which will be used to draw the lower shadow of a 
button when it is "inactive" (ie, not pressed).  (For the "3D"ish buttons.)


}\bold{DialogButtonLabelForeground:} \bold{<defaults to the foreground 
color for the application, as set by the foregroundcolor 
preference>}\leftindent{

The color in which the actual label of a button will be drawn in.


}\bold{DialogButtonLabelBackground:} \bold{<defaults to the background 
color for the application, as set by the backgroundcolor 
preference>}\leftindent{

The color of the shadow around the label of a button.  (For the "3D"ish 
buttons.)

}
\bold{For the \bold{dialog box:}}

\bold{DialogStyle:}\formatnote{ \bold{\italic{4}}}

\leftindent{This integer preference specifies which "look" should be used 
for the dialog box and it's buttons.  The default of 4 indicates 
"OSF/Motif" (TM) appearance.  The supported styles are:}

\leftindent{\leftindent{1. Double Boxed.

2. Three Dimensional.

3. Plain Box.

4. OSF/Motif (TM).}

}
\bold{DialogForeground:} \bold{<defaults to the default foreground color 
for the application, as set by the foregroundcolor preference}\bold{>}

\leftindent{The color in which the foreground of the plainer dialog boxes 
(see DialogStyle) will be drawn and from which several other colors will be 
computed to provide a "3D" effect for the "Three Dimensional" and 
"OSF/Motif" (TM) style buttons.  Setting this will also have the effect of 
setting the DialogButtonForeground preference, unless one already exists.

}
\bold{DialogBackground:} \bold{<defaults to the background color for the 
application, as set by the backgroundcolor preference>}

\leftindent{The color in which the background of the plainer dialog boxes 
(see DialogStyle) will be drawn and from which several other colors will be 
computed to provide a "3D" effect for the "Three Dimensional" and 
"OSF/Motif" (TM) style buttons.  Setting this will also have the effect of 
setting the DialogButtonBackground preference, unless one already exists.

}
\bold{DialogTop:} \bold{<by default this is computed from the foreground 
and background preferences>

}\leftindent{The color which will be drawn in the background of the dialog 
box. Setting this will also have the effect of setting the DialogButtonTop 
preference, unless one already exists.  (For the "3D"ish dialogs, ie Three 
Dimensional and "OSF/Motif" (TM))


}\bold{DialogTopShadow:} \bold{<by default this is computed from the 
foreground and background preferences>

}\leftindent{The color which will be used to draw the upper shadow of a 
button when it is "inactive" (ie, not pressed).  Setting this will also 
have the effect of setting the DialogButtonTopShadow preference, unless one 
already exists. (For the "3D"ish dialogs, ie Three Dimensional and 
"OSF/Motif" (TM).)


}\bold{DialogBottomShadow:} \bold{<by default this is computed from the 
foreground and background preferences>

}}\leftindent{\leftindent{The color which will be used to draw the lower 
shadow of a button when it is "inactive" (ie, not pressed).  Setting this 
will also have the effect of setting the DialogButtonBottomShadow 
preference, unless one already exists.  (For the "3D"ish dialogs, ie Three 
Dimensional and "OSF/Motif" (TM).)

}}\section{
}\leftindent{OSF and Motif are registered trademarks of the Open Software 
Foundation.

}
\section{Menus

}\indent{(for more information see the help files for \helptopic{Menus}, 
\helptopic{Cmenu}, and \helptopic{Menubar})}


\leftindent{\bold{AndrewLanguage: (no default)}

\leftindent{When set this name will be used to locate message line and menu 
translation files for the specified language.  (These translation files 
will normally be found in $ANDREWDIR/lib/language.menu and 
$ANDREWDIR/lib/language.msg. Where language is the name of the language.) 
 This preference can be set or overridden with the environment variable 
ANDREWLANGUAGE

.

}\bold{AndrewLanguageFile: (no default)}

\leftindent{The file to read message line and menu translations from, the 
normal translation files will be found in $ANDREWDIR/lib/*.msg, i.e. files 
ending in the .msg extension. This preference can be set or overridden with 
the environment variable ANDREWLANGUAGEFILE.

}
\bold{AndrewLanguageMenuFile: (no default)}

\leftindent{The file to read menu translations from, the normal translation 
files will be found in $ANDREWDIR/lib/*.menu, i.e. files ending in the 
.menu extension. This preference can be set or overridden with the 
environment variable ANDREWLANGUAGEMENUFILE.

}
\bold{TranlsateMenus: \italic{yes}}\leftindent{

When on, menus will be translated according to the AndrewLanguage and/or 
AndrewLanguageMenuFile preferences.

}}
\leftindent{\bold{AlwaysDisplayStyleMenus: 
\italic{on}}\leftindent{\quotation{\typewriter{

}}When off, the menus for font and style changes will only appear when a 
region of text is selected; otherwise these menus will always appear.


}\bold{Menubar: \italic{on}}

\leftindent{Determines whether a menubar is provided across the top of 
every window.


}\bold{PopupMenus: \italic{on

}}\leftindent{Determines whether popup (aka stack of cards) menus are 
provided.


}\bold{PopupMenuList: (no default)

}\leftindent{Allows you to list the names of menucards which should always 
appear on a popup "stack of cards" menu.   If the menubar is active and 
this preference exists and is non-empty only menus in the list given will 
appear on the "stack of cards".  The format for this preference is:


\example{*.PopupMenuList: "Card1Name", "Card2Name"}


Note that more than two cards can be listed and each card name must be 
enclosed in quotes.  There should be no space before the commas, and 
leading spaces, trailing spaces and tabs will be ignored.


}\bold{CardOrder: (no default)

}\leftindent{Allows you to change the ordering of menus.  Each menu has a 
priority from 1 to 100, menus with lower priority are placed to the left in 
the menubar and towards the front in the "stack of cards".  The format for 
this preference is:


\example{*.CardOrder: "Card1Name~\italic{Card1Priority}", 
"Card2Name~\italic{Card2Priority}"

}
(The above may appear as two or more lines on the screen but is really only 
one line.)   The strings in italics should be replaced by a number from 1 
to 100 indicating the priority of the corresponding menu.  (Remember: never 
put styles in your preferences file, they are used here only for ease of 
discussion.)

This preference can change the order menus appear in \bold{both} the stack 
of cards and in the menubar.  The ~\italic{CardPriority} strings can be 
omitted for some or all of the cards. In this case the first card will 
default to a priority of 10, and any others will default to the priority of 
the previous card plus the value of the \bold{PriorityStep} preference.


}\bold{PopupCardOrder: (no default)}\leftindent{\bold{

}This preference works just like the CardOrder preference except it only 
affects the "popup" or stack of cards.}


\bold{MenubarCardOrder: (no default)

}\leftindent{This preference works just like the CardOrder preference 
except it only affects the menubar.


}\bold{PriorityStep: \italic{5}}

\leftindent{The amount to offset the priority of each menu from the 
previous menu in the \bold{CardOrder} preferences if no priority is given.

}
\bold{MenubarHoldButton: \italic{1}}\leftindent{

When this button is used to activate the menubar but is released over the 
menubar  or the name of a menu card on the "More" menu, the menu card will 
remain displayed and a click can then select an item or restart dragging.


}}\leftindent{\bold{MenubarCardDelay: \italic{0}}

\leftindent{When one menucard is visible this is the amount of time, in 
milliseconds, the mouse must remain stationary before a new menucard will 
be brought up.}

}\leftindent{\leftindent{
}\bold{MenubarSpacing: \italic{5}}

\leftindent{Sets amount of extra space (in pixels) around the names of 
menus in the menubar.

}
\bold{MenubarCardSpacing: \italic{5}}

\leftindent{Sets amounts of extra space (in pixels) around the names of 
items in menucards.

}
\bold{MenubarGroupSpacing: (defaults to 1/3 the height of the item font)

}}\leftindent{\leftindent{Sets amounts of extra space (in pixels) between 
"groups" of items in the menucards.  Groups are sets of menu items with 
priorities starting with the same digit.  (See the help on initfiles.)


}\bold{MenubarKeysSpacing: \italic{5}

}\leftindent{Sets the amount of extra space between the longest menu item 
and the key equivalents (if they are being displayed, otherwise it has no 
effect.)

}\bold{
MenubarPadding: \italic{2

}}\leftindent{Sets amount of extra space (in pixels) between the shadow 
borders and their contents.


}\bold{MenubarGrayPercentage: \italic{40

}}\leftindent{Percentage brighter or darker than the foreground the default 
gray should be.  An explicit color can be given with the 
MenubarGrayTitleColor and MenubarGrayItemColor preferences.}}


\leftindent{\bold{MenubarTopShadowPercentage: \italic{50

}}}\leftindent{\leftindent{Percentage brighter or darker than the 
foreground the default TopShadow color should be.  An explicit color can be 
given with the MenubarGrayTitleColor and MenubarGrayItemColor 
preferences.}}\leftindent{\bold{\italic{

}}\leftindent{\leftindent{
}}\bold{MenubarShadowDepth: }\italic{\bold{2}

}\leftindent{The width of the boxes around selected items.

}
\bold{MenubarTitleFont: }\italic{\bold{andy12b}

}\leftindent{The font to use for the menu names.

}
\bold{MenubarItemFont: }\italic{\bold{andy12b}

}\leftindent{The font to use on the menu cards.

}}\indent{
\bold{MenubarKeysFont: }\italic{\bold{andy12bi}

}\leftindent{The font to use for the key equivalents on the menu cards.

}}\leftindent{
\bold{MenubarTitleColor: }\italic{\bold{black}

}}\leftindent{\leftindent{The color to draw the menu names 
in.}}\leftindent{\leftindent{

}
\bold{MenubarBackgroundColor: }\italic{\bold{white}

}\leftindent{The background color to use in the menubar.

}
\bold{MenubarItemColor: }\italic{\bold{black}

}\leftindent{The color to draw menu items in.

}
\bold{MenubarCardBackgroundColor: }\italic{\bold{white}

}\leftindent{The background color to use in menu cards.

}
\bold{MenubarGrayItemColor: }\italic{\bold{black}

}\leftindent{The color to draw inactive menu items in.

}}\indent{
\bold{MenubarKeysColor: }\italic{\bold{black}

}\leftindent{The color to draw the key equivalents in.

}}\leftindent{
\bold{MenubarGrayItemStipple: }\italic{\bold{None}

}\leftindent{The stipple pattern to draw inactive menu items with.

}
\bold{MenubarGrayTitleColor: }\italic{\bold{black}

}\leftindent{The color to draw the titles of inactive menu cards.

}
\bold{MenubarGrayTitleStipple: }\italic{\bold{None}

}\leftindent{The path of a stipple pattern to draw the titles of inactive 
menu cards, or None if no stipple pattern is desired.

}
\bold{MenubarTopShadowColor: }\italic{\bold{black}

}\leftindent{The color to draw the top of the selection box in the menubar 
in.

}
\bold{MenubarTopShadowStipple: (defaults to gray)}

\leftindent{The path of an X stipple pattern to draw the top of the 
selection box in the menubar with, or None if no stipple pattern is 
desired.

}
\bold{MenubarBottomShadowColor: }\italic{\bold{black}

}\leftindent{The color to draw the bottom of the selection box in the 
menubar in.

}
\bold{MenubarBottomShadowStipple: }\italic{\bold{None}

}\leftindent{The path to a stipple pattern to draw the bottom of the 
selection box in the menubar in, or None if no stipple pattern is desired.

}
\bold{MenubarCardTopShadowColor: }\italic{\bold{black}

}\leftindent{The color to draw the top of the selection box around menu 
items in.

}
\bold{MenubarCardTopShadowStipple: (defaults to gray)}

\leftindent{The path to a stipple pattern to draw the top of the selection 
box around menu items with, or None if no stipple pattern is desired.

}
\bold{MenubarCardBottomShadowColor: }\italic{\bold{black}

}\leftindent{The color to draw the bottom of the selection box around menu 
items in.

}
\bold{MenubarCardBottomShadowStipple: }\italic{\bold{None}

}\leftindent{The stipple pattern to draw the bottom of the selection box 
around menu items with, or None if no stipple pattern is desired.


}}\indent{\bold{MenubarShowKeys: }\italic{\bold{yes}

}\leftindent{Indicates whether menu items with key equivalents should have 
those key equivalents displayed on the pulldown menu cards.


}\bold{PopupsShowKeys: }\italic{\bold{yes}

}\leftindent{Indicates whether menu items with key equivalents should have 
those key equivalents displayed on the popup menu cards.


}}\indent{\bold{MenusShowInactive: }\italic{\bold{yes}

}\leftindent{Indicates whether menu items which are not currently 
applicable should be displayed.  If they are displayed they will be grayed 
out.


}}\indent{\bold{MenubarShowInactive: <defaults to the value of 
MenusShowInactive>}\italic{

}\leftindent{Indicates whether menu items which are not currently 
applicable should be displayed in pulldown menus.  If they are displayed 
they will be grayed out.

}}
\indent{\bold{PopupsShowInactive: <defaults to the value of 
MenusShowInactive>}\italic{

}\leftindent{Indicates whether menu items which are not currently 
applicable should be displayed in popup menus.  If they are displayed they 
will be grayed out.}

\bold{
MenubarUseNewShadows: }\italic{no}\bold{\italic{

}}\leftindent{Uses the new computations for shadow colors, these 
computations work in more situations than the old, but may cause your 
menubar to appear different.

}
\bold{PopupsUseNewShadows:} \italic{no

}\leftindent{Uses the new computations for shadow colors, these 
computations work in more situations than the old, but may cause your popup 
menus to appear different.

}}
\section{Scrollbars}

\leftindent{
\bold{MimicOldScrollbar: \italic{FALSE (in color) TRUE (in monochrome)

}}}\leftindent{\leftindent{This preference, when TRUE, alters the defaults 
of many other scrollbar preferences in order to emulate the older style ATK 
scrollbars.}\bold{


ScrollDrawBorders: \italic{TRUE (FALSE when mimicing the old scrollbar)

}}\leftindent{Whether a border is drawn around the interior of the 
frame.}\bold{


ScrollStyle}: \bold{\italic{4 (3 when mimicing the old scrollbar)}}

\leftindent{This integer preference specifies which "look" should be used 
for all the components of the scroll bar.  The default of 4 indicates 
"OSF/Motif" (TM) appearance. \


The only supported style is the "OSF/Motif" (TM) appearance. The other 
styles may or may not work correctly and may effect the behavior of the 
scroll bar as well as it's appearance.


The possible values for this preference are:}

\leftindent{\leftindent{1. Double Boxed.

2. Three Dimensional.

3. Plain Box.

4. OSF/Motif (TM).


}}\leftindent{Setting this will also have the effect of setting the 
ScrollMatteStyle, ScrollBarStyle, ScrollButtonStyle, and 
ScrollElevatorStyle preferences.  Any of these preferences may be set 
individually or with any of the others including ScrollStyle.

}
\bold{ScrollForeground}:  \bold{<defaults to the foreground color for 
theapplication, as set by the foregroundcolor preference>\bold{ }(see the 
preferences help file for more information)}

\leftindent{This color will be used to compute several other colors to 
provide a "3D" effect for the "Three Dimensional" and "OSF/Motif" (TM) 
style scroll bars.  Setting this will also have the effect of setting the 
ScrollMatteForeground, ScrollBarForeground, ScrollButtonForeground, and 
ScrollElevatorForeground preferences.  Any of these preferences may be set 
individually or with any of the others including ScrollForeground.


}\bold{ScrollBackground:  <defaults to thebackground color for 
theapplication, as set by the backgroundcolor preference> (see the 
preferences help file for more information)

}\leftindent{This color will be used to compute several other colors to 
provide a "3D" effect for the "Three Dimensional" and "OSF/Motif" (TM) 
style scroll bars.  Setting this will also have the effect of setting the 
ScrollMatteBackground, ScrollBarBackground, ScrollButtonBackground, and 
ScrollElevatorBackground preferences.  Any of these preferences may be set 
individually or with any of the others including ScrollBackground.

}
\bold{ScrollTop}:  \bold{<by default this is computed from the foreground 
and background preferences>}

\leftindent{This color will be used to draw the background (the raised or 
depressed area) of the matte (the area around the scroll bar(s) and the 
document), the bar or the buttons.  Setting this will also have the effect 
of setting the ScrollMatteTop, ScrollBarTop, ScrollButtonTop, and 
 ScrollElevatorTop preferences.  Any of these preferences may be set 
individually or with any of the others including ScrollTop.


}\bold{ScrollTopShadow:} \bold{<by default this is computed from the 
foreground and background preferences>

}\leftindent{The color which will be used to draw the upper shadow of the 
matte (the area around the view and scroll bar(s)) or the bottom shadow of 
the bar(s) (since they are supposed to look depressed).  Setting this will 
also have the effect of setting the ScrollMatteTopShadow, 
ScrollBarTopShadow, ScrollButtonTopShadow, and ScrollElevatorTopShadow 
preferences.  Any of these preferences may be set individually or with any 
of the others including ScrollTopShadow.


}\bold{ScrollBottomShadow:} \bold{<by default this is computed from the 
foreground and background preferences>

}\leftindent{The color which will be used to draw the bottom shadow of the 
matte, or the upper shadow of the bar(s).  Setting this will also have the 
effect of setting the ScrollMatteBottomShadow, ScrollBarBottomShadow, 
ScrollButtonBottomShadow, and ScrollElevatorBottomShadow preferences.  Any 
of these preferences may be set individually or with any of the others 
including ScrollBottomShadow.

}\center{\italic{
Note: All the preferences above (up to scrollforeground) can be applied to 
individual parts of the scroll bar or surrounding area (matte)  by 
replacing the string "Scroll" at the beginning of each preference with one 
of the following (without the quotes):

}}"ScrollMatte"	(for the area around the document and the scroll bar(s))

"ScrollBar"		(to change the appearance of the bar itself)

"ScrollButton"	(to change the appearance of the buttons)

"ScrollElevator"	(to change the appearance of the elevator (visible 
region))

"ScrollDot"		(to change the appearance of the dot (selected region))


\bold{ScrollbarWidth:}\italic{\bold{ }\bold{20 (18 when mimicing)}

}\leftindent{ Determines the width of the scrollbar .

}
\bold{DotWidth:}\italic{\bold{ 6 (8 when mimicing)}

}\leftindent{The width (in pixels) of the rectangle which indicates where 
the cursor is or where the selection is.


}\bold{ScrollWindowPadding:}\italic{\bold{ 1 (0 when mimicing)}

}\leftindent{The space in pixels between the border around the document and 
scroll bar(s) and the document and scrollbar(s) themselves.

}
\bold{ElevatorWidth:}\italic{\bold{ 16 (18 when mimicing)}

}\leftindent{The width of the elevator in pixels.


}\bold{ScrollButtonSize:}\italic{\bold{ 16 (12 when mimicing)}

}\leftindent{The height (or width for horizontal scroll bars) of the 
buttons at either end of the scroll bar(s).  Note: changing this may cause 
the reaction of the scrollbar on left and right clicks to be off by one or 
more lines.

}
\bold{ScrollButtonPadding:}\italic{\bold{ 4 (-1 when mimicing)}

}\leftindent{The space in pixels between the buttons and the bar.

}
\bold{ScrollbarPosition: (no default)}

\leftindent{For text scrollbars this determines whether the scrollbar 
appears on the left or the right.  If it is set to be 
"right"(capitalization matters here) the scrollbar will appear on the right 
of the text, if it is set to anything else the scrollbar will appear to the 
left.


}}\leftindent{\bold{StartScrollTime: \italic{1000}}

\leftindent{This value is used to set the time interval before repeat 
scrolling kicks in.  The value is in milliseconds.  A value of 0 indicates 
that no repeat scrolling is to be used.}


\bold{ContScrollTime:\italic{ 150}}

\leftindent{This controls how fast repeat scrolling in small increments 
(line size) occurs.  Again it is in milliseconds.}


\bold{MaxContScrollTime:\italic{ 650}

MinContScrollTime: \italic{integer}}

\leftindent{This controls how fast repeat scrolling  in large (page size) 
increments occurs.  Again it is in milliseconds.  Increments between these 
two amounts is done by interpolating between those two values.}


\bold{ButtonRepeatTime: \italic{100}}\leftindent{

Controls how quickly the buttons repeat when scrolling by a line at a time 
with the right mouse button.

}
\bold{AdjustScroll: \italic{no}}

\leftindent{If this is set to "yes," then the increment for repeat 
scrolling is constantly recalculated relative to the position of the mouse. 
 With it on you can start scrolling by pages and then move the cursor up 
toward the top of the scroll bar to do more fine scrolling when they get 
close.  If it is false then the repeat scrolling increment is determined by 
where you first press the mouse down in the scroll bar and can not be 
readjusted.}


\bold{ThumbScroll: \italic{yes}}

\leftindent{If this is set to "yes," then the image being scrolled will be 
updated as the user thumbs in the scroll bar with the left mouse down.  The 
right mouse down will always thumb without updating the image.


}}\leftindent{\bold{MotifScrollBars: \italic{no}

}\leftindent{Turns on "Motif" style behavior for the mouse in the bar, and 
moves the scrollbar on most text documents to the right hand side.  If set 
to yes the mouse behaves as follows:

\leftindent{\bold{Clicking with the left mouse button} will scroll one 
screen in the direction of the click relative to the elevator.

\bold{Clicking with the right mouse button }will immediately move the 
elevator to the indicated position and then allow you to drag it, or simply 
release the mouse button to leave the elevator where you clicked.

All other operations are as described above.}}\leftindent{

}
\bold{ScrollClass: }}\bold{(none)}\leftindent{\italic{

}\leftindent{ This preference can be used to specify an alternate "Class" 
to provide scrolling support.  Currently only one alternative is provided, 
this is the scrolling package provided in previous releases of ATK.  To use 
this alternative see the help file on "oscroll".

}}
\section{Old Scrollbars

}\bold{
\leftindent{Note: these are only the preferences unique to the old 
scrollbars and don't include the preferences which affect both the old and 
new scrollbars unless the effect is different between the two systems.}

}\section{
}\leftindent{\bold{MotifScrollBars:}\italic{\bold{ no}

}\leftindent{ Determines if "Motif-style" scrollbars are desired.

}
\bold{ScrollbarWidth:}\italic{\bold{ }\bold{20} }\bold{(for normal 
scrollbars )}\italic{,\bold{ 15 }}\bold{(for "Motif" style 
scrollbars)}\italic{

}\leftindent{ Determines the width of the scrollbar.

}
\bold{DotWidth:}\italic{\bold{ 7}

}\leftindent{ The width of the rectangle which indicates where the cursor 
is or where the selection is.

}
\bold{CornerShade:}\italic{\bold{ 8}

}\leftindent{ A number from 0 (white) to 16 (black) indicating what shade 
pattern should be used for the corners of the window which are left when 
two scrollbars are being used (for instance when viewing a raster or 
table).

}
\bold{EndZoneShade:}\italic{\bold{ 2}

}\leftindent{Same as CornerShade but for the end regions of the scrollbars.

}
\bold{BackgroundShade:}\italic{\bold{ 4}

}\leftindent{Same as CornerShade but for the region of the scrollbar not 
covered by the elevator (the normally white rectangle which indicated what 
portion of the document is visible).

}
\bold{ElevatorShade:}\italic{\bold{ 0}

}\leftindent{Same as CornerShade but for the interior of the rectangle 
which shows which portion of the document is visible.

}}
\section{Console preferences}\section{

}\leftindent{
\bold{console.default: \italic{monitor}}

\leftindent{Controls which console appears if you type \typewriter{console} 
at the command prompt without supplying a console name.  The console called 
"monitor" is used by default, but there other consoles to choose from.  The 
easiest way to see them is to choose one from the Consoles menu card of a 
Console window.  See the  \italic{console}  help document for more details. 


}\bold{console.MailFrom: \italic{off}

}\leftindent{Controls whether or not the Console posts a message telling 
you whom each arriving mail message is from.  It does when preference is 
set to "on." The default is "off."


}\bold{console.tfhc: \italic{off}}\leftindent{

This stands for "twenty-four hour clock".  When set to "on," it reports the 
time in 24 hour time (i.e. "13:00" instead of "1:00 pm").


}\bold{vmfreq: \italic{1}

diskfreq:\italic{ 60}}

\leftindent{These preferences are for example programs from Nathaniel 
Borenstein's book (see the Programming overview for how to find the 
examples).   In real ATK Consoles, these values are drawn from the LACC 
file, not preferences.}

}
\section{Fonts and template preferences}

\leftindent{
In Andrew font specifications, you should run together the font name and 
the point size as a single word.  Putting a space between them in a 
preference will lead to a Start Up error. \


\bold{
ShowColorStyles:} \bold{<defaults to \italic{false} on monochrome, 
\italic{true} otherwise>}\leftindent{

If true, color styles will be rendered in color on a color display, and 
will be dithered on a monochrome display.  If false, color styles will be 
ignored and the text will be displayed in the current foreground color. 
 Note:  monochrome users should use only white or black as a 
foreground/background color to avoid dithering.}


\bold{justified:} \bold{\italic{on}}

\leftindent{Controls whether text inside windows is justified on the right 
edge as well as the left.  The default "on" setting justifies both margins; 
a setting of "off" gives a ragged right margin.}


\bold{bodyfont:}  \bold{\italic{Andy12}}

\leftindent{Determines the font in all windows (and in printed documents, 
unless you set the \bold{print.bodyfont} preference described in a later 
section).  The default is Andy 12, a 12 point font with serifs.  \



It is possible to set a different font for each program (EZ, Typescript and 
so on) by specifying the program name and putting a period between it and 
\bold{bodyfont}, as in the following examples:


\leftindent{ez.bodyfont: AndySans10

typescript.bodyfont: AndyType10f

}
The first preference means EZ will use a font that is smaller than the 
default (10 points versus 12) and has no serifs.  The second preference 
means that Typescript will use a 10 point fixed-width font (indicated both 
by the word "Type" and the "f"), which makes columns line up in the 
Typescript window. }\



\bold{fontpath:} \bold{\italic{/usr/andrew/fonts:/usr/local/fonts}}

\leftindent{NOTE: this is only used under the Andrew Window Manager, not 
under X11.


Determines the directories where all programs look to find fonts.  You can 
add other directories to the default path, including ones where you store 
fonts you have made yourself.  To do so, place the full pathname(s) at the 
start of the list, separating each with a colon but no space.  Programs 
look for fonts in the order of the directories in the list, stopping when 
they find the required font.  It is recommended that you include the 
defaults in your own list.

}
\bold{ATKTemplatePath: \italic{/usr/andrew/lib/tpls}}

\leftindent{Determines the directories where EZ looks for\italic{ 
 templates  }for text documents.  You can add other directories to the 
default path, including ones where you store templates you have made 
yourself.  To do so, place the full pathname(s) at the start of the list, 
separating each with a colon but no space.  Programs look for templates in 
the order of the directories in the list, stopping when they find the 
required template.  It is recommended that you include the defaults in your 
own list.  \



}}\leftindent{\bold{AnnounceFontSubstitutions\leftindent{\quotation{: 
no}}}\leftindent{\quotation{

}This is used by the X11 version of ATK to tell you when a font 
substitution is happening.  When set to "yes," if a program asks for one 
font, it doesn't exist and another font is used, you will be notified.}}

\leftindent{\leftindent{
}\bold{AddFontPath\leftindent{\quotation{: yes}}}\leftindent{\quotation{

}This is used by the X11 version of ATK to decide whether to try to 
automatically add the appropriate font directory to the X server's font 
path.  The appropriate directory is usually $ANDREWDIR/X11fonts, but may be 
set with the AndrewFontDir preference or the ANDREWFONTDIR environment 
variable.


}}\indent{\bold{AndrewFontDir\leftindent{\quotation{:} 
<$ANDREWDIR/X11fonts>}}\leftindent{\quotation{

}This is used by the X11 version of ATK to decide what directory to add to 
the X server's font path to try to get the Andrew fonts.

}}
\indent{\bold{ErrorsToConsole\leftindent{\quotation{:} 
\italic{yes}}}\leftindent{\quotation{

}This is used by the X11 version of ATK to decide whether or not to 
redirect error messages printed to stderr to the ATK console program or 
not.  The ATKCONSOLEHOST environment variable can also be used to direct 
error messages to a console on a different host than that indicated by 
$DISPLAY.  It can also be used to indicate that a different port number 
should be used.  e.g.  setenv ATKCONSOLEHOST foo:9000 would send error 
messages to the host foo, at port 9000.}}

\section{
EZ preferences}

\leftindent{
\bold{ez.AllowKeyToggleToViMode: \italic{no}}

\leftindent{In addition to responding to the EMACS editor command set, EZ 
has the option of responding to the command set of the Berkeley VI editor. 
 When this preference is set to true, the keycommand <ESC>t will toggle 
between command sets.  This is so you can switch between VI command set and 
EMACS command set.  It is set to false by default so beginning users don't 
suddenly discover EZ no longer behaves.  EZ can be made to come up in VI 
mode by setting the \bold{editor} preference, or by setting an environment 
variable.}


\bold{ez.AskAboutSymlinks: \italic{no}}

\leftindent{If you are editing a file which is really a symbolic link to 
another file, what should EZ do when you ask to save the buffer?  Should it 
follow the symbolic link and replace the pointed-to file?  Or should it 
replace the link itself with a new, real file?  Turning this preference on 
will result in EZ asking you which option you prefer the first time you try 
to save a file which is really a symbolic link.  See the 
\bold{ez.ClobberSymlinks} preference, below.}


\bold{ez.Editor: \italic{NULL}}\leftindent{

}\leftindent{It is comparatively easy for a user who prefers the VI command 
set to the EMACS command set to have EZ start up with the VI command set by 
default.  Either set ez.Editor to \italic{vi} or set any one of the 
following environment variables to the string \italic{vi}: EDITOR, EDIT, 
ED, FCEDIT, VISUAL.}


\bold{ez.bodyfont:\italic{ Andy12}}

\leftindent{Controls the size and appearance of the font used for text in 
the EZ window.  The default is a 12 point variable width font with serifs. 
 Within EZ, overrides the \bold{bodyfont} preference, if any.

}
\bold{ez.BackupExtension:\italic{ <name of extension>}}

\leftindent{Determines whether EZ makes backup files automatically, and if 
so, what extension it puts on them.  The default is no backup files unless 
you include this preference and specify an extension.  If you provide an 
extension, then when you save a file, EZ stores both a new version of your 
file and a backup version, which does not include the changes you made in 
the current EZ session; it puts your specified extension on the backup 
version.  Note that the period ("\bold{.}") that usually precedes 
extensions is not included automatically.  If you want a period (as in 
.BAK), be sure to type it in the name of your extension.  Note also that 
this kind of backup file is different from a checkpoint file, which EZ 
\italic{does} create by default.}


\bold{ez.CheckpointExtension:\italic{ .CKP}}

\leftindent{Determines what extension appears on checkpoint files.  Note 
that the period ("\bold{.}") that usually precedes extensions is not 
included automatically.  If you want a period (as in the default .CKP), be 
sure to type it in the name of your extension.}


\bold{ez.CheckpointDirectory: \italic{<directory name>}}

\leftindent{Determines in which directory checkpoint files are written. 
 The default operation is to save the checkpoint file in the same directory 
as the file being edited.  By setting the checkpoint directory, you can 
cause all checkpoint files to be saved into that directory.}


\bold{ez.CheckpointGawdyNames: \italic{no

}}\leftindent{Where the user has specified a CheckpointDirectory preference 
and this preference has been enabled, checkpoint filenames will take this 
form:


<CheckpointDirectory>/ #uid.@ful@path@name#.<CheckpointExtension>


where @ful@path@name is the name of the file being checkpointed.

}
\bold{ez.CheckpointMinimum: \italic{120}}

\leftindent{Determines how much time must elapse since a change was made to 
a buffer before EZ will checkpoint the buffer and save the contents in a 
.CKP file.  (See the  \italic{ez-buffers}  help document to learn about how 
buffers work.) Specifying a larger value increases the delay between 
occurrences of checkpointing. The default value is 120 seconds.  \


}
\bold{ez.CheckpointInterval: \italic{30}}

\leftindent{Determines how often EZ checks to see if a buffer has been 
modified for the length of time required by \bold{ez.CheckpointMinimum}. 
 It is not recommended that you change this preference; in particular, 
decreasing it only draws processing resources away from more important 
functions.  Change \bold{ez.CheckpointMinimum} instead.  The default value 
is 30 seconds.}


\bold{ez.ClobberSymlinks: \italic{yes}}

\leftindent{Controls whether saving a buffer whose file is a symbolic link 
results in replacing the link with the file contents (the default), or 
replacing the link's target.  See the \bold{ez.AskAboutSymlinks} 
preference, above.}


\bold{ez.OverwriteFiles: \italic{yes}}

\leftindent{If this is set to "no" and you are trying to save a file under 
an new name that already exists, the system will prompt the user telling 
him that the file already exists and do you want to overwite it.  Its 
default value is "yes."

}
\bold{ez.MaxinitWindows:\italic{ 2}}

\leftindent{Tells EZ how many windows it can open during startup.  (You can 
open multiple windows by typing \bold{\typewriter{ez}} followed by multiple 
file names.)  Any files over the maxinit number will be placed into buffers 
instead of windows.  The default is 2 windows.   \


}
\bold{ResizableMessageLine: \italic{yes}}

\leftindent{Determines whether the user will be allowed to resize the 
message line.

}
\bold{DynamicMessageLineSize: \italic{no}}

\leftindent{Determines whether the message line will grow and shrink based 
on it's contents.}


\bold{MinimumMessageLines: \italic{1}}

\leftindent{Sets the minimum size of the message line area in lines. \


}
\bold{ez.MessageTimeout:\italic{ 15}}

\leftindent{Controls the length of time messages appear in the message area 
at the bottom of the EZ window.  A message will remain on the message line 
until MessageTimeout seconds have elapsed (unless another message replaces 
it).  After the required time has elapsed, the message disappears when you 
type any keystroke into the window.  The default is 15 seconds.  \



}\bold{ez.CompileCommand: \italic{build -k}}\leftindent{

This preference is used in the \italic{compile} package in EZ.  It specifes 
a default to use for ^X^E.


}\bold{ez.tagfilename\leftindent{:\italic{ tags}}}\leftindent{

The default file name to use for handling \italic{tags} in ez.  Its default 
is "tags".


}\bold{ez.AlwaysIgnoreBlanks: \italic{no}}\leftindent{

This preference is for the \italic{ez-diff } package.  It specifes whether 
or not the diff should ignore [leading?] blanks when determining diffs. 
 The default is "no."


}\bold{ez.UseCurrentWorkingDirectory\leftindent{: \italic{no}}}\leftindent{

When this is set to "yes" , visit file will use the current working 
directory for the root of the prompt for a new file name.  If it is "no" it 
uses the directory of the file currently being edited in that window.  The 
default is "no."}

\bold{
ez.expertmode:\italic{ off}}

\leftindent{Determines whether you can make recursive edits when using the 
Query Replace and Spellchecking features of EZ.  The default setting of 
 "off" means that recursive edits are not possible; a setting of "on" makes 
them possible.


Enabling recursive edits means that you can temporarily "leave" the 
spellchecking or query replace functions to make more extensive revisions 
than is allowed within those functions.  To enter recursive edit mode in 
the Spellchecker, type \bold{e}; in Query Replace, type \bold{r}.  The 
word(s) selected by the routine are deselected, and you can edit any part 
of the document you choose.  When you are finished editing, press \bold{^C} 
(Ctrl-c) to re-enter the Spellchecker or Query Replace routine.   \


Note that the routines re-start from the current position of the text 
caret.  If you have moved the text caret past some misspelled words or 
instances of the string being replaced, they will not be found.  Also, the 
word that was selected when you entered recursive edit mode will not be 
corrected or replaced, so you must make that change by hand.

}
\bold{ez.justified: \italic{on}}

\leftindent{Controls whether the text in the window display and printed 
versions of an EZ document  is justified on the right edge as well as the 
left.  The default "on" setting justifies both margins; a setting of "off" 
gives a ragged right margin.  Within EZ, overrides the more general 
\bold{justified} preference, if they disagree.


}\bold{ez.DefaultStartUpFile:\italic{<filename>}}\leftindent{

If you have this preference specified, when you just type 'ez' without a 
filename, EZ will bring up the specified filename in whatever directory you 
are in.

}
\bold{ContentsList:\italic{chapter,section,subsection,paragraph,function}}

\leftindent{Specifies the title formats included in both the Table of 
Contents window and a printed table of contents.  See the 
 \italic{ez-contents } help file for more information.  Title formats to be 
included in the Table of Contents can also be set on a command line for 
 \italic{ezprint} .}


\bold{AutoEnumerate:\italic{no}}

\leftindent{When set to yes, this will automatically enumerate printed 
Table of Contents.  See the  \italic{ez-contents } help file.}


\bold{PrintContents:\italic{no}}

\leftindent{When set to yes, a table of contents will be included in each 
printed document, regardless of whether or not you open a Table of Contents 
window.  A "yes" setting can be overridden by a -cn switch to 
 \italic{ezprint} .   See the  \italic{ez-contents } help file.}


\bold{ez.StylesIncludeEnd: \italic{yes}

ez.StylesIncludeBeginning: \italic{no}}

\indent{Changing these defaults changes how text behaves when you add it to 
a styled region. Normally when you have text within a style, like bold, 
when you add to the beginning of the style the text you add is \bold{not} 
in the style. When add to the end of the styled region, the text you add is 
in the style. (Hence the defaults listed above.) However, if you add text 
at the beginning of a paragraph, you will always pick up the style of the 
paragraph, regardless of the setting of ez.StylesIncludeBeginning.}


\bold{tmacfile: \italic{pathname}}

\leftindent{Allows you to specify an alternate tmac file for ezprint to use 
when printing.


}\bold{ez.hyphenate:\italic{ no}}

\leftindent{If set to "yes", EZ will use hyphenation when printing.}}


\section{Messages preferences}


The preferences listed here are recent additions which have not yet been 
integrated into the \bold{ Set Options }menu in messages itself.  Choose 
the \bold{ Set Options }menu on the \italic{Other }menu card in Messages to 
see the other preferences which can be set.

\leftindent{
\subsection{Composition Window preferences

}
\bold{SendOptionsStyle:\formatnote{ }}\formatnote{\bold{\italic{4}}}

\leftindent{This integer preference specifies which "look" should be used 
for the send options buttons.  The default of 4 indicates "OSF/Motif" (TM) 
appearance.  The supported styles are:}

\leftindent{\leftindent{1. Double Boxed.

2. Three Dimensional.

3. Plain Box.

4. OSF/Motif (TM).}

}
\bold{SendOptionsFont: \italic{andysans10b}}\leftindent{

The font used to draw the labels on the options buttons in the message 
compositon window.

}
\bold{SendOptionsForeground:} \bold{<defaults to the foreground color for 
the application, as set by the foregroundcolor preference> \bold{(see the 
preferences help file for more information)}}

\leftindent{The color in which the main features of the plainer buttons 
(see SendOptionsStyle) will be drawn and from which several other colors 
will be computed to provide a "3D" effect for the "Three Dimensional" and 
"OSF/Motif" (TM) style buttons.

}
\bold{SendOptionsBackground: \bold{\bold{<defaults to the background color 
for the application, as set by the backgroundcolor preference> \bold{(see 
the preferences help file for more information)}}\italic{

}}}\leftindent{The color in which the background of the plainer buttons 
(see SendOptionsStyle) will be drawn and from which several other colors 
will be computed to provide a "3D" effect for the "Three Dimensional" and 
"OSF/Motif" (TM) style buttons.


}\bold{SendOptionsTop: }\bold{<by default this is computed from the 
foreground and background preferences>}

\leftindent{The color which will be drawn in the background behind a 
button's label.   (For the "3D"ish buttons.)

}
\bold{SendOptionsTopShadow: }\bold{<by default this is computed from the 
foreground and background preferences>

}\leftindent{The color which will be used to draw the upper shadow of a 
button when it is "inactive" (ie, not pressed).   (For the "3D"ish 
buttons.)

}
\bold{SendOptionsBottomShadow: }\bold{<by default this is computed from the 
foreground and background preferences>

}\leftindent{The color which will be used to draw the lower shadow of a 
button when it is "inactive" (ie, not pressed).  (For the "3D"ish buttons.)


}\bold{SendOptionsLabelForeground: \bold{<defaults to the foreground color 
for the application, as set by the foregroundcolor preference> \bold{(see 
the preferences help file for more information)}}}

\leftindent{The color in which the actual label of a button will be drawn 
in.


}\bold{SendOptionsLabelBackground: \bold{<defaults to the background color 
for the application, as set by the backgroundcolor preference> \bold{(see 
the preferences help file for more information)}}}

\leftindent{The color of the shadow around the label of a button.  (For the 
"3D"ish buttons.)

}}\leftindent{
\subsection{Folders Window/Panel options

}
\bold{FolderOptionsStyle:\formatnote{ }}\formatnote{\bold{\italic{4}}}

\leftindent{This integer preference specifies which "look" should be used 
for the folder options buttons.  The default of 4 indicates "OSF/Motif" 
(TM) appearance.  The supported styles are:}

\leftindent{\leftindent{1. Double Boxed.

2. Three Dimensional.

3. Plain Box.

4. OSF/Motif (TM).}

}
\bold{FolderOptionsFont: \italic{andysans12b}}\leftindent{

The font used to draw the labels on the options buttons in the message 
compositon window.

}
\bold{FolderOptionsForeground: \bold{<defaults to the foreground color for 
the application, as set by the foregroundcolor preference> \bold{(see the 
preferences help file for more information)}}}

\leftindent{The color in which the main features of the plainer buttons 
(see FolderOptionsStyle) will be drawn and from which several other colors 
will be computed to provide a "3D" effect for the "Three Dimensional" and 
"OSF/Motif" (TM) style buttons.

}
\bold{FolderOptionsBackground: \bold{<defaults to the background color for 
the application, as set by the backgroundcolor preference> \bold{(see the 
preferences help file for more information)}}}

\leftindent{The color in which the background of the plainer buttons (see 
FolderOptionsStyle) will be drawn and from which several other colors will 
be computed to provide a "3D" effect for the "Three Dimensional" and 
"OSF/Motif" (TM) style buttons.


}\bold{FolderOptionsTop: }\bold{<by default this is computed from the 
foreground and background preferences>}

\leftindent{The color which will be drawn in the background behind a 
button's label.   (For the "3D"ish buttons.)

}
\bold{FolderOptionsTopShadow: }\bold{<by default this is computed from the 
foreground and background preferences>

}\leftindent{The color which will be used to draw the upper shadow of a 
button when it is "inactive" (ie, not pressed).   (For the "3D"ish 
buttons.)

}
\bold{FolderOptionsBottomShadow: }\bold{<by default this is computed from 
the foreground and background preferences>

}\leftindent{The color which will be used to draw the lower shadow of a 
button when it is "inactive" (ie, not pressed).  (For the "3D"ish buttons.)


}\bold{FolderOptionsLabelForeground:\bold{ <defaults to the foreground 
color for the application, as set by the foregroundcolor preference> 
\bold{(see the preferences help file for more information)}}}

\leftindent{The color in which the actual label of a button will be drawn 
in.


}\bold{FolderOptionsLabelBackground: \bold{<defaults to the background 
color for the application, as set by the backgroundcolor preference> 
\bold{(see the preferences help file for more information)}}}

\leftindent{The color of the shadow around the label of a button.  (For the 
"3D"ish buttons.)

}}
\section{Andrew Message System preferences}


\leftindent{The preferences that are not prefixed with a program name will 
affect all Andrew Message System programs (see the \italic{ mail}  help 
document to find out what those programs are).  There are also "options" 
other than preferences that can change the way Messages behaves.  You can 
set these options by choosing\bold{ Set Options} from the \italic{Other} 
menu card in Messages.  To find out about these options, you can either 
read the help that appears in the Messages window when you choose \bold{Set 
Options}, or see the  \italic{messages-customization}  help file.}

 \


\leftindent{\bold{mailsendingformat: ask}

\leftindent{Controls whether AMS clients write out data in the old (ATK) 
format or a MIME-compliant format.  MIME is a proposed Internet standard 
for multipart, multimedia mail.  The possible values for this preference 
are:


"ask" -- WHENEVER formatted mail is about to be sent out, regardless of any 
format-forcing codes in a user's .AMS_aliases file, give the user the 
choice of the old Andrew or the new MIME format.


"andrew"  -- behave as before, asking the user about sending formatted mail 
to non-local recipients, and using the old ATK data format whenever 
formatted mail is sent.


"mime" -- behave as before, asking the user about sending formatted mail to 
non-local recipients, but use the new MIME data format whenever formatted 
mail is sent.


"mime-force" -- Always use the MIME format, and don't even bother to ask 
about stripping to plain text.  This should become an increasingly 
plausible option as time goes on, if MIME support becomes widespread, 
because the MIME format Andrew generates always begins with a readable 
text-only version of the message.}}


\leftindent{\bold{forcemetamail: <MIME type [,MIME type] ...>}

\leftindent{Certain MIME types are, by default, converted into Andrew 
insets.  In some cases this may be wrong -- e.g. if Andrew's alink object 
doesn't work on your machine, but metamail has been configured to do 
something reasonable with audio & telephones.  In such cases, you may use 
the "ForceMetamail" preference to give a comma-separated list of MIME types 
that should always be passed to metamail rather than converted to Andrew, 
e.g. "*.ForceMetamail:foo,audio,bar".}}


\leftindent{\bold{mspath : $DEFAULT}

\leftindent{Determines which directories the message server (which 
underlies all the Andrew Message System programs) checks in, to see if they 
have new messages.  The default value of $DEFAULT includes elements that 
refer to three path elements (directories).  The first, $MAIL, is your 
personal mail folder.  The second, $OFFICIAL, is the folder containing the 
bulletin boards that appear under the \bold{official} parent.  The third, 
$OTHER, is the folder containing the other public bulletin boards (the 
Andrew and network bboards) that are available.  The default setting 
presents folders to you in the following order: MAIL, OFFICIAL, and OTHER. 
 You can change the order by breaking the elements up.  For example, to 
have official bboards presented in front your mail folder, you would use:


mspath:$OFFICIAL:$MAIL:$OTHER


You can also define a mspath variable to specify which tree you are 
refering to (if, for example, bboards in different trees have the same 
name), using something like the following:


mspath: 
$OFFICIAL:[jello]/afs/andrew.cmu.edu/usr10/jbRo/.MESSAGES_PUBLIC:$OTHER


Then, this user could refer to [jello]andrew.hints to refer to a private 
bboard in jbRo's account called andrew.hints.}


\bold{Subsorder: <\italic{folder specifications>}}

\leftindent{Controls how your messages folders are ordered when a Messages 
System program presents them to you in a list.  For an explanation of the 
syntax of this preference, and examples which illustrate it, see the 
 \italic{ams-subsorder}  help file.}


\bold{UseFootnote: \italic{yes}}

\leftindent{By default, minor messages headers are now printed as 
footnotes. This behavior can be turned off by setting this preference to 
"no."}


\bold{PrintMinorHeaders: \italic{yes}}

\leftindent{You can turn off all printing of the "fine print" headers by 
setting this to "no."

}\bold{
Vui.editor: \italic{<path}}\leftindent{>

This preference specifies the editor  \italic{VUI  }will use when you want 
to edit a message.

}
\bold{AlwaysPrintImmediately:\italic{ no}}

\leftindent{Controls whether print requests from within Messages are sent 
to the printer as soon as possible.  The default is setting of "no" means 
that the Message System program waits until you quit it before printing any 
messages, putting them all together in one print job, and giving you only 
one header page.  A setting of "yes" means each message is sent as soon as 
possible after you choose to print it, giving you a header page for each.  \


}\leftindent{
}\bold{DelayPrinting:\italic{ no}}

\leftindent{Controls when your message printing requests get sent to a 
printer.  With a "no" setting, Messages waits until it thinks your machine 
load is "light" before printing messages.  With a "yes" setting, the 
message program you are running will never print the messages you want 
printed until you quit the program.  With the option set to "yes," you can 
force a print at any time while you are using the program by typing the 
following at the command prompt:


\leftindent{cui quit}


(which starts and quits CUI, forcing the pending prints to go out).}


\bold{bccto:}\italic{ <\description{\bold{folder name> }}}\


\leftindent{Blind copies are sent to the folder you specify.  If you do not 
have the preference, blind copies will be sent to your Mailbox.  To have 
blind copies sent to a folder other than your mail folder, create a folder 
for your copies (see  \italic{messages-folders}  for information on how to 
create and manipulate folders) and enter the name of the folder after this 
preference.  For example, to send to a folder called "carbons" you would 
have


\programexample{*.bccto: carbons

}}
\bold{bcc:}\bold{ no}

\leftindent{This preference line is obsolete.  See the help file for 
individual Andrew Message System programs to determine how to keep blind 
copies.}\leftindent{


}\bold{messages.SurrogateHelpFile: \italic{<pathname>}}

\leftindent{Allows you to replace the help message that appears in the body 
area of the Messages window on startup.  You can replace the message with 
any file you want to.  A suggested use of this is to have a file with a 
 \italic{chomp}  inset appear, to display a two-month engagement calendar. }\



\bold{messages.motdfile: \italic{<pathname>}}

\leftindent{This can be set so that some file other than the motd file 
(message of the day) will be shown in the captions region on startup.}

\leftindent{
}}\leftindent{\bold{\bold{PersonalMailCollectionCommand:}\italic{ 
<pathname>}}

\leftindent{This preference will automatically run the program specified by 
the pathname before checking your Mailbox.  For example, you could put the 
following script into a file:


\programexample{#!/bin/csh -f


cd

set MF=~/Mailbox/CAL.`hostname`.$$

set TF=/tmp/CAL.$$

if (-e $MF) then

	echo I do not want to overwrite a mailbox file. > /dev/console

	exit

endif

calendar > $TF

if (! -z $TF) then

	(echo From: Calendar Job; echo Subject: `head -1 $TF`...; echo To: My Own 
Calendar; echo ""; echo Here is the calendar output for today; cat $TF) > 
$MF

else

	echo Nothing going on today > /dev/console

endif}


Then, if you put the full pathname to this script after this preference, 
every time you checked your mail, the   \italic{calendar}  program will run 
first and turn all calendar events into pieces of mail for you. 
 Unfortunately, this mechanism is a little slow, so you may not want to do 
this.}}


\leftindent{\bold{DoPrefetch: \italic{yes}}

\leftindent{If set to no, AMS programs will not prefetch files from the 
next bulletin board on your list of changed folders.  The default is yes.}


\bold{TurnOffCheckPointingAndIUnderstandTheDangersForMessages:\italic{ no}}

\leftindent{If set to yes, AMS programs will not checkpoint your 
Messageserver state until you hit the "Commit" button, which appears near 
the Punt button once have turned this option on.  If you have write access 
to shared folders, or run multiple messageservers (or multiple 
non-snapified user interfaces) at the same time, you should not turn this 
preference on.  The default is no.}


\bold{\{folders,captions,bodies,messages,sendmessage\}.\{height,width\}:\
\italic{number}}

\leftindent{The number (in pixels) determines the size of the window 
specified.  For example, if you started Messages with a -w switch to cause 
it to put the folder, captions and message body in separate windows, the 
following preferences would set the window sizes:


folders.height:100

folders.width:550

captions.height:200

captions.width:500

bodies.height:400

bodies.width:600


If any of the numbers is less than 0, the default size for new windows will 
be used.


Both a height and width preference need to be specified for either to take 
effect.  (A "folders.height" preference is meaningless without 
"folders.width".)}}


\leftindent{\bold{MailboxDir:\italic{ full path to directory}}

\leftindent{The directory listed is the one from which AMS programs will 
read mail.  This is useful if a delivery system (for example, a system 
other than AMS delivery) puts mail into a directory other than ~/Mailbox. 
 Note that there is also an AndrewSetup option ``MailboxName'' that 
specifies the name of the subdirectory in every user's home directory from 
which AMS programs will read mail, and to which AMS delivery will deliver 
mail.}}


\leftindent{\bold{MailboxFile:\italic{ mailfilename}}

\leftindent{Most users will not need to set this at all; this preference is 
for use on standard Unix systems.  It tells AMS where to find your 
"Mailbox" file, if you are reading your mail out of some unusual file name, 
the name of which couldn't be generated by appending the ``userid'' string 
to some constant prefix (/usr/spool/mail or /usr/mail for SysV systems). 
  If you have a ``MAIL'' environment variable, that's used as the name of 
the in-mailfile.  Otherwise, AMS looks for this preference and uses its 
value as the name of the in-mailfile.


If both of those fail to find a name for an in-mailfile, AMS generates a 
name by taking the AMS_MailBoxPrefix variable from AndrewSetup and 
appending the user's userid to it.  (The AMS_MailBoxPrefix name is by 
default either /usr/spool/mail or /usr/mail, depending on whether system.h 
says that this is a SysV-like system or not.)}}


\leftindent{\bold{AMShome:\italic{ cell or workstation name}}\leftindent{

You only need this preference if you are running the Andrew Message System 
in one of the  \italic{cells  }other than andrew.cmu.edu.  This preference 
is used to determine the location of files and directories that AMS 
programs need in order to work.  \



The value for this preference should be either the name of an AFS cell in 
which you have authentication (e.g. "cs.cmu.edu"), the name of the 
workstation on which you're running, or the single characters * or &, which 
stand for, respectively, the name of the workstation on which you're 
running and the name of the cell to which your workstation is connected. 
 If the value of this string is an AFS cell in which you're authenticated, 
the AMS will read the white pages for that cell to locate your home dir in 
that cell and will use that directory as the location for its other 
auxiliary files.  If the value of this string is the name of your 
workstation, the AMS will use getpwuid(getuid())->pw_home as the location 
for your other auxiliary files.


Your From: address will be determined analogously: if your AMS home is an 
AFS cell in which you have authentication, your From: address is determined 
from that authentication.  If your AMS home is the name of your 
workstation, your From: address is determined via getpwuid(getuid()).


If you have no AMShome preference, either the connected-cell name or the 
workstation name will be used as the name of your AMS home, depending on 
how the local workstation administrators have indicated that the choice 
should default.  (They do this with the AMS_DefaultToAFSCellMail value in 
the \italic{AndrewSetup}  file.)}}


\leftindent{\bold{AMSTempFileLocation: \italic{/tmp}}

\leftindent{The preference can be used to set the directory in which the 
messageserver's temporary files will be created.  The default for this is 
/tmp, but you can set it to some other \italic{fully-qualified} directory 
name (that is, you can NOT use a tilde instead of your home directory 
path).


}\bold{deathknell:}\leftindent{

The idea behind the ``message server death knell'' is that after a period 
of inactivity in which no SNAP calls are received, the (separate) message 
server will kill itself.  Message-server clients can spawn new message 
servers transparently, for which the only penalty paid is the additional 
time taken, so the suicide of a message server is reasonably harmless and 
in general affects only the latency of response to the next request.  At 
the same time, message servers are not always told to kill themselves when 
a client terminates.  Thus, the value of the death knell is a tradeoff 
between response latency to SNAP calls and the time taken for a truly 
inactive message server to exit.


Here are some AndrewSetup values for death knells (expressed as an integral 
number of seconds):

AMS_InitialDeathKnell, default 30*60 (30 minutes): the initial value for 
the message server's DeathKnell value, expressed in seconds.  A message 
server will time out after this many seconds of inactivity.

AMS_MaximumDeathKnell, default 1*60*60 (one hour): the maximum limit for 
MS_SetDeathKnell's time parameter, expressed in seconds.  A value of zero 
means not to limit it.


The message server initializes the DeathKnell value that it uses to the 
preference, where the default value is the AMS_InitialDeathKnell value from 
AndrewSetup.


}\bold{SwapPerformanceTimeout:\italic{ 0}

SwapPerformaceBackoff:\leftindent{\italic{ 0}}}\leftindent{

Two integer preferences, with default values of 0.  They allow some tuning 
of the performance of the separate message server.

The SwapPerformanceTimeout is a number of seconds to wait for the next SNAP 
call to the separate message server, but it is only used after 
SwapPerformanceBackoff timeouts (waits without a SNAP call received) have 
occurred.  Otherwise, a one-minute wait time is used.


}\bold{cuimslog:\leftindent{ \italic{no}}}\leftindent{

If the Boolean preference value ``cuimslog'' is set to "yes", the message 
server will write a timing log of its actions to the file /tmp/cuims.log . 
 This file will contain a trace of the time taken to execute each message 
server call.  It is intended for maintenance and development use.


}\bold{AMS_RemoteLogin\leftindent{:}}\leftindent{

If the AMS_RemoteLogin preference or AndrewSetup value is set (a string), 
it is used as the name of the machine on which a remote message server 
should be run (giving an explicit password for the remote machine).  This 
differs from the AMS_RemoteServer preference in that AMS_RemoteLogin always 
asks for a password to use in connecting to the remote message server 
(using the password-based method of connecting), while the AMS_RemoteServer 
method, which is only available under AFS, copies the user's AFS 
authentication tokens and uses them to initiate the remote message server 
(using the token-based method of connecting).  The default value for 
AMS_RemoteLogin is the null string, and when not running AFS this causes 
the ``Name of host to run message server for you'' and ``User id on host 
...'' and ``Password'' questions to be asked; on AFS systems, the default 
(null) value causes the AMS_RemoteServer preference to be checked.


}\bold{AMS_RemoteServer:}\leftindent{

Specifies a machine on which to run a remote message server.  The machine 
must have a certain configuration; see the  \italic{ams } help file.

}}
\section{Typescript preferences

}\leftindent{
\bold{typescript.shmenu: <\italic{pathname>}}

\leftindent{You can reset this preference with the path to your own shell 
menu file.  (Remember, you can also read a shmenu file by putting a .shmenu 
file in your home directory.  You can then use this preference to override 
that file when needed.)


}\bold{typescript.maxsize:\italic{10000}}\leftindent{

You can reset this preference to represent the number, in characters, that 
typescript honors for the size of its scrollback buffer.  The default is 
10000.

}
}\section{Raster preferences}\leftindent{


\bold{RastersInitiallyShrunk:\italic{ off}}

\leftindent{Determines whether raster insets in text and table documents 
initially appear full size or shrunken down to a few rows of pixels, which 
can make scrolling simpler.  With the default "off" setting, raster insets 
appear full size.  With a setting of "on," only the top 21 rows of each 
raster will appear at first.  To expand the raster fully, simply click on 
it.  You can then reshrink the raster by choosing the \bold{Shrink to 
Button} option, which appears on the \italic{Raster Ops} menu card when you 
set this option "on."}


}\section{Table preferences}


\leftindent{\bold{table.bodyfontfamily:\italic{ Andysans}}

\leftindent{Used in table as the name of the font to use in displaying 
labels.}}\section{


Zip preferences}\leftindent{


\bold{ZipManualRefresh: \italic{no}}

\leftindent{Determines whether Zip redraws the screen each time you draw a 
figure, or portion of one.  With the default setting of "no," it does. 
 With a setting of "yes," it only does a redraw when you choose the 
\bold{Refresh} menu option from the \italic{Pane} menu card.  This leaves 
the screen messy while you are working, but leads to faster response times 
during drawing, especially on Suns and machines without extra memory.}

\leftindent{
}\bold{ZipPath:\italic{<path:path>}

ZipPaths:\italic{<path:path>}}\leftindent{

These preferences are colon-separated lists of paths where Zip will look 
for zipstream files to use in addition to ".", "/usr/andrew/lib/zip", and 
"/usr/local/lib/zip".  The order is:


.:<zippath-prefences>:/usr/andrew/lib/zip:/usr/local/lib/zip


It looks first for a zippaths preferences, and ignores zippath if it finds 
it. \



}\bold{ZipCreateTolerance: \italic{10}}\leftindent{

When you are creating an object with multiple segments in the zip editor, 
if you click within this number of pixels from the "object in progress" you 
will finish that object.   Clicking more that this number of pixels away 
from the object continues the creation process.  The default is 10 pixels.


}\bold{ZipSymbolPathString:\italic{<path:path>}

ZipSymbolPaths\italic{:<path:path>}}

\leftindent{These preferences are colon-separated lists of paths where Zip 
will look for zip symbol files to use in addition to the ones that are 
always used, loaded into the zip editor on startup (from 
BASEDIR/lib/zip/symbols).  It looks first at ZipSymbolPathString, and 
ignores ZipSymbolPaths if it finds it. \



}\bold{ZipPanningPrecision: \italic{8}}\leftindent{

The minimum number of pixels you need to move the cursor for a panning 
operation to occur; also defines panning granularity (will pan in discreet 
chunks of ZipPanningPrecision).

}}
\section{Printing preferences}

\leftindent{
\bold{formatcommand: \italic{troff  -T$PRINTERTYPE /tmp/%s.n |}}

\leftindent{Specifies a pipeline of formatting programs for producing 
output for preview or print programs.  By default, the pipeline shown above 
will process your documents through troff with an output device type 
appropriate to the printer you will be using.  \



Add this preference only when you need to include one of the troff 
pre-processors (e.g. pic, eqn, tbl) in your formatting pipeline.  Troff, or 
any one of the troff pre-processors which has a -T switch, should use 
$PRINTERTYPE to automatically select an output device type appropriate for 
the printer you have chosen.}}

\leftindent{
}\leftindent{\bold{previewcommand: \italic{string}

pscprintcommand: \italic{string}

printcommand: \italic{string}}

}\leftindent{\leftindent{These three preferences allow the user to specify 
what command to run when printing/previewing.  The preview command states 
what to run when asking to preview a file.  The pscprintcommans is used 
when asking to print a postscript file, and the printcommand is normally 
used when asking to print a ditroff output file.}


}\leftindent{\bold{print.Bodyfont: \italic{Andy12} }\


\leftindent{Sets the font for printing output of all Andrew programs, 
including EZ, Help, and Typescript.  If you do not change the default for 
this preference but have changed the generic\bold{ bodyfont} preference or 
a \bold{\italic{programname}.bodyfont} preference, they will override this 
default of \italic{\bold{Andy12}}.  If you do change from 
\bold{\italic{Andy12 }}here, your choice will override those other bodyfont 
preferences for printed output.  \


}
\bold{print.Copy: \italic{yes}}

\leftindent{Determines whether the printing software puts a copy of files 
for which you request printing into your PrintDir before printing them. 
 With the default setting of "yes," this happens.  If set to "no," files go 
directly from the Andrew File System to the printer.  }\



\bold{print.Delete: }\bold{\italic{yes}} \


\leftindent{Determines what happens to a file in your PrintDir after it is 
printed.  With the default setting of "yes," it is deleted automatically. 
 With a setting of "no," it is not.}


\bold{print.Deliver: \italic{filename }}\


\leftindent{Specifies the name to print on the "File:" line on the cover 
sheet of your printouts.  The default is the name of the file, but you may 
change it to any character string you wish.}

\bold{
print.Duplex: \italic{no}}

\leftindent{Determines whether the printing software processes a document 
for printing on one side of the paper ("simplex") or both sides ("duplex"). 
 The default of "no" makes EZ documents print simplex.  If set to "yes," 
documents will be formatted for a duplex printer, \bold{but} they will 
print out duplex \bold{only if} the printer you choose can do duplex 
printing.  }\



\bold{print.Printdir: }\bold{\italic{your home directory pathname/PrintDir }}\


\leftindent{Specifies the print directory that the system uses to store 
files that are waiting to be loaded into the print queue.  By default it is 
the subdirectory of your home directory called "PrintDir."  You can change 
the pathname to any directory for which you have write access, and/or 
change the name of the directory from "PrintDir" to something else.   If 
you do either of this things, you must of course create a directory by that 
name.}


\bold{print.spooldir:} \bold{\italic{printername}}\bold{

}\leftindent{This preference is obsolete.  Use print.printer instead.

}
\bold{print.printer:} \italic{\bold{printername}}

\leftindent{This entry specifies the name of the printer where your print 
jobs will be sent.  You can override this preference for a particular print 
request using the -P option in ezprint.  See the\italic{  ezprint  }help 
document for details.}

}
\section{Help preferences}


\leftindent{\bold{help}\bold{.searchpath:\italic{ }}\bold{\italic{<full 
path to directory: full path to directory>}}

\leftindent{Provides a path of directories for Help to search in addition 
to the standard help directories.  By default, only the system directories 
are searched.   This preference allows you to put help documents into a 
personal directory and make them available to a small group of users.  For 
example, to include the searchpath for the Computer Club help files (userid 
"cl0x") you would add the following line to your preferences:


\typewriter{help.searchpath: /afs/andrew.cmu.edu/usr0/cl0x/man}


so that whenever they start Help, they will see the information in that 
directory.  You can add as many directories as you like to help.searchpath. 
 Be sure to separate them with colons (:) if you add more than one.  Using 
this preference slows the startup time of Help a little; the more 
directories you add, the slower Help will be when it starts.}


\bold{help.showpanels:\italic{ on}}

\leftindent{Determines whether the Overviews and Programs panels in the 
Help window are automatically visible when you start Help.  They are with 
the default setting of "on."  A setting of "off" means they are not 
visible, but you can expose them later with the \italic{Panels}\italic{ 
}menu card.}}


\leftindent{\bold{help.showoverviews: \italic{on}

help.showhistory: \italic{off}

help.showprograms: \italic{on}}

\leftindent{Determines whether the individual panels are shown when you 
start Help.  If help.showpanels (above) is "off," then none of the panels 
will be shown.  You can always expose a panel by using the options on 
the\italic{ Panels} menu card.}}\leftindent{


\bold{help.ExpandedList: \italic{off}}

\leftindent{When set to "on," Help will start up with the Programs panel 
expanded as if you had done \bold{Expand Programs List} from the menus.}


}\section{FLAMES and Eli preferences}


\leftindent{Flames is a Filtering Language for the Andrew Message System. 
 It is a LISP like language that you can learn about in the  \italic{flames 
 }help file.}


\leftindent{\bold{flamespath: \italic{<full path the directory:full path to 
directory>}

elipath: \italic{<full path the directory:full path to directory>}}

\leftindent{These preferences are read by the (load) command in FLAMES. 
 For example, the command (load "foo") with the following preferences


\typewriter{flamespath: 
/afs/andrew.cmu.edu/usr1/jbRo/flames:/usr/andrew/lib/flames

elipath: /afs/andrew.cmu.edu/usr1/jbRo/eli:/usr/andrew/lib/eli}}}\example{


}\leftindent{\leftindent{causes FLAMES to search for files to be loaded in 
the following places, in the following order, and load the first file it 
finds:}}


\leftindent{\leftindent{/afs/andrew.cmu.edu/usr1/jbRo/flames/foo

/afs/andrew.cmu.edu/usr1/jbRo/flames/foo.flames

/usr/andrew/lib/flames/foo

/usr/andrew/lib/flames/foo.flames

/afs/andrew.cmu.edu/usr1/jbRo/eli/foo

/afs/andrew.cmu.edu/usr1/jbRo/eli/foo.eli

/usr/andrew/lib/eli/foo

/usr/andrew/lib/eli/foo.eli}}


\leftindent{Because FLAMES only loads the first library file it finds, if 
you want to use more than one library you must include a separate load 
statement for each library.}


\section{Champ preferences}


\leftindent{\italic{Champ} is a calendar system for keeping track of daily 
and monthly events.  The following preference allows you to include events 
from more than one source.  For instance, you could keep personal events in 
your own file, and also reference the file containing events for a work 
group you belong to.  See the  \italic{champ}  and 
 \italic{champ-events-file}  help documents for details. }\



\leftindent{\bold{champpath: \italic{<full pathname to 
file/events.champ:full pathname to file/events.champ> }}\


\leftindent{Directs Champ to read the files specified and record all of 
them on your calendar.  The usual name for each file is "events.champ," but 
you can change that by replacing \bold{\italic{events}} with another 
filename.  }}\



\section{Adew preferences}


\leftindent{These preferences are for  \italic{adew} , the programming 
environment that allows rapid prototyping and easy access to ATK objects.


\bold{ValueFile:\italic{filename}}

\leftindent{Allows the specification of an alternate file to be displayed 
by the Init Value Window menu option. Any Arbcon created file may be used. 
The default is $ANDREWDIR/lib/arbiters/vallist.

}
\bold{ObViewList:\italic{filename}}

\leftindent{Allows the specification of an alternate list of objects and 
views for inclusion in the Object <View> list, i.e. the list of objects 
that can be created with the arbcon.}


\bold{IgnoreDefaultViewlist:\italic{no}}

\leftindent{If "yes," only the user specified ObViewList above will be 
used. If false, the objects in the ObViewList will be added to those shown 
by default. The default is "no".}}

\section{
Bush preferences}


\leftindent{\bold{bush.editors: \italic{ez:zip:emacs}}

\leftindent{The default set of editors to be used in the bush prompt for 
setting the current editor.  A colon seperated list of editor names.}}


\section{Ness Preferences}


\leftindent{Ness is an Andrew programming language you can learn more about 
by reading the  \italic{ness } help file.}


\leftindent{\bold{NessUseDialogBoxInsteadOfWarning:\italic{ off}}

\leftindent{If this option is off, every script is wrapped with a warning 
notice describing the possible consequences of allowing a Ness to execute 
and providing options to enable it.  When you have experience with Ness and 
understand the (remote, but) potential danger, you can set this preference. 
 Thereafter when Ness scripts appear a dialog box is displayed each time a 
script is first encountered in a document or application.  Default value is 
\italic{off}.}


\bold{NessPath:\italic{~/nesslib:/usr/andrew/lib/ness}}

\leftindent{Ordinarily, Ness searches for Ness library function definitions 
in /usr/andrew/lib/ness.  To search in alternative directories, the 
NessPath preference can be specified with a value of a colon-separated list 
of directories.  In the example value shown, searches for files will begin 
in the directory 'nesslib' of the user's home directory and will proceed 
next to the standard system directory.  \



Warning: Putting a directory in your NessPath means that Ness programs in 
.n files in that directory can be compiled and executed whenever 
referenced.  No visible warning is given to you that the files are being 
called.


}\bold{ness.includepath: 
\italic{.:/usr/include:$ANDREWDIR/include:$ANDREWDIR/include/atk}}

\leftindent{Used in Ness to generate a collection of CPP ``-I'' options to 
find out about an ATK type.}}


\section{Link and pushbutton preference}


\leftindent{These preferences refer to the \italic{ linkinset  }object that 
can be used to create hypertext links between files, and the pushbutton 
inset, which is non-functional.}


\leftindent{\bold{linkstyle: \italic{2}}\typewriter{

}\bold{pushbuttonstyle: \italic{2}}\leftindent{

Link (the link inset) and Pushbutton (the pushbutton inset) share the same 
style codes.  They are:


0 - Plain text, designed to set in line and look like regular text.

1- Boxed Rectangle, looks like a flat button.

2- 3-D-looking pushbutton.

3- Rounded Rectangle (flat) -- DO NOT USE THIS STYLE!


You can change link styles on a global or per-application basis only.  You 
cannot, for instance, change the way links appear on a document or per-link 
basis.}}


\section{Related tools}  \



If you want to see a tutorial on changing your preferences, choose 
\bold{Show Tutorial }from the Help menus.


Select (highlight) one of the italicized names and choose "Show Help on 
Selected Word" from the pop-up menu to see the help file for:


	\leftindent{\italic{\helptopic{color}

\helptopic{templates}}

\helptopic{\italic{EZ}}

\helptopic{\italic{AMS}}  (Andrew Message System)

\helptopic{\italic{typescript\helptopic{\italic{

console}}}}

\helptopic{\italic{raster}}

\helptopic{\italic{zip}}

\helptopic{\italic{ezprint}}

\helptopic{\italic{help}}

\helptopic{\italic{flames}}

\helptopic{\italic{champ}}

\helptopic{\italic{adew}}

\helptopic{\italic{bush}}

\helptopic{\italic{ness}}

\helptopic{\italic{link}}

\helptopic{\italic{scroll}}

\helptopic{\italic{menubar}}

\helptopic{\italic{dialogs}}

}

\begindata{bp,537879864}
\enddata{bp,537879864}
\view{bpv,537879864,0,0,0}
Copyright 1992 Carnegie Mellon University and IBM.  All rights reserved.

\smaller{\smaller{$Disclaimer: 

Permission to use, copy, modify, and distribute this software and its 

documentation for any purpose is hereby granted without fee, 

provided that the above copyright notice appear in all copies and that 

both that copyright notice, this permission notice, and the following 

disclaimer appear in supporting documentation, and that the names of 

IBM, Carnegie Mellon University, and other copyright holders, not be 

used in advertising or publicity pertaining to distribution of the software 

without specific, written prior permission.



IBM, CARNEGIE MELLON UNIVERSITY, AND THE OTHER COPYRIGHT HOLDERS 

DISCLAIM ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING 

ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.  IN NO EVENT 

SHALL IBM, CARNEGIE MELLON UNIVERSITY, OR ANY OTHER COPYRIGHT HOLDER 

BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY 

DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, 

WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS 

ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE 

OF THIS SOFTWARE.

 $

}}\enddata{text,537590936}
