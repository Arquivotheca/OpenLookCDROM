\begindata{text,539470888}
\textdsversion{12}
\template{default}
\define{global
}
\center{\bold{\bigger{Index to Library Functions in ELI, the Embedded Lisp 
Interpreter}

by Bob Glickstein

25-Jul-1988}}


\heading{Introduction}

This document is a companion to Eli-FunCalls.d.  It contains an index to 
function names keyed on brief subject lines, much like the index for the Unix 
man pages.  Actually, there are two indices here: the first is to functions 
you are likely to need, and the second is to functions you aren't likely to 
need.  Functions that you are likely to need all have names beginning with a 
capital "Eli"; others have names beginning with a lower-case "eli".  In cases 
where two functions are described as doing the same thing:


\display{bind a cons list of values to a cons list of symbols / EliBind

bind a cons list of values to a cons list of symbols / eliBind}


you should usually use the one with the capital-letter name.  The name of the 
function is always the last word on a line.


\formatnote{.bp}


\heading{Index to Functions You Are Likely to Need}


\smaller{ASCII form in a string - put a sexp into  / EliSPutSexp

ASCII sexp in a file - parse an  / EliFGetSexp

ASCII sexp in a string - parse an  / EliSGetSexp

ASCII sexp on the standard input - parse an  / EliGetSexp

ELI - get the current version number of  / EliVersion

NIL or the empty list - find out if a sexp is  / EliNilP

all-upper-case in place - convert a string to  / EliUpCaseStr

allocate a new cons cell -  / EliCons_GetNew

allocate a new sexp node -  / EliSexp_GetNew

allocate a new string node -  / EliStr_GetNew

allocate a new symbol node whose name is in the given string node -  / 
EliSym_GetNew_StrNode

allocate a new symbol node whose name is the given string -  / 
EliSym_GetNew_String

allocate space for the result - evaluate a sexp and  / EliEval

allocate space in a common, static character buffer -  / EliStringOpBuf

appending a sexp - extend a cons list by  / EliAddToList

array - place the sexps in a cons list into an  / EliGetListCars

array of sexps - construct a cons list from an  / EliListFromCars

available for error-recovery - find out if a bad sexp is  / EliErr_BadSexpP

backtrace exists in a namespace - find out if a  / EliErr_BacktraceP

bad sexp is available for error-recovery - find out if a  / EliErr_BadSexpP

between two sexps - strict equality test  / EliSexpEq

between two sexps - weak equality test  / EliSexpEqual

bind a cons cell to a sexp -  / EliSexp_SetCons

bind a cons list of values to a cons list of symbols -  / EliBind

bind a function node to a sexp -  / EliSexp_SetFn

bind a function to a symbol -  / EliSym_BindFn

bind a sexp to it - find or make a symbol in a namespace's symbol table and  / 
EliSymTab_FindOrMakeAndBind

bind a sexp to it - name a symbol in a namespace's symbol table and  / 
EliSymTab_MakeAndBind

bind a sexp to the car of a cons cell -  / EliCons_BindCar

bind a sexp to the cdr of a cons cell -  / EliCons_BindCdr

bind a sexp value to a symbol -  / EliSym_BindSexp

bind a string node to a sexp -  / EliSexp_SetStr

bind a symbol node to a sexp -  / EliSexp_SetSym

bind an integer to a sexp -  / EliSexp_SetInt

bind them to a cons list of symbols - evaluate a cons list of values and  / 
EliEvalAndBind

bound to a symbol - get the function node  / EliSym_GetFn

bound to a symbol as its name - get the string node  / EliSym_GetName

bound to a symbol as its value - get the sexp node  / EliSym_GetSexp

buffer - allocate space in a common, static character  / EliStringOpBuf

car of a cons cell - bind a sexp to the  / EliCons_BindCar

car of a cons cell - get the  / EliCons_GetCar

case in place - convert a string to all-upper- / EliUpCaseStr

catching function in a namespace - declare the error- / EliSetCatchFn

catching mask for a namespace - get the error  / EliCatchMask

catching mask in a namespace - declare the error- / EliSetCatchMask

caused the current error in a namespace - get the sexp which  / EliErr_BadSexp

cdr of a cons cell - bind a sexp to the  / EliCons_BindCdr

cdr of a cons cell - get the  / EliCons_GetCdr

cell - allocate a new cons  / EliCons_GetNew

cell - bind a sexp to the car of a cons  / EliCons_BindCar

cell - bind a sexp to the cdr of a cons  / EliCons_BindCdr

cell - get the car of a cons  / EliCons_GetCar

cell - get the cdr of a cons  / EliCons_GetCdr

cell - get the cons cell following this cons  / EliGetNextCell

cell following this cons cell - get the cons  / EliGetNextCell

cell in a list - get the last cons  / EliLastCell

cell in a sexp - get the cons  / EliSexp_GetCons

cell is the last in a cons list - find out of this cons  / EliLastCellP

cell to a sexp - bind a cons  / EliSexp_SetCons

character buffer - allocate space in a common, static  / EliStringOpBuf

checking on a list of values - perform controlled evaluation and type- / 
EliProcessList

clear a namespace's error flag and purge the trace stack -  / EliReset

clear a namespace's error-flag -  / EliClearErr

code - get descriptive string for an error  / EliErrStr

code for the current error in a namespace - get the error  / EliErr_ErrCode

common, static character buffer - allocate space in a  / EliStringOpBuf

cons cell - allocate a new  / EliCons_GetNew

cons cell - bind a sexp to the car of a  / EliCons_BindCar

cons cell - bind a sexp to the cdr of a  / EliCons_BindCdr

cons cell - get the car of a  / EliCons_GetCar

cons cell - get the cdr of a  / EliCons_GetCdr

cons cell - get the cons cell following this  / EliGetNextCell

cons cell following this cons cell - get the  / EliGetNextCell

cons cell in a list - get the last  / EliLastCell

cons cell in a sexp - get the  / EliSexp_GetCons

cons cell is the last in a cons list - find out of this  / EliLastCellP

cons cell to a sexp - bind a  / EliSexp_SetCons

cons list - evaluate a cons list of values and return the results in a  / 
EliEvalListToList

cons list - find out of this cons cell is the last in a  / EliLastCellP

cons list - get the top level length of a  / EliListLen

cons list by appending a sexp - extend a  / EliAddToList

cons list from an array of sexps - construct a  / EliListFromCars

cons list into an array - place the sexps in a  / EliGetListCars

cons list of symbols - bind a cons list of values to a  / EliBind

cons list of symbols - evaluate a cons list of values and bind them to a  / 
EliEvalAndBind

cons list of values and bind them to a cons list of symbols - evaluate a  / 
EliEvalAndBind

cons list of values and return the results in a cons list - evaluate a  / 
EliEvalListToList

cons list of values to a cons list of symbols - bind a  / EliBind

construct a cons list from an array of sexps -  / EliListFromCars

content of a sexp node - get the type of the  / EliSexp_GetType

controlled evaluation and type-checking on a list of values - perform  / 
EliProcessList

convert a string to all-upper-case in place -  / EliUpCaseStr

copy of a string - malloc a new  / EliSaveString

copy one sexp's referrent to another sexp -  / EliSexp_SetSexp

create a new string node from a string in the string table of a namespace -  / 
EliStringTable_Make

create a new symbol node from a string in the symbol table of a namespace -  / 
EliSymTab_Make

current error in a namespace - get list of expressions leading up to  / 
EliErr_Backtrace

current error in a namespace - get the error code for the  / EliErr_ErrCode

current error in a namespace - get the location string for the  / 
EliErr_ErrLoc

current error in a namespace - get the sexp which caused the  / EliErr_BadSexp

current version number of ELI - get the  / EliVersion

debugging message - get the history number of the nth  / EliDebugHistNum

debugging message - get the namespace id of the nth  / EliDebugStateNum

debugging message - get the nth  / EliDebugMessage

debugging message - log a  / EliDebug

debugging messages to a file - print  / EliDebugFPrint

debugging messages to a file - print recent  / EliDebugFPrintSince

declare the error-catching function in a namespace -  / EliSetCatchFn

declare the error-catching mask in a namespace -  / EliSetCatchMask

define a primitive in a namespace -  / EliPrimDef

descriptive string for an error code - get  / EliErrStr

empty list - find out if a sexp is NIL or the  / EliNilP

equality test between two sexps - strict  / EliSexpEq

equality test between two sexps - weak  / EliSexpEqual

error catching mask for a namespace - get the  / EliCatchMask

error code - get descriptive string for an  / EliErrStr

error code for the current error in a namespace - get the  / EliErr_ErrCode

error flag and purge the trace stack - clear a namespace's  / EliReset

error handling function for a namespace - get the  / EliCatchFn

error has been flagged in a namespace - find out if an  / EliErr_ErrP

error in a namespace - flag an  / EliError

error in a namespace - get list of expressions leading up to current  / 
EliErr_Backtrace

error in a namespace - get the error code for the current  / EliErr_ErrCode

error in a namespace - get the location string for the current  / 
EliErr_ErrLoc

error in a namespace - get the sexp which caused the current  / EliErr_BadSexp

error node for a namespace - get the  / EliErrNode

error-catching function in a namespace - declare the  / EliSetCatchFn

error-catching mask in a namespace - declare the  / EliSetCatchMask

error-flag - clear a namespace's  / EliClearErr

error-recovery - find out if a bad sexp is available for  / EliErr_BadSexpP

evaluate a cons list of values and bind them to a cons list of symbols -  / 
EliEvalAndBind

evaluate a cons list of values and return the results in a cons list -  / 
EliEvalListToList

evaluate a sexp and allocate space for the result -  / EliEval

evaluation and type-checking on a list of values - perform controlled  / 
EliProcessList

evaluation stack - find a symbol in a namespace's  / EliEvalStk_FindSym

evaluation stack - pop a specified number of items off of a namespace's  / 
EliEvalStk_PopN

evaluation stack for a namespace - get the  / EliEvalStack

evaluation stack nodes to the malloc pool - return  / EliFreeAllEvalStackNodes

exists in a namespace - find out if a backtrace  / EliErr_BacktraceP

expressions leading up to current error in a namespace - get list of  / 
EliErr_Backtrace

extend a cons list by appending a sexp -  / EliAddToList

file - parse an ASCII sexp in a  / EliFGetSexp

file - print debugging messages to a  / EliDebugFPrint

file - print recent debugging messages to a  / EliDebugFPrintSince

find a string in a namespace's string table -  / EliStringTable_Find

find a symbol in a namespace's evaluation stack -  / EliEvalStk_FindSym

find a symbol in a namespace's symbol table -  / EliSymTab_Find

find a symbol in a namespace, obeying scope rules -  / EliFindSym

find or make a string in a namespace's string table -  / 
EliStringTable_FindOrMake

find or make a symbol in a namespace's symbol table -  / EliSymTab_FindOrMake

find or make a symbol in a namespace's symbol table and bind a sexp to it -  / 
EliSymTab_FindOrMakeAndBind

find out if a backtrace exists in a namespace -  / EliErr_BacktraceP

find out if a bad sexp is available for error-recovery -  / EliErr_BadSexpP

find out if a sexp is NIL or the empty list -  / EliNilP

find out if an error has been flagged in a namespace -  / EliErr_ErrP

find out of this cons cell is the last in a cons list -  / EliLastCellP

flag - clear a namespace's error- / EliClearErr

flag an error in a namespace -  / EliError

flag and purge the trace stack - clear a namespace's error  / EliReset

flagged in a namespace - find out if an error has been  / EliErr_ErrP

following this cons cell - get the cons cell  / EliGetNextCell

form - interpret a string from internal form to input  / EliUnParseStr

form - interpret a string in input form to internal  / EliParseStr

form in a string - put a sexp into ASCII  / EliSPutSexp

form to input form - interpret a string from internal  / EliUnParseStr

form to internal form - interpret a string in input  / EliParseStr

function for a namespace - get the error handling  / EliCatchFn

function in a namespace - declare the error-catching  / EliSetCatchFn

function node bound to a symbol - get the  / EliSym_GetFn

function node in a sexp - get the  / EliSexp_GetFn

function node to a sexp - bind a  / EliSexp_SetFn

function to a symbol - bind a  / EliSym_BindFn

given string - allocate a new symbol node whose name is the  / 
EliSym_GetNew_String

given string node - allocate a new symbol node whose name is in the  / 
EliSym_GetNew_StrNode

handling function for a namespace - get the error  / EliCatchFn

history number of the nth debugging message - get the  / EliDebugHistNum

id of a namespace - get the namespace  / EliGetStateNum

id of the nth debugging message - get the namespace  / EliDebugStateNum

initialize a namespace -  / EliInit

input - parse an ASCII sexp on the standard  / EliGetSexp

input form - interpret a string from internal form to  / EliUnParseStr

input form to internal form - interpret a string in  / EliParseStr

integer in a sexp - get the  / EliSexp_GetInt

integer to a sexp - bind an  / EliSexp_SetInt

internal form - interpret a string in input form to  / EliParseStr

internal form to input form - interpret a string from  / EliUnParseStr

interpret a string from internal form to input form -  / EliUnParseStr

interpret a string in input form to internal form -  / EliParseStr

items off of a namespace's evaluation stack - pop a specified number of  / 
EliEvalStk_PopN

lambda symbol from a namespace - get the  / EliLambdaSym

lambdaq symbol from a namespace - get the  / EliLambdaqSym

lambdav symbol from a namespace - get the  / EliLambdavSym

lambdavq symbol from a namespace - get the  / EliLambdavqSym

leading up to current error in a namespace - get list of expressions  / 
EliErr_Backtrace

length of a cons list - get the top level  / EliListLen

level length of a cons list - get the top  / EliListLen

list - evaluate a cons list of values and return the results in a cons  / 
EliEvalListToList

list - find out if a sexp is NIL or the empty  / EliNilP

list - find out of this cons cell is the last in a cons  / EliLastCellP

list - get the last cons cell in a  / EliLastCell

list - get the top level length of a cons  / EliListLen

list by appending a sexp - extend a cons  / EliAddToList

list from an array of sexps - construct a cons  / EliListFromCars

list into an array - place the sexps in a cons  / EliGetListCars

list of expressions leading up to current error in a namespace - get  / 
EliErr_Backtrace

list of symbols - bind a cons list of values to a cons  / EliBind

list of symbols - evaluate a cons list of values and bind them to a cons  / 
EliEvalAndBind

list of values - perform controlled evaluation and type-checking on a  / 
EliProcessList

list of values and bind them to a cons list of symbols - evaluate a cons  / 
EliEvalAndBind

list of values and return the results in a cons list - evaluate a cons  / 
EliEvalListToList

list of values to a cons list of symbols - bind a cons  / EliBind

location string for the current error in a namespace - get the  / 
EliErr_ErrLoc

log a debugging message -  / EliDebug

malloc a new copy of a string -  / EliSaveString

malloc pool - return evaluation stack nodes to the  / EliFreeAllEvalStackNodes

malloc pool - return trace stack node to the  / EliFreeAllTraceStackNodes

mask for a namespace - get the error catching  / EliCatchMask

mask in a namespace - declare the error-catching  / EliSetCatchMask

message - get the history number of the nth debugging  / EliDebugHistNum

message - get the namespace id of the nth debugging  / EliDebugStateNum

message - get the nth debugging  / EliDebugMessage

message - log a debugging  / EliDebug

messages to a file - print debugging  / EliDebugFPrint

messages to a file - print recent debugging  / EliDebugFPrintSince

name - get the string node bound to a symbol as its  / EliSym_GetName

name a symbol in a namespace's symbol table and bind a sexp to it -  / 
EliSymTab_MakeAndBind

name is in the given string node - allocate a new symbol node whose  / 
EliSym_GetNew_StrNode

name is the given string - allocate a new symbol node whose  / 
EliSym_GetNew_String

namespace - create a new string node from a string in the string table of a  / 
EliStringTable_Make

namespace - create a new symbol node from a string in the symbol table of a  / 
EliSymTab_Make

namespace - declare the error-catching function in a  / EliSetCatchFn

namespace - declare the error-catching mask in a  / EliSetCatchMask

namespace - define a primitive in a  / EliPrimDef

namespace - find out if a backtrace exists in a  / EliErr_BacktraceP

namespace - find out if an error has been flagged in a  / EliErr_ErrP

namespace - flag an error in a  / EliError

namespace - get list of expressions leading up to current error in a  / 
EliErr_Backtrace

namespace - get the error catching mask for a  / EliCatchMask

namespace - get the error code for the current error in a  / EliErr_ErrCode

namespace - get the error handling function for a  / EliCatchFn

namespace - get the error node for a  / EliErrNode

namespace - get the evaluation stack for a  / EliEvalStack

namespace - get the lambda symbol from a  / EliLambdaSym

namespace - get the lambdaq symbol from a  / EliLambdaqSym

namespace - get the lambdav symbol from a  / EliLambdavSym

namespace - get the lambdavq symbol from a  / EliLambdavqSym

namespace - get the location string for the current error in a  / 
EliErr_ErrLoc

namespace - get the namespace id of a  / EliGetStateNum

namespace - get the nil symbol from a  / EliNilSym

namespace - get the quote symbol from a  / EliQuoteSym

namespace - get the sexp which caused the current error in a  / EliErr_BadSexp

namespace - get the string table of a  / EliStringTable

namespace - get the symbol table for a  / EliSymbolTable

namespace - get the t symbol for a  / EliTSym

namespace - get the temporary symbol table for a  / EliTempSymTable

namespace - get the trace stack for a  / EliTraceStk

namespace - initialize a  / EliInit

namespace id of a namespace - get the  / EliGetStateNum

namespace id of the nth debugging message - get the  / EliDebugStateNum

namespace's error flag and purge the trace stack - clear a  / EliReset

namespace's error-flag - clear a  / EliClearErr

namespace's evaluation stack - find a symbol in a  / EliEvalStk_FindSym

namespace's evaluation stack - pop a specified number of items off of a  / 
EliEvalStk_PopN

namespace's string table - find a string in a  / EliStringTable_Find

namespace's string table - find or make a string in a  / 
EliStringTable_FindOrMake

namespace's symbol table - find a symbol in a  / EliSymTab_Find

namespace's symbol table - find or make a symbol in a  / EliSymTab_FindOrMake

namespace's symbol table and bind a sexp to it - find or make a symbol in a  / 
EliSymTab_FindOrMakeAndBind

namespace's symbol table and bind a sexp to it - name a symbol in a  / 
EliSymTab_MakeAndBind

namespace's trace stack - pop all objects from a  / EliTraceStk_Purge

namespace, obeying scope rules - find a symbol in a  / EliFindSym

new cons cell - allocate a  / EliCons_GetNew

new copy of a string - malloc a  / EliSaveString

new sexp node - allocate a  / EliSexp_GetNew

new string node - allocate a  / EliStr_GetNew

new string node from a string in the string table of a namespace - create a  / 
EliStringTable_Make

new symbol node from a string in the symbol table of a namespace - create a  / 
EliSymTab_Make

new symbol node whose name is in the given string node - allocate a  / 
EliSym_GetNew_StrNode

new symbol node whose name is the given string - allocate a  / 
EliSym_GetNew_String

nil symbol from a namespace - get the  / EliNilSym

node - allocate a new sexp  / EliSexp_GetNew

node - allocate a new string  / EliStr_GetNew

node - allocate a new symbol node whose name is in the given string  / 
EliSym_GetNew_StrNode

node - get the string of a string  / EliStr_GetString

node - get the type of the content of a sexp  / EliSexp_GetType

node bound to a symbol - get the function  / EliSym_GetFn

node bound to a symbol as its name - get the string  / EliSym_GetName

node bound to a symbol as its value - get the sexp  / EliSym_GetSexp

node for a namespace - get the error  / EliErrNode

node from a string in the string table of a namespace - create a new string  / 
EliStringTable_Make

node from a string in the symbol table of a namespace - create a new symbol  / 
EliSymTab_Make

node in a sexp - get the function  / EliSexp_GetFn

node to a sexp - bind a function  / EliSexp_SetFn

node to a sexp - bind a string  / EliSexp_SetStr

node to a sexp - bind a symbol  / EliSexp_SetSym

node to the malloc pool - return trace stack  / EliFreeAllTraceStackNodes

node whose name is in the given string node - allocate a new symbol  / 
EliSym_GetNew_StrNode

node whose name is the given string - allocate a new symbol  / 
EliSym_GetNew_String

nodes to the malloc pool - return evaluation stack  / EliFreeAllEvalStackNodes

nth debugging message - get the  / EliDebugMessage

nth debugging message - get the history number of the  / EliDebugHistNum

nth debugging message - get the namespace id of the  / EliDebugStateNum

number of ELI - get the current version  / EliVersion

number of items off of a namespace's evaluation stack - pop a specified  / 
EliEvalStk_PopN

number of the nth debugging message - get the history  / EliDebugHistNum

obeying scope rules - find a symbol in a namespace,  / EliFindSym

objects from a namespace's trace stack - pop all  / EliTraceStk_Purge

output - print a sexp on the standard  / EliDisplaySexp

parse an ASCII sexp in a file -  / EliFGetSexp

parse an ASCII sexp in a string -  / EliSGetSexp

parse an ASCII sexp on the standard input -  / EliGetSexp

perform controlled evaluation and type-checking on a list of values -  / 
EliProcessList

place - convert a string to all-upper-case in  / EliUpCaseStr

place the sexps in a cons list into an array -  / EliGetListCars

pool - return evaluation stack nodes to the malloc  / EliFreeAllEvalStackNodes

pool - return trace stack node to the malloc  / EliFreeAllTraceStackNodes

pop a specified number of items off of a namespace's evaluation stack -  / 
EliEvalStk_PopN

pop all objects from a namespace's trace stack -  / EliTraceStk_Purge

primitive in a namespace - define a  / EliPrimDef

print a sexp on the standard output -  / EliDisplaySexp

print debugging messages to a file -  / EliDebugFPrint

print recent debugging messages to a file -  / EliDebugFPrintSince

purge the trace stack - clear a namespace's error flag and  / EliReset

put a sexp into ASCII form in a string -  / EliSPutSexp

quote symbol from a namespace - get the  / EliQuoteSym

recent debugging messages to a file - print  / EliDebugFPrintSince

recovery - find out if a bad sexp is available for error- / EliErr_BadSexpP

referrent to another sexp - copy one sexp's  / EliSexp_SetSexp

result - evaluate a sexp and allocate space for the  / EliEval

results in a cons list - evaluate a cons list of values and return the  / 
EliEvalListToList

return evaluation stack nodes to the malloc pool -  / EliFreeAllEvalStackNodes

return the results in a cons list - evaluate a cons list of values and  / 
EliEvalListToList

return trace stack node to the malloc pool -  / EliFreeAllTraceStackNodes

rules - find a symbol in a namespace, obeying scope  / EliFindSym

scope rules - find a symbol in a namespace, obeying  / EliFindSym

sexp - bind a cons cell to a  / EliSexp_SetCons

sexp - bind a function node to a  / EliSexp_SetFn

sexp - bind a string node to a  / EliSexp_SetStr

sexp - bind a symbol node to a  / EliSexp_SetSym

sexp - bind an integer to a  / EliSexp_SetInt

sexp - copy one sexp's referrent to another  / EliSexp_SetSexp

sexp - extend a cons list by appending a  / EliAddToList

sexp - get the cons cell in a  / EliSexp_GetCons

sexp - get the function node in a  / EliSexp_GetFn

sexp - get the integer in a  / EliSexp_GetInt

sexp - get the string in a  / EliSexp_GetStr

sexp - get the symbol in a  / EliSexp_GetSym

sexp and allocate space for the result - evaluate a  / EliEval

sexp in a file - parse an ASCII  / EliFGetSexp

sexp in a string - parse an ASCII  / EliSGetSexp

sexp into ASCII form in a string - put a  / EliSPutSexp

sexp is NIL or the empty list - find out if a  / EliNilP

sexp is available for error-recovery - find out if a bad  / EliErr_BadSexpP

sexp node - allocate a new  / EliSexp_GetNew

sexp node - get the type of the content of a  / EliSexp_GetType

sexp node bound to a symbol as its value - get the  / EliSym_GetSexp

sexp on the standard input - parse an ASCII  / EliGetSexp

sexp on the standard output - print a  / EliDisplaySexp

sexp to it - find or make a symbol in a namespace's symbol table and bind a  / 
EliSymTab_FindOrMakeAndBind

sexp to it - name a symbol in a namespace's symbol table and bind a  / 
EliSymTab_MakeAndBind

sexp to the car of a cons cell - bind a  / EliCons_BindCar

sexp to the cdr of a cons cell - bind a  / EliCons_BindCdr

sexp value to a symbol - bind a  / EliSym_BindSexp

sexp which caused the current error in a namespace - get the  / EliErr_BadSexp

sexp's referrent to another sexp - copy one  / EliSexp_SetSexp

sexps - construct a cons list from an array of  / EliListFromCars

sexps - strict equality test between two  / EliSexpEq

sexps - weak equality test between two  / EliSexpEqual

sexps in a cons list into an array - place the  / EliGetListCars

space for the result - evaluate a sexp and allocate  / EliEval

space in a common, static character buffer - allocate  / EliStringOpBuf

specified number of items off of a namespace's evaluation stack - pop a  / 
EliEvalStk_PopN

stack - clear a namespace's error flag and purge the trace  / EliReset

stack - find a symbol in a namespace's evaluation  / EliEvalStk_FindSym

stack - pop a specified number of items off of a namespace's evaluation  / 
EliEvalStk_PopN

stack - pop all objects from a namespace's trace  / EliTraceStk_Purge

stack for a namespace - get the evaluation  / EliEvalStack

stack for a namespace - get the trace  / EliTraceStk

stack node to the malloc pool - return trace  / EliFreeAllTraceStackNodes

stack nodes to the malloc pool - return evaluation  / EliFreeAllEvalStackNodes

standard input - parse an ASCII sexp on the  / EliGetSexp

standard output - print a sexp on the  / EliDisplaySexp

static character buffer - allocate space in a common,  / EliStringOpBuf

strict equality test between two sexps -  / EliSexpEq

string - allocate a new symbol node whose name is the given  / 
EliSym_GetNew_String

string - malloc a new copy of a  / EliSaveString

string - parse an ASCII sexp in a  / EliSGetSexp

string - put a sexp into ASCII form in a  / EliSPutSexp

string for an error code - get descriptive  / EliErrStr

string for the current error in a namespace - get the location  / 
EliErr_ErrLoc

string from internal form to input form - interpret a  / EliUnParseStr

string in a namespace's string table - find a  / EliStringTable_Find

string in a namespace's string table - find or make a  / 
EliStringTable_FindOrMake

string in a sexp - get the  / EliSexp_GetStr

string in input form to internal form - interpret a  / EliParseStr

string in the string table of a namespace - create a new string node from a  / 
EliStringTable_Make

string in the symbol table of a namespace - create a new symbol node from a  / 
EliSymTab_Make

string node - allocate a new  / EliStr_GetNew

string node - allocate a new symbol node whose name is in the given  / 
EliSym_GetNew_StrNode

string node - get the string of a  / EliStr_GetString

string node bound to a symbol as its name - get the  / EliSym_GetName

string node from a string in the string table of a namespace - create a new  / 
EliStringTable_Make

string node to a sexp - bind a  / EliSexp_SetStr

string of a string node - get the  / EliStr_GetString

string table - find a string in a namespace's  / EliStringTable_Find

string table - find or make a string in a namespace's  / 
EliStringTable_FindOrMake

string table of a namespace - create a new string node from a string in the  / 
EliStringTable_Make

string table of a namespace - get the  / EliStringTable

string to all-upper-case in place - convert a  / EliUpCaseStr

symbol - bind a function to a  / EliSym_BindFn

symbol - bind a sexp value to a  / EliSym_BindSexp

symbol - get the function node bound to a  / EliSym_GetFn

symbol as its name - get the string node bound to a  / EliSym_GetName

symbol as its value - get the sexp node bound to a  / EliSym_GetSexp

symbol for a namespace - get the t  / EliTSym

symbol from a namespace - get the lambda  / EliLambdaSym

symbol from a namespace - get the lambdaq  / EliLambdaqSym

symbol from a namespace - get the lambdav  / EliLambdavSym

symbol from a namespace - get the lambdavq  / EliLambdavqSym

symbol from a namespace - get the nil  / EliNilSym

symbol from a namespace - get the quote  / EliQuoteSym

symbol in a namespace's evaluation stack - find a  / EliEvalStk_FindSym

symbol in a namespace's symbol table - find a  / EliSymTab_Find

symbol in a namespace's symbol table - find or make a  / EliSymTab_FindOrMake

symbol in a namespace's symbol table and bind a sexp to it - find or make a  / 
EliSymTab_FindOrMakeAndBind

symbol in a namespace's symbol table and bind a sexp to it - name a  / 
EliSymTab_MakeAndBind

symbol in a namespace, obeying scope rules - find a  / EliFindSym

symbol in a sexp - get the  / EliSexp_GetSym

symbol node from a string in the symbol table of a namespace - create a new  / 
EliSymTab_Make

symbol node to a sexp - bind a  / EliSexp_SetSym

symbol node whose name is in the given string node - allocate a new  / 
EliSym_GetNew_StrNode

symbol node whose name is the given string - allocate a new  / 
EliSym_GetNew_String

symbol table - find a symbol in a namespace's  / EliSymTab_Find

symbol table - find or make a symbol in a namespace's  / EliSymTab_FindOrMake

symbol table and bind a sexp to it - find or make a symbol in a namespace's  / 
EliSymTab_FindOrMakeAndBind

symbol table and bind a sexp to it - name a symbol in a namespace's  / 
EliSymTab_MakeAndBind

symbol table for a namespace - get the  / EliSymbolTable

symbol table for a namespace - get the temporary  / EliTempSymTable

symbol table of a namespace - create a new symbol node from a string in the  / 
EliSymTab_Make

symbols - bind a cons list of values to a cons list of  / EliBind

symbols - evaluate a cons list of values and bind them to a cons list of  / 
EliEvalAndBind

t symbol for a namespace - get the  / EliTSym

table - find a string in a namespace's string  / EliStringTable_Find

table - find a symbol in a namespace's symbol  / EliSymTab_Find

table - find or make a string in a namespace's string  / 
EliStringTable_FindOrMake

table - find or make a symbol in a namespace's symbol  / EliSymTab_FindOrMake

table and bind a sexp to it - find or make a symbol in a namespace's symbol  / 
EliSymTab_FindOrMakeAndBind

table and bind a sexp to it - name a symbol in a namespace's symbol  / 
EliSymTab_MakeAndBind

table for a namespace - get the symbol  / EliSymbolTable

table for a namespace - get the temporary symbol  / EliTempSymTable

table of a namespace - create a new string node from a string in the string  / 
EliStringTable_Make

table of a namespace - create a new symbol node from a string in the symbol  / 
EliSymTab_Make

table of a namespace - get the string  / EliStringTable

temporary symbol table for a namespace - get the  / EliTempSymTable

test between two sexps - strict equality  / EliSexpEq

test between two sexps - weak equality  / EliSexpEqual

top level length of a cons list - get the  / EliListLen

trace stack - clear a namespace's error flag and purge the  / EliReset

trace stack - pop all objects from a namespace's  / EliTraceStk_Purge

trace stack for a namespace - get the  / EliTraceStk

trace stack node to the malloc pool - return  / EliFreeAllTraceStackNodes

type of the content of a sexp node - get the  / EliSexp_GetType

type-checking on a list of values - perform controlled evaluation and  / 
EliProcessList

upper-case in place - convert a string to all- / EliUpCaseStr

value - get the sexp node bound to a symbol as its  / EliSym_GetSexp

value to a symbol - bind a sexp  / EliSym_BindSexp

values - perform controlled evaluation and type-checking on a list of  / 
EliProcessList

values and bind them to a cons list of symbols - evaluate a cons list of  / 
EliEvalAndBind

values and return the results in a cons list - evaluate a cons list of  / 
EliEvalListToList

values to a cons list of symbols - bind a cons list of  / EliBind

version number of ELI - get the current  / EliVersion

weak equality test between two sexps -  / EliSexpEqual

whose name is in the given string node - allocate a new symbol node  / 
EliSym_GetNew_StrNode

whose name is the given string - allocate a new symbol node  / 
EliSym_GetNew_String

}
\formatnote{.bp}


\heading{Index to Functions You Are Not Likely to Need}


\smaller{ASCII display of a cons list - calculate the number of characters 
required for an  / eliConsStringLen

ASCII form in a given string buffer - put a cons list into  / eliSPutCons_buf

ASCII form in a given string buffer - put a sexp into  / eliSPutSexp_buf

ASCII sexp in a file with no trace - parse an  / eliFGetSexp

ASCII sexp in a file with trace - parse an  / eliFGetSexp_trace

ASCII sexp in a string with no trace - parse an  / eliSGetSexp

ASCII sexp in a string with trace - parse an  / eliSGetSexp_trace

ASCII sexp on the standard input with no trace - parse an  / eliGetSexp

ASCII sexp on the standard input with trace - parse an  / eliGetSexp_trace

LAMBDA list - evaluate a  / eliEvalLambda

LAMBDAQ list - evaluate a  / eliEvalLambdaq

LAMBDAV list - evaluate a  / eliEvalLambdav

LAMBDAVQ list - evaluate a  / eliEvalLambdavq

allocate a new block of bucket nodes -  / eliBucketNode_GetNewBlock

allocate a new block of cons cells -  / eliCons_GetNewBlock

allocate a new block of function nodes -  / eliFn_GetNewBlock

allocate a new block of sexp nodes -  / eliSexp_GetNewBlock

allocate a new block of string nodes -  / eliStr_GetNewBlock

allocate a new block of symbol nodes -  / eliSym_GetNewBlock

allocate a new bucket node with no trace -  / eliBucketNode_GetNew

allocate a new bucket node with trace -  / eliBucketNode_GetNew_trace

allocate a new cons cell with no trace -  / eliCons_GetNew

allocate a new cons cell with trace -  / eliCons_GetNew_trace

allocate a new function node with no trace -  / eliFn_GetNew

allocate a new function node with trace -  / eliFn_GetNew_trace

allocate a new sexp node with no trace -  / eliSexp_GetNew

allocate a new sexp node with trace -  / eliSexp_GetNew_trace

allocate a new string node with no trace -  / eliStr_GetNew

allocate a new string node with trace -  / eliStr_GetNew_trace

allocate a new symbol node with no trace -  / eliSym_GetNew

allocate a new symbol node with trace -  / eliSym_GetNew_trace

allocating space for the result - evaluate a sexp without  / eliEval

any base - calculate the number of digits in an integer in  / eliNumDigits

auxiliary to eliBucket_Find -  / eliBucket_Find_aux

auxiliary to eliDecrRefcount_SexpRef -  / eliDecrRefcount_SexpRef_aux

base - calculate the number of digits in an integer in any  / eliNumDigits

bind a cons list of values to a cons list of symbols -  / eliBind

bind a sexp to it - find or make a symbol in a symbol table and  / 
eliSymTab_FindOrMakeAndBind

bind a value in a symbol table - create a new symbol node and  / 
eliSymTab_MakeAndBind

bind them to a cons list of symbols - evaluate a cons list of values and  / 
eliEvalAndBind

block of bucket nodes - allocate a new  / eliBucketNode_GetNewBlock

block of cons cells - allocate a new  / eliCons_GetNewBlock

block of function nodes - allocate a new  / eliFn_GetNewBlock

block of sexp nodes - allocate a new  / eliSexp_GetNewBlock

block of string nodes - allocate a new  / eliStr_GetNewBlock

block of symbol nodes - allocate a new  / eliSym_GetNewBlock

bucket - delete a bucket node from the  / eliBucket_Delete

bucket - find a bucket node in a  / eliBucket_Find

bucket - initialize a  / eliBucket_Init

bucket - insert a bucket node in a  / eliBucket_Insert

bucket after this bucket node - declare the next node in the  / 
eliBucketNode_SetNext

bucket before this bucket node - declare the previous node in the  / 
eliBucketNode_SetPrev

bucket node - declare the next node in the bucket after this  / 
eliBucketNode_SetNext

bucket node - declare the previous node in the bucket before this  / 
eliBucketNode_SetPrev

bucket node - decrement the reference count of a  / eliBucketNode_DecrRefcount

bucket node - get the "key" field of a  / eliBucketNode_GetKey

bucket node - get the "next" field of a  / eliBucketNode_GetNext

bucket node - get the "previous" field of a  / eliBucketNode_GetPrev

bucket node - get the sexp in a  / eliBucketNode_GetSexp

bucket node - increment the reference count of a  / eliBucketNode_IncrRefcount

bucket node from the bucket - delete a  / eliBucket_Delete

bucket node in a bucket - find a  / eliBucket_Find

bucket node in a bucket - insert a  / eliBucket_Insert

bucket node onto a trace stack - push a  / eliTraceStk_PushBucketNode

bucket node with no trace - allocate a new  / eliBucketNode_GetNew

bucket node with trace - allocate a new  / eliBucketNode_GetNew_trace

bucket nodes - allocate a new block of  / eliBucketNode_GetNewBlock

buffer - concatenate two strings into a new, static  / eliStrCat

buffer - put a cons list into ASCII form in a given string  / eliSPutCons_buf

buffer - put a sexp into ASCII form in a given string  / eliSPutSexp_buf

calculate the hash key for a string -  / eliHT_Hash

calculate the number of characters in the display form of a sexp -  / 
eliSexpStringLen

calculate the number of characters in the internal form of an input string - 
 / eliParseStrLen

calculate the number of characters required for an ASCII display of a cons 
list -  / eliConsStringLen

calculate the number of digits in an integer in any base -  / eliNumDigits

calculating function - declare the hash-key  / eliHT_SetHashFn

caused the current error from an error node - get the sexp which  / 
eliErr_GetNode

cell - decrement the reference count of a cons  / eliCons_DecrRefcount

cell - increment the reference count of a cons  / eliCons_IncrRefcount

cell onto a trace stack - push a cons  / eliTraceStk_PushCons

cell with no trace - allocate a new cons  / eliCons_GetNew

cell with trace - allocate a new cons  / eliCons_GetNew_trace

cells - allocate a new block of cons  / eliCons_GetNewBlock

characters in the display form of a sexp - calculate the number of  / 
eliSexpStringLen

characters in the internal form of an input string - calculate the number of 
 / eliParseStrLen

characters required for an ASCII display of a cons list - calculate the number 
of  / eliConsStringLen

code for the current error from an error node - get the error  / 
eliErr_GetCode

compiled function for a function node - declare a  / eliFn_SetCompiled

compiled function in a function node - get a  / eliFn_GetCompiled

compiled primitive in a namespace - define a  / eliPrimDefCompiled

concatenate two strings into a new, static buffer -  / eliStrCat

cons cell - decrement the reference count of a  / eliCons_DecrRefcount

cons cell - increment the reference count of a  / eliCons_IncrRefcount

cons cell onto a trace stack - push a  / eliTraceStk_PushCons

cons cell with no trace - allocate a new  / eliCons_GetNew

cons cell with trace - allocate a new  / eliCons_GetNew_trace

cons cells - allocate a new block of  / eliCons_GetNewBlock

cons list - calculate the number of characters required for an ASCII display 
of a  / eliConsStringLen

cons list - evaluate a  / eliEvalList

cons list for a function node - declare a  / eliFn_SetCons

cons list in a function node - get the  / eliFn_GetCons

cons list into ASCII form in a given string buffer - put a  / eliSPutCons_buf

cons list of symbols - bind a cons list of values to a  / eliBind

cons list of symbols - evaluate a cons list of values and bind them to a  / 
eliEvalAndBind

cons list of values and bind them to a cons list of symbols - evaluate a  / 
eliEvalAndBind

cons list of values to a cons list of symbols - bind a  / eliBind

cons list on the standard output - display a  / eliDisplayCons

count of a bucket node - decrement the reference  / eliBucketNode_DecrRefcount

count of a bucket node - increment the reference  / eliBucketNode_IncrRefcount

count of a cons cell - decrement the reference  / eliCons_DecrRefcount

count of a cons cell - increment the reference  / eliCons_IncrRefcount

count of a function node - decrement the reference  / eliFn_DecrRefcount

count of a function node - increment the reference  / eliFn_IncrRefcount

count of a sexp node - decrement the reference  / eliSexp_DecrRefcount

count of a sexp node - increment the reference  / eliSexp_IncrRefcount

count of a sexp's referrent - decrement the reference  / 
eliDecrRefcount_SexpRef

count of a sexp's referrent - increment the reference  / 
eliIncrRefcount_SexpRef

count of a string node - decrement the reference  / eliStr_DecrRefcount

count of a string node - increment the reference  / eliStr_IncrRefcount

count of a symbol node - decrement the reference  / eliSym_DecrRefcount

count of a symbol node - get the reference  / eliSym_GetRefcount

count of a symbol node - increment the reference  / eliSym_IncrRefcount

create a new string node from a string in a string table -  / 
eliStringTable_Make

create a new symbol node and bind a value in a symbol table -  / 
eliSymTab_MakeAndBind

create a new symbol node in a symbol table -  / eliSymTab_Make

current error from an error node - get list of expressions leading up to  / 
eliErr_GetBacktrace

current error from an error node - get the error code for the  / 
eliErr_GetCode

current error from an error node - get the locations string for the  / 
eliErr_GetLoc

current error from an error node - get the sexp which caused the  / 
eliErr_GetNode

declare a compiled function for a function node -  / eliFn_SetCompiled

declare a cons list for a function node -  / eliFn_SetCons

declare all standard primitives in a namespace -  / eliPrimInit

declare the hash-key calculating function -  / eliHT_SetHashFn

declare the next node in the bucket after this bucket node -  / 
eliBucketNode_SetNext

declare the previous node in the bucket before this bucket node -  / 
eliBucketNode_SetPrev

declare the search path and default filename extensions for library searches - 
 / eliSetClientLibrary

decrement the reference count of a bucket node -  / eliBucketNode_DecrRefcount

decrement the reference count of a cons cell -  / eliCons_DecrRefcount

decrement the reference count of a function node -  / eliFn_DecrRefcount

decrement the reference count of a sexp node -  / eliSexp_DecrRefcount

decrement the reference count of a sexp's referrent -  / 
eliDecrRefcount_SexpRef

decrement the reference count of a string node -  / eliStr_DecrRefcount

decrement the reference count of a symbol node -  / eliSym_DecrRefcount

default filename extensions for library searches - declare the search path and 
 / eliSetClientLibrary

define a compiled primitive in a namespace -  / eliPrimDefCompiled

delete a bucket node from the bucket -  / eliBucket_Delete

delete an element from a hash table -  / eliHT_Delete

digits in an integer in any base - calculate the number of  / eliNumDigits

display a cons list on the standard output -  / eliDisplayCons

display form of a sexp - calculate the number of characters in the  / 
eliSexpStringLen

display of a cons list - calculate the number of characters required for an 
ASCII  / eliConsStringLen

element from a hash table - delete an  / eliHT_Delete

element from an evaluation stack - get the top  / eliEvalStk_Top

element in a hash table - find an  / eliHT_Find

element into a hash table - insert an  / eliHT_Insert

element of a trace stack - get the top  / eliTraceStk_Top

element of a trace stack - get the type of the top  / eliTraceStk_TopType

element off of an evaluation stack - pop an  / eliEvalStk_Pop

eliBucket_Find - auxiliary to  / eliBucket_Find_aux

eliDecrRefcount_SexpRef - auxiliary to  / eliDecrRefcount_SexpRef_aux

error code for the current error from an error node - get the  / 
eliErr_GetCode

error from an error node - get list of expressions leading up to current  / 
eliErr_GetBacktrace

error from an error node - get the error code for the current  / 
eliErr_GetCode

error from an error node - get the locations string for the current  / 
eliErr_GetLoc

error from an error node - get the sexp which caused the current  / 
eliErr_GetNode

error node - get list of expressions leading up to current error from an  / 
eliErr_GetBacktrace

error node - get the error code for the current error from an  / 
eliErr_GetCode

error node - get the locations string for the current error from an  / 
eliErr_GetLoc

error node - get the sexp which caused the current error from an  / 
eliErr_GetNode

error-recovery node - find out if there is a sexp in an  / eliErr_SexpP

error-recovery node - initialize an  / eliErr_Init

error-recovery node - set the values in an  / eliErr_Set

evaluate a LAMBDA list -  / eliEvalLambda

evaluate a LAMBDAQ list -  / eliEvalLambdaq

evaluate a LAMBDAV list -  / eliEvalLambdav

evaluate a LAMBDAVQ list -  / eliEvalLambdavq

evaluate a cons list -  / eliEvalList

evaluate a cons list of values and bind them to a cons list of symbols -  / 
eliEvalAndBind

evaluate a sexp without allocating space for the result -  / eliEval

evaluation stack - find a symbol in an  / eliEvalStk_FindSym

evaluation stack - get the top element from an  / eliEvalStk_Top

evaluation stack - initialize an  / eliEvalStk_Init

evaluation stack - pop a specified number of items off of an  / 
eliEvalStk_PopN

evaluation stack - pop an element off of an  / eliEvalStk_Pop

evaluation stack - push an evaluation stack node onto an  / eliEvalStk_Push

evaluation stack node onto an evaluation stack - push an  / eliEvalStk_Push

expressions leading up to current error from an error node - get list of  / 
eliErr_GetBacktrace

extensions for library searches - declare the search path and default filename 
 / eliSetClientLibrary

field of a bucket node - get the "key"  / eliBucketNode_GetKey

field of a bucket node - get the "next"  / eliBucketNode_GetNext

field of a bucket node - get the "previous"  / eliBucketNode_GetPrev

file with no trace - parse an ASCII sexp in a  / eliFGetSexp

file with trace - parse an ASCII sexp in a  / eliFGetSexp_trace

filename extensions for library searches - declare the search path and default 
 / eliSetClientLibrary

find a bucket node in a bucket -  / eliBucket_Find

find a string in a string table -  / eliStringTable_Find

find a symbol in a symbol table -  / eliSymTab_Find

find a symbol in an evaluation stack -  / eliEvalStk_FindSym

find an element in a hash table -  / eliHT_Find

find or make a string in a string table -  / eliStringTable_FindOrMake

find or make a symbol in a symbol table -  / eliSymTab_FindOrMake

find or make a symbol in a symbol table and bind a sexp to it -  / 
eliSymTab_FindOrMakeAndBind

find out if there is a sexp in an error-recovery node -  / eliErr_SexpP

find the substring of a string whose prefix is another string -  / 
eliFindPrefix

form in a given string buffer - put a cons list into ASCII  / eliSPutCons_buf

form in a given string buffer - put a sexp into ASCII  / eliSPutSexp_buf

form of a sexp - calculate the number of characters in the display  / 
eliSexpStringLen

form of an input string - calculate the number of characters in the internal 
 / eliParseStrLen

function - declare the hash-key calculating  / eliHT_SetHashFn

function for a function node - declare a compiled  / eliFn_SetCompiled

function in a function node - get a compiled  / eliFn_GetCompiled

function in a function node - get the type of the  / eliFn_GetType

function node - declare a compiled function for a  / eliFn_SetCompiled

function node - declare a cons list for a  / eliFn_SetCons

function node - decrement the reference count of a  / eliFn_DecrRefcount

function node - get a compiled function in a  / eliFn_GetCompiled

function node - get the cons list in a  / eliFn_GetCons

function node - get the type of the function in a  / eliFn_GetType

function node - increment the reference count of a  / eliFn_IncrRefcount

function node onto a trace stack - push a  / eliTraceStk_PushFn

function node with no trace - allocate a new  / eliFn_GetNew

function node with trace - allocate a new  / eliFn_GetNew_trace

function nodes - allocate a new block of  / eliFn_GetNewBlock

given string buffer - put a cons list into ASCII form in a  / eliSPutCons_buf

given string buffer - put a sexp into ASCII form in a  / eliSPutSexp_buf

hash key for a string - calculate the  / eliHT_Hash

hash table - delete an element from a  / eliHT_Delete

hash table - find an element in a  / eliHT_Find

hash table - initialize a  / eliHT_Init

hash table - insert an element into a  / eliHT_Insert

hash-key calculating function - declare the  / eliHT_SetHashFn

increment the reference count of a bucket node -  / eliBucketNode_IncrRefcount

increment the reference count of a cons cell -  / eliCons_IncrRefcount

increment the reference count of a function node -  / eliFn_IncrRefcount

increment the reference count of a sexp node -  / eliSexp_IncrRefcount

increment the reference count of a sexp's referrent -  / 
eliIncrRefcount_SexpRef

increment the reference count of a string node -  / eliStr_IncrRefcount

increment the reference count of a symbol node -  / eliSym_IncrRefcount

initialize a bucket -  / eliBucket_Init

initialize a hash table -  / eliHT_Init

initialize a trace stack -  / eliTraceStk_Init

initialize an error-recovery node -  / eliErr_Init

initialize an evaluation stack -  / eliEvalStk_Init

input string - calculate the number of characters in the internal form of an 
 / eliParseStrLen

input with no trace - parse an ASCII sexp on the standard  / eliGetSexp

input with trace - parse an ASCII sexp on the standard  / eliGetSexp_trace

insert a bucket node in a bucket -  / eliBucket_Insert

insert an element into a hash table -  / eliHT_Insert

integer in any base - calculate the number of digits in an  / eliNumDigits

internal form of an input string - calculate the number of characters in the 
 / eliParseStrLen

items off of an evaluation stack - pop a specified number of  / 
eliEvalStk_PopN

key calculating function - declare the hash- / eliHT_SetHashFn

"key" field of a bucket node - get the  / eliBucketNode_GetKey

key for a string - calculate the hash  / eliHT_Hash

leading up to current error from an error node - get list of expressions  / 
eliErr_GetBacktrace

library searches - declare the search path and default filename extensions for 
 / eliSetClientLibrary

list - calculate the number of characters required for an ASCII display of a 
cons  / eliConsStringLen

list - evaluate a LAMBDA  / eliEvalLambda

list - evaluate a LAMBDAQ  / eliEvalLambdaq

list - evaluate a LAMBDAV  / eliEvalLambdav

list - evaluate a LAMBDAVQ  / eliEvalLambdavq

list - evaluate a cons  / eliEvalList

list for a function node - declare a cons  / eliFn_SetCons

list in a function node - get the cons  / eliFn_GetCons

list into ASCII form in a given string buffer - put a cons  / eliSPutCons_buf

list of expressions leading up to current error from an error node - get  / 
eliErr_GetBacktrace

list of symbols - bind a cons list of values to a cons  / eliBind

list of symbols - evaluate a cons list of values and bind them to a cons  / 
eliEvalAndBind

list of values and bind them to a cons list of symbols - evaluate a cons  / 
eliEvalAndBind

list of values to a cons list of symbols - bind a cons  / eliBind

list on the standard output - display a cons  / eliDisplayCons

locations string for the current error from an error node - get the  / 
eliErr_GetLoc

namespace - declare all standard primitives in a  / eliPrimInit

namespace - define a compiled primitive in a  / eliPrimDefCompiled

new block of bucket nodes - allocate a  / eliBucketNode_GetNewBlock

new block of cons cells - allocate a  / eliCons_GetNewBlock

new block of function nodes - allocate a  / eliFn_GetNewBlock

new block of sexp nodes - allocate a  / eliSexp_GetNewBlock

new block of string nodes - allocate a  / eliStr_GetNewBlock

new block of symbol nodes - allocate a  / eliSym_GetNewBlock

new bucket node with no trace - allocate a  / eliBucketNode_GetNew

new bucket node with trace - allocate a  / eliBucketNode_GetNew_trace

new cons cell with no trace - allocate a  / eliCons_GetNew

new cons cell with trace - allocate a  / eliCons_GetNew_trace

new function node with no trace - allocate a  / eliFn_GetNew

new function node with trace - allocate a  / eliFn_GetNew_trace

new sexp node with no trace - allocate a  / eliSexp_GetNew

new sexp node with trace - allocate a  / eliSexp_GetNew_trace

new string node from a string in a string table - create a  / 
eliStringTable_Make

new string node with no trace - allocate a  / eliStr_GetNew

new string node with trace - allocate a  / eliStr_GetNew_trace

new symbol node and bind a value in a symbol table - create a  / 
eliSymTab_MakeAndBind

new symbol node in a symbol table - create a  / eliSymTab_Make

new symbol node with no trace - allocate a  / eliSym_GetNew

new symbol node with trace - allocate a  / eliSym_GetNew_trace

new, static buffer - concatenate two strings into a  / eliStrCat

"next" field of a bucket node - get the  / eliBucketNode_GetNext

next node in the bucket after this bucket node - declare the  / 
eliBucketNode_SetNext

node - declare a compiled function for a function  / eliFn_SetCompiled

node - declare a cons list for a function  / eliFn_SetCons

node - declare the next node in the bucket after this bucket  / 
eliBucketNode_SetNext

node - declare the previous node in the bucket before this bucket  / 
eliBucketNode_SetPrev

node - decrement the reference count of a bucket  / eliBucketNode_DecrRefcount

node - decrement the reference count of a function  / eliFn_DecrRefcount

node - decrement the reference count of a sexp  / eliSexp_DecrRefcount

node - decrement the reference count of a string  / eliStr_DecrRefcount

node - decrement the reference count of a symbol  / eliSym_DecrRefcount

node - find out if there is a sexp in an error-recovery  / eliErr_SexpP

node - get a compiled function in a function  / eliFn_GetCompiled

node - get list of expressions leading up to current error from an error  / 
eliErr_GetBacktrace

node - get the "key" field of a bucket  / eliBucketNode_GetKey

node - get the "next" field of a bucket  / eliBucketNode_GetNext

node - get the "previous" field of a bucket  / eliBucketNode_GetPrev

node - get the cons list in a function  / eliFn_GetCons

node - get the error code for the current error from an error  / 
eliErr_GetCode

node - get the locations string for the current error from an error  / 
eliErr_GetLoc

node - get the reference count of a symbol  / eliSym_GetRefcount

node - get the scope of a symbol  / eliSym_GetScope

node - get the sexp in a bucket  / eliBucketNode_GetSexp

node - get the sexp which caused the current error from an error  / 
eliErr_GetNode

node - get the type of the function in a function  / eliFn_GetType

node - increment the reference count of a bucket  / eliBucketNode_IncrRefcount

node - increment the reference count of a function  / eliFn_IncrRefcount

node - increment the reference count of a sexp  / eliSexp_IncrRefcount

node - increment the reference count of a string  / eliStr_IncrRefcount

node - increment the reference count of a symbol  / eliSym_IncrRefcount

node - initialize an error-recovery  / eliErr_Init

node - set the scope of a symbol  / eliSym_SetScope

node - set the values in an error-recovery  / eliErr_Set

node and bind a value in a symbol table - create a new symbol  / 
eliSymTab_MakeAndBind

node from a string in a string table - create a new string  / 
eliStringTable_Make

node from the bucket - delete a bucket  / eliBucket_Delete

node in a bucket - find a bucket  / eliBucket_Find

node in a bucket - insert a bucket  / eliBucket_Insert

node in a symbol table - create a new symbol  / eliSymTab_Make

node in the bucket after this bucket node - declare the next  / 
eliBucketNode_SetNext

node in the bucket before this bucket node - declare the previous  / 
eliBucketNode_SetPrev

node onto a trace stack - push a bucket  / eliTraceStk_PushBucketNode

node onto a trace stack - push a function  / eliTraceStk_PushFn

node onto a trace stack - push a sexp  / eliTraceStk_PushSexp

node onto a trace stack - push a string  / eliTraceStk_PushStr

node onto a trace stack - push a symbol  / eliTraceStk_PushSym

node onto an evaluation stack - push an evaluation stack  / eliEvalStk_Push

node with no trace - allocate a new bucket  / eliBucketNode_GetNew

node with no trace - allocate a new function  / eliFn_GetNew

node with no trace - allocate a new sexp  / eliSexp_GetNew

node with no trace - allocate a new string  / eliStr_GetNew

node with no trace - allocate a new symbol  / eliSym_GetNew

node with trace - allocate a new bucket  / eliBucketNode_GetNew_trace

node with trace - allocate a new function  / eliFn_GetNew_trace

node with trace - allocate a new sexp  / eliSexp_GetNew_trace

node with trace - allocate a new string  / eliStr_GetNew_trace

node with trace - allocate a new symbol  / eliSym_GetNew_trace

nodes - allocate a new block of bucket  / eliBucketNode_GetNewBlock

nodes - allocate a new block of function  / eliFn_GetNewBlock

nodes - allocate a new block of sexp  / eliSexp_GetNewBlock

nodes - allocate a new block of string  / eliStr_GetNewBlock

nodes - allocate a new block of symbol  / eliSym_GetNewBlock

number of characters in the display form of a sexp - calculate the  / 
eliSexpStringLen

number of characters in the internal form of an input string - calculate the 
 / eliParseStrLen

number of characters required for an ASCII display of a cons list - calculate 
the  / eliConsStringLen

number of digits in an integer in any base - calculate the  / eliNumDigits

number of items off of an evaluation stack - pop a specified  / 
eliEvalStk_PopN

number of objects off of a trace stack - pop a specified  / eliTraceStk_PurgeN

object off of a trace stack - pop an  / eliTraceStk_Pop

objects off of a trace stack - pop a specified number of  / eliTraceStk_PurgeN

objects off of a trace stack - pop all  / eliTraceStk_Purge

onto a trace stack - push a bucket node  / eliTraceStk_PushBucketNode

onto a trace stack - push a cons cell  / eliTraceStk_PushCons

onto a trace stack - push a function node  / eliTraceStk_PushFn

onto a trace stack - push a sexp node  / eliTraceStk_PushSexp

onto a trace stack - push a string node  / eliTraceStk_PushStr

onto a trace stack - push a symbol node  / eliTraceStk_PushSym

onto an evaluation stack - push an evaluation stack node  / eliEvalStk_Push

output - display a cons list on the standard  / eliDisplayCons

parse an ASCII sexp in a file with no trace -  / eliFGetSexp

parse an ASCII sexp in a file with trace -  / eliFGetSexp_trace

parse an ASCII sexp in a string with no trace -  / eliSGetSexp

parse an ASCII sexp in a string with trace -  / eliSGetSexp_trace

parse an ASCII sexp on the standard input with no trace -  / eliGetSexp

parse an ASCII sexp on the standard input with trace -  / eliGetSexp_trace

path and default filename extensions for library searches - declare the search 
 / eliSetClientLibrary

pop a specified number of items off of an evaluation stack -  / 
eliEvalStk_PopN

pop a specified number of objects off of a trace stack -  / eliTraceStk_PurgeN

pop all objects off of a trace stack -  / eliTraceStk_Purge

pop an element off of an evaluation stack -  / eliEvalStk_Pop

pop an object off of a trace stack -  / eliTraceStk_Pop

prefix is another string - find the substring of a string whose  / 
eliFindPrefix

"previous" field of a bucket node - get the  / eliBucketNode_GetPrev

previous node in the bucket before this bucket node - declare the  / 
eliBucketNode_SetPrev

primitive in a namespace - define a compiled  / eliPrimDefCompiled

primitives in a namespace - declare all standard  / eliPrimInit

push a bucket node onto a trace stack -  / eliTraceStk_PushBucketNode

push a cons cell onto a trace stack -  / eliTraceStk_PushCons

push a function node onto a trace stack -  / eliTraceStk_PushFn

push a sexp node onto a trace stack -  / eliTraceStk_PushSexp

push a string node onto a trace stack -  / eliTraceStk_PushStr

push a symbol node onto a trace stack -  / eliTraceStk_PushSym

push an evaluation stack node onto an evaluation stack -  / eliEvalStk_Push

put a cons list into ASCII form in a given string buffer -  / eliSPutCons_buf

put a sexp into ASCII form in a given string buffer -  / eliSPutSexp_buf

recovery node - find out if there is a sexp in an error- / eliErr_SexpP

recovery node - initialize an error- / eliErr_Init

recovery node - set the values in an error- / eliErr_Set

reference count of a bucket node - decrement the  / eliBucketNode_DecrRefcount

reference count of a bucket node - increment the  / eliBucketNode_IncrRefcount

reference count of a cons cell - decrement the  / eliCons_DecrRefcount

reference count of a cons cell - increment the  / eliCons_IncrRefcount

reference count of a function node - decrement the  / eliFn_DecrRefcount

reference count of a function node - increment the  / eliFn_IncrRefcount

reference count of a sexp node - decrement the  / eliSexp_DecrRefcount

reference count of a sexp node - increment the  / eliSexp_IncrRefcount

reference count of a sexp's referrent - decrement the  / 
eliDecrRefcount_SexpRef

reference count of a sexp's referrent - increment the  / 
eliIncrRefcount_SexpRef

reference count of a string node - decrement the  / eliStr_DecrRefcount

reference count of a string node - increment the  / eliStr_IncrRefcount

reference count of a symbol node - decrement the  / eliSym_DecrRefcount

reference count of a symbol node - get the  / eliSym_GetRefcount

reference count of a symbol node - increment the  / eliSym_IncrRefcount

referrent - decrement the reference count of a sexp's  / 
eliDecrRefcount_SexpRef

referrent - increment the reference count of a sexp's  / 
eliIncrRefcount_SexpRef

referrent - set the type of a sexp's  / eliSexp_SetType

required for an ASCII display of a cons list - calculate the number of 
characters  / eliConsStringLen

result - evaluate a sexp without allocating space for the  / eliEval

scope of a symbol node - get the  / eliSym_GetScope

scope of a symbol node - set the  / eliSym_SetScope

search path and default filename extensions for library searches - declare the 
 / eliSetClientLibrary

searches - declare the search path and default filename extensions for library 
 / eliSetClientLibrary

set the scope of a symbol node -  / eliSym_SetScope

set the type of a sexp's referrent -  / eliSexp_SetType

set the values in an error-recovery node -  / eliErr_Set

sexp - calculate the number of characters in the display form of a  / 
eliSexpStringLen

sexp in a bucket node - get the  / eliBucketNode_GetSexp

sexp in a file with no trace - parse an ASCII  / eliFGetSexp

sexp in a file with trace - parse an ASCII  / eliFGetSexp_trace

sexp in a string with no trace - parse an ASCII  / eliSGetSexp

sexp in a string with trace - parse an ASCII  / eliSGetSexp_trace

sexp in an error-recovery node - find out if there is a  / eliErr_SexpP

sexp into ASCII form in a given string buffer - put a  / eliSPutSexp_buf

sexp node - decrement the reference count of a  / eliSexp_DecrRefcount

sexp node - increment the reference count of a  / eliSexp_IncrRefcount

sexp node onto a trace stack - push a  / eliTraceStk_PushSexp

sexp node with no trace - allocate a new  / eliSexp_GetNew

sexp node with trace - allocate a new  / eliSexp_GetNew_trace

sexp nodes - allocate a new block of  / eliSexp_GetNewBlock

sexp on the standard input with no trace - parse an ASCII  / eliGetSexp

sexp on the standard input with trace - parse an ASCII  / eliGetSexp_trace

sexp to it - find or make a symbol in a symbol table and bind a  / 
eliSymTab_FindOrMakeAndBind

sexp which caused the current error from an error node - get the  / 
eliErr_GetNode

sexp without allocating space for the result - evaluate a  / eliEval

sexp's referrent - decrement the reference count of a  / 
eliDecrRefcount_SexpRef

sexp's referrent - increment the reference count of a  / 
eliIncrRefcount_SexpRef

sexp's referrent - set the type of a  / eliSexp_SetType

space for the result - evaluate a sexp without allocating  / eliEval

specified number of items off of an evaluation stack - pop a  / 
eliEvalStk_PopN

specified number of objects off of a trace stack - pop a  / eliTraceStk_PurgeN

stack - find a symbol in an evaluation  / eliEvalStk_FindSym

stack - get the top element from an evaluation  / eliEvalStk_Top

stack - get the top element of a trace  / eliTraceStk_Top

stack - get the type of the top element of a trace  / eliTraceStk_TopType

stack - initialize a trace  / eliTraceStk_Init

stack - initialize an evaluation  / eliEvalStk_Init

stack - pop a specified number of items off of an evaluation  / 
eliEvalStk_PopN

stack - pop a specified number of objects off of a trace  / eliTraceStk_PurgeN

stack - pop all objects off of a trace  / eliTraceStk_Purge

stack - pop an element off of an evaluation  / eliEvalStk_Pop

stack - pop an object off of a trace  / eliTraceStk_Pop

stack - push a bucket node onto a trace  / eliTraceStk_PushBucketNode

stack - push a cons cell onto a trace  / eliTraceStk_PushCons

stack - push a function node onto a trace  / eliTraceStk_PushFn

stack - push a sexp node onto a trace  / eliTraceStk_PushSexp

stack - push a string node onto a trace  / eliTraceStk_PushStr

stack - push a symbol node onto a trace  / eliTraceStk_PushSym

stack - push an evaluation stack node onto an evaluation  / eliEvalStk_Push

stack node onto an evaluation stack - push an evaluation  / eliEvalStk_Push

standard input with no trace - parse an ASCII sexp on the  / eliGetSexp

standard input with trace - parse an ASCII sexp on the  / eliGetSexp_trace

standard output - display a cons list on the  / eliDisplayCons

standard primitives in a namespace - declare all  / eliPrimInit

static buffer - concatenate two strings into a new,  / eliStrCat

string - calculate the hash key for a  / eliHT_Hash

string - calculate the number of characters in the internal form of an input 
 / eliParseStrLen

string - find the substring of a string whose prefix is another  / 
eliFindPrefix

string buffer - put a cons list into ASCII form in a given  / eliSPutCons_buf

string buffer - put a sexp into ASCII form in a given  / eliSPutSexp_buf

string for the current error from an error node - get the locations  / 
eliErr_GetLoc

string in a string table - create a new string node from a  / 
eliStringTable_Make

string in a string table - find a  / eliStringTable_Find

string in a string table - find or make a  / eliStringTable_FindOrMake

string node - decrement the reference count of a  / eliStr_DecrRefcount

string node - increment the reference count of a  / eliStr_IncrRefcount

string node from a string in a string table - create a new  / 
eliStringTable_Make

string node onto a trace stack - push a  / eliTraceStk_PushStr

string node with no trace - allocate a new  / eliStr_GetNew

string node with trace - allocate a new  / eliStr_GetNew_trace

string nodes - allocate a new block of  / eliStr_GetNewBlock

string table - create a new string node from a string in a  / 
eliStringTable_Make

string table - find a string in a  / eliStringTable_Find

string table - find or make a string in a  / eliStringTable_FindOrMake

string whose prefix is another string - find the substring of a  / 
eliFindPrefix

string with no trace - parse an ASCII sexp in a  / eliSGetSexp

string with trace - parse an ASCII sexp in a  / eliSGetSexp_trace

strings into a new, static buffer - concatenate two  / eliStrCat

substring of a string whose prefix is another string - find the  / 
eliFindPrefix

symbol in a symbol table - find a  / eliSymTab_Find

symbol in a symbol table - find or make a  / eliSymTab_FindOrMake

symbol in a symbol table and bind a sexp to it - find or make a  / 
eliSymTab_FindOrMakeAndBind

symbol in an evaluation stack - find a  / eliEvalStk_FindSym

symbol node - decrement the reference count of a  / eliSym_DecrRefcount

symbol node - get the reference count of a  / eliSym_GetRefcount

symbol node - get the scope of a  / eliSym_GetScope

symbol node - increment the reference count of a  / eliSym_IncrRefcount

symbol node - set the scope of a  / eliSym_SetScope

symbol node and bind a value in a symbol table - create a new  / 
eliSymTab_MakeAndBind

symbol node in a symbol table - create a new  / eliSymTab_Make

symbol node onto a trace stack - push a  / eliTraceStk_PushSym

symbol node with no trace - allocate a new  / eliSym_GetNew

symbol node with trace - allocate a new  / eliSym_GetNew_trace

symbol nodes - allocate a new block of  / eliSym_GetNewBlock

symbol table - create a new symbol node and bind a value in a  / 
eliSymTab_MakeAndBind

symbol table - create a new symbol node in a  / eliSymTab_Make

symbol table - find a symbol in a  / eliSymTab_Find

symbol table - find or make a symbol in a  / eliSymTab_FindOrMake

symbol table and bind a sexp to it - find or make a symbol in a  / 
eliSymTab_FindOrMakeAndBind

symbols - bind a cons list of values to a cons list of  / eliBind

symbols - evaluate a cons list of values and bind them to a cons list of  / 
eliEvalAndBind

table - create a new string node from a string in a string  / 
eliStringTable_Make

table - create a new symbol node and bind a value in a symbol  / 
eliSymTab_MakeAndBind

table - create a new symbol node in a symbol  / eliSymTab_Make

table - delete an element from a hash  / eliHT_Delete

table - find a string in a string  / eliStringTable_Find

table - find a symbol in a symbol  / eliSymTab_Find

table - find an element in a hash  / eliHT_Find

table - find or make a string in a string  / eliStringTable_FindOrMake

table - find or make a symbol in a symbol  / eliSymTab_FindOrMake

table - initialize a hash  / eliHT_Init

table - insert an element into a hash  / eliHT_Insert

table and bind a sexp to it - find or make a symbol in a symbol  / 
eliSymTab_FindOrMakeAndBind

top element from an evaluation stack - get the  / eliEvalStk_Top

top element of a trace stack - get the  / eliTraceStk_Top

top element of a trace stack - get the type of the  / eliTraceStk_TopType

trace - allocate a new bucket node with  / eliBucketNode_GetNew_trace

trace - allocate a new bucket node with no  / eliBucketNode_GetNew

trace - allocate a new cons cell with  / eliCons_GetNew_trace

trace - allocate a new cons cell with no  / eliCons_GetNew

trace - allocate a new function node with  / eliFn_GetNew_trace

trace - allocate a new function node with no  / eliFn_GetNew

trace - allocate a new sexp node with  / eliSexp_GetNew_trace

trace - allocate a new sexp node with no  / eliSexp_GetNew

trace - allocate a new string node with  / eliStr_GetNew_trace

trace - allocate a new string node with no  / eliStr_GetNew

trace - allocate a new symbol node with  / eliSym_GetNew_trace

trace - allocate a new symbol node with no  / eliSym_GetNew

trace - parse an ASCII sexp in a file with  / eliFGetSexp_trace

trace - parse an ASCII sexp in a file with no  / eliFGetSexp

trace - parse an ASCII sexp in a string with  / eliSGetSexp_trace

trace - parse an ASCII sexp in a string with no  / eliSGetSexp

trace - parse an ASCII sexp on the standard input with  / eliGetSexp_trace

trace - parse an ASCII sexp on the standard input with no  / eliGetSexp

trace stack - get the top element of a  / eliTraceStk_Top

trace stack - get the type of the top element of a  / eliTraceStk_TopType

trace stack - initialize a  / eliTraceStk_Init

trace stack - pop a specified number of objects off of a  / eliTraceStk_PurgeN

trace stack - pop all objects off of a  / eliTraceStk_Purge

trace stack - pop an object off of a  / eliTraceStk_Pop

trace stack - push a bucket node onto a  / eliTraceStk_PushBucketNode

trace stack - push a cons cell onto a  / eliTraceStk_PushCons

trace stack - push a function node onto a  / eliTraceStk_PushFn

trace stack - push a sexp node onto a  / eliTraceStk_PushSexp

trace stack - push a string node onto a  / eliTraceStk_PushStr

trace stack - push a symbol node onto a  / eliTraceStk_PushSym

type of a sexp's referrent - set the  / eliSexp_SetType

type of the function in a function node - get the  / eliFn_GetType

type of the top element of a trace stack - get the  / eliTraceStk_TopType

value in a symbol table - create a new symbol node and bind a  / 
eliSymTab_MakeAndBind

values and bind them to a cons list of symbols - evaluate a cons list of  / 
eliEvalAndBind

values in an error-recovery node - set the  / eliErr_Set

values to a cons list of symbols - bind a cons list of  / eliBind

whose prefix is another string - find the substring of a string  / 
eliFindPrefix

without allocating space for the result - evaluate a sexp  / eliEval

}

\begindata{bp,537558784}
\enddata{bp,537558784}
\view{bpv,537558784,1744,0,0}
Copyright 1992 Carnegie Mellon University and IBM.  All rights reserved.

\smaller{\smaller{$Disclaimer: 

Permission to use, copy, modify, and distribute this software and its 

documentation for any purpose is hereby granted without fee, 

provided that the above copyright notice appear in all copies and that 

both that copyright notice, this permission notice, and the following 

disclaimer appear in supporting documentation, and that the names of 

IBM, Carnegie Mellon University, and other copyright holders, not be 

used in advertising or publicity pertaining to distribution of the software 

without specific, written prior permission.



IBM, CARNEGIE MELLON UNIVERSITY, AND THE OTHER COPYRIGHT HOLDERS 

DISCLAIM ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING 

ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.  IN NO EVENT 

SHALL IBM, CARNEGIE MELLON UNIVERSITY, OR ANY OTHER COPYRIGHT HOLDER 

BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY 

DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, 

WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS 

ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE 

OF THIS SOFTWARE.

 $

}}\enddata{text,539470888}
