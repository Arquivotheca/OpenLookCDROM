/* ********************************************************************** *\
 *         Copyright IBM Corporation 1988,1991 - All Rights Reserved      *
 *        For full copyright information see:'andrew/config/COPYRITE'     *
\* ********************************************************************** */

/*
	$Disclaimer: 
 * Permission to use, copy, modify, and distribute this software and its 
 * documentation for any purpose is hereby granted without fee, 
 * provided that the above copyright notice appear in all copies and that 
 * both that copyright notice, this permission notice, and the following 
 * disclaimer appear in supporting documentation, and that the names of 
 * IBM, Carnegie Mellon University, and other copyright holders, not be 
 * used in advertising or publicity pertaining to distribution of the software 
 * without specific, written prior permission.
 * 
 * IBM, CARNEGIE MELLON UNIVERSITY, AND THE OTHER COPYRIGHT HOLDERS 
 * DISCLAIM ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING 
 * ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.  IN NO EVENT 
 * SHALL IBM, CARNEGIE MELLON UNIVERSITY, OR ANY OTHER COPYRIGHT HOLDER 
 * BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY 
 * DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, 
 * WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS 
 * ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE 
 * OF THIS SOFTWARE.
 *  $
*/

#ifdef linux
DEFINES = -Dboolean=int -DNONANSI_INCLUDES -UINCLUDES_ARE_ANSI
#else
#ifdef VAX_ENV
DEFINES = -Dboolean=int -DNONANSI_INCLUDES -UINCLUDES_ARE_ANSI
#else
DEFINES = -Dboolean=int -DINCLUDES_ARE_ANSI
#endif /* vax */

#endif
#ifdef SOLARIS
DEFINES = -Dboolean=boolean_t
#endif

#if !defined(ANSI_COMPILER) || defined(NONANSI_INCLUDES)
all:: ansi2knr
ansi2knr: ansi2knr.c
	$(RM) $@
	$(CC) -o $@ $(CFLAGS) ansi2knr.c $(LDFLAGS)
clean:: ; $(RM) ansi2knr
#endif

/* headers to install */
INCS = jinclude.h jconfig.h jpegdata.h

/* objectfiles common to cjpeg and djpeg */
COMOBJECTS= jutils.o jerror.o jmemmgr.o jmemsys.o

/* compression objectfiles */
CLIBOBJECTS= jcmaster.o jcdeflts.o jcarith.o jccolor.o jcexpand.o jchuff.o \
        jcmcu.o jcpipe.o jcsample.o jfwddct.o jwrjfif.o jrdgif.o jrdppm.o \
        jrdrle.o jrdtarga.o
COBJECTS= jcmain.o $(CLIBOBJECTS) $(COMOBJECTS)

/* decompression objectfiles */
DLIBOBJECTS= jdmaster.o jddeflts.o jbsmooth.o jdarith.o jdcolor.o jdhuff.o \
        jdmcu.o jdpipe.o jdsample.o jquant1.o jquant2.o jrevdct.o jrdjfif.o \
        jwrgif.o jwrppm.o jwrrle.o jwrtarga.o
DOBJECTS= jdmain.o $(DLIBOBJECTS) $(COMOBJECTS)

/* These objectfiles are included in libjpeg.a */
LIBOBJECTS= $(CLIBOBJECTS) $(DLIBOBJECTS) $(COMOBJECTS)

OBJS = ${LIBOBJECTS}
#ifdef  ANSI_COMPILER
NormalObjectRule()
#else
.c.o:			
	$(RM) $@ tempfile.c
	./ansi2knr $*.c tempfile.c
	$(CC) -c $(CFLAGS) tempfile.c
	$(MV) tempfile.o $*.o
#endif
ProgramTarget(cjpep, ${COBJECTS},,)
ProgramTarget(djpep, ${COBJECTS},,)
LibraryTarget(libjpeg.a, ${LIBOBJECTS})

InstallLibrary(libjpeg.a, ${BASEDIR}/lib)
InstallMultiple(${INCS}, ${INSTINCFLAGS}, ${BASEDIR}/include)

DependTarget()
