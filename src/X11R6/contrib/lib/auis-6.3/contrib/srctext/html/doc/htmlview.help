\begindata{text,1375280}
\textdsversion{12}
\template{help}
\chapter{HTMLView, version 1.2

}
\section{What htmlview is

}\leftindent{
This is an ATK object which allows you to create and edit HTML in a WYSIWYG 
fashion. It supports all HTML entities, and you can cut and paste HTML into 
and out of the window (although see the section "Warnings").  This is 
purely an editing/viewing object: it does not support following links.  It 
does support almost everything else in plain HTML, including inline images. 
 By default, the view is configured to look remarkably similar to that 
produced by NCSA Mosaic.

}
\section{Starting htmlview

}\leftindent{
Edit a file with the extension ".html". For example

\programexample{ez home.html}

If this does not work correctly, it is most probable that the html 
extension is not being recognised. The following line is needed in the 
ezinit file:

\programexample{addfiletype .html html


}When a new document is read in, the document will be scanned for errors in 
the HTML.  If any are found, they will be displayed in the 
\italic{HTML-Errors} buffer, with approximate line numbers attached to each 
error message.\programexample{

}}
\section{Warnings

}\leftindent{
See the doc/TODO.html document, which comes with the source for this 
package, for known problems and current development paths.

}
\section{Pop-up menu meanings

}\leftindent{
All logical markup is provided in the Styles menu.  From the Font menu you 
can find physical effects (such as bold and italic).  From the HTML menu 
you can find special commands relating to the document (e.g. for creating 
hyperlinks, inserting images, setting the document title) and in the Lists 
menu, you can find the various types of list.

}
\section{Using htmlview

}\leftindent{
The easiest way to use the html editor is to just type your text in and 
then apply logical markup to the document after you have typed the text. 
 Lists are created in a special manner:

\quotation{The method of annotating a section of text to be a list is to 
select a region and then to request a specific list to be placed over that 
region. Each line in the selection will be made into an appropriate list 
item, and the correct list environment wrapped around the whole. When no 
selection is present and a list environment is requested, the current line 
is made into a list. If the current line is located within or immediately 
adjacent to a list environment of the same type, it is merged with that 
list. This allows you to incrementally add items to lists, and by using the 
selection method it allows sub-lists to be created. \



}It is possible to change the manner in which HTML styles are displayed, by 
editing the HTML template.  See the help on \helptopic{lookz} and on 
\helptopic{templates}.


}\section{Preferences

}\leftindent{At this time, there are two preferences of note: defaultImage 
and webPath.


\description{\bold{defaultImage}:	This is a pathname of an image to use 
when no data can be found for an inline image.  This really, really, really 
should be a correct, readable GIF image.  If not, bizarre effects may 
occur.


}\description{\bold{webPath}:	This is a comma-seperated list of pathnames 
which should be used as prefixes when looking for an inline image which is 
specified absolutely.  For example, at City University CS dept, all the web 
documents and images are kept in the directory /vol/web/root.  This is 
hidden by the HTTP server and so the user never sees this path.  To get the 
editor to work correctly, we set the webPath to have the value 
"/vol/web/root".}

}
\section{Program Author}

\leftindent{
Nick Williams, <njw@cs.city.ac.uk>

}
\section{Recent changes to htmlview

}\leftindent{
See the ChangeLog file, distributed with the source.

The current version of the htmltext package is 1.2

}
\section{Related tools}  \



\leftindent{\helptopic{image}

\helptopic{initfiles}

\helptopic{lookz}

\helptopic{templates}


}\enddata{text,1375280}
