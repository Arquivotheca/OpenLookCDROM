\begindata{text,268742184}
\textdsversion{12}
\define{formatnote
menu:[Region~4,FormatNote~60]
attr:[Flags PassThru Int Set]
attr:[Flags NoFill Int Set]
attr:[Flags KeepPriorNL Int Set]
attr:[Flags KeepNextNL Int Set]}
\define{chapter
menu:[Title~3,Chapter~20]
attr:[Justification LeftJustified Point 0]
attr:[Flags KeepPriorNL Int Set]
attr:[Flags KeepNextNL Int Set]
attr:[FontFace Bold Int Set]
attr:[FontFamily AndySans Int 0]
attr:[FontSize ConstantFontSize Point 16]}
\define{section
menu:[Title~3,Section~21]
attr:[Justification LeftJustified Point 0]
attr:[Flags KeepPriorNL Int Set]
attr:[Flags KeepNextNL Int Set]
attr:[FontFace Bold Int Set]
attr:[FontFamily AndySans Int 0]
attr:[FontSize ConstantFontSize Point 14]}
\define{italic
menu:[Font~1,Italic~11]
attr:[FontFace Italic Int Set]}
\define{paragraph
menu:[Title~3,Paragraph~23]
attr:[Justification LeftJustified Point 0]
attr:[Flags KeepPriorNL Int Set]
attr:[FontFace Bold Int Set]
attr:[FontFamily AndySans Int 0]
attr:[FontSize ConstantFontSize Point 12]}
\define{majorheading
menu:[Title~3,MajorHeading~10]
attr:[Justification LeftJustified Point 0]
attr:[Flags KeepPriorNL Int Set]
attr:[Flags KeepNextNL Int Set]
attr:[FontFace Italic Int Set]
attr:[FontFamily AndySans Int 0]
attr:[FontSize ConstantFontSize Point 12]}
\define{fixedtext
menu:[Region~4,Fixedtext]
attr:[Justification LeftJustified Point 0]
attr:[FontFace FixedFace Int Set]
attr:[FontFamily AndyType Int 0]
attr:[FontSize ConstantFontSize Point 10]}
\define{bold
menu:[Font~1,Bold~10]
attr:[FontFace Bold Int Set]}
\define{fixedindent
menu:[Region~4,Fixedindent]
attr:[LeftMargin LeftMargin Cm 83230]
attr:[Justification LeftJustified Point 0]
attr:[FontFace FixedFace Int Set]
attr:[FontFamily AndyType Int 0]
attr:[FontSize ConstantFontSize Point 10]}
\define{fieldheading
menu:[Region~4,Fieldheading]
attr:[Justification LeftJustified Point 0]
attr:[FontFace Bold Int Set]
attr:[FontFamily AndySans Int 0]
attr:[FontSize ConstantFontSize Point 10]}
\define{fieldtext
menu:[Region~4,Fieldtext]
attr:[LeftMargin LeftMargin Cm 83230]
attr:[Justification LeftJustified Point 0]
attr:[FontFamily AndySans Int 0]
attr:[FontSize ConstantFontSize Point 10]}
\define{paramname
menu:[Font~1,Paramname]
attr:[FontFace Italic Int Set]}
\define{indexi
}
\define{smaller
}
\chapter{header}


The class\italic{ header}, together with its view, \italic{headrtv }provide an 
interface for the user or programmer to set the headers and footers which 
should be shown when a document is printed.


\section{Related classes}


\paragraph{text}


Three text objects are used to store the strings representing the left, center 
and right sections of each header or footer.  Though text objects support 
arbitrary style and object inclusion, no support is provided in the header 
class for utilizing styles or views within headers or footers because of 
technical difficulties related to the troff processor used for printing.



\section{Using \italic{header}}


Typical programmer usage of a \italic{header} object would be something like:


struct text *txt;

long position;

struct header *hdr;

....

....

hdr=header_Create(header_HEADER, "The left text", "The center text", "The 
right text");

text_AddView(txt, /* the text to put the header in */

	 position, /* where in the text the header should be placed */

  	"headrtv",  /* the view to use to show the header */

	hdr /* the header to be placed */);


The left, center and right arguments to header_Create behave just as if they 
had been entered by a user in a headrtv (see help header for more 
information).


\section{Sub-classing \italic{header}}


It isn't known yet whether it might be useful to subclass header or not.

\begindata{bp,268741412}
\enddata{bp,268741412}
\view{bpv,268741412,0,0,0}
\section{\italic{header} functions}


______________________________________________________				


\paragraph{header_SetHeader}				


\majorheading{Set the text to be used for one component of a header.}

_____________________________________________________


\fixedtext{void} \fixedtext{\bold{header_Setheader }(}\fixedindent{

struct header *\paramname{self},

int \paramname{which},

char *\paramname{str};);}


\fieldheading{Category}

\fieldtext{Method

}

\fieldheading{Description}   

\fieldtext{Sets the component of the header indicated by \paramname{which} to 
the given string \paramname{str}.  \paramname{which} can take on the following 
values: header_ltext, header_ctext, header_rtext.



}\fieldheading{Return Value}

\fieldtext{None.}


\fieldheading{Usage}

\fieldtext{Use to set a one of the left, center or right components of a 
header after it has been created.

}
\fieldheading{Side Effects}

\fieldtext{None.

}
\fieldtext{


}\fieldheading{Example}


\fieldtext{\fixedtext{struct header *hdr=header_Create(header_HEADER, "left", 
"center", "right");


header_SetHeader(hdr, header_ctext, "Center");

}
}\
\begindata{bp,268767464}
\enddata{bp,268767464}
\view{bpv,268767464,1,0,0}
______________________________________________________				


\paragraph{header_Create}			


\majorheading{Create a new header object with pre-set left, center and right 
components.}

______________________________________________________


\fixedtext{struct header *\bold{header_Create}(

}\fixedindent{	int \paramname{type};

char *\paramname{left}, *\paramname{center}, *\paramname{right});}


\fieldheading{Category}

\fieldtext{Classprocedure}



\fieldheading{Description}   

\fieldtext{Creates a new header or footer (if type is header_HEADER or 
header_FOOTER, respectively) with pre-set strings for the left, center and 
right components.  The components which are not to be set should be an empty 
string or NULL.


}
\fieldheading{Return Value}

\fieldtext{A pointer to the newly created header; NULL if type was invalid or 
the header could not be created.}


\fieldheading{Usage}

\fieldtext{Creating a new header in a program.

}
\fieldheading{Side Effects}

\fieldtext{None}



\fieldheading{Example}

\fieldtext{see the section "Using header" earlier in this document.

}\
\view{bpv,268767464,2,0,0}
\enddata{text,268742184}
