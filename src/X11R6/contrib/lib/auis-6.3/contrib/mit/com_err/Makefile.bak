# Makefile generated by imake - do not edit!
# $XConsortium: imake.c,v 1.51 89/12/12 12:37:30 jim Exp $

# $Source: /afs/cs.cmu.edu/project/atk-dist/auis-6.3/contrib/mit/com_err/RCS/Makefile.bak,v $
# $Author: wdc $
# $Id: Makefile.bak,v 1.1 1992/02/12 18:19:24 wdc R6tape $
#

###########################################################################
# Makefile generated from "Imake.tmpl" and </tmp/IIf.004996>
# $XConsortium: Imake.tmpl,v 1.77 89/12/18 17:01:37 jim Exp $
#
# Platform-specific parameters may be set in the appropriate .cf
# configuration files.  Site-wide parameters may be set in the file
# site.def.  Full rebuilds are recommended if any parameters are changed.
#
# If your C preprocessor doesn't define any unique symbols, you'll need
# to set BOOTSTRAPCFLAGS when rebuilding imake (usually when doing
# "make Makefile", "make Makefiles", or "make World").
#
# If you absolutely can't get imake to work, you'll need to set the
# variables at the top of each Makefile as well as the dependencies at the
# bottom (makedepend will do this automatically).
#

###########################################################################
# platform-specific configuration parameters - edit vaxbsd.cf to change

# $Source: /afs/cs.cmu.edu/project/atk-dist/auis-6.3/contrib/mit/com_err/RCS/Makefile.bak,v $
# $Author: wdc $
# $Id: Makefile.bak,v 1.1 1992/02/12 18:19:24 wdc R6tape $
#

###########################################################################
# site-specific configuration parameters - edit site.def to change

# $Source: /afs/cs.cmu.edu/project/atk-dist/auis-6.3/contrib/mit/com_err/RCS/Makefile.bak,v $
# $Author: wdc $
# $Id: Makefile.bak,v 1.1 1992/02/12 18:19:24 wdc R6tape $
#

# site:  $XConsortium: site.def,v 1.21 89/12/06 11:46:50 jim Exp $

            SHELL = 	/bin/sh

              TOP = ..
      CURRENT_DIR = comerr

               AR = ar cq
  BOOTSTRAPCFLAGS =
               CC = gcc -fstrength-reduce -fpcc-struct-return -pedantic -ansi -Wall

         COMPRESS = compress
              CPP = /lib/cpp $(STD_CPP_DEFINES)
    PREPROCESSCMD = gcc -fstrength-reduce -fpcc-struct-return -pedantic -ansi -Wall -E $(STD_CPP_DEFINES)
          INSTALL = install
               LD = ld
      LDLOCATIONS =
             LINT = lint
      LINTLIBFLAG = -C
         LINTOPTS = -axz
               LN = ln -s
             MAKE = make
               MV = mv
               CP = cp
           RANLIB = ranlib
  RANLIBINSTFLAGS =
               RM = rm -f
     STD_INCLUDES =
  STD_CPP_DEFINES =
      STD_DEFINES = -DBITS32
    SABER_DEFINES = -I/mit/gnu/vaxlib/gcc-include -Dconst= -DBITS32
 EXTRA_LOAD_FLAGS = -Z
  EXTRA_LIBRARIES =
             TAGS = ctags
            ETAGS = etags
STDC_TOP_INCLUDES = -I$(TOP)/include/stdc-incl

   SIGNAL_DEFINES = -DSIGNALRETURNSINT

    PROTO_DEFINES =

     INSTPGMFLAGS =  -s

     INSTSCRFLAGS =
     INSTBINFLAGS = -m 0755
     INSTUIDFLAGS = -o root -m 4755
     INSTLIBFLAGS = -m 0664
     INSTINCFLAGS = -m 0444
     INSTMANFLAGS = -m 0444
     INSTDATFLAGS = -m 0444
    INSTKMEMFLAGS = -o root -m 4755

          DESTDIR =

     TOP_INCLUDES = -I$(TOP)

      CDEBUGFLAGS = -O -g
        CCOPTIONS =
      COMPATFLAGS =

      ALLINCLUDES = $(STD_INCLUDES) $(TOP_INCLUDES) $(INCLUDES) $(EXTRA_INCLUDES)
       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(PROTO_DEFINES) $(DEFINES) $(COMPATFLAGS)
           CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(ALLDEFINES)
        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES)
           LDLIBS = $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)
        LDOPTIONS = $(CDEBUGFLAGS) $(CCOPTIONS) $(LDLOCATIONS)
   LDCOMBINEFLAGS = -X -r

        MACROFILE = vaxbsd.cf
           RM_CMD = $(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut

    IMAKE_DEFINES =

         IRULESRC = $(CONFIGSRC)

        IMAKE_CMD = $(IMAKE) -I$(NEWTOP)$(IRULESRC) $(IMAKE_DEFINES)

     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/Imake.rules \
			$(IRULESRC)/Project.tmpl $(IRULESRC)/site.def \
			$(IRULESRC)/$(MACROFILE) $(EXTRA_ICONFIGFILES)

# Kerberos version 5 Build Parameters
#
# $Source: /afs/cs.cmu.edu/project/atk-dist/auis-6.3/contrib/mit/com_err/RCS/Makefile.bak,v $
# $Author: wdc $
# $Id: Makefile.bak,v 1.1 1992/02/12 18:19:24 wdc R6tape $

            ARADD = ar cruv
     TOP_INCLUDES = -I$(TOP)/include $(STDC_TOP_INCLUDES)
        CONFIGSRC = $(TOP)/config
            ISODE = /mit/isode/isode-6.0
         IMAKESRC = $(CONFIGSRC)
          POFLAGS = -f -h2 -a -s
          PYFLAGS = -a PY_advise -s -r
             PEPY = $(ISODE)/@sys/bin/pepy
             POSY = $(ISODE)/@sys/bin/posy
            TOUCH = touch
             PERL = perl
       DESDEFINES = -DBIG -DLSBFIRST
            ETSRC = $(TOP)/comerr
            SSSRC = $(TOP)/ss
            OSLIB = $(TOP)/lib/os/libos.a
           DESLIB = $(TOP)/lib/des/libdes.a
          KRB5LIB = $(TOP)/lib/libkrb5.a
           CRCLIB = $(TOP)/lib/crc-32/libcrc32.a
         ISODELIB = /mit/isode/isode-6.0/@sys/lib/libisode.a

           DBMLIB =
          DEPKLIB = $(KRB5LIB) $(DESLIB) $(OSLIB) $(CRCLIB)
             KLIB = $(DEPKLIB) $(ISODELIB) $(COMERRLIB) $(DBMLIB)
        DEPKDBLIB = $(TOP)/lib/kdb/libkdb.a
           KDBLIB = $(DEPKDBLIB)

            IMAKE = imake

           DEPEND = makedepend

            SSLIB = -lss
          MK_CMDS = mk_cmds

        COMERRLIB = -lcom_err
       COMPILE_ET = compile_et

# $Source: /afs/cs.cmu.edu/project/atk-dist/auis-6.3/contrib/mit/com_err/RCS/Makefile.bak,v $
# $Author: wdc $
# $Id: Makefile.bak,v 1.1 1992/02/12 18:19:24 wdc R6tape $
#

###########################################################################
# Imake rules for building libraries, programs, scripts, and data files
# rules:  $XConsortium: Imake.rules,v 1.67 89/12/18 17:14:15 jim Exp $

###########################################################################
# start of Imakefile

#	$Source: /afs/cs.cmu.edu/project/atk-dist/auis-6.3/contrib/mit/com_err/RCS/Makefile.bak,v $
#	$Author: wdc $
#	$Id: Makefile.bak,v 1.1 1992/02/12 18:19:24 wdc R6tape $
#
#  Copyright 1990 by the Massachusetts Institute of Technology.
#
#  For copying and distribution information, please see the file
#  <krb5/copyright.h>.
#

.c.o:
	$(RM) $@
	$(CC) -c $(CFLAGS) $*.c

LINTFILES= error_message.c et_name.c init_et.c com_err.c # perror.c

LIBOBJS= error_message.o et_name.o init_et.o com_err.o # perror.o

CFILES=	compile_et.c error_table.c error_message.c et_name.c \
	init_et.c com_err.c

all::	compile_et libcom_err.a

COMPILE_ET= ./compile_et
$(COMPILE_ET): compile_et

.SUFFIXES: .et

.et.h:
	$(COMPILE_ET) $*.et

.et.c:
	$(COMPILE_ET) $*.et

COMPETOBJS= compile_et.o error_table.o
COMPETLIBS= -ll
TESTOBJS= test.o test1.o test2.o
TESTLIBS= libcom_err.a

error_table.c: et_lex.lex.c

all:: libcom_err.a

libcom_err.a: $(LIBOBJS)
	$(RM) $@
	$(AR) $@ $(LIBOBJS)
	$(RANLIB) $@

compile_et: $(COMPETOBJS)
	 $(RM) $@
	$(CC) -o $@ $(COMPETOBJS) $(LDOPTIONS) $(COMPETLIBS) $(LDLIBS)  $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) compile_et

test: $(TESTOBJS) libcom_err.a $(COMPILE_ET)
	 $(RM) $@
	$(CC) -o $@ $(TESTOBJS) $(LDOPTIONS) $(TESTLIBS) $(LDLIBS)  $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) test

test.o:	test1.h test2.h
test1.c test1.h : test1.et
test2.c test2.h : test2.et

###########################################################################
# common rules for all Makefiles - do not edit

emptyrule::

clean::
	$(RM_CMD) \#*

Makefile::
	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)   -s Makefile.new
	$(MAKE) -f Makefile.new noop
	-@if [ -f Makefile ]; then \
		echo "$(RM) Makefile.bak; $(MV) Makefile Makefile.bak"; \
		$(RM) Makefile.bak; $(MV) Makefile Makefile.bak; \
	fi
	$(MV) Makefile.new Makefile

noop::

tags::
	$(TAGS) -w *.[ch]
	$(ETAGS) *.[ch]

saber:
	#load $(ALLDEFINES) $(SABER_DEFINES) $(SRCS)
	#setopt load_flags $(ALLDEFINES) $(SABER_DEFINES)

osaber:
	#load $(ALLDEFINES) $(OBJS)

###########################################################################
# empty rules for directories that do not have SUBDIRS - do not edit

install::
	@echo "install in $(CURRENT_DIR) done"

install.man::
	@echo "install.man in $(CURRENT_DIR) done"

Makefiles::

includes::

###########################################################################
# dependencies generated by makedepend

