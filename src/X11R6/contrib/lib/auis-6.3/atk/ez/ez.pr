\begindata{text,538387208}
\textdsversion{12}
\template{default}
\define{global
}
# Copyright 1992 Carnegie Mellon University. All rights reserved.

# $Disclaimer: 

# Permission to use, copy, modify, and distribute this software and its 

# documentation for any purpose is hereby granted without fee, 

# provided that the above copyright notice appear in all copies and that 

# both that copyright notice, this permission notice, and the following 

# disclaimer appear in supporting documentation, and that the names of 

# IBM, Carnegie Mellon University, and other copyright holders, not be 

# used in advertising or publicity pertaining to distribution of the software 

# without specific, written prior permission.

# 

# IBM, CARNEGIE MELLON UNIVERSITY, AND THE OTHER COPYRIGHT HOLDERS 

# DISCLAIM ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING 

# ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.  IN NO EVENT 

# SHALL IBM, CARNEGIE MELLON UNIVERSITY, OR ANY OTHER COPYRIGHT HOLDER 

# BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY 

# DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, 

# WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS 

# ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE 

# OF THIS SOFTWARE.

#  $

#~group EZ


#~type boolean

#~views string boolean

#~help

When yes text can be shown in multiple colors, or stippled if it is being 
displayed on a monochrome screen.  When no color styles will be ignored. 
 This preference defaults to no for monochrome displays, and yes on 
non-monochrome displays.

#~endhelp

ShowColorStyles: yes


#~type boolean

#~views string boolean

#~help

In addition to responding to the EMACS editor command set, EZ has the 
option of responding to the command set of the Berkeley VI editor.  When 
this preference is set to true, the keycommand <ESC>t will toggle between 
command sets.  This is so you can switch between VI command set and EMACS 
command set.  It is set to false by default so beginning users don't 
suddenly discover EZ no longer behaves.  EZ can be made to come up in VI 
mode by setting the \bold{editor} preference, or by setting an environment 
variable.

#~endhelp

AllowKeyToggleToViMode: no


#~type boolean

#~views string boolean

#~help

If you are editing a file which is really a symbolic link to another file, 
what should EZ do when you ask to save the buffer?  Should it follow the 
symbolic link and replace the pointed-to file?  Or should it replace the 
link itself with a new, real file?  Turning this preference on will result 
in EZ asking you which option you prefer the first time you try to save a 
file which is really a symbolic link.  See the \bold{ClobberSymlinks} 
preference.

#~endhelp

AskAboutSymlinks: no


#~type string

#~views string

#~help

It is comparatively easy for a user who prefers the VI command set to the 
EMACS command set to have EZ start up with the VI command set by default. 
 Either set ez.Editor to \italic{vi} or set any one of the following 
environment variables to the string \italic{vi}: EDITOR, EDIT, ED, FCEDIT, 
VISUAL.

#~endhelp

Editor: NULL


#~type font

#~views string font

#~help

Controls the size and appearance of the font used for text in the EZ 
window.  The default is a 12 point variable width font with serifs.

#~endhelp

BodyFont: Andy12


#~type string

#~views string

#~help

Determines whether EZ makes backup files automatically, and if so, what 
extension it puts on them.  The default is no backup files unless you 
include this preference and specify an extension.  If you provide an 
extension, then when you save a file, EZ stores both a new version of your 
file and a backup version, which does not include the changes you made in 
the current EZ session; it puts your specified extension on the backup 
version.  Note that the period ("\bold{.}") that usually precedes 
extensions is not included automatically.  If you want a period (as in 
.BAK), be sure to type it in the name of your extension.  Note also that 
this kind of backup file is different from a checkpoint file, which EZ 
\italic{does} create by default.

#~endhelp

BackupExtension:


#~type string

#~views string

#~help

Determines what extension appears on checkpoint files.  Note that the 
period ("\bold{.}") that usually precedes extensions is not included 
automatically.  If you want a period (as in the default .CKP), be sure to 
type it in the name of your extension.

#~endhelp

CheckpointExtension: .CKP


#~type directory

#~views filename filechoices

#~help

Determines in which directory checkpoint files are written.  The default 
operation is to save the checkpoint file in the same directory as the file 
being edited.  By setting the checkpoint directory, you can cause all 
checkpoint files to be saved into that directory.

#~endhelp

CheckpointDirectory:


#~type boolean

#~views string boolean

#~help

Where the user has specified a CheckpointDirectory preference and this 
preference has been enabled, checkpoint filenames will take this form:


<CheckpointDirectory>/ #uid.@ful@path@name#.<CheckpointExtension>


where @ful@path@name is the name of the file being checkpointed.

#~endhelp

CheckpointGawdyNames: no


#~type integer

#~views integer slider

#~range 0 600

#~help

Determines how much time must elapse since a change was made to a buffer 
before EZ will checkpoint the buffer and save the contents in a .CKP file. 
 (See the  \italic{ez-buffers}  help document to learn about how buffers 
work.) Specifying a larger value increases the delay between occurrences of 
checkpointing. The default value is 120 seconds.  \


#~endhelp

CheckpointMinimum: 120


#~type integer

#~views integer slider

#~range 0 60

#~help

Determines how often EZ checks to see if a buffer has been modified for the 
length of time required by \bold{ez.CheckpointMinimum}.  It is not 
recommended that you change this preference; in particular, decreasing it 
only draws processing resources away from more important functions.  Change 
\bold{ez.CheckpointMinimum} instead.  The default value is 30 seconds.

#~endhelp

CheckpointInterval: 30


#~type boolean

#~views string boolean

#~help

Controls whether saving a buffer whose file is a symbolic link results in 
replacing the link with the file contents (the default), or replacing the 
link's target.  See the \bold{AskAboutSymlinks} preference.

#~endhelp

ClobberSymlinks: yes


#~type boolean

#~views string boolean

#~help

If this is set to "no" and you are trying to save a file under an new name 
that already exists, the system will prompt the user telling him that the 
file already exists and do you want to overwite it.  Its default value is 
"yes."

#~endhelp

OverwriteFiles: yes


#~type integer

#~views integer slider

#~range 1 10

#~help

Tells EZ how many windows it can open during startup.  (You can open 
multiple windows by typing \bold{\typewriter{ez}} followed by multiple file 
names.)  Any files over the maxinit number will be placed into buffers 
instead of windows.  The default is 2 windows.   \


#~endhelp

MaxInitWindows: 2


#~type boolean

#~views string boolean

#~help

Determines whether the user will be allowed to resize the message line.

#~endhelp

ResizableMessageLine: yes


#~type boolean

#~views string boolean

#~help

Determines whether the message line will grow and shrink based on it's 
contents.

#~endhelp

DynamicMessageLineSize: no


#~type integer

#~views integer slider

#~range 1 10

#~help

Sets the minimum size of the message line area in lines. \


#~endhelp

MinimumMessageLines: 1



#~type integer

#~views integer slider

#~range 1 60

#~help

Controls the length of time messages appear in the message area at the 
bottom of the EZ window.  A message will remain on the message line until 
MessageTimeout seconds have elapsed (unless another message replaces it). 
 After the required time has elapsed, the message disappears when you type 
any keystroke into the window.  The default is 15 seconds.  \


#~endhelp

MessageTimeout: 15


#~type string

#~views string

#~help

Determines the marker that is put in the window's title bar when the file 
you are editing is read-only. The default is "(readonly)".

#~endhelp

ReadOnlyTitle: (readonly)


#~type boolean

#~views string boolean

#~help

When this is set to "yes" , visit file will use the current working 
directory for the root of the prompt for a new file name.  If it is "no" it 
uses the directory of the file currently being edited in that window.  The 
default is "no."

#~endhelp

UseCurrentWorkingDirectory: no


#~type boolean

#~views string boolean

#~help

Determines whether you can make recursive edits when using the Query 
Replace and Spellchecking features of EZ.  The default setting of  "off" 
means that recursive edits are not possible; a setting of "on" makes them 
possible.


Enabling recursive edits means that you can temporarily "leave" the 
spellchecking or query replace functions to make more extensive revisions 
than is allowed within those functions.  To enter recursive edit mode in 
the Spellchecker, type \bold{e}; in Query Replace, type \bold{r}.  The 
word(s) selected by the routine are deselected, and you can edit any part 
of the document you choose.  When you are finished editing, press \bold{^C} 
(Ctrl-c) to re-enter the Spellchecker or Query Replace routine.   \


Note that the routines re-start from the current position of the text 
caret.  If you have moved the text caret past some misspelled words or 
instances of the string being replaced, they will not be found.  Also, the 
word that was selected when you entered recursive edit mode will not be 
corrected or replaced, so you must make that change by hand.

#~endhelp

ExpertMode: no


#~type boolean

#~views string boolean

#~help

Controls whether the text in the window display and printed versions of an 
EZ document  is justified on the right edge as well as the left.  The 
default "on" setting justifies both margins; a setting of "off" gives a 
ragged right margin.  Within EZ, overrides the more general \bold{justified} 
preference, if they disagree.

#~endhelp

Justified: yes


#~type integer

#~views integer slider

#~help

When a style has indicated that tabs should represent some number of spaces 
this preference sets the number of spaces.

#~endhelp

TabsCharSpaces: 8


#~type integer

#~views integer slider

#~range 1 72

#~help

Sets the numerator of the scaling factor from screen to paper of tabs when 
printing.

#~endhelp

TabScalingMultiplier: 14


#~type integer

#~views integer slider

#~range 1 72

#~help

Sets the denominator of the scaling factor from screen to paper of tabs 
when printing.

#~endhelp

TabScalingDivisor: 12


#~type boolean

#~views string boolean

#~help

Enables an experimental mode where styles are displayed on screen in a way 
similar to the way the styles would be entered with Scribe or TeX.

#~endhelp

ExposeStylesOnStartup: no


#~type boolean

#~views string boolean

#~help

When off, this preference causes style menus to be available only when 
there is a region selected; otherwise the style menus with be available at 
all times a changeable document is displayed.

#~endhelp

AlwaysDisplayStyleMenus: yes


#~type boolean

#~views string boolean

#~help

When this preference is on, if a block of text is highlighted that starts 
at the beginning of a line, the highlight goes back to the left edge of the 
inset. Also, if the end of the block is at the beginning of a line, the 
highlight will stop on the previous line, at the right edge of the inset.

#~endhelp

HighlightToBorders: no


#~type filename

#~views filename filechoices

#~help

If you have this preference specified, when you just type 'ez' without a 
filename, EZ will bring up the specified filename in whatever directory you 
are in.

#~endhelp

DefaultStartUpFile:


#~type boolean

#~views string boolean

#~help

When ez is started with no files on the command line by default a scratch 
buffer will be provided.  If this preference is set to no, you will be 
prompted for a file to edit.

#~endhelp

DefaultIsScratchBuffer: yes


#~type string list ,

#~views string stringlist

#~help

Specifies the title formats included in both the Table of Contents window 
and a printed table of contents.  See the  \italic{ez-contents } help file 
for more information.  Title formats to be included in the Table of 
Contents can also be set on a command line for  \italic{ezprint} .

#~endhelp

ContentsList: chapter,section,subsection,paragraph,function


#~type boolean

#~views string boolean

#~help

When set to yes, this will automatically enumerate printed Table of 
Contents.  See the  \italic{ez-contents } help file.

#~endhelp

AutoEnumerate: no


#~type boolean

#~views string boolean

#~help

Sorry,  I don't know what this does... (Rob Ryan)

#~endhelp

InitialChapNumber: no


#~type boolean

#~views string boolean

#~help

When set to yes, a table of contents will be included in each printed 
document, regardless of whether or not you open a Table of Contents window. 
 A "yes" setting can be overridden by a -cn switch to  \italic{ezprint} . 
  See the  \italic{ez-contents } help file.

#~endhelp

PrintContents: no


#~type filename

#~views filename filechoices

#~help

Allows you to specify an alternate tmac file for ezprint to use when 
printing.

#~endhelp

tmacFile:


#~type filename

#~views filename filechoices

#~help

Allows you to specify an alternate tmac file for ezprint to use when 
printing postscript through groff.

#~endhelp

tmacGroffFile:


#~type filename

#~views filename filechoices

#~help

Allows you to specify an alternate tmac file for ezprint to use for accents 
when printing.

#~endhelp

tmacAccentsFile:


#~type boolean

#~views string boolean

#~help

When set to yes the tmac files needed when printing a document will be 
included in the generated troff file instead of being included via .so 
directives.

#~endhelp

InlineMacros: no


#~type boolean

#~views string boolean

#~help

When set to yes footnotes will be printed as endnotes instead.

#~endhelp

Endnotes: no


#~type boolean

#~views string boolean

#~help

If set to "yes", EZ will tell troff to account for duplex printing.

#~endhelp

Duplex: no


#~type boolean

#~views string boolean

#~help

If set to "yes", EZ will use hyphenation when printing.

#~endhelp

Hyphenate: no


#~type boolean

#~views string boolean

#~help

Changing this changes how text behaves when you add it to a styled region. 
Normally when you have text within a style, like bold, when you add to the 
beginning of the style the text you add is \bold{not} in the style. When 
add to the end of the styled region, the text you add is in the style. 
(Hence the defaults listed above.) However, if you add text at the 
beginning of a paragraph, you will always pick up the style of the 
paragraph, regardless of the setting of StylesIncludeBeginning.

#~endhelp

StylesIncludeBeginning: yes


#~type boolean

#~views string boolean

#~help

Changing this changes how text behaves when you add it to a styled region. 
Normally when you have text within a style, like bold, when you add to the 
beginning of the style the text you add is \bold{not} in the style. When 
add to the end of the styled region, the text you add is in the style. 
(Hence the defaults listed above.) However, if you add text at the 
beginning of a paragraph, you will always pick up the style of the 
paragraph, regardless of the setting of StylesIncludeBeginning.

#~endhelp

StylesIncludeEnd: no


#~type directory list

#~views filename filechoices

#~help

Determines the directories where EZ looks for  templates  for text 
documents.  You can add other directories to the default path, including 
ones where you store templates you have made yourself.  To do so, place the 
full pathname(s) at the start of the list, separating each with a colon but 
no space.  Programs look for templates in the order of the directories in 
the list, stopping when they find the required template.  It is recommended 
that you include the defaults in your own list.  This preference defaults 
to the single diretory $ANDREWDIR/lib/tpls.

#~endhelp

ATKTemplatePath: \



#~type directory list

#~views filename filechoices

#~help

This is an obsolete name for the ATKTemplatePath preference.

#~endhelp

BE2TemplatePath:


#~type boolean

#~views string boolean

#~help

When this preference is set to yes, and plainer is invoked with no selected 
region, new text will be inserted in the second innermost style.  When set 
to no the innermost style will be removed if there is no selected region.

#~endhelp

UseNewStylePlainer: yes


#~type boolean

#~views string boolean

#~help

When set to yes many additional keybindings are available for dealing with 
styles, otherwise these bindings are disabled.

#~endhelp

UseStyleKeybindings: yes


#~type string

#~views string

#~help

Setting this preferences allows you to change the prefix of the style 
keybidnings, it defaults to ESC-'  The usual escape conventions are 
available for indicating control keys, and escape.

#~endhelp

StyleCommandPrefix:


#~type boolean

#~views string boolean

#~help

When set to yes forces the old text insertion rules to be used with respect 
to styles.

#~endhelp

UseOldInsertionRules: no


#~type string

#~views string

#~help

Specifies the printer to be used when printing.  This can be overridden by 
the printer options dialog, or the environment variable PRINTER.

#~endhelp

Printer:


#~type string

#~views string

#~help

Specifies the printer to be used when printing.  This can be overridden by 
the printer options dialog, or the environment variable PRINTER.  This is 
an obsolete name for the Printer preference.

#~endhelp

SpoolDir:


#~type boolean

#~views string boolean

#~help

When yes, specifies that the old dialog boxes be used, these dialogs are 
faster than the new ones in some cases, but don't look as nice.  (For info 
on the default dialog boxes see 'help dialogs'.)

#~endhelp

UseBuiltinDialogs: no


#~type integer

#~views integer slider

#~range 0 100

#~help

This is a value between 0 and 100 that controls when dialog boxes are used 
as opposed to the message line.  A value of about 30 brings up most things 
in a dialog box.

#~endhelp

DialogPriority: 50


#~type boolean

#~views string boolean

#~help

When yes, the Quit menu item will by default quit only the window it is 
chosen in.  By default this preference is no, and choosing quit will exit 
the application.

#~endhelp

QuitWindowOnly: no


#~type boolean

#~views string boolean

#~help

When both QuitWindowOnly and this preference are yes, the Quit menu item 
will by default delete the buffer and the window.  (Or only the window if 
the buffer is being viewed in other windows.)

#~endhelp

QuitBuffer: no

\enddata{text,538387208}
