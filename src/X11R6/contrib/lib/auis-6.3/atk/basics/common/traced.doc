\begindata{text,537600160}
\textdsversion{12}
\template{default}
\section{Implementation Notes for Observable Reference Counting

(The traced class)

}Class has been modified to have the Destroy classprocedure call the Destroyp 
class procedures of the class (if it exists) and any superclasses which have a 
procedure by that name.  If any of these calls return FALSE, the object is not 
destroyed.  It is important to note that all of the Destroyp class procedures 
will be called, there is no short circuit evaluation.  However, the exact 
order in which they are called should not be relied upon.


Instead of adding the reference counting code to observable a new class called 
traced has been introduced.  Any object of a class derived from traced cannot 
be destroyed until there are no references to it.  Any newly created object of 
a subclass of traced will have a reference count of 1.


The traced class has three methods:


\example{long traced_Reference(struct traced *self)\indent{

Increments the object's reference count.  Returns the previous value of the 
reference count.}

long traced_UnReference(struct traced *self)

\indent{Decrements the object's reference count.  This should be used only in 
extraordinary situations, normally the reference count is decremented by 
calling the appropriate Destroy procedure.  Returns the previous value of the 
reference count.}

long traced_ReferenceCount(struct traced *self)

\indent{Returns the value of the reference count.}}

\begindata{bp,537699904}
\enddata{bp,537699904}
\view{bpv,537699904,0,0,0}
Copyright 1992 Carnegie Mellon University All rights reserved.

\smaller{\smaller{$Disclaimer: 
# Permission to use, copy, modify, and distribute this software and its 
# documentation for any purpose is hereby granted without fee, 
# provided that the above copyright notice appear in all copies and that 
# both that copyright notice, this permission notice, and the following 
# disclaimer appear in supporting documentation, and that the names of 
# IBM, Carnegie Mellon University, and other copyright holders, not be 
# used in advertising or publicity pertaining to distribution of the software 
# without specific, written prior permission.
# 
# IBM, CARNEGIE MELLON UNIVERSITY, AND THE OTHER COPYRIGHT HOLDERS 
# DISCLAIM ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING 
# ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.  IN NO EVENT 
# SHALL IBM, CARNEGIE MELLON UNIVERSITY, OR ANY OTHER COPYRIGHT HOLDER 
# BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY 
# DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, 
# WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS 
# ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE 
# OF THIS SOFTWARE.
#  $

}}\enddata{text,537600160}
