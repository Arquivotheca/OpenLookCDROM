\begindata{text,538321152}
\textdsversion{12}
\template{be2guide}
\define{global
}
\define{underline
menu:[Font~1,Underline~41]
attr:[Flags Underline Int Set]}
\define{index
menu:[Title,Index~91]
attr:[FontFace Italic Int Set]}
\define{indexi
menu:[Title,InvisibleIndex~92]
attr:[Script PreviousScriptMovement Point -2]
attr:[Flags Hidden Int Set]
attr:[FontFace Italic Int Set]}
\formatnote{\chapter{Font Descriptor}}

\indexi{Fontdesc}


When the graphic package handles text, it uses a default font, 
\italic{AndySans12}.  If you wish to use a different font, you must call 
\italic{graphic_SetFont} and specify the font you want by giving its font 
descriptor.  The \italic{fontdesc} package provides methods and class 
procedures for creating font descriptors that you need to access the Andrew 
font library. 



\paragraph{Creating a font descriptor} \indexi{Fontdesc++Creating}

\indexi{ \italic{fontdesc_Create}}

\example{struct fontdesc *fontdesc_Create ( name, style, size)

char *name;

int16 style;

int8 size;

}
\leftindent{\bold{Class procedure description.} \italic{fontdesc_Create} 
creates a font descriptor for the font specified by \italic{name}, 
\italic{style}, and \italic{size}.  The first parameter, \italic{name} should 
be the name of a font (e.g., Andy, AndySans, etc.). 


The second parameter, \italic{style} can have one of the following values: 

\description{
\italic{fontdesc_Plain}\formatnote{ }

\italic{fontdesc_Bold}

\italic{fontdesc_Italic}\formatnote{

\italic{fontdesc_Shadow}

\italic{fontdesc_Fixed}

\italic{fontdesc_Outline}

\italic{fontdesc_Thin}

\italic{fontdesc_Black}

\italic{fontdesc_Medium}

\italic{fontdesc_Heavy}

\italic{fontdesc_Condense}}

}

The third parameter, \italic{size}, is the size of the font (e.g., 8, 10, 11, 
12, etc.). 


\bold{Return value.}  Returns a pointer to a new font descriptor; 
\smaller{NULL} on failure. 


\bold{Usage.}  This procedure is used to get a new font descriptor. 

}



\paragraph{Getting a  font name descriptor} \indexi{Fontdesc++Get name 
descriptor}

\indexi{ \italic{fontdesc_GetFontNameDesc}}

\example{struct fontnamedesc *fontdesc_GetFontNameDesc (name)

char *name;

}
\leftindent{\bold{Class procedure description.} 
 \italic{fontdesc_GetFontNameDesc} gets a font name descriptor for the 
specified font \italic{name}.  A font name descriptor is a structure 
containing a list of all fonts in a font family. 


\bold{Return value.}  Returns a pointer to a font name descriptor. 

}


\paragraph{Parsing a font name} \indexi{Fontdesc++Parsing name}

\indexi{ \italic{fontdesc_ExplodeFontName}}

\example{boolean fontdesc_ExplodeFontName(fontName, familyName,bufSize, 
fontStyle, fontSize)

char *fontName;

char *familyName;

long bufSize;

long *fontStyle;

long *fontSize;

}
\leftindent{\bold{Class procedure description.} 
 \italic{fontdesc_ExplodeFontName} attempts to parse a font name, 
\italic{fontName} into its component parts:  the familyName, the point size, 
the font style, and the buffer size.  It fills the remaining parameters with 
the results of its parts. 


\bold{Return value.}   Returns \smaller{TRUE} if explosion is successful; 
\smaller{FALSE} otherwise. 


\bold{Usage.}  \italic{fontName} should conform to Andrew font naming 
conventions (e.g., "AndySans12i]. 

}


\paragraph{Getting a font family} \indexi{Fontdesc++Get font family}

\indexi{ \italic{fontdesc_GetFontFamily}}

\example{char *fontdesc_GetFontFamily(fontdesc)

struct fontdesc *fontdesc;} 


\leftindent{\bold{Method description.}  \italic{fontdesc_GetFontFamily} gets 
the font family name from a font descriptor. 


\bold{Return value.}   A font family name. 


\bold{Usage.}  This method is used if you want to get the font family name 
only. 


}
\paragraph{Getting a font family descriptor} \indexi{Fontdesc++Get font family 
descriptor}

\indexi{ \italic{fontdesc_GetFontFamilyDesc}}

\example{struct fontnamedesc *fontdesc_GetFontFamilyDesc(fontdesc)

struct fontdesc *fontdesc;} 


\leftindent{\bold{Method description.}  \italic{fontdesc_GetFontFamilyDesc} 
gets the font family descriptor from a font descriptor. 


\bold{Return value.}  Returns a pointer to a font family. 


\bold{Usage.}  This method is used if you want the entire font family 
descriptor, not just its name. 

}
\begindata{bp,538271496}
\enddata{bp,538271496}
\view{bpv,538271496,1295,0,0}
\paragraph{Getting a font size} \indexi{Fontdesc++Get font size}

\indexi{ \italic{fontdesc_GetFontSize}}

\example{int8 fontdesc_GetFontSize(fontdesc)

struct fontdesc *fontdesc; }


\leftindent{\bold{Method description.}  \italic{fontdesc_GetFontSize} gets the 
font size from a font descriptor. 


\bold{Usage.}  This method is used to get the font size only. 


}
\paragraph{Getting a font style} \indexi{Fontdesc++Get font style}

\indexi{ \italic{fontdesc_GetFontStyle}}

\example{int16 fontdesc_GetFontStyle(fontdesc)

struct fontdesc *fontdesc; }


\leftindent{\bold{Method description.}  \italic{fontdesc_GetFontStyle} gets 
the font style from a font descriptor. 


\bold{Usage.}  This method is used to get the font style only. 


}
\paragraph{Converting a character to pixel map mode} \indexi{Fontdesc++Pixmap}

\indexi{ \italic{fontdesc_CvtCharToGraphic}}

\example{struct pixmap 
*fontdesc_CvtCharToGraphic(fontdesc,graphic,SpecialChar)

struct fontdesc *fontdesc;

struct graphic *graphic;

char SpecialChar; }


\leftindent{\bold{Method description.}  \italic{fontdesc_CvtCharToGraphic 
}converts a character to graphic format. 


\bold{Return value.}  Returns a pointer to a graphic pixmap. 


}
\paragraph{Getting the real font descriptor} \indexi{Fontdesc++Font descriptor}

\indexi{ \italic{fontdesc_GetRealFontDesc}}

\example{struct font *fontdesc_GetRealFontDesc(fontdesc, graphic)

struct fontdesc *fontdesc;

struct graphic *graphic;} 


\leftindent{\bold{Method description.}  \italic{fontdesc_GetRealFontDesc} gets 
the real font descriptor for the specified font descriptor. 


\bold{Return value.}  Returns a pointer to a font descriptor. 


\bold{Usage.}  There may be cases that the font being used is a "replacement" 
for another font; this method would get the font that was originally passed to 
the program. 

}
\begindata{bp,538269640}
\enddata{bp,538269640}
\view{bpv,538269640,1296,0,0}
\paragraph{Setting the text size} \indexi{Fontdesc++Set text size}

\indexi{ \italic{fontdesc_TextSize}}

\example{int16 fontdesc_TextSize(fontdesc, graphic, text, TextLength,

XWidth, YWidth)

struct fontdesc *fontdesc;

struct graphic *graphic;

char *text;

int16 TextLength;

int *XWidth;

int *YWidth;} 


\leftindent{\bold{Method description.}  \italic{fontdesc_TextSize} sets 
variables for a text. 


\bold{Return value.}  The value of the text size. 


\bold{Usage.} If you are working with a body of text, you can use this method 
to set the boundaries. 


}
\paragraph{Returning the font summary information} \indexi{Fontdesc++Font 
summary}

\indexi{ \italic{fontdesc_FontSummary}}

\example{struct FontSummary *fontdesc_FontSummary(fontdesc, graphic)

struct fontdesc *fontdesc;

struct graphic *graphic;} 


\leftindent{\bold{Method description.}  \italic{fontdesc_FontSummary} gets the 
font summary information, which includes the maximum character width for the 
entire font, the maximum height (above plus below for the entire font), the 
recommended newline distance, the maximum horizontal spacing, the maximum 
below for the whole font, and the maximum length to the left of the origin. 


\bold{Usage.}  If you need information about a font, you would call this 
method to get the summary. 


}
\paragraph{Getting the font width size table} \indexi{Fontdesc++Font width 
table}

\indexi{ \italic{fontdesc_WidthTable}}

\example{int16 *fontdesc_WidthTable(fontdesc, graphic)

struct fontdesc *fontdesc;

struct fontdesc *graphic;} 


\leftindent{\bold{Method description.}  \italic{fontdesc_WidthTable} returns a 
 table of widths for all characters in a font. 


\bold{Return value.}  Returns an array representing the font width table. 


\bold{Usage.}  If you need to know how wide each character in a font will be, 
this method will get you that information. 

}
\begindata{bp,538271624}
\enddata{bp,538271624}
\view{bpv,538271624,1297,0,0}
\paragraph{Getting the font height size table} \indexi{Fontdesc++Font height 
table}

\indexi{ \italic{fontdesc_HeightTable}}

\example{int16 *fontdesc_HeightTable(fontdesc, graphic)

struct fontdesc *fontdesc;

struct graphic *graphic;} 


\leftindent{\bold{Method description.} \italic{fontdesc_HeightTable} returns a 
 table of heights for all characters in a font. 


\bold{Return value.}  Returns an array representing the font height table. 


\bold{Usage.}   If you need to know how high each character in a font will be, 
this method will get you that information. 


}
\paragraph{Getting the size of a string} \indexi{Fontdesc++String size}

\indexi{ \italic{fontdesc_StringSize}}

\example{long fontdesc_StringSize(fontdesc, graphic, string,

	XWidth, YWidth)

struct fontdesc *fontdesc;

struct graphic *graphic;

register unsigned char *string;

register long *XWidth;

register long *YWidth;} 


\leftindent{\bold{Method description.}  Gets the size of a text string. 

}

\paragraph{Getting the summary table for a character} 
\indexi{Fontdesc++Character table}

\indexi{ \italic{fontdesc_CharSummary}}

\example{void fontdesc_CharSummary(fontdesc,gr,LookUpChar,RetValue)

struct fontdesc *fontdesc;

struct graphic *gr;

char LookUpChar;

struct fontdesc_charInfo *RetValue;} 


\leftindent{
\bold{Method description.}  Returns the font descriptor character summary 
table for a character. 

}

\begindata{bp,537558784}
\enddata{bp,537558784}
\view{bpv,537558784,1299,0,0}
Copyright 1992 Carnegie Mellon University and IBM.  All rights reserved.

\smaller{\smaller{$Disclaimer: 

Permission to use, copy, modify, and distribute this software and its 

documentation for any purpose is hereby granted without fee, 

provided that the above copyright notice appear in all copies and that 

both that copyright notice, this permission notice, and the following 

disclaimer appear in supporting documentation, and that the names of 

IBM, Carnegie Mellon University, and other copyright holders, not be 

used in advertising or publicity pertaining to distribution of the software 

without specific, written prior permission.



IBM, CARNEGIE MELLON UNIVERSITY, AND THE OTHER COPYRIGHT HOLDERS 

DISCLAIM ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING 

ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.  IN NO EVENT 

SHALL IBM, CARNEGIE MELLON UNIVERSITY, OR ANY OTHER COPYRIGHT HOLDER 

BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY 

DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, 

WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS 

ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE 

OF THIS SOFTWARE.

 $

}}\enddata{text,538321152}
