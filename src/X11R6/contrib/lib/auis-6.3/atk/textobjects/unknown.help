\begindata{text,537994484}
\textdsversion{12}
\template{help}
\chapter{The 'Unknown' Inset: Interoperation with future AUIS releases

}
\section{What Unknown is

}\leftindent{
The unknown inset is an inset which is substituted when a document calls 
for an inset which your current version of AUIS does not support. (Or which 
simply isn't installed at your site.)

}
\section{Starting Unknown

}\leftindent{
The unknown inset is introduced automatically when an unavailable inset is 
included in a document.  The unknown inset informs you of the problem, and 
will optionally allow you to save or view the original data.

}
\section{Warnings

}\leftindent{
If a document containing unavailable insets is read in, it may not behave 
properly.  But, with the unknown inset in place the application should not 
coredump because of an unavailable inset.  Saving a document read in when 
one or more of it's insets were unavailable may result in the corruption of 
the document and the included data.  Manual intervention may be able to 
restore the document to it's original form, but this is not guaranteed. 
 Documents should generally only be edited with an installation of AUIS 
which has all the insets needed.

}
\section{Menu meanings

}\leftindent{
The unknown inset presents a single card of menus, the "Unknown" card.  The 
options on this menu card include:


Save Raw Data, saves the raw data for the unavailable inset into a 
specified file.  You can then use ^X ESC v (the default binding for 
frame-visit-file-uninterpretted), to view and edit the data.  It is not 
possible to modify the data as it appears in the original document unless 
you use ^X ESC v to edit it in raw mode.


Display Raw Data, copies the raw data for the unavailable inset into the 
text which is displayed in place of the unavailable inset.  Note that 
editing this data is not possible.

}

\section{Manual Recovery}


\leftindent{It may become necessary to repair a document for use with a 
later version of AUIS after it has been saved by an older version.  For 
example, consider a doucment created with AUIS 7.0 with a 'foobar' inset. 
 It is then read in and saved with an AUIS 6.3 application.  The 'foobar' 
inset is now wrapped in an unknown inset.  This prevents any corruption of 
the foobar data from crashing an AUIS 7.0 application which might read it 
subsequently.  In the simplest case recovering the original appearance of 
the document is as simple as editing it in raw mode (e.g. with ^X ESC v) 
and removing the lines like:


\\begindata\{unknown,82728\}

\\enddata\{unknown,82728\}


Where the number 82728 is probably something else, but will vary.  After 
removing these lines simply run ez on the resulting file.  The ez program 
may crash though, so it is advised that you use an ez which does not have 
any unsaved changes in it's buffers.  This procedure will work as long as 
the object is self contained and is not referred to by other insets and 
does not reference other insets.  If there are such references the recovery 
process is dependent on the specific inset, the best guide in these cases 
is the source code for the inset. }\




\section{Program Author}

\leftindent{\leftindent{
}Robert Ryan

}
\section{Related tools}  \



Select (highlight) one of the italicized names and choose "Show Help on 
Selected Word" from the pop-up menu to see the help file for:


\leftindent{\helptopic{ez}

}\enddata{text,537994484}
