\begindata{text,538282208}
\textdsversion{12}
\template{be2guide}
\define{global
}
\define{underline
menu:[Font~1,Underline~41]
attr:[Flags Underline Int Set]}
\define{index
menu:[Title,Index~91]
attr:[FontFace Italic Int Set]}
\define{indexi
menu:[Title,InvisibleIndex~92]
attr:[Script PreviousScriptMovement Point -2]
attr:[FontFace Italic Int Set]}
\define{fixedtext
menu:[Region~4,Fixedtext]
attr:[Justification LeftJustified Point 0]
attr:[FontFace FixedFace Int Set]
attr:[FontFamily AndyType Int 0]
attr:[FontSize ConstantFontSize Point 10]}
\define{fixedindent
menu:[Region~4,Fixedindent]
attr:[LeftMargin LeftMargin Cm 83230]
attr:[Justification LeftJustified Point 0]
attr:[FontFace FixedFace Int Set]
attr:[FontFamily AndyType Int 0]
attr:[FontSize ConstantFontSize Point 10]}
\define{paramname
menu:[Font~1,Paramname]
attr:[FontFace Italic Int Set]}
\formatnote{\chapter{Tree23}}\indexi{Tree23 class}


The 23 tree structure is used to manage styles in the Andrew Toolkit.  The 
class \italic{tree23int }provides the methods and class procedures for working 
with 23 trees.  A corresponding internal 23 tree is managed by the class 
\italic{tree23int.} 


\section{Quick reference list for Tree23}



\fixedtext{void \bold{tree23int_}AddIn }\fixedindent{(struct tree23int 
*\paramname{tree23int}, long \paramname{offset}, struct tree23int 
*\paramname{newnode});} 

\fixedtext{struct tree23int *\bold{tree23int_}Allocate }\fixedindent{();} 

\fixedtext{void \bold{tree23int_}Apply }\fixedindent{(struct tree23int 
*\paramname{tree23int}, procedure \paramname{proc});} 

\fixedtext{void \bold{tree23int_}Deallocate }\fixedindent{();} 

\fixedtext{struct tree23int *\bold{tree23int_}Delete }\fixedindent{(struct 
tree23int *\paramname{tree23int});} 

\fixedtext{void \bold{tree23int_}Dump }\fixedindent{(struct tree23int 
*\paramname{tree23int}, long \paramname{offset});} 

\fixedtext{long \bold{tree23int_}Enumerate }\fixedindent{(struct tree23int 
*\paramname{tree23int}, procedure \paramname{proc}, char 
*\paramname{procdata});} 

\fixedtext{long \bold{tree23int_}Eval }\fixedindent{(struct tree23int 
*\paramname{tree23int});} 

\fixedtext{void \bold{tree23int_}Filter }\fixedindent{(struct tree23int 
*\paramname{tree23int}, long \paramname{offset}, struct tree23int 
*\paramname{left}, struct tree23int *\paramname{right}, long 
\paramname{lowval}, long \paramname{highval}, procedure \paramname{proc}, char 
*\paramname{procdata});} 

\fixedtext{long \bold{tree23int_}FindL }\fixedindent{(struct tree23int 
*\paramname{tree23int}, long \paramname{offset}, long \paramname{key});} 

\fixedtext{long \bold{tree23int_}FindR }\fixedindent{(struct tree23int 
*\paramname{tree23int}, long \paramname{offset}, long \paramname{key});} 

\fixedtext{void \bold{tree23int_}Free }\fixedindent{(struct tree23int 
*\paramname{tree23int});} 

\fixedtext{struct tree23int *\bold{tree23int_}GetLeftMostNode 
}\fixedindent{(struct tree23int *\paramname{tree23int});} 

\fixedtext{struct tree23int *\bold{tree23int_}GetNextNode 
}\fixedindent{(struct tree23int *\paramname{tree23int}, struct tree23int 
*\paramname{node});} 

\fixedtext{struct tree23int *\bold{tree23int_}Insert }\fixedindent{(struct 
tree23int *\paramname{tree23int}, long \paramname{key}, long 
\paramname{data});} 

\fixedtext{void \bold{tree23int_}Jam }\fixedindent{(struct tree23int 
*\paramname{tree23int}, struct tree23int *\paramname{newnode});} 

\fixedtext{void \bold{tree23int_}Merge }\fixedindent{(struct tree23int 
*\paramname{tree23int}, struct tree23int *\paramname{ancestor}, long 
\paramname{offset}, procedure \paramname{proc}, char *\paramname{procdata});} 

\fixedtext{long \bold{tree23int_}NumberOfLeaves }\fixedindent{(struct 
tree23int *\paramname{tree23int});} 

\fixedtext{struct tree23int *\bold{tree23int_}Remove }\fixedindent{(struct 
tree23int *\paramname{tree23int}, struct tree23int *\paramname{child});} 

\fixedtext{void \bold{tree23int_}Twiddle }\fixedindent{(struct tree23int 
*\paramname{tree23int}, struct tree23int *\paramname{child});} 

\fixedtext{void \bold{tree23int_}Update }\fixedindent{(struct tree23int 
*\paramname{tree23int}, long \paramname{pos}, long \paramname{size});} 




\paragraph{Creating an instance of a 23 tree} \indexi{ \italic{tree23int_New}}

\example{struct tree23int_New(tree23)

struct tree23int *tree23int;} 


\leftindent{\bold{Class procedure description.  }\italic{tree23int_New} 
creates an instance of a 23 tree. 


\bold{Return value.}  A pointer to the new tree.} 



\paragraph{Applying a procedure to the tree} \indexi{ \italic{tree23int_Apply}}

\example{void tree23int_Apply(tree23int, proc)

struct tree23int *tree23int;

procedure proc; }


\leftindent{\bold{Method description.  }  \italic{tree23int_Apply} applies a 
procedure to a 23 tree. 


}
\paragraph{Deleting a tree} \indexi{ \italic{tree23int_Delete}}

\example{struct tree23intint *tree23int_Delete(tree23int)

struct tree23int *tree23int;} 


\leftindent{\bold{Method description.  }  \italic{tree23int_Delete} deletes 
all the leaves on a 23 tree. 


\bold{Return value.}  A pointer to the internal 23 tree.} 


\begindata{bp,538927880}
\enddata{bp,538927880}
\view{bpv,538927880,412,0,0}
\paragraph{Evaluating a tree} \indexi{ \italic{tree23int_Eval}}

\example{long tree23int_Eval(tree23int)

struct tree23int *tree23int;} 


\leftindent{\bold{Method description.  }  \italic{tree23int_Eval} evaluates a 
23 tree. 


}
\paragraph{Filtering a tree} \indexi{ \italic{tree23int_Filter}}

\example{void tree23int_Filter(tree23int, offset, left, right, lowval, 
highval,

proc, procdata)

struct tree23int *tree23int;

long offset;

struct tree23intint *left;

struct tree23int *right;

long lowval;

long highval;

procedure proc;

char *procdata;

}

\leftindent{\bold{Method description.  }  \italic{tree23int_Filter} filters a 
procedure through the tree. 

}

\paragraph{Finding the L} \indexi{ \italic{tree23int_FindL}}

\example{long tree23int_FindL(tree23int, offset, key)

struct tree23int *tree23int;

long offset;

long key;} 


\leftindent{\bold{Method description.  }  \italic{tree23int_FindL} finds the 
left branch of the 23 tree. 


}
\paragraph{Finding the R} \indexi{ \italic{tree23int_FindR}}

\example{long tree23int_FindR(tree23int, offset, key)

struct tree23int *tree23int;

long offset;

long key; }


\leftindent{\bold{Method description.  }  \italic{tree23int_FindR} finds the 
right branch on the 23 tree.} 

\begindata{bp,538927816}
\enddata{bp,538927816}
\view{bpv,538927816,413,0,0}
\paragraph{Freeing a tree} \indexi{ \italic{tree23int_Free}}

\example{void tree23int_Free(tree23int)

struct tree23int *tree23int; }


\leftindent{\bold{Method description.  }  \italic{tree23int_Free} frees a 
tree. 

}

\paragraph{Inserting a key}

 \indexi{ \italic{tree23int_Insert}}

\example{struct tree23int *tree23int_Insert(tree23int, key, data)

struct tree23int *tree23int;

long key;

long data;} 


\leftindent{\bold{Method description.  }  \italic{tree23int_Insert} inserts a 
key into the tree structure. 


\bold{Return value.}  Returns a pointer to the tree. 


}
\paragraph{Merging a tree} \indexi{ \italic{tree23int_Merge}}

\example{void tree23int_Merge(tree23int, ancestor, offset, proc, procdata)

struct tree23int *tree23int;

struct tree23intint *ancestor;

long offset;

procedure proc;

char *procdata; }


\leftindent{\bold{Method description.  }  \italic{tree23int_Merge} merges a 23 
tree with its internal structure. 

}

\paragraph{Updating a tree} \indexi{ \italic{tree23int_Update}}

\example{void tree23int_Update(tree23int, pos, size)

struct tree23int *tree23int;

long pos;

long size;} 


\leftindent{\bold{Method description.  }  \italic{tree23int_Update} updates a 
23 tree.} 


\begindata{bp,538927688}
\enddata{bp,538927688}
\view{bpv,538927688,414,0,0}
\paragraph{Passing a procedure along a tree} 
\indexi{ \italic{tree23int_Enumerate}}

\example{long tree23int_Enumerate(tree23int, proc, procdata)

    struct tree23int *tree23int;

    procedure proc;

    char *procdata;} 


\leftindent{\bold{Method description.  }  \italic{tree23int_Enumerate} parses 
a procedure through the tree. 

}

\paragraph{Finding the number of leaves on the tree} 
\indexi{ \italic{tree23int_NumberOfLeaves}}

\example{long tree23int_NumberOfLeaves(tree23int)

    struct tree23int *tree23int;} 


\leftindent{\bold{Method description.  }  \italic{tree23int_NumberOfLeaves} 
finds how many elements are on the branches of the entire tree. 


\bold{Return value.}  The number of leaves. 


}
\paragraph{Dumping a tree} \indexi{ \italic{tree23int_Dump}}

\example{void tree23int_Dump(tree23int, offset)

struct tree23int *tree23int;

long offset;} 


\leftindent{\bold{Method description.  }  \italic{tree23int_Dump} dumps a 
tree. 

}

\paragraph{Creating a jam leaf in a tree} \indexi{ \italic{tree23int_Jam}}

\example{void tree23int_Jam(tree23int, newnode)

struct tree23int *tree23int;

struct tree23 *newnode;} 


\leftindent{\bold{Method description.  }  \italic{tree23int_Jam} creates  leaf 
in the internal tree at the \italic{newnode}.} 


\begindata{bp,538927752}
\enddata{bp,538927752}
\view{bpv,538927752,415,0,0}
\paragraph{Removing a leaf from the tree} \indexi{ \italic{tree23int_Remove}}

\example{struct tree23int *tree23int_Remove(tree23int, child)

struct tree23int *tree23int;

struct tree23 *child;} 


\leftindent{\bold{Method description.  }  \italic{tree23int_Remove} removes a 
leaf (child) from the internal 23 tree. 


\bold{Return value.}  A pointer to the tree. 

}

\paragraph{Twiddle a tree} \indexi{ \italic{tree23int_Twiddle}}

\example{void tree23int_Twiddle(tree23int, child)

struct tree23int *tree23int;

struct tree23 *child; }


\leftindent{\bold{Method description.  }  \italic{tree23int_Twiddle} places a 
child leaf on the tree.} 



\paragraph{Getting the left most node} 
\indexi{ \italic{tree23int_GetLeftMostNode}}

\example{struct tree23int *tree23int_GetLeftMostNode(tree23int)

struct tree23int *tree23int;} 


\leftindent{\bold{Method description.  }  Gets the left most node in the tree. 




}

\paragraph{Getting the next node} \indexi{ \italic{tree23int_GetNextNode}}

\example{struct tree23int *tree23int_GetNextNode(tree23int,node)

struct tree23int *tree23int;

struct tree23int *node;} 


\leftindent{\bold{Method description.  }  Gets the next node in the tree.} 




\begindata{bp,537558784}
\enddata{bp,537558784}
\view{bpv,537558784,417,0,0}
Copyright 1992 Carnegie Mellon University and IBM.  All rights reserved.

\smaller{\smaller{$Disclaimer: 

Permission to use, copy, modify, and distribute this software and its 

documentation for any purpose is hereby granted without fee, 

provided that the above copyright notice appear in all copies and that 

both that copyright notice, this permission notice, and the following 

disclaimer appear in supporting documentation, and that the names of 

IBM, Carnegie Mellon University, and other copyright holders, not be 

used in advertising or publicity pertaining to distribution of the software 

without specific, written prior permission.



IBM, CARNEGIE MELLON UNIVERSITY, AND THE OTHER COPYRIGHT HOLDERS 

DISCLAIM ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING 

ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.  IN NO EVENT 

SHALL IBM, CARNEGIE MELLON UNIVERSITY, OR ANY OTHER COPYRIGHT HOLDER 

BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY 

DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, 

WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS 

ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE 

OF THIS SOFTWARE.

 $

}}\enddata{text,538282208}
