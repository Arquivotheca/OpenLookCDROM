\begindata{text,538529656}
\textdsversion{12}
\template{default}
\define{global
}
\define{fixedindent
}
\define{fixedtext
}
\define{paramname
}
\define{fieldheading
}
\define{fieldtext
}
\chapter{text state vector}


The text state vector holds a complete snapshot of text formatting,  It is 
used by the printing routines to hold the current formatting and the 
formatting of the newly entered style.  It is also used as a convenient way to 
view a formatting environment.


\section{About this section}


This section currently contains only the most important information on using 
tabs in conjunction with text state vectors.  It really should contain more 
details.


\section{About \italic{struct text_statevector}}


\fixedindent{struct text_statevector \{

    long CurLeftMargin;

    long CurRightMargin;

    long CurRightEdge;

    long CurLeftEdge;

    long CurTopMargin;

    long CurBottomMargin;

    long CurFontAttributes;

    long CurScriptMovement;

    long CurFontSize;

    long CurIndentation;

    enum style_Justification CurJustification;

    long CurSpacing;

    long CurSpread;

    long SpecialFlags;

    struct fontdesc *CurCachedFont;

    char *CurFontFamily;

/* 

    struct dfamily * CurFontFamily;

    struct dfont * CurCachedFont;

 */

    struct tabs *tabs;

    struct view * CurView;		/* Pointer to view wrapped in the environment */

    char *CurColor;			/* Color for embedded text */

\};


}

\section{Related classes}


The text_statevector structure is related to the \italic{style} class and the 
\italic{text} class.  It is used to implement \italic{text} and 
\italic{textview} objects.


\section{Using \italic{struct text_statevector}}


The most common use of tabs occurs within the text_statevector structure.  It 
is vitally important that care is exercised when using tabs and state vectors. 
 You should do subtly different things for the three cases: initialized state 
vectors, copied read-only state vectors, and copied read-write state vectors.


When a state vector is initialized with text_InitStateVector, it receives a 
default tabs structure.  It is a good idea to call text_FinalizeState vector 
when you are finished with a state vector initialized in this way so that the 
link count of tabs will be kept correctly.


A common use of the text_statevector structure is to receive details about a 
style environment.  In the read-only case, copying in its contents as follows:



\fixedindent{struct text_statevector oldsv, newsv;

newsv = oldsv;

}
is perfectly fine.  Such state vectors as newsv can be created on the stack 
and allowed to dissappear with no ill effects on tabs.


If, however, it is expected that either the old or new state vectors are to be 
modified, it is important to take care of the tabs link counts through proper 
use of tabs_Death and text_FinalizeStateVector.


Moving the above example into the read-write case: if 
\italic{text_FinalizeStateVector} is called on \typewriter{oldsv}, the tabs 
structure of \typewriter{newsv} may dissappear.  For this reason, the state 
vector should be copied as follows:


\fixedindent{text_InitializeStateVector(&newsv); \italic{/* give newsv its own 
tabs */}

text_InitializeStateVector(&oldsv); \italic{/* give oldsv its own tabs */}

\italic{/* Code goes here that modifies the tabs of newsv */}

tabs_Death(newsv.tabs);	\italic{/* newsv's tabs are going away */}

newsv = oldsv;	/* copy everything else */

newsv.tabs = tabs_Copy(oldsv.tabs);	\italic{/* copy in the tabs */}

text_FinalizeStateVector(&oldsv);	\italic{/* We're done with oldsv */}

\italic{/* Code goes here that uses newsv */}

text_FinalizeStateVector(&newsv); \italic{/* We're totally done with newsv */}

}
\section{Author

}
Bill Cattey,

wdc@athena.mit.edu


\begindata{bp,538271624}
\enddata{bp,538271624}
\view{bpv,538271624,195,0,0}
\section{\italic{text} functions} (taken from text.doc)


______________________________________________________				


\paragraph{text_ApplyEnvironment} \indexi{ \italic{text_ApplyEnvironment}}				


\majorheading{Function description}

______________________________________________________


\fixedtext{void \bold{text_ApplyEnvironment }(}

\fixedindent{struct text_statevector *\paramname{sv},

struct style *\paramname{defaultStyle},

struct environment *\paramname{env});}


\fieldheading{Category}

\fieldtext{Classprocedure}



\fieldheading{Description}   

\fieldtext{Takes the state vector, \paramname{sv}, and the environment, 
\paramname{env}, and modifies \paramname{sv} so that it reflects the 
application of \paramname{env}.  The parameter \paramname{defaultStyle} 
specifies the default style; it can be NULL.}



\fieldheading{See Also}

\fieldtext{\paramname{textview_GetDefaultStyle}.}

\begindata{bp,538271560}
\enddata{bp,538271560}
\view{bpv,538271560,196,0,0}___________________________________________________\
____				


\paragraph{text_FinalizeStateVector}\indexi{\italic{text_FinalizeStateVector}}	
			


\majorheading{Finalize the state vector}

______________________________________________________


\fixedtext{void \bold{text_FinalizeStateVector }(}

\fixedindent{struct text_statevector *\paramname{sv});}


\fieldheading{Category}

\fieldtext{Classprocedure}



\fieldheading{Description}   

\fieldtext{Make the state vector go away.  Actually, it just calls tabs_Death 
on the tabs component.}

\fieldheading{
Usage}

\fieldtext{Call \italic{text_FinalizeStateVector} when you are through with 
using a state vector.  Call it only on a state vector that has been 
initialized with \italic{text_InitializeStateVector}. Otherwise a nonexistant 
tabs component will be destroyed.}

\begindata{bp,538271496}
\enddata{bp,538271496}
\view{bpv,538271496,197,0,0}___________________________________________________\
____				


\paragraph{text_InitStateVector} \indexi{ \italic{text_InitStateVector}}				


\majorheading{Initialize the state vector}

______________________________________________________


\fixedtext{void \bold{text_InitStateVector }(}

\fixedindent{struct text_statevector *\paramname{sv});}


\fieldheading{Category}

\fieldtext{Classprocedure}



\fieldheading{Description}   

\fieldtext{Initializes  the environment state vector for text and controls 
formatting of the text.  Attributes set by this procedure include margins, 
indentations, spacings, spread, flags, fonts, justifications, 
tabs.}\fieldtext{

}

\begindata{bp,537558784}
\enddata{bp,537558784}
\view{bpv,537558784,199,0,0}
Copyright 1992 Carnegie Mellon University and IBM.  All rights reserved.

\smaller{\smaller{$Disclaimer: 

Permission to use, copy, modify, and distribute this software and its 

documentation for any purpose is hereby granted without fee, 

provided that the above copyright notice appear in all copies and that 

both that copyright notice, this permission notice, and the following 

disclaimer appear in supporting documentation, and that the names of 

IBM, Carnegie Mellon University, and other copyright holders, not be 

used in advertising or publicity pertaining to distribution of the software 

without specific, written prior permission.



IBM, CARNEGIE MELLON UNIVERSITY, AND THE OTHER COPYRIGHT HOLDERS 

DISCLAIM ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING 

ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.  IN NO EVENT 

SHALL IBM, CARNEGIE MELLON UNIVERSITY, OR ANY OTHER COPYRIGHT HOLDER 

BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY 

DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, 

WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS 

ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE 

OF THIS SOFTWARE.

 $

}}\enddata{text,538529656}
