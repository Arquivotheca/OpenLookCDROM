#ifndef XCOMM
#ifdef GNU_CPP_ENV
#define XCOMM \#
#else
#define XCOMM #
#endif
#endif
#include <aconcat.h>
XCOMM  $Id: imake.tmpl,v 1.75 1994/04/22 17:44:51 rr2b Exp $
XCOMM ==================================================
XCOMM  Copyright IBM Corporation 1988,1991 - All Rights Reserved
XCOMM  For full copyright information see:'andrew/config/COPYRITE'     
XCOMM ==================================================

XCOMM ##################################################
XCOMM  This Makefile is automatically generated by 
XCOMM  imake... do not modify or you may lose your 
XCOMM  changes when imake generates makefiles again.
XCOMM  Ignore this message if you are not using imake.
XCOMM ##################################################

XCOMM  $Disclaimer: 
XCOMM Permission to use, copy, modify, and distribute this software and its 
XCOMM documentation for any purpose is hereby granted without fee, 
XCOMM provided that the above copyright notice appear in all copies and that 
XCOMM both that copyright notice, this permission notice, and the following 
XCOMM disclaimer appear in supporting documentation, and that the names of 
XCOMM IBM, Carnegie Mellon University, and other copyright holders, not be 
XCOMM used in advertising or publicity pertaining to distribution of the software 
XCOMM without specific, written prior permission.
XCOMM 
XCOMM IBM, CARNEGIE MELLON UNIVERSITY, AND THE OTHER COPYRIGHT HOLDERS 
XCOMM DISCLAIM ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING 
XCOMM ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.  IN NO EVENT 
XCOMM SHALL IBM, CARNEGIE MELLON UNIVERSITY, OR ANY OTHER COPYRIGHT HOLDER 
XCOMM BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY 
XCOMM DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, 
XCOMM WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS 
XCOMM ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE 
XCOMM OF THIS SOFTWARE.
XCOMM  $ 

.SUFFIXES: .PS .do .o .ih .eh .fwm .snf .rtx .c .s .spp .y .l .ch .mss .fdb .bdf .fb .pcf

#ifdef ConstructMFLAGS
         MFLAGS = -$(MAKEFLAGS)
#endif /* ConstructMFLAGS */

        ALL_INCLUDES = -I. $(LOCALINCLUDES) $(INCLUDES)
        ALL_DEFINES = $(STD_DEFINES) $(DEFINES)
        CFLAGS = $(COMPILERFLAGS) $(CDEBUGFLAGS) $(ALL_INCLUDES) $(ALL_DEFINES)
        TESTING_CFLAGS = -DTESTINGONLYTESTING $(CFLAGS)
        CLASSFLAGS = $(CLASSINCLUDES)

        LDFLAGS = $(RESOLVLIB) \
		$(NETLIBS) \
		$(SUPLIBS) \
		$(SYS_LIBRARIES)

        CLASSLDFLAGS = $(CLASSLIB) \
		$(XLIB) \
		$(LDFLAGS) \
		$(SHARED_LIB_PATH) \
		$(DYN_LINK_LIB)



XCOMM ##################################################
XCOMM  The following comes from the platform.tmpl
XCOMM ##################################################
#include <platform.tmpl>
XCOMM ##################################################
XCOMM  Back from platform.tmpl
XCOMM ##################################################


#ifndef LINKINSTALL_ENV
INSTMODEFLAGS = -c -m
#endif
        INSTUIDFLAGS = $(INSTMODEFLAGS) 4755
#if defined(hpux) && (HP_OS >= 80)
        INSTDOFLAGS = $(INSTMODEFLAGS) 0555
        INSTLIBFLAGS = $(INSTMODEFLAGS) 0775
#else
        INSTLIBFLAGS = $(INSTMODEFLAGS) 0664
        INSTDOFLAGS = $(INSTMODEFLAGS) 0444
#endif
        INSTINCFLAGS = $(INSTMODEFLAGS) 0444
        INSTMANFLAGS = $(INSTMODEFLAGS) 0444
        INSTAPPFLAGS = $(INSTMODEFLAGS) 0444
        INSTPROGFLAGS = $(INSTMODEFLAGS) 0555
        INSTPROGRWFLAGS = $(INSTMODEFLAGS) 0755
        INSTCLASSPROGFLAGS = $(INSTPROGFLAGS)

        AFSUTILS = $(BASEDIR)/lib/libafs.a

MACROFILE = MacroIncludeFile

#ifdef AFS_ENV
#if defined(CMUCS)
        AFSUTILS = $(BASEDIR)/lib/libafs.a ${AFSBASEDIR}/lib/afs/util.a
#endif
#ifdef AFS30_ENV
#ifdef AFS31_ENV
        DESLIB = $(AFSBASEDIR)/lib/libdes.a
        PRSLIB = $(AFSBASEDIR)/lib/afs/libprot.a \
	$(AFSBASEDIR)/lib/libubik.a \
	$(AFSBASEDIR)/lib/afs/libauth.a \
	$(AFSBASEDIR)/lib/librxkad.a \
	$(AFSBASEDIR)/lib/librx.a \
	$(AFSBASEDIR)/lib/liblwp.a \
	$(AFSBASEDIR)/lib/afs/libcom_err.a \
	$(KRBLIB) $(DESLIB) $(AFSUTILS)
#else /* #ifdef AFS31_ENV */
        PRSLIB = $(AFSBASEDIR)/lib/afs/libprot.a \
      	$(AFSBASEDIR)/lib/libubik.a \
      	$(AFSBASEDIR)/lib/librx.a \
      	$(AFSBASEDIR)/lib/afs/libauth.a \
      	$(AFSBASEDIR)/lib/librxkad.a \
      	$(AFSBASEDIR)/lib/liblwp.a \
	$(AFSBASEDIR)/lib/libscrypt.a \
	$(AFSBASEDIR)/lib/afs/libcom_err.a \
	 $(AFSUTILS)
#endif /* #ifdef AFS31_ENV */
#else /* #ifdef AFS30_ENV */
        PRSLIB = 
#endif /* #ifdef AFS30_ENV */
#ifndef CMUCS
        AFSSYSLIB = $(AFSBASEDIR)/lib/afs/libsys.a
#else
        AFSSYSLIB = $(AFSBASEDIR)/lib/afs/libafssys.a
#endif
        UTILLIB = $(BASEDIR)/lib/libutil.a \
	$(AFSBASEDIR)/lib/afs/libauth.a \
	$(AFSSYSLIB) \
	$(AFSBASEDIR)/lib/librx.a \
	$(AFSBASEDIR)/lib/librxkad.a \
	$(AFSBASEDIR)/lib/liblwp.a \
	$(DESLIB) $(AFSUTILS)
#else /* #ifdef AFS_ENV */
        UTILLIB = $(BASEDIR)/lib/libutil.a $(BASEDIR)/lib/libafs.a
        PRSLIB =
#endif /* AFS_ENV */

#ifdef ANDREW_MALLOC_ENV
#ifdef DEBUG_MALLOC_ENV
        MALLOCLIB = $(BASEDIR)/lib/libplumber.a
#else /* DEBUG_MALLOC_ENV */
        MALLOCLIB = $(BASEDIR)/lib/libmalloc.a
#endif /* DEBUG_MALLOC_ENV */
#else /* ANDREW_MALLOC_ENV */
/* 
This should actually be the empty string but needs changes to code 
to enable it to work.
*/
        MALLOCLIB = 
#endif /* ANDREW_MALLOC_ENV */

/* end changeable items */

/* XXX - Need to make this conform to our idea of the macros in force. */
        IMAKE_CMD = $(IMAKE) -Timake.tmpl -I. -I$(IRULESRC) -s Makefile
        DOTDOTIMAKE_CMD = $(IMAKE) -Timake.tmpl -I. -I../$(IRULESRC) -s Makefile


XCOMM ##################################################
XCOMM  The following comes from andrew.rls
XCOMM ##################################################
#include "andrew.rls"
XCOMM ##################################################
XCOMM  Back from andrew.rls
XCOMM ##################################################

All:: all
Doc:: doc
doc:: install.doc
Aliases:: aliases
aliases:: install.alias
Install:: install
install:: all install.time doc
system: Install
World:: world
world:: depend install
Tidy:: tidy
Clean:: clean
clean:: tidy

dependInstall:: depend
	make DESTDIR=$(DESTDIR) install

dependAll:: depend
	make DESTDIR=$(DESTDIR) all

depend::
all::

dependInstallClean:: depend install clean

GenericCleanTarget()
MakefileTarget()
TagsTarget()

XCOMM ##################################################
XCOMM  The following comes from the local Imakefile
XCOMM ##################################################
#include INCLUDE_IMAKEFILE
XCOMM ##################################################
XCOMM  Back from the local Imakefile
XCOMM ##################################################

SharedObjects()

Makefiles:: Makefile

#ifdef IHaveSubdirs

dependInstallClean::
	@case '$(MFLAGS)' in *[ik]*) set +e;; esac; \
	for i in $(SUBDIRS); \
	do \
	(cd $$i; echo "building (dependInstall) (`pwd`)"; \
	$(MAKE) $(MFLAGS) DESTDIR='$(DESTDIR)' dependInstallClean) \
	done

MakeSubdirs($(SUBDIRS) $(EXTRASUBDIRS))
DependMakeSubdirs($(SUBDIRS) $(EXTRASUBDIRS))
InstallSubdirs($(SUBDIRS))
InstallDocSubdirs($(SUBDIRS))
InstallAliasSubdirs($(SUBDIRS))
DependInstallSubdirs($(SUBDIRS))
WorldInstallSubdirs($(SUBDIRS))
CleanSubdirs($(SUBDIRS) $(EXTRASUBDIRS))
TidySubdirs($(SUBDIRS) $(EXTRASUBDIRS))
TagSubdirs($(SUBDIRS) $(EXTRASUBDIRS))
MakefileSubdirs($(SUBDIRS) $(EXTRASUBDIRS))

#endif /* IHaveSubdirs */

install.time::
	touch install.time

install.doc::
	touch install.doc

install.alias::

listdirs:
	@echo ${SUBDIRS}

XCOMM ##### DEPENDENCY LINE - DO NOT DELETE #####
