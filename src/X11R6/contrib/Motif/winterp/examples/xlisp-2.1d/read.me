# 
# Copyright (C) 1994, Enterprise Integration Technologies Corp. and Niels Mayer.
# WINTERP 1.15-1.99, Copyright (c) 1993, Niels P. Mayer.
# WINTERP 1.0-1.14, Copyright (c) 1989-1992 Hewlett-Packard Co. and Niels Mayer.
# XLISP-STAT 2.1 Copyright (c) 1990, by Luke Tierney
# XLISP version 2.1, Copyright (c) 1989, by David Betz.
# 
# Permission to use, copy, modify, distribute, and sell this software and its
# documentation for any purpose is hereby granted without fee, provided that
# the above copyright notice appear in all copies and that both that
# copyright notice and this permission notice appear in supporting
# documentation, and that the name of Enterprise Integration Technologies,
# Hewlett-Packard Company, Niels Mayer, Luke Tierney and David Betz not be
# used in advertising or publicity pertaining to distribution of the software
# without specific, written prior permission.  Enterprise Integration
# Technologies, Hewlett-Packard Company, Niels Mayer, Luke Tierney and David
# Betz make no representations about the suitability of this software for any
# purpose. It is provided "as is" without express or implied warranty.
# 
# ENTERPRISE INTEGRATION TECHNOLOGIES, HEWLETT-PACKARD COMPANY, NIELS MAYER,
# LUKE TIERNEY AND DAVID BETZ DISCLAIM ALL WARRANTIES WITH REGARD TO THIS
# SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS,
# IN NO EVENT SHALL ENTERPRISE INTEGRATION TECHNOLOGIES, HEWLETT-PACKARD
# COMPANY, NIELS MAYER, LUKE TIERNEY NOR DAVID BETZ BE LIABLE FOR ANY SPECIAL,
# INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
# LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE
# OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.
#

Brief description of included files:

Utilities:
backquot.lsp	Adds working nested backquotes
classes.lsp*	Useful functions for OOP
common.lsp*	More Common Lisp compatible functions.
edit.lsp	Access external editor on .lsp files
evalenv.lsp	EVAL in current lexical context
infix.lsp	Read macros for Infix to prefix converter (Winston and Horn)
init.lsp*	Default initialization file
matrix.lsp	Poor implementation of multidimensional arrays
pp.lsp*		Pretty printer
repair.lsp*	Structure Editor
sendmacr.lsp	Read macros for "send" function
step.lsp*	Simple single-step utility
stepper.lsp	More advanced single-step utility
stepper.doc	Documentation for stepper.lsp
turtle.lsp	Turtle graphics primitives, from PC-LISP

* Functions documented in manual

Examples:
ackerman.lsp	Ackerman's function
akalah.lsp	"Kalah" (stones&pits) game
akavect.lsp	(same as akalah.lsp, but uses arrays rather than lists)
art.lsp		Simple OOP example
blocks.lsp	Winston & Horn's "Blocks world". Uses classes.lsp.
change.lsp	Change maker
dragon.lsp	Dragon curve, originally from PC-Lisp. Uses turtle.lsp
example.lsp	Simple OOP example
fact.lsp	Factorial function
fib.lsp		Fibinocci function (sorry for spelling)
gblocks.lsp	blocks.lsp, with graphic display
hanoi.lsp	Tower of hannoi puzzle
hdwr.lsp	OOP example of hardware simulation
ifthen.lsp	Mini expert system from Winston & Horn
match.lsp	Pattern matcher from Winston & Horn
prolog.lsp	Tiny Prolog interpreter
qa.lsp		Question Answering program
queens.lsp	Queens puzzle
queens2.lsp	Queens puzzle -- semi-graphical
search.lsp	Searching functions from Winston & Horn
sort.lsp	Sorting routines
tak.lsp		I have no idea. Some non-trivial recursive function.
tconc.lsp	tconc implementation
turtles.lsp	OOP turtle graphics example.
wildcard.lsp	Wildcard pattern matcher
