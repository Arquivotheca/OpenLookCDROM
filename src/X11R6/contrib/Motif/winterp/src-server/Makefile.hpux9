################################################################################
#
# File:         Makefile.hpux9
# RCS:          $Header: /users/npm/src/winterp/src-server/RCS/Makefile.hpux9,v 2.15 1994/06/06 15:41:19 npm Exp $
# Description:  Makefile for Winterp-Lisp-Server for HPUX 9.0 (s300/s400/s700/
#		s800) using the HPUX9.0 ANSI C Compiler.
# Author:       Niels Mayer
# Created:      Mon Oct 23 20:47:37 1989
# Modified:     Sun Jun  5 14:10:08 1994 (Niels Mayer) npm@indeed
# Language:     N/A
# Package:      N/A
# Status:       X11r6 contrib release
#
# Copyright (C) 1994, Enterprise Integration Technologies Corp. and Niels Mayer.
# WINTERP 1.15-1.99, Copyright (c) 1993, Niels P. Mayer.
# WINTERP 1.0-1.14, Copyright (c) 1989-1992 Hewlett-Packard Co. and Niels Mayer.
# 
# Permission to use, copy, modify, distribute, and sell this software and its
# documentation for any purpose is hereby granted without fee, provided that
# the above copyright notice appear in all copies and that both that
# copyright notice and this permission notice appear in supporting
# documentation, and that the name of Enterprise Integration Technologies,
# Hewlett-Packard Company, or Niels Mayer not be used in advertising or
# publicity pertaining to distribution of the software without specific,
# written prior permission. Enterprise Integration Technologies, Hewlett-Packard
# Company, and Niels Mayer makes no representations about the suitability of
# this software for any purpose.  It is provided "as is" without express or
# implied warranty.
# 
# ENTERPRISE INTEGRATION TECHNOLOGIES, HEWLETT-PACKARD COMPANY AND NIELS MAYER
# DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL ENTERPRISE
# INTEGRATION TECHNOLOGIES, HEWLETT-PACKARD COMPANY OR NIELS MAYER BE LIABLE
# FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER
# RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF
# CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
# CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#
################################################################################

#
# Compile OPTIMIZER setting:
# =========================
#
OPTIMIZER = -O


#
# if you don't have ranlib, comment out the "RANLIB = ranlib" line and use
# the "RANLIB = echo" below.  If you don't know if you have ranlib, type
# "ranlib" at the shell and see if it finds the program or not.
#
RANLIB = echo
# RANLIB = ranlib


#
# WINTERP COMPILATION-TIME FEATURE SELECTION
# ==========================================
#

#
# Set "WANT_TABLE_WIDGET=-DWINTERP_TABLE_WIDGET" if you want to use the
# Table layout manager widget (see widgets/Table.doc, widgets/Table.c).
# Uncomment it or set "WANT_TABLE_WIDGET=" if you don't want this widget
# linked in to WINTERP
#
WANT_TABLE_WIDGET		= -DWINTERP_TABLE_WIDGET
# WANT_TABLE_WIDGET		=

#
# Set "WANT_XTANGO_WIDGET=-DWINTERP_XTANGO_WIDGET" if you want to use the
# Xtango graphics/animation widget (see directory ./xtango/, and files
# ../doc/xtango.README, ../doc/xtango.ps.Z and ../doc/xtangodoc.tex)
# Uncomment it or set "WANT_XTANGO_WIDGET=" if you don't want this widget
# linked in to WINTERP. Note that compiling with the Xtango widget feature
# makes the WINTERP binary approx XXX kBytes larger on a 68040, and increases
# runtime size too.
#
WANT_XTANGO_WIDGET		= -DWINTERP_XTANGO_WIDGET
# WANT_XTANGO_WIDGET		=

#
# Set "WANT_XMGRAPH_WIDGET=-DWINTERP_XMGRAPH_WIDGET" if you want to use the
# XmGraph layout manager widget (see widgets/XmGraph.3x, widgets/XmArc.3x).
# Uncomment it or set "WANT_XMGRAPH_WIDGET=" if you don't want this widget
# linked in to WINTERP. Note that compiling with the XmGraph widget feature
# makes the WINTERP binary approx XXX Bytes larger on a 68040, and increases
# runtime size too.
#
WANT_XMGRAPH_WIDGET		= -DHP_GRAPH_WIDGET
# WANT_XMGRAPH_WIDGET		=

#
# Set "WANT_EXPECT_SUBPROCESS=-DWINTERP_EXPECT_SUBPROCESS" if you want to use
# WINTERP's subprocess facilities provided by Don Libes' expect library.
# (see expect/libexpect.man).
# Uncomment it or set "WANT_EXPECT_SUBPROCESS=" if you don't want this facility
# linked in to WINTERP. Alternately, you may need to remove this feature if
# your OS can't build expect/libexpect.a.
#
WANT_EXPECT_SUBPROCESS		= -DWINTERP_EXPECT_SUBPROCESS
# WANT_EXPECT_SUBPROCESS	=

#
# Set "WANT_INET_SERVER=-DWINTERP_WANT_INET_SERVER" if you want to use
# WINTERP's internet domain winterp-lisp eval server. To use this, you
# must also set resource "Winterp.enableInetServer: true"
# (default is false) and use ../src-client/wl-tcpip as the server client.
# Uncomment it or set "WANT_INET_SERVER=" if you don't want this facility
# linked in to WINTERP. You may want to disable this feature if your
# OS has problems compiling/linking code using internet domain sockets.
# Alternately, since the internet domain server is a security hole, you
# may want to prevent any of your WINTERP-application users from enabling
# it.
#
# WANT_INET_SERVER		= -DWINTERP_WANT_INET_SERVER
WANT_INET_SERVER		= 

#
# Set "WANT_UNIX_SERVER=-DWINTERP_WANT_UNIX_SERVER" if you want to use
# WINTERP's unix domain socket based winterp-lisp eval server. To use
# this, you must also set resource "Winterp.enableUnixServer: true"
# (default is false) and use ../src-client/wl as the server client.
# Uncomment it or set "WANT_UNIX_SERVER=" if you don't want this facility
# linked in to WINTERP. You may want to disable this feature if your
# OS has problems compiling/linking code using unix domain sockets.
#
WANT_UNIX_SERVER		= -DWINTERP_WANT_UNIX_SERVER
# WANT_UNIX_SERVER		= 

#
# Set "WANT_STDIN_SERVER=-DWINTERP_WANT_STDIN_SERVER" if you want to be
# able to evaluate winterp-lisp s-expressions typed into the terminal
# (stdin). To use this, you must also set resource
# "Winterp.enableStdinServer: true" (true is the default value).
# Uncomment it or set "WANT_UNIX_SERVER=" if you don't want this facility
# linked in to WINTERP. You may want to disable this feature if your
# OS has problems with doing XtAppAddInput(...fileno(stdin)...).
#
WANT_STDIN_SERVER		= -DWINTERP_WANT_STDIN_SERVER
# WANT_STDIN_SERVER		=

#
# Note on OSDEP_CFLAGS:
# =====================
#
# X and Motif allows for OS and Machine independence via the use of
# a predetermined set of cpp defines which work in conjuction with
# with macros in X11/Xos.h and other include files. To figure out which
# of these values are appropriate for your OS&Machine, take a look at the
# compilation options used to compile some other example Motif program
# on your system (this might be supplied by the OS vendor or the Motif
# vendor). You can also figure these out from looking at 
# X11R5:...lib/X11/config/*.cf (e.g. hp.cf) and look for StandardDefines
# in X11R5:...lib/X11/config/Imake.tmpl...
#
# IF YOU CHANGE THE VALUE OF OSDEP_CFLAGS BELOW, MAKE SURE THAT IT IS
# SET TO THE SAME VALUE IN src-client/Makefile.hpux9,
# src-server/Makefile.hpux9, src-server/xlisp/Makefile.hpux9, 
# src-server/expect/Makefile.hpux9, src-server/xtango/Makefile.hpux9, 
# src-server/widgets/Makefile.hpux9... ALTHOUGH THE VALUE IS PASSED
# THROUGH, TO SUBMAKEFILES, IT WON'T BE WHEN YOU 'MAKE' in subdirectories.
# --------------------
# HPUX-specific values:
# *** -DSYSV and -Dhpux are used to make X11 software more portable, 
# *** -DMALLOC_0_RETURNS_NULL is needed on HPUX 7.0 when linking with
#     the fast malloc library "-lmalloc".
# *** -D_NO_PROTO: this is required by Motif 1.1 if you are using a
#     non-ANSI-C compiler. Eventually everybody will have an ANSI C compiler
#     and at that point this flag should be removed.
# *** -Aa -D_HPUX_SOURCE: this tells the compiler to do ANSI C compilation.
#
# For s300/s400 HPUX 7.0,  use the following for OSDEP_CFLAGS:
# OSDEP_CFLAGS  = -Wc,-Nd4000,-Ns3300,-Ne700,-Np1000 -DSYSV -Dhpux -DMALLOC_0_RETURNS_NULL -D_NO_PROTO
#
# For HPUX 8.0, or 9.0 without ANSI, use the following for OSDEP_CFLAGS:
# (note that -Wp,-H256000 gets rid of "too much defining" errors...)
# OSDEP_CFLAGS  = -Wp,-H256000 -DSYSV -Dhpux -DMALLOC_0_RETURNS_NULL -D_NO_PROTO
#
# For HPUX 9.0 and Motif 1.2, use ANSI C -- it now works w/ Motif.
# To turn off ANSI C Compilation, remove "-Aa -D_HPUX_SOURCE" and add
# "-D_NO_PROTO"
# 
OSDEP_CFLAGS = -Aa -D_HPUX_SOURCE -DSYSV -Dhpux -DMALLOC_0_RETURNS_NULL


#
# Note on INCLUDES:
# =================
#
# IF YOUR INSTALLATION OF MOTIF PLACES THE INCLUDE FILES FOR MOTIF's Xm
# DIRECTORIES SOMEWHERE OTHER THAN cc's USUAL INCLUDE SEARCH PATH
# (e.g. /usr/include/Xm /usr/include/X11), THEN YOU WILL HAVE TO SET
# 'INCLUDES' BELOW TO THE APPROPRIATE LOCATION.
#			--------------------
# *** Motif 1.0 does not use the standard X11r4 toolkit, therefore you must
# make sure that you are compiling Motif 1.0 programs with the headers
# associated with Motif 1.0, not the X11r4 headers.
#
# *** Motif 1.1 uses the X11r4 Xlib, libXt, etc, however, Motif 1.1 is not
# included as part of the X11r4 distribution.  Make sure that you either
# have the X11r4 and Motif headers installed, or that you are setting
# INCLUDES so that the appropriate include directories are used.
#
# *** Motif 1.2 uses the X11r5 Xlib, libXt, etc, however, Motif 1.2 is not
# included as part of the X11r5 distribution.  Make sure that you either
# have the X11r5 and Motif headers installed, or that you are setting
# INCLUDES so that the appropriate include directories are used.
#			--------------------
# NOTE: if you modify INCLUDES below, you must also do the same 
# modification in xlisp/Makefile.hpux9, widgets/Makefile.hpux9,
# and xtango/Makefile.hpux9.
#

# INCLUDES = -I. -I/usr/include
# INCLUDES = -I. -I/usr/include/Motif1.1 -I/usr/include/X11R4
INCLUDES = -I. -I/usr/include/Motif1.2 -I/usr/include/X11R5


#
# Note on LIBS:
# =============
#
# IF YOUR INSTALLATION OF MOTIF PLACES THE LIB FILES FOR MOTIF
# DIRECTORIES SOMEWHERE OTHER THAN cc's USUAL LIB SEARCH PATH
# (e.g. /usr/lib), THEN YOU WILL HAVE TO SET  'LIBS' BELOW
# TO THE APPROPRIATE LOCATION. 
#
# Some OS's will require inclusion of "extra" libs such as -lBSD or -lPW --
# see your system documentation for instructions on the appropriate libraries
# to load for linking a program containing Motif, Xtoolkit intrinsics, Xlib,
# and (optionally) BSD networking.
#			--------------------
#       "-lm" == libm.a:
#		This is required by XLISP since it includes math routines.
#
#	"-lXm" == libXm.a:
#		This library is part of OSF/Motif, it is not included with
#		the standard MIT X11r4 or X11r5 distribution. Many systems
#		vendors include Motif as part of their Unix OS offering
#		(e.g. HP, IBM, DEC, MIPS, SCO, etc.) If you haven't installed
#		Motif on your system, then replace -lXm below with
#		<path>/libXm.a or use -L<path> to tell the linker of a nonstandard
#		library directory location.
#
#	"-lXt" == libXt.a:
#		If you are using Motif 1.2, this should be the standard
#		X11r5 Xt Instrinsics library, with all OSF-recommended patches.
#		applied.
#		If you are using Motif 1.1, this should be the standard
#		X11r4 Xt Instrinsics library, with MIT patches 1-18, and any
#		additional patches distributed by OSF.
#		If you are using Motif 1.0, make sure that -lXt points to
#		Motif 1.0's libXt.a, perhaps by specifying <path>/libXt.a.
#		DO NOT USE libXt.a from X11r4 with Motif 1.0 -- they are
#		incompatible.
#
#	"-lX11" == libX11.a:
#		If you are using Motif 1.2, this should be the standard
#		X11r5 Xlib library, with all OSF-recommended patches.
#		applied.
#		If you are using Motif 1.1, this is the standard X11r4
#		X11 library, or the X11 library supplied by your vendor.
#		For Motif 1.0, you should probably use the X11 library
#		supplied by your vendor (e.g. -lX), although the X11r4
#		libX11.a should work too.
#
#	"-lPW" == libPW.a:
#		This library is required by Motif's file selection box widget
#		on some brands of Unix, such as HPUX, MIPS, and other systems
#		that I am not familiar with. Note that this library may or
#		may not be required for other OS's. See	the Motif documentation
#		for your particular installation of Motif for details.
#
#	"-lmalloc" == libmalloc.a:
#		I've been using this fast malloc library on HPUX. When
#		used in conjuction with Motif, -lmalloc causes a tremendous
#		improvement in the overall application performance. Supposedly
#		for HPUX 8.0, the standard malloc will be faster, though...
#		For other OS's experiment to see which is faster, or ask
#		an expert on that OS about which malloc library is the fastest.
#

# LIBS = -lXm -lXt -lX11 -lPW -lm
# LIBS = -L/usr/lib/X11R4 -L/usr/lib/Motif1.1 -lXm -lXt -lX11 -lPW -lm
LIBS = -L/usr/lib/X11R5 -L/usr/lib/Motif1.2 -lXm -lXt -lX11 -lPW -lm


#
# Note on DEFINES:
# ===============
#
# *** -DWINTERP: xlisp/xlisp.h,xlisp/xldmem.h, xtango/xtango.h, and
# xtango/xtangolocal.h are included by most WINTERP files. These
# includes have '#ifdef WINTERP' surrounding changes made to XLISP
# for use by WINTERP: you MUST therefore compile with -DWINTERP
# or nothing will work.
#			--------------------
# NOTE: if you modify DEFINES below, you must also do the same
# modification in xlisp/Makefile.hpux9, widgets/Makefile.hpux9,
# and xtango/Makefile.hpux9.
#

DEFINES = -DWINTERP $(WANT_TABLE_WIDGET) $(WANT_XTANGO_WIDGET) $(WANT_XMGRAPH_WIDGET) $(WANT_EXPECT_SUBPROCESS) $(WANT_INET_SERVER) $(WANT_UNIX_SERVER) $(WANT_STDIN_SERVER) $(USER_DEFINES)

CFLAGS = $(INCLUDES) $(OSDEP_CFLAGS) $(DEFINES)

##############################################################################
LINT = /usr/bin/lint
.SUFFIXES: .ln .c
.c.ln:
	$(LINT) -c $*.c $(DEFINES)


##############################################################################
.c.o:
	$(CC) -c $(OPTIMIZER) $*.c $(CFLAGS)


##############################################################################
HDRS	      = app_fundecl.h \
		app_funextn.h \
		app_funidx.h \
		config.h \
		user_prefs.h \
		w_XmString.h \
		w_funtab.h \
		winterp.h \
		tango.h

SRCS	      = utils.c \
		w_XmString.c \
		w_callbacks.c \
		w_classes.c \
		w_evnthndlr.c \
		w_funtab.c \
		w_inputCB.c \
		w_libXm.c \
		w_libXt.c \
		w_pixmap.c \
		w_resources.c \
		w_savedobjs.c \
		w_timeouts.c \
		w_txlations.c \
		w_utils.c \
		wc_ArrowB.c \
		wc_BulletinB.c \
		wc_CascadeB.c \
		wc_Command.c \
		wc_DrawingA.c \
		wc_DrawnB.c \
		wc_FileSB.c \
		wc_Form.c \
		wc_Frame.c \
		wc_Label.c \
		wc_List.c \
		wc_MainW.c \
		wc_MessageB.c \
		wc_PanedW.c \
		wc_PushB.c \
		wc_RowColumn.c \
		wc_SHELL.c \
		wc_Scale.c \
		wc_ScrollBar.c \
		wc_ScrolledW.c \
		wc_SelectioB.c \
		wc_Separator.c \
		wc_Text.c \
		wc_ToggleB.c \
		wc_WIDGET.c \
		winterp.c

OBJS	      = $(SRCS:.c=.o)

#
# The following vars refer to optionally linkable object-code that is
# linked in only when the appropriate option variables are set.
# For more info, see docs above on WANT_TABLE_WIDGET,
# WANT_XTANGO_WIDGET, WANT_XMGRAPH_WIDGET, and WANT_EXPECT_SUBPROCESS.
#
# if (WANT_TABLE_WIDGET == "-DWINTERP_TABLE_WIDGET")
# 	then TABLE_WIDGET_OBJS = wc_Table.o widgets/Table.o
#	else TABLE_WIDGET_OBJS = ""
#
# if (WANT_XTANGO_WIDGET == "-DWINTERP_XTANGO_WIDGET")
# 	then XTANGO_WIDGET_OBJS = wc_Xtango.o t_classes.o t_path.o t_trans.o \
#				  t_tap.o t_utils.o tic_Bitmap.o tic_Circle.o \
#				  tic_Composit.o tic_Ellipse.o tic_IMAGE.o \
#				  tic_Line.o tic_Polygon.o tic_Polyline.o \
#				  tic_Rect.o tic_Spline.o tic_Text.o \
#				  tic_GIF.o widgets/xgif.o xtango/libXtango.a
#	else XTANGO_WIDGET_OBJS = ""
#
# if (WANT_XMGRAPH_WIDGET == "-DWINTERP_XMGRAPH_WIDGET")
# 	then XMGRAPH_WIDGET_OBJS = wc_XmGraph.o widgets/Arc.o widgets/Graph.o
#	else XMGRAPH_WIDGET_OBJS = ""
#
# if (WANT_EXPECT_SUBPROCESS == "-DWINTERP_EXPECT_SUBPROCESS")
# 	then TABLE_WIDGET_OBJS = w_subprocess.o expect/libexpect.a
#	else TABLE_WIDGET_OBJS = ""
#
# (please excuse the make(1) substitution hackery used to achieve above logic).
#

TABLE_WIDGET_OBJS	= $(WANT_TABLE_WIDGET:-DWINTERP_TABLE_WIDGET=wc_Table.o) \
			  $(WANT_TABLE_WIDGET:-DWINTERP_TABLE_WIDGET=widgets/Table.o)
XTANGO_WIDGET_OBJS	= $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=wc_Xtango.o) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=t_classes.o) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=t_path.o) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=t_trans.o) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=t_tap.o) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=t_utils.o) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=tic_Bitmap.o) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=tic_Circle.o) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=tic_Composit.o) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=tic_Ellipse.o) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=tic_GIF.o) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=widgets/xgif.o) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=tic_IMAGE.o) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=tic_Line.o) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=tic_Polygon.o) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=tic_Polyline.o) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=tic_Rect.o) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=tic_Spline.o) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=tic_Text.o) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=xtango/libXtango.a)
XMGRAPH_WIDGET_OBJS	= $(WANT_XMGRAPH_WIDGET:-DHP_GRAPH_WIDGET=wc_XmGraph.o) \
			  $(WANT_XMGRAPH_WIDGET:-DHP_GRAPH_WIDGET=widgets/Arc.o) \
			  $(WANT_XMGRAPH_WIDGET:-DHP_GRAPH_WIDGET=widgets/Graph.o)
EXPECT_SUBPROCESS_OBJS	= $(WANT_EXPECT_SUBPROCESS:-DWINTERP_EXPECT_SUBPROCESS=w_subprocess.o) \
			  $(WANT_EXPECT_SUBPROCESS:-DWINTERP_EXPECT_SUBPROCESS=expect/libexpect.a)

TABLE_WIDGET_SRCS	= $(WANT_TABLE_WIDGET:-DWINTERP_TABLE_WIDGET=wc_Table.c) \
			  $(WANT_TABLE_WIDGET:-DWINTERP_TABLE_WIDGET=widgets/Table.c)
XTANGO_WIDGET_SRCS	= $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=wc_Xtango.c) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=t_classes.c) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=t_path.c) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=t_trans.c) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=t_tap.c) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=t_utils.c) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=tic_Bitmap.c) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=tic_Circle.c) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=tic_Composit.c) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=tic_Ellipse.c) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=tic_GIF.c) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=widgets/xgif.c) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=tic_IMAGE.c) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=tic_Line.c) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=tic_Polygon.c) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=tic_Polyline.c) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=tic_Rect.c) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=tic_Spline.c) \
			  $(WANT_XTANGO_WIDGET:-DWINTERP_XTANGO_WIDGET=tic_Text.c)
XMGRAPH_WIDGET_SRCS	= $(WANT_XMGRAPH_WIDGET:-DHP_GRAPH_WIDGET=wc_XmGraph.c) \
			  $(WANT_XMGRAPH_WIDGET:-DHP_GRAPH_WIDGET=widgets/Arc.c) \
			  $(WANT_XMGRAPH_WIDGET:-DHP_GRAPH_WIDGET=widgets/Graph.c)
EXPECT_SUBPROCESS_SRCS	= $(WANT_EXPECT_SUBPROCESS:-DWINTERP_EXPECT_SUBPROCESS=w_subprocess.c)

TABLE_WIDGET_OBS	= $(TABLE_WIDGET_SRCS:.c=.o)
XTANGO_WIDGET_OBS	= $(XTANGO_WIDGET_SRCS:.c=.o)
XMGRAPH_WIDGET_OBS	= $(XMGRAPH_WIDGET_SRCS:.c=.o)
EXPECT_SUBPROCESS_OBS	= $(EXPECT_SUBPROCESS_SRCS:.c=.o)

LINTS			= $(SRCS:.c=.ln) \
			  $(TABLE_WIDGET_SRCS:.c=.ln) \
			  $(XTANGO_WIDGET_SRCS:.c=.ln) \
			  $(XMGRAPH_WIDGET_SRCS:.c=.ln) \
			  $(EXPECT_SUBPROCESS_SRCS:.c=.ln) 

##############################################################################
DEST	      = /usr/local/bin/

INSTALL	      = install

LD	      = $(CC)

LDFLAGS	      = 

MAKEFILE      = Makefile.hpux9

PROGRAM       = winterp

SHELL	      = /bin/sh

all::		$(PROGRAM)

$(PROGRAM):     $(OBJS) $(TABLE_WIDGET_OBJS) $(XTANGO_WIDGET_OBJS) $(XMGRAPH_WIDGET_OBJS) $(EXPECT_SUBPROCESS_OBJS) xlisp/libXlisp.a
		@echo "Linking $(PROGRAM) ..."
		$(LD) $(LDFLAGS) $(OBJS) $(TABLE_WIDGET_OBJS) $(XTANGO_WIDGET_OBJS) $(XMGRAPH_WIDGET_OBJS) $(EXPECT_SUBPROCESS_OBJS) xlisp/libXlisp.a $(LIBS) -o $(PROGRAM)
		@echo "done"

LIBRARY	      = libWinterp.a

win-lib::
		@echo "Making winterp library"
		(make -f $(MAKEFILE) "INCLUDES=-I../embedded-app $(INCLUDES)" "USER_DEFINES=-DWINTERP_EMBEDDED $(USER_DEFINES)" "RANLIB=$(RANLIB)" "WANT_TABLE_WIDGET=$(WANT_TABLE_WIDGET)" "WANT_XTANGO_WIDGET=$(WANT_XTANGO_WIDGET)" "WANT_XMGRAPH_WIDGET=$(WANT_XMGRAPH_WIDGET)" "WANT_EXPECT_SUBPROCESS=$(WANT_EXPECT_SUBPROCESS)" "WANT_INET_SERVER=$(WANT_INET_SERVER)" "WANT_UNIX_SERVER=$(WANT_UNIX_SERVER)" "WANT_STDIN_SERVER=$(WANT_STDIN_SERVER)" "OSDEP_CFLAGS=$(OSDEP_CFLAGS)" "OPTIMIZER=$(OPTIMIZER)" $(LIBRARY))

$(LIBRARY):	$(OBJS) $(TABLE_WIDGET_OBJS) $(XTANGO_WIDGET_OBJS) $(XMGRAPH_WIDGET_OBJS) $(EXPECT_SUBPROCESS_OBJS) xlisp/libXlisp.a
		@echo "Loading $(LIBRARY) ..."
		ar cruv $(LIBRARY) $(OBJS) $(TABLE_WIDGET_OBS) $(XTANGO_WIDGET_OBS) $(XMGRAPH_WIDGET_OBS) $(EXPECT_SUBPROCESS_OBS)
		$(RANLIB) $(LIBRARY)
		@echo "$(LIBRARY) done"

xlisp/libXlisp.a::
	(cd $(@D) ; make -f $(MAKEFILE) "INCLUDES=$(INCLUDES)" "USER_DEFINES=$(USER_DEFINES)" "RANLIB=$(RANLIB)" "WANT_TABLE_WIDGET=$(WANT_TABLE_WIDGET)" "WANT_XTANGO_WIDGET=$(WANT_XTANGO_WIDGET)" "WANT_XMGRAPH_WIDGET=$(WANT_XMGRAPH_WIDGET)" "WANT_EXPECT_SUBPROCESS=$(WANT_EXPECT_SUBPROCESS)" "WANT_INET_SERVER=$(WANT_INET_SERVER)" "WANT_UNIX_SERVER=$(WANT_UNIX_SERVER)" "WANT_STDIN_SERVER=$(WANT_STDIN_SERVER)" "OSDEP_CFLAGS=$(OSDEP_CFLAGS)" "OPTIMIZER=$(OPTIMIZER)" $(@F) ; cd ..)

expect/libexpect.a::
	(cd $(@D) ; make -f $(MAKEFILE) "USER_DEFINES=$(USER_DEFINES)" "RANLIB=$(RANLIB)" "OSDEP_CFLAGS=$(OSDEP_CFLAGS)" "OPTIMIZER=$(OPTIMIZER)" $(@F) ; cd ..)

widgets/Table.o:
	(cd $(@D) ; make -f $(MAKEFILE) "INCLUDES=$(INCLUDES)" "USER_DEFINES=$(USER_DEFINES)" "OSDEP_CFLAGS=$(OSDEP_CFLAGS)" "OPTIMIZER=$(OPTIMIZER)" $(@F) ; cd ..)

widgets/Arc.o:
	(cd $(@D) ; make -f $(MAKEFILE) "INCLUDES=$(INCLUDES)" "USER_DEFINES=$(USER_DEFINES)" "OSDEP_CFLAGS=$(OSDEP_CFLAGS)" "OPTIMIZER=$(OPTIMIZER)" $(@F) ; cd ..)

widgets/Graph.o:
	(cd $(@D) ; make -f $(MAKEFILE) "INCLUDES=$(INCLUDES)" "USER_DEFINES=$(USER_DEFINES)" "OSDEP_CFLAGS=$(OSDEP_CFLAGS)" "OPTIMIZER=$(OPTIMIZER)" $(@F) ; cd ..)

widgets/xgif.o:
	(cd $(@D) ; make -f $(MAKEFILE) "INCLUDES=$(INCLUDES)" "USER_DEFINES=$(USER_DEFINES)" "OSDEP_CFLAGS=$(OSDEP_CFLAGS)" "OPTIMIZER=$(OPTIMIZER)" $(@F) ; cd ..)

xtango/libXtango.a::
	(cd $(@D) ; make -f $(MAKEFILE) "INCLUDES=$(INCLUDES)" "USER_DEFINES=$(USER_DEFINES)" "RANLIB=$(RANLIB)" "OSDEP_CFLAGS=$(OSDEP_CFLAGS)" "OPTIMIZER=$(OPTIMIZER)" $(@F) ; cd ..)

lint:	$(LINTS) expect/llib-expect.ln xlisp/llib-Xlisp.ln xtango/llib-Xtango.ln
	$(LINT) $(LINTS) expect/llib-expect.ln xlisp/llib-Xlisp.ln xtango/llib-Xtango.ln $(LIBS) > lint 2>&1

expect/llib-expect.ln::
	(cd $(@D) ; make -f $(MAKEFILE) "USER_DEFINES=$(USER_DEFINES)" $(@F) ; cd ..)

xlisp/llib-Xlisp.ln::
	(cd $(@D) ; make -f $(MAKEFILE) "USER_DEFINES=$(USER_DEFINES)" $(@F) ; cd ..)

xtango/llib-Xtango.ln::
	(cd $(@D) ; make -f $(MAKEFILE) "USER_DEFINES=$(USER_DEFINES)" $(@F) ; cd ..)

TAGS: $(HDRS) $(SRCS) $(TABLE_WIDGET_SRCS) $(XTANGO_WIDGET_SRCS) $(XMGRAPH_WIDGET_SRCS) $(EXPECT_SUBPROCESS_SRCS)
	etags $(HDRS) $(SRCS) $(TABLE_WIDGET_SRCS) $(XTANGO_WIDGET_SRCS) $(XMGRAPH_WIDGET_SRCS) $(EXPECT_SUBPROCESS_SRCS) xlisp/*.h xlisp/*.c expect/*.h expect/*.c xtango/*.c xtango/*.h widgets/*.h

run:;		winterp

clean:;		rm -f $(OBJS) $(TABLE_WIDGET_OBJS) $(XTANGO_WIDGET_OBJS) $(XMGRAPH_WIDGET_OBJS) $(EXPECT_SUBPROCESS_OBJS) xlisp/libXlisp.a xlisp/*.o expect/*.o widgets/*.o xtango/*.o xlisp/*.a expect/*.a widgets/*.a xtango/*.a core

clobber:;	rm -f $(LINTS) $(PROGRAM) $(LIBRARY) TAGS $(OBJS) $(TABLE_WIDGET_OBJS) $(XTANGO_WIDGET_OBJS) $(XMGRAPH_WIDGET_OBJS) $(EXPECT_SUBPROCESS_OBJS) xlisp/libXlisp.a xlisp/*.o expect/*.o widgets/*.o xtango/*.o xlisp/*.a expect/*.a widgets/*.a xtango/*.a core

depend:;	mkmf -f $(MAKEFILE) ROOT=$(ROOT)

echo:;		@echo $(HDRS) $(SRCS) $(TABLE_WIDGET_SRCS) $(XTANGO_WIDGET_SRCS) $(XMGRAPH_WIDGET_SRCS) $(EXPECT_SUBPROCESS_SRCS)

index:;		ctags -wx $(HDRS) $(SRCS) $(TABLE_WIDGET_SRCS) $(XTANGO_WIDGET_SRCS) $(XMGRAPH_WIDGET_SRCS) $(EXPECT_SUBPROCESS_SRCS) xlisp/*.h xlisp/*.c expect/*.h expect/*.c xtango/*.c xtango/*.h widgets/*.c widgets/*.h

install:	$(PROGRAM)
		@echo Installing $(PROGRAM) in $(DEST)
		-strip $(PROGRAM)
		if [ $(DEST) != . ]; then \
		(rm -f $(DEST)/$(PROGRAM); $(INSTALL) -f $(DEST) $(PROGRAM)); fi

tags: $(HDRS) $(SRCS) $(TABLE_WIDGET_SRCS) $(XTANGO_WIDGET_SRCS) $(XMGRAPH_WIDGET_SRCS) $(EXPECT_SUBPROCESS_SRCS)
		@ctags $(HDRS) $(SRCS) $(TABLE_WIDGET_SRCS) $(XTANGO_WIDGET_SRCS) $(XMGRAPH_WIDGET_SRCS) $(EXPECT_SUBPROCESS_SRCS) xlisp/*.h xlisp/*.c expect/*.h expect/*.c xtango/*.c xtango/*.h widgets/*.c widgets/*.h

update:		$(DEST)/$(PROGRAM)

$(DEST)/$(PROGRAM): $(SRCS) $(TABLE_WIDGET_SRCS) $(XTANGO_WIDGET_SRCS) $(XMGRAPH_WIDGET_SRCS) $(EXPECT_SUBPROCESS_SRCS) $(LIBS) $(HDRS)
		$(MAKE) -f $(MAKEFILE) ROOT=$(ROOT) DEST=$(DEST) install
###
utils.o:	winterp.h user_prefs.h xlisp/xlisp.h
w_XmString.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_XmString.h
w_callbacks.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h widgets/Graph.h $(MAKEFILE)
w_classes.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h xlisp/xlobj.h
w_evnthndlr.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h
w_funtab.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h app_funidx.h app_funextn.h app_fundecl.h $(MAKEFILE)
w_libXm.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h 
w_libXt.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h
w_pixmap.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h
w_resources.o:  winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_XmString.h widgets/Table.h widgets/Graph.h widgets/Arc.h $(MAKEFILE)
w_savedobjs.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h
w_timeouts.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h
w_txlations.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h
w_utils.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h
wc_ArrowB.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h 
wc_BulletinB.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h 
wc_CascadeB.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h 
wc_Command.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h w_XmString.h
wc_DrawingA.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h 
wc_DrawnB.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h 
wc_FileSB.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h w_XmString.h
wc_Form.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h 
wc_Frame.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h 
wc_Label.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h 
wc_List.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h w_XmString.h
wc_MainW.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h 
wc_MessageB.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h 
wc_PanedW.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h 
wc_PushB.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h 
wc_RowColumn.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h 
wc_SHELL.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h 
wc_Scale.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h 
wc_ScrollBar.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h 
wc_ScrolledW.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h 
wc_SelectioB.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h w_XmString.h
wc_Separator.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h 
wc_Text.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h 
wc_ToggleB.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h 
wc_WIDGET.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h
winterp.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h $(MAKEFILE)
wc_Table.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h widgets/Table.h $(MAKEFILE)
wc_XmGraph.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h widgets/Graph.h widgets/Arc.h $(MAKEFILE)
w_subprocess.o: winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h expect/expect.h
wc_Xtango.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h tango.h xtango/xtangolocal.h xtango/xtango.h  $(MAKEFILE)
t_classes.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h xlisp/xlobj.h tango.h xtango/xtangolocal.h xtango/xtango.h
t_path.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h tango.h xtango/xtangolocal.h xtango/xtango.h
t_trans.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h tango.h xtango/xtangolocal.h xtango/xtango.h
t_tap.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h tango.h xtango/xtangolocal.h xtango/xtango.h
t_utils.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h tango.h xtango/xtangolocal.h xtango/xtango.h
tic_Bitmap.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h tango.h xtango/xtangolocal.h xtango/xtango.h $(MAKEFILE)
tic_Circle.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h tango.h xtango/xtangolocal.h xtango/xtango.h $(MAKEFILE)
tic_Composit.o: winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h tango.h xtango/xtangolocal.h xtango/xtango.h $(MAKEFILE)
tic_Ellipse.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h tango.h xtango/xtangolocal.h xtango/xtango.h $(MAKEFILE)
tic_GIF.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h tango.h xtango/xtangolocal.h xtango/xtango.h $(MAKEFILE)
tic_IMAGE.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h tango.h xtango/xtangolocal.h xtango/xtango.h $(MAKEFILE)
tic_Line.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h tango.h xtango/xtangolocal.h xtango/xtango.h $(MAKEFILE)
tic_Polygon.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h tango.h xtango/xtangolocal.h xtango/xtango.h $(MAKEFILE)
tic_Polyline.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h tango.h xtango/xtangolocal.h xtango/xtango.h $(MAKEFILE)
tic_Rect.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h tango.h xtango/xtangolocal.h xtango/xtango.h $(MAKEFILE)
tic_Spline.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h tango.h xtango/xtangolocal.h xtango/xtango.h $(MAKEFILE)
tic_Text.o:	winterp.h user_prefs.h ../src-server/config.h xlisp/xlisp.h xlisp/xldmem.h w_funtab.h tango.h xtango/xtangolocal.h xtango/xtango.h $(MAKEFILE)
