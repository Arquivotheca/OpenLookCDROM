!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
! File:         Winterp.ad
! RCS:          $Header: /users/npm/src/winterp/src-server/RCS/Winterp.ad,v 2.1 1994/06/06 15:40:34 npm Exp $
! Description:  WINTERP resources. Rename this file 'Winterp' and place the file
!		in your system's "app-default" directory, typically
!		'/usr/lib/X11/app-defaults/'. Alternately, you may just set up
!		a private application resource directory by renaming this file
!		'Winterp' and placing it somewhere on the path described by
!		UN*X environment variable XUSERFILESEARCHPATH.
!		NOTE: this file contains a full set of resource bindings 
!		for the Motif widget set, as preferred by the author. These
!		settings include pointer focus (see "*keyboardFocusPolicy"),
!		"emacs-like" bindings for the Text widgets, font settings
!		(see *fontList ...), color settings (see "*background",
!		"*foreground"), etc. Users of B&W X displays will definitely
!		want to remove all the color settings in this file. Since only
!		the "Winterp.*" bindings are Winterp-Specific, you may want
!		to comment out all other bindings if your tastes in default
!		Motif bindings are significantly different from mine...
! Author:       Niels Mayer
! Created:      Mon Jan 30 14:02:10 1989
! Modified:     Sun Jun  5 14:10:30 1994 (Niels Mayer) npm@indeed
! Language:     N/A
! Package:      N/A
! Status:       X11r6 contrib release
! 
! Copyright (C) 1994, Enterprise Integration Technologies Corp. and Niels Mayer.
! WINTERP 1.15-1.99, Copyright (c) 1993, Niels P. Mayer.
! WINTERP 1.0-1.14, Copyright (c) 1989-1992 Hewlett-Packard Co. and Niels Mayer.
! 
! Permission to use, copy, modify, distribute, and sell this software and its
! documentation for any purpose is hereby granted without fee, provided that
! the above copyright notice appear in all copies and that both that
! copyright notice and this permission notice appear in supporting
! documentation, and that the name of Enterprise Integration Technologies,
! Hewlett-Packard Company, or Niels Mayer not be used in advertising or
! publicity pertaining to distribution of the software without specific,
! written prior permission. Enterprise Integration Technologies, Hewlett-Packard
! Company, and Niels Mayer makes no representations about the suitability of
! this software for any purpose.  It is provided "as is" without express or
! implied warranty.
! 
! ENTERPRISE INTEGRATION TECHNOLOGIES, HEWLETT-PACKARD COMPANY AND NIELS MAYER
! DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED
! WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL ENTERPRISE
! INTEGRATION TECHNOLOGIES, HEWLETT-PACKARD COMPANY OR NIELS MAYER BE LIABLE
! FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER
! RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF
! CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
! CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!
!! Unset the following resources to get SGI's weird twist on Motif Look/Feel
!! (works only w/ SGI Irix 5.2 with WINTERP linked w/ -lSgm...). Note that
!! I have not tested most of the example applications with "SGI mode" of Motif;
!! I do know that the SGI fileselectionbox widget doesn't always work just
!! like the standard Motif one. You may want to set
!! "*XmFileSelectionBox.useEnhancedFSB: false" if you've set "*sgiMode: true"
!!
!! use SGI fileselection box??
!! not yet, doesn't work w/ existing code...
! *XmFileSelectionBox.useEnhancedFSB: true
!
! *sgiMode: true
! *highlightOnEnter: false
! *highlightThickness: 0
! *fontList: -*-*-bold-r-*--12-*-*-*-p-*-iso8859-1
!

!
! Global Defaults:
!
*traversalOn: True
*traversalType: HIGHLIGHT_ENTER
*highlightThickness: 1

*foreground: black
*background: lightgrey

!
! Motif Globals
!
! *keyboardFocusPolicy:		Explicit
*keyboardFocusPolicy:	Pointer
*traversalOn: True
*highlightOnEnter: True
*highlightThickness: 1
*highlightPixmap: foreground
*highlightColor: Red

*fontList: -*-*-bold-r-*--10-*-*-*-p-*-iso8859-1
*XmText*fontList: 7x14
*XmTextField*fontList: 7x14
*XmList.fontList: -*-*-medium-r-*--12-*-*-*-m-*-iso8859-1

! Text Edit widget: use emacs key bindings and pointer focus
*XmText.translations: #override \n\
Ctrl<Key>Home:  end-of-file() \n\
Shift<Key>Home: end-of-file() \n\
<Key>Delete:    delete-previous-character() \n\
Ctrl<Key>A:     beginning-of-line() \n\
Ctrl<Key>B:     backward-character() \n\
Ctrl<Key>D:     delete-next-character() \n\
Ctrl<Key>E:     end-of-line() \n\
Ctrl<Key>F:     forward-character() \n\
Ctrl<Key>H:     delete-previous-character() \n\
Ctrl<Key>J:     newline-and-indent() \n\
Ctrl<Key>K:     kill-to-end-of-line() \n\
Ctrl<Key>L:     redraw-display() \n\
Ctrl<Key>M:     newline() \n\
Ctrl<Key>N:     next-line() \n\
Ctrl<Key>O:     newline-and-backup() \n\
Ctrl<Key>P:     previous-line() \n\
Ctrl<Key>V:     next-page() \n\
Ctrl<Key>W:     delete-previous-word() \n\
Ctrl<Key>Y:     unkill() \n\
Ctrl<Key>Z:     scroll-one-line-up() \n\
Meta<Key>F:     forward-word() \n\
Meta<Key>B:     backward-word() \n\
Meta<Key>V:     previous-page() \n\
Meta<Key>Y:     stuff() \n\
Meta<Key>Z:     scroll-one-line-down() \n\
:Meta<Key>d:    delete-next-word() \n\
:Meta<Key>D:    kill-next-word() \n\
:Meta<Key>h:    delete-previous-word() \n\
:Meta<Key>H:    kill-previous-word() \n\
:Meta<Key>\\<:  beginning-of-file() \n\
:Meta<Key>\\>:  end-of-file() \n\
:Meta<Key>]:    forward-paragraph() \n\
:Meta<Key>[:    backward-paragraph() \n\
~Shift Meta<Key>Delete:         delete-previous-word() \n\
~Shift Meta<Key>BackSpace:      delete-previous-word() \n
! <Btn1Up>:       extend-end()  textCut() \n\
! <Btn3Up>:       textPaste()

*XmTextField.translations: #override \n\
<Key>Delete:    delete-previous-character() \n\
Ctrl<Key>A:     beginning-of-line() \n\
Ctrl<Key>B:     backward-character() \n\
Ctrl<Key>D:     delete-next-character() \n\
Ctrl<Key>E:     end-of-line() \n\
Ctrl<Key>F:     forward-character() \n\
Ctrl<Key>H:     delete-previous-character() \n\
Ctrl<Key>W:     delete-previous-word() \n\
Ctrl<Key>K:     delete-to-end-of-line() \n\
Meta<Key>F:     forward-word() \n\
Meta<Key>B:     backward-word() \n\
:Meta<Key>d:    delete-next-word() \n\
:Meta<Key>h:    delete-previous-word() \n\
~Shift Meta<Key>Delete:         delete-previous-word() \n\
~Shift Meta<Key>BackSpace:      delete-previous-word() \n
! <Btn1Up>:       extend-end()  textCut() \n\
! <Btn3Up>:       textPaste()

*XmScrollBar*foreground: wheat
*XmScrollBar*background: #282828

*XmText.background: #282828
*XmText.foreground: yellow
*XmText.scrollLeftSide: true
*XmText.scrollBottomSide: false
*XmText*highlightOnEnter: true
*XmText*highlightThickness: 1

*XmTextField.background: #282828
*XmTextField.foreground: yellow
*XmTextField*highlightOnEnter: true
*XmTextField*highlightThickness: 1

*XmList.foreground: green
*XmList.background: #282828

*XmScrolledWindow*XmScrollBar*foreground: wheat
*XmScrolledWindow*XmScrollBar*background: #282828
*XmScrolledWindow.scrollBarPlacement: bottom_left

*XmLabel*highlightOnEnter: False
*XmLabel*highlightThickness: 0
*XmLabelGadget*highlightOnEnter: False
*XmLabelGadget*highlightThickness: 0

*XmPushButton*foreground: black
*XmPushButton*background: lightgrey
! *XmPushButtonGadget*foreground: black
! *XmPushButtonGadget*background: lightgrey

*XmToggleButton*foreground: black
*XmToggleButton*background: lightgrey
*XmToggleButton*fillOnSelect: true
*XmToggleButton*selectColor: red
*XmToggleButton*highlightOnEnter: True
*XmToggleButton*highlightThickness: 1
! *XmToggleButtonGadget*foreground: black
! *XmToggleButtonGadget*background: lightgrey
*XmToggleButtonGadget*fillOnSelect: true
*XmToggleButtonGadget*selectColor: red
*XmToggleButtonGadget*highlightOnEnter: True
*XmToggleButtonGadget*highlightThickness: 1

*XmCascadeButton*foreground: black
*XmCascadeButton*background: lightgrey
! *XmCascadeButtonGadget*foreground: black
! *XmCascadeButtonGadget*background: lightgrey

*XmMenuShell*foreground: black
*XmMenuShell*background: wheat

*XmFileSelectionBox.foreground: black
*XmFileSelectionBox.background: lightgrey

*XmMenuShell*XmPushButton*fontList:  -*-helvetica-bold-o-normal-*-14-*-iso8859-1
*XmMenuShell*XmPushButtonGadget*fontList: -*-helvetica-bold-o-normal-*-14-*-iso8859-1
*XmMenuShell*XmLabel*fontList: -*-helvetica-bold-o-normal-*-14-*-iso8859-1
*XmMenuShell*XmLabelGadget*fontList: -*-helvetica-bold-o-normal-*-14-*-iso8859-1
*XmMenuShell*XmCascadeButton*fontList: -*-helvetica-bold-o-normal-*-14-*-iso8859-1
*XmMenuShell*XmCascadeButtonGadget*fontList: -*-helvetica-bold-o-normal-*-14-*-iso8859-1
*XmMenuShell*XmToggleButton*fontList: -*-helvetica-bold-o-normal-*-14-*-iso8859-1
*XmMenuShell*XmToggleButtonGadget*fontList: -*-helvetica-bold-o-normal-*-14-*-iso8859-1
*XmMainWindow*XmRowColumn*XmCascadeButton*fontList: -*-helvetica-bold-o-normal-*-14-*-iso8859-1
*XmMainWindow*XmRowColumn*XmCascadeButtonGadget*fontList: -*-helvetica-bold-o-normal-*-14-*-iso8859-1

*XmScrolledWindow.foreground: black
*XmScrolledWindow.background: lightgrey

*XmPanedWindow.foreground: black
*XmPanedWindow.background: lightgrey

*XmMainWindow.foreground: black
*XmMainWindow.background: lightgrey

*XmGraph*foreground: black
*XmGraph*background: lightgrey

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! WINTERP !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!! Default: Winterp.lispInitFile: $HOME/.winterpapp
! Winterp.lispInitFile: /users/npm/.winterpapp

!! Default: Winterp.lispTranscriptFile: <none>
! Winterp.lispTranscriptFile:

!! Default: Winterp.lispLoadPath: <none>
! Winterp.lispLoadPath: /users/npm/src/widgit/examples/:/users/npm/src/widgit/examples/xlisp-2.1d/

!! Default: Winterp.lispLibDir: .
!! Note: change /usr/local/winterp/examples/ if you've installed WINTERP elsewhere
Winterp.lispLibDir: /usr/local/winterp/examples/

!! Default: Winterp.enableXtErrorBreak: true
Winterp.enableXtErrorBreak: true

!! Default: Winterp.enableXtWarningBreak: false
Winterp.enableXtWarningBreak: false

!! Default: Winterp.enableXErrorBreak: true
Winterp.enableXErrorBreak: true

!! Default: Winterp.enableInitMsgs: true
Winterp.enableInitMsgs: true

!! Default: Winterp.enableUnixServer: false
Winterp.enableUnixServer: true

!! Default: Winterp.enableInetServer: false
Winterp.enableInetServer: false

!! Default: Winterp.enableStdinServer: true
Winterp.enableStdinServer: true

!! For interactive use, I prefer to set this via environment variable
!! WINTERP_UNIX_SOCKET_FILEPATH because that way the socket path is
!! automatically shared between 'wl' and 'winterp'
!! Default: Winterp.unixSocketFilepath: /tmp/.winterp_serv
! Winterp.unixSocketFilepath: /users/npm/.winterp_socket

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!!
!! for examples/w_ctrlpnl.lsp
!!
!! If you want the control panel to come up "iconic" uncomment this:
! WinterpCtrlPnl.iconic: true
WinterpCtrlPnl.geometry: -1+1
WinterpCtrlPnl*XmPanedWindow*XmScrolledWindow.foreground: black
WinterpCtrlPnl*XmPanedWindow*XmScrolledWindow.background: lightgrey
WinterpCtrlPnl*XmPanedWindow.foreground: black
WinterpCtrlPnl*XmPanedWindow.background: lightgrey
WinterpCtrlPnl*files.foreground: black
WinterpCtrlPnl*files.background: lightgrey
WinterpCtrlPnl*controlpanel.foreground: black
WinterpCtrlPnl*controlpanel.background: lightgrey
WinterpCtrlPnl*edit*rows: 24
WinterpCtrlPnl*edit*columns: 80
WinterpCtrlPnl*files*listVisibleItemCount: 9

!!
!! for bin/win-calendar; examples/calendar.lsp
!!
! WinterpCalendar.iconic: true
WinterpCalendar.geometry: -1+1

!!
!! for contrib/xmu/xmu-init.lsp
!!
Xmu*menuPost: <Btn1Down>,<Btn1Up>

!!
!! for bin/win-dialer; examples/modem-dialer.lsp
!!
modem-dialer.geometry: -1+1

!!
!! examples of calling Xlisp evaluator from an action procedure
!!
! Winterp*XmPushButton.translations: #augment \n\
! 			Ctrl<Key>L: Lisp(quack ACTION_WIDGET ACTION_XEVENT) \n\
! 		      	Ctrl<Key>K: Lisp(print 'ctrl_k_just_called)
