.\"
.\" Copyright (c) 1988 by Hewlett-Packard Company
.\" 
.\" Permission to use, copy, modify, and distribute this software 
.\" and its documentation for any purpose and without fee is hereby 
.\" granted, provided that the above copyright notice appear in all 
.\" copies and that both that copyright notice and this permission 
.\" notice appear in supporting documentation, and that the name of 
.\" Hewlett-Packard not be used in advertising or publicity pertaining 
.\" to distribution of the software without specific, written prior 
.\" permission.
.\"
.\" Add simple keeps to MAN macros so .TS/.TE will work
.\"
.de KS	\"	Keep start
.br
.in 0
.di KP
..
.de KE	\" 	Keep end
.br
.di
.ne \\n(dnu
.nr fI \\n(.u
.nf
.KP
.if \\n(fI .fi
.in
..
.TH XmArc 3X "" "" "" ""
.na
.na
.SH NAME
XmArcWidgetClass - Arc widget design for use with XmGraph.
.SH SYNOPSIS
\fB
.B #include <Xm/Xm.h>
.br
.B #include "Graph.h"
.br
.B #include "Arc.h"
.sp
.SH DESCRIPTION
The XmArc widget is a special widget that resembles a gadget in that it has
no window of its own. It draws in the window of the XmGraph widget, with
cooperation of the Graph widget. The Arc widget can only be used with the
Graph widget.  An arc may be undirected, directed or bidirected.
.SS CLASSES
.P
The Arc widget inherits behavior from the Core widget class.  
.sp
Its class
pointer is \fBxmArcWidgetClass\fP 
.sp
Its class name is \fBXmArc\fP.
.SH "ARC RESOURCES"
The Arc widget defines a set of resource types used by the programmer to
specify the data for the arc.  These resources are used to set attributes
for arcs when specifying node parent-child relationships. The following
table contains the set of resources defined by the Arc widget. To specify
any of these resources within the .Xdefaults file, simply drop the XmN
prefix from the resource name.
.sp 1
.DS
.TS
center allbox;
cBp9 ssss
lBp8 lBp8 lBp8 lBp8 lBp8
lp8lp8lp8lp8lp8.
XmArc Resource Set
Name	Class	Type	Default	Access
_
XmNto	XmCTo	XmRPointer	NULL	CSG
XmNfrom	XmCFrom	XmRPointer	NULL	CSG
XmNdelta	XmCDelta	int	5	CSG
XmNfont	XmCFont	(XFontStruct*)	"Fixed	"	CSG
XmNarcWidth	XmCArcWidth	int	0	CSG
XmNstyle	XmCStyle	int	LineSolid	CSG
XmNcapStyle	XmCapStyle	int	CapButt	CSG
XmNdashes	XmCDashes	int	4	CSG
XmNdashOffset	XmCDashOffset	int	0	CSG
XmNlabel	XmCString	String	NULL	CSG
XmNmapLabel	XmCBoolean	Boolean	"True"	CSG
XmNarcDirection	XmCDirection	XmRArcDirection	XmDIRECTED	CSG
XmNforeground	XmCForeground	Pixel	"Black"	CSG
XmNhighlightColor	XmCHighlightColor	Pixel	"White"	CSG
XmNhighlight	XmCHighlight	Boolean	"False"	CSG
XmNfont	XmCFont	String	"Fixed"	CSG
XmNarmCallback	XmCCallback	Pointer	NULL	C
XmNdisarmCallback	XmCCallback	Pointer	NULL	C
XmNactivateCallback	XmCCallback	Pointer	NULL	C
XmNarcEditedCallback	XmCCallback	Pointer	NULL	C
XmNuserData	XmCUserData	Pointer	NULL	CSG
.TE
.in 0
.KE
.sp
.IP "\fBXmNto\fP"
The widget this arc points to.
.sp
.IP "\fBXmNfrom\fP"
The widget this arc points from.
.sp
.IP "\fBXmNdelta\fP"
To detect button clicks, a rectangular region of width = 2 * delta is
created, with the arc at its center. Only applies to arcs where the parent
is not the same as the child.
.IP "\fBXmNarcWidth\fP"
The width, in pixels, of the line drawn for the arc.  Zero means to draw
using the server's fastest algorithm with a line width of one pixel.
.IP "\fBXmNstyle\fP"
Specifies whether the line is solid in foreground, dashed in foreground, or
alternating foreground and background. Possible values are LineSolid (the
default), LineOnOffDash, or LineDoubleDash.
.IP "\fBXmNcapStyle\fP"
Controls the appearance of the ends of a line. This characteristic affects
the ends of lines drawn in dashes, and both ends of each dash in some
cases. Possible values are CapNotLast, CapButt (the default), CapRound, and
CapProjecting.
.IP "\fBXmNdashes\fP"
Specifies the length of the dashes for custom-designed dashed lines. The
default (4) is equivalent to the list {4,4} (a dash of 4 pixels, followed
by a space of 4 pixels).
.IP "\fBXmNdashOffset\fP"
Specifies the starting point of the dash pattern, from the parent node, for
dashed lines.
.IP "\fBXmNlabel\fP"
If not NULL (the default) it is a string which will be displayed with the
arc.
.IP "\fBXmNmapLabel\fP"
If true (the default), the label, if any, will be displayed.
.IP "\fBXmNarcDirection\fP"
No semantic meaning. If XmDIRECTED, will display an arrow head on the child
end, if XmBIDIRECTED will display an arrow head on both ends, otherwise no
arrow head is displayed.
.IP "\fBXmNforeground\fP"
Color in which the arc and its label will be drawn.
.IP "\fBXmNhighlightColor\fP"
If XmNhighlight is true, color displayed when arc is selected.
.IP "\fBXmNfont\fP"
Font used to write the label with when XmNlabel is not NULL.
.IP "\fBXmNarmCallback\fP"
.IP "\fBXmNdisarmCallback\fP"
.IP "\fBXmNarcEditedCallback\fP"
This callback list is invoked when either the child or the parent nodes are
changed. The arc widget is passed as an argument. 
.sp 
.SH "INHERITED RESOURCES"
The following resources are inherited from the named superclasses:
.DS
.TS
center allbox;
cBp9 ssss
cBp8 cBp8 cBp8 cBp8 cBp8
lp8lp8lp8lp8lp8.
Core Resource Set
Name	Class	Type	Default	Access
_
XmNaccelerators	XmCAccelerators	XtTranslations	NULL	CSG
XmNancestorSensitive	XmCSensitive	Boolean	True	G
XmNbackground	XmCBackground	Pixel	dynamic	CSG
XmNbackgroundPixmap	XmCPixmap	Pixmap	XmUNSPECIFIED_PIXMAP	CSG
XmNcolormap	XmCColormap	Colormap	XtCopyFromParent	CG
XmNdepth	XmCDepth	int	XtCopyFromParent	CG
XmNdestroyCallback	XmCCallback	XtCallbackList	NULL	C
XmNmappedWhenManaged	XmCMappedWhenManaged	Boolean	True	CSG
XmNscreen	XmCScreen	Pointer	XtCopyScreen	CG
XmNsensitive	XmCSensitive	Boolean	True	CSG
XmNtranslations	XmCTranslations	XtTranslations	NULL	CSG
.TE
.DE
.sp 1
.sp 2
.SS "Callback Information"
.PP
See XmGraph(3x)
.sp
.SS "Behavior"
XmArc behavior when the XmGraph is not in edit mode is summarized below.
.sp
.SH "ACTIONS"
.sp 1
.SH "BUGS"
This man page needs lots of work.
.br
XmNLabel resource of XmArc widget should be a compound string.
.br
.SH ORIGIN
Hewlett-Packard Company.
.sp
.SH AUTHORS
Luis Miguel - Design and implementation of HP widget version of Graph widget
.br
Doug Young - Early prototype XwDAG and XwLink (now XmArc) widget and Motif
             port of Graph and Arc to XmGraph and XmArc
.br
Doug Young - nearly complete rewrite of Motif Graph (1/90)
.SH "SEE ALSO"
Core(3X), Composite(3X), Constraint(3X), XmManager(3X), XmGraph(3x)
.br
\fIProgramming With The HP X Widgets\fP,
.br
\fIProgramming With Xt Intrinsics\fP,
.br
\fIProgramming With Xlib\fP.

