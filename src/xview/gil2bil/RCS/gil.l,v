head     1.5;
branch   ;
access   ;
symbols  ;
locks    ;
comment  @ * @;


1.5
date     94.06.30.15.30.46;  author ian;  state Exp;
branches ;
next     1.4;

1.4
date     94.06.27.19.41.21;  author ian;  state Exp;
branches ;
next     1.3;

1.3
date     94.06.16.13.05.24;  author ian;  state Exp;
branches ;
next     1.2;

1.2
date     94.06.16.12.55.04;  author ian;  state Exp;
branches ;
next     1.1;

1.1
date     94.06.16.12.54.25;  author ian;  state Exp;
branches ;
next     ;


desc
@A lex script for reading GIL files.
@


1.5
log
@Add tokval for passing values through. Try to parse quoted strings
that include \" inside; doesn't work yet.
@
text
@%e 10000
%n 1000
%p 5000
%%
%{
/* Parser for GIL files. */
#include <stdlib.h>
#include "x.tab.h"
extern int tokval;
%}
\;GIL-3		return GIL_HDR;
\(		{ return LEFT; }
\)		{ return RIGHT; }
\"[^"]*\"		{ 
		if (yytext[yyleng-1] == '\\')
			yymore();
		else {
			tokval = (int)strdup(yytext);
			return QSTRING;
		}
		}

nil		{ return NIL; }
t[^a-zA-Z_]	{ return TRUE; }
[a-zA-Z_]+	{ tokval = (int)strdup(yytext); return OBJ_NAME; }
[0-9]+		{ tokval = atoi(yytext); return NUMBER; }

[ 	\n]	;

:action			return ACTION;
:actions		return ACTIONS;
:anchor-object		return ANCHOR_OBJECT;
:anchor-point		return ANCHOR_POINT;
:arg_type		return ARG_TYPE;
:background-color	return BACKGROUND_COLOR;
:button-type		return BUTTON_TYPE;
:choice-colors		return CHOICE_COLORS;
:choice-label-types	return CHOICE_LABEL_TYPES;
:choices		return CHOICES;
:column-alignment	return COLUMN_ALIGNMENT;
:columns		return COLUMNS;
:constant-width		return CONSTANT_WIDTH;
:default-drop-site	return DEFAULT_DROP_SITE;
:done-handler		return DONE_HANDLER;
:droppable		return DROPPABLE;
:event-handler		return EVENT_HANDLER;
:foreground-color	return FOREGROUND_COLOR;
:from			return FROM;
:function_type		return FUNCTION_TYPE;
:group-type		return GROUP_TYPE;
:height			return HEIGHT;
:help			return HELP;
:horizontal-offset	return HORIZONTAL_OFFSET;
:horizontal-spacing	return HORIZONTAL_SPACING;
:icon-file		return ICON_FILE;
:icon-label		return ICON_LABEL;
:icon-mask-file		return ICON_MASK_FILE;
:initial-list-glyphs	return INITIAL_LIST_GLYPHS;
:initial-list-values	return INITIAL_LIST_VALUES;
:initial-selections	return INITIAL_SELECTIONS;
:initial-state		return INITIAL_STATE;
:initial-value		return INITIAL_VALUE;
:label			return LABEL;
:label-type		return LABEL_TYPE;
:layout-type		return LAYOUT_TYPE;
:max-value		return MAX_VALUE;
:members		return MEMBERS;
:menu			return MENU;
:min-value		return MIN_VALUE;
:multiple-selections	return MULTIPLE_SELECTIONS;
:name			return NAME;
:notify-handler		return NOTIFY_HANDLER;
:owner			return OWNER;
:pinned			return PINNED;
:read-only		return READ_ONLY;
:reference-point	return REFERENCE_POINT;
:resizable		return RESIZABLE;
:row-alignment		return ROW_ALIGNMENT;
:rows			return ROWS;
:selection-required	return SELECTION_REQUIRED;
:setting-type		return SETTING_TYPE;
:show-border		return SHOW_BORDER;
:show-footer		return SHOW_FOOTER;
:stored-length		return STORED_LENGTH;
:text-type		return TEXT_TYPE;
:title			return TITLE;
:to			return TO;
:type			return TYPE;
:user-data		return USER_DATA;
:value-length		return VALUE_LENGTH;
:value-underlined	return VALUE_UNDERLINED;
:value-x		return VALUE_X;
:value-y		return VALUE_Y;
:vertical-offset	return VERTICAL_OFFSET;
:vertical-spacing	return VERTICAL_SPACING;
:when			return WHEN;
:width			return WIDTH;
:x			return X;
:y			return Y;

:active			return ACTIVE;
:alphanumeric		return ALPHANUMERIC;
:base-window		return BASE_WINDOW;
:bottom-edges		return BOTTOM_EDGES;
:button			return BUTTON;
:column			return COLUMN;
:control-area		return CONTROL_AREA;
:exclusive		return EXCLUSIVE;
:group			return GROUP;
:horizontal		return HORIZONTAL;
:horizontal-centers	return HORIZONTAL_CENTERS;
:inactive		return INACTIVE;
:invisible		return INVISIBLE;
:labels			return LABELS;
:left-edges		return LEFT_EDGES;
:normal			return NORMAL;
:north-west		return NORTH_WEST;
:numeric		return NUMERIC;
:open			return OPEN;
:popup-window		return POPUP_WINDOW;
:row			return ROW;
:scrolling-list		return SCROLLING_LIST;
:setting		return SETTING;
:string			return STRING;
:text-field		return TEXT_FIELD;
:text-pane		return TEXT_PANE;
:top-edges		return TOP_EDGES;
:user_defined		return USER_DEFINED;
:vertical-centers	return VERTICAL_CENTERS;
:visible		return VISIBLE;

@


1.4
log
@Shorten QSTRING.
@
text
@d7 1
d9 1
d11 11
a21 4
;GIL-[0-9]	return GIL_HDR;
\(		return LEFT;
\)		return RIGHT;
\"[^"\n]*\"	return QSTRING;
d23 5
a27 3
nil		return NIL;
[a-zA-Z_]+	return OBJ_NAME;
[0-9]+		return NUMBER;
@


1.3
log
@Add new NIL token, minor reformat.
@
text
@d7 1
a7 1
#include "y.tab.h"
d9 1
a9 1
;GIL-[0-9]*	parse_header(yytext);
d12 1
a12 1
\".*\"		return QSTRING;
@


1.2
log
@Convert to return tokens instead of printing them, resolving a
few name conflicts in the process.
@
text
@d13 2
@


1.1
log
@Initial revision
@
text
@d6 2
a7 1
#define	puttoken(token) { fprintf(stderr,token); fputc('\n', stderr); }
d9 6
a14 6
;GIL-	puttoken("GIL_HDR");
\(	puttoken("OPEN");
\)	puttoken("CLOSE");
\".*\"	puttoken("STRING");
[a-zA-Z_]+	puttoken("NAME");
[0-9]+	puttoken("NUMBER");
d17 70
a86 70
:action		puttoken("action");
:actions		puttoken("actions");
:anchor-object		puttoken("anchor-object");
:anchor-point		puttoken("anchor-point");
:arg_type		puttoken("arg_type");
:background-color		puttoken("background-color");
:button-type		puttoken("button-type");
:choice-colors		puttoken("choice-colors");
:choice-label-types		puttoken("choice-label-types");
:choices		puttoken("choices");
:column-alignment		puttoken("column-alignment");
:columns		puttoken("columns");
:constant-width		puttoken("constant-width");
:default-drop-site		puttoken("default-drop-site");
:done-handler		puttoken("done-handler");
:droppable		puttoken("droppable");
:event-handler		puttoken("event-handler");
:foreground-color		puttoken("foreground-color");
:from		puttoken("from");
:function_type		puttoken("function_type");
:group-type		puttoken("group-type");
:height		puttoken("height");
:help		puttoken("help");
:horizontal-offset		puttoken("horizontal-offset");
:horizontal-spacing		puttoken("horizontal-spacing");
:icon-file		puttoken("icon-file");
:icon-label		puttoken("icon-label");
:icon-mask-file		puttoken("icon-mask-file");
:initial-list-glyphs		puttoken("initial-list-glyphs");
:initial-list-values		puttoken("initial-list-values");
:initial-selections		puttoken("initial-selections");
:initial-state		puttoken("initial-state");
:initial-value		puttoken("initial-value");
:label		puttoken("label");
:label-type		puttoken("label-type");
:layout-type		puttoken("layout-type");
:max-value		puttoken("max-value");
:members		puttoken("members");
:menu		puttoken("menu");
:min-value		puttoken("min-value");
:multiple-selections		puttoken("multiple-selections");
:name		puttoken("name");
:notify-handler		puttoken("notify-handler");
:owner		puttoken("owner");
:pinned		puttoken("pinned");
:read-only		puttoken("read-only");
:reference-point		puttoken("reference-point");
:resizable		puttoken("resizable");
:row-alignment		puttoken("row-alignment");
:rows		puttoken("rows");
:selection-required		puttoken("selection-required");
:setting-type		puttoken("setting-type");
:show-border		puttoken("show-border");
:show-footer		puttoken("show-footer");
:stored-length		puttoken("stored-length");
:text-type		puttoken("text-type");
:title		puttoken("title");
:to		puttoken("to");
:type		puttoken("type");
:user-data		puttoken("user-data");
:value-length		puttoken("value-length");
:value-underlined		puttoken("value-underlined");
:value-x		puttoken("value-x");
:value-y		puttoken("value-y");
:vertical-offset		puttoken("vertical-offset");
:vertical-spacing		puttoken("vertical-spacing");
:when		puttoken("when");
:width		puttoken("width");
:x		puttoken("x");
:y		puttoken("y");
d88 31
a118 31
:active		puttoken("active");
:alphanumeric		puttoken("alphanumeric");
:base-window		puttoken("base-window");
:bottom-edges		puttoken("bottom-edges");
:button		puttoken("button");
:column		puttoken("column");
:control-area		puttoken("control-area");
:exclusive		puttoken("exclusive");
:group		puttoken("group");
:horizontal		puttoken("horizontal");
:horizontal-centers		puttoken("horizontal-centers");
:inactive		puttoken("inactive");
:invisible		puttoken("invisible");
:labels		puttoken("labels");
:left-edges		puttoken("left-edges");
:normal		puttoken("normal");
:north-west		puttoken("north-west");
:numeric		puttoken("numeric");
:open		puttoken("open");
:popup-window		puttoken("popup-window");
:row		puttoken("row");
:scrolling-list		puttoken("scrolling-list");
:setting		puttoken("setting");
:string		puttoken("string");
:text-field		puttoken("text-field");
:text-pane		puttoken("text-pane");
:top-edges		puttoken("top-edges");
:user_defined		puttoken("user_defined");
:vertical-centers		puttoken("vertical-centers");
:visible		puttoken("visible");
%%
@
