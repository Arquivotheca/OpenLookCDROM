head     1.4;
branch   ;
access   ;
symbols  ;
locks    ;
comment  @# @;


1.4
date     94.06.30.15.32.12;  author ian;  state Exp;
branches ;
next     1.3;

1.3
date     94.06.27.19.41.01;  author ian;  state Exp;
branches ;
next     1.2;

1.2
date     94.06.16.12.59.26;  author ian;  state Exp;
branches ;
next     1.1;

1.1
date     94.06.16.12.54.54;  author ian;  state Exp;
branches ;
next     ;


desc
@Makefile for GIL2BIL.
@


1.4
log
@Add test case; correct order of -ly -ll; minor tweaks.
@
text
@#
# Makefile for GIL to BIL translator.
#
SHELL		= /bin/sh
CC		= gcc
CFLAGS		= -g
TESTF		= test.G

try:		gil2bil $(TESTF)
		gil2bil < $(TESTF) | more

OBJS = 		lex.yy.o y.tab.o writeBil.c misc.o
gil2bil:	$(OBJS)
		$(CC) $(CFLAGS) $(OBJS) -ly -ll -o gil2bil

lex.yy.c:	gil.l
		lex gil.l
lex.yy.o:	lex.yy.c x.tab.h
		$(CC) $(CFLAGS) -DLEXDEBUG -c lex.yy.c 

y.tab.c y.tab.h:	gil.y
		yacc -d gil.y
y.tab.o:	y.tab.c
		$(CC) -DYYDEBUG=1 -c y.tab.c

x.tab.h:	y.tab.h
		cmp -s y.tab.h x.tab.h || cp y.tab.h x.tab.h

clean:
		rm -f lex.* y.tab.*
		rm -f *.o gil2bil core
@


1.3
log
@Rename program to gil2bil. Add debugging stuff.
@
text
@d6 2
d9 2
a10 2
try:		gil2bil xgen.G
		gil2bil < xgen.G | more
d14 1
a14 1
		$(CC) $(OBJS) -ll -ly -o gil2bil
d19 1
a19 1
		$(CC) -DLEXDEBUG -c lex.yy.c 
d24 1
a24 1
		$(CC) -DYYDEBUG -c y.tab.c
@


1.2
log
@Write OBJS macro, add new writeBil to it, use it.
@
text
@d7 2
a8 2
try:		parse xgen.G
		parse < xgen.G | more
d16 2
a17 1
lex.yy.o::	y.tab.h
d21 2
d24 3
d29 1
a29 1
		rm -f *.o parse core
@


1.1
log
@Initial revision
@
text
@d10 3
a12 2
parse:		lex.yy.o y.tab.o misc.o
		$(CC) y.tab.o lex.yy.o misc.o -ll -ly -o parse
@
