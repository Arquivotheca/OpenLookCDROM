head     1.3;
branch   ;
access   ;
symbols  ;
locks    ;
comment  @ * @;


1.3
date     91.10.30.10.58.48;  author ian;  state Exp;
branches ;
next     1.2;

1.2
date     91.10.28.18.11.06;  author ian;  state Exp;
branches ;
next     1.1;

1.1
date     91.10.09.16.43.50;  author ian;  state Exp;
branches ;
next     ;


desc
@Header for objects for genix.
@


1.3
log
@Add bplace, ddate, dplace fields.
@
text
@/* Definitions file for genix objects. */

typedef struct person {
	char *gname;
	char *sname;
	char pname[PRTNAMELEN];		/* printable */
	char *bdate, *bplace;
	char *ddate, *dplace;
	/* etc. */
	struct couple *parents;		/* up-link */
	struct couple *couple;		/* self-wedding */
	struct person   *sibling;	/* next-link in child list */
	struct person *next;		/* next-link in main list */
} PERSON;
#define NULL_PERSON ((PERSON *)0)

/* A couple is any cohabital union that results in offspring;
 * no religious or moral overtones meant or intended.
 * "Just the facts, ma'am."
 */
typedef struct couple {
	PERSON *husband, *wife;
	PERSON *child;
} COUPLE;
#define NULL_COUPLE ((COUPLE *)0)
@


1.2
log
@PERSON objs need to be pointers.
@
text
@d7 2
a8 1
	char *bdate;
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/* Dummy .h file for genix. */
d6 2
d10 1
d21 2
a22 2
	PERSON husband, wife;
	PERSON child;
@
