head	1.1;
access;
symbols;
locks; strict;
comment	@% @;


1.1
date	92.10.17.20.34.18;	author lacey;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@%%===========================================================================
%%---------------------------------------------------------------------------
%% SUBSECTION FOR LATEX GENERATION SUBSYSTEM
%%---------------------------------------------------------------------------
%%===========================================================================
\subsection{\LaTeX\ Generation Subsystem}

The \LaTeX\ subsystem will contain all of the modules needed to
generate a task sheet, PERT chart, or Gantt chart in \LaTeX\ format.
The name of the file will be created by the user from the user
interface. A {\tt .tex} will be concatenated at the end of he filename
to ensure the proper \LaTeX\ suffix. The \LaTeX\ generator will call
the proper module in the calculations subsystem to generate the
locations of the objects in the output (boxes, lines, etc.).  From
this point the user can print out the file by using the commands {\tt
latex}, {\tt dvips}, and {\tt lpr}.

%%%---------------------------------------------------------------------------
%%% SUBSUBSECTION FOR PROCESSING NARRATIVE
%%%
%%% For the preliminary design, make the processing narrative
%%% only textual. In the Detailed design, you will provide a
%%% structural description.
%%%---------------------------------------------------------------------------
\subsubsection{Processing Narrative}

The data that is sent to the \LaTeX\ generator will be used as
parameters for the the module that will figure out what type of
\LaTeX\ file to generate. From here the data will be sent to the
module that corresponds to the data sent. These modules include the
PERT format module, the Gantt format module, and the Task Sheet
module. Within each of these modules, \LaTeX\ output will be generated
in the form of a one line record and sent to the write routine. Here
the record will be inserted into the file specified by the user. This
process will continue until the file is completely written. Then the
control will go back to the interface.

%%%---------------------------------------------------------------------------
%%% SUBSUBSECTION FOR INTERFACE DESCRIPTION
%%%---------------------------------------------------------------------------
\subsubsection{Interface Description}

The user interface will call the \LaTeX\ generator which will call the
calculations module for the chart data. When the calculations module
returns the chart data to the \LaTeX\ generator, it will process the
appropriate \LaTeX\ file.

%%%
%%%	The following section will be filled in during the detailed design
%%%	phase. For now, it is commented out.
%%%
%%%	\subsection{Design Language Description}

%%%---------------------------------------------------------------------------
%%% SUBSUBSECTION FOR MODULES USED
%%%
%%% Identify the modules to be used by different modules
%%%---------------------------------------------------------------------------
%%%===========================================================================
\subsubsection{Modules Used}

The calculations module will be used to initiate the actual data
transfer to the \LaTeX\ generator. At this point depending on the
option that the user chose (PERT chart, Gantt chart, task sheet), the
\LaTeX\ generator will call the appropriate module to split the
information into pages and format it appropriately.  There will be no
provision to generate a sub-set of a task sheet, Gantt chart, or PERT
chart.  In other words, they must generate the entire chart or task
sheet, including all subtasks.

%%%---------------------------------------------------------------------------
%%% SUBSUBSECTION FOR DATA ORGANIZATION
%%%
%%% Describe the data structures to be used for the software.
%%% Give their organization.
%%%---------------------------------------------------------------------------
\subsubsection{Data Organization}

The main data structure used throughout the \LaTeX\ generator is the
task list previously described in the section on the database
subsystem.  Local data structures may be used to supplement this data
structure.

%%%---------------------------------------------------------------------------
%%% SUBSUBSECTION FOR COMMENTS
%%%
%%% Create the skeleton for each of the modules by commenting
%%% the purpose of each.
%%%---------------------------------------------------------------------------
\subsubsection{Comments}

The modules used in the \LaTeX\ subsystem include:

\begin{itemize}
	\item \LaTeX\-supervisor \\
Gets the format data from the calculation system and calls the
appropriate formatting routine to write the objects out to the file in
the given file format.
	\item task-sheet formatter \\
Uses the information given to it by the supervisor module to generate
a \LaTeX\ {\tt tabular} environment with all the task information
included.
	\item PERT-chart formatter \\
Uses the information provided by the supervisor to split the PERT
chart into pages and generate each page as part of a \LaTeX\ {\tt
picture} environment.
	\item Gantt-chart formatter \\
Uses the information provided by the supervisor to split the Gantt
chart into pages and generate each page as part of a \LaTeX\ {\tt
picture} environment.
\end{itemize}
@
