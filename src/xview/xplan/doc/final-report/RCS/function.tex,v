head	1.3;
access;
symbols;
locks; strict;
comment	@% @;


1.3
date	92.12.14.09.45.05;	author lacey;	state Exp;
branches;
next	1.2;

1.2
date	92.12.14.03.11.51;	author lacey;	state Exp;
branches;
next	1.1;

1.1
date	92.12.14.00.03.09;	author lacey;	state Exp;
branches;
next	;


desc
@@


1.3
log
@*** empty log message ***
@
text
@%
% Include Online help facilities.  Describe what each
% feature of the system is.  Describe fully what
% different options/selections will provide to the user.
% For instance, describe what each button allows the
% user to do.  btw, you can change the name of the section
% if you like.  If there are special languages that the
% user must know for input into the system, include 
% the description of that language here.
%
\section{Functionality Description}

\xplan's GUI, built using the Sun OpenWindows Developer's Guide,
restricts the platforms that the tool can be run on to
Unix\footnote{Unix is a trademark of AT\&T Bell Labs.} machines
running the X Windows system and having the XView libraries.  Since X
Windows and the XView libraries are both distributed freely\footnote{A
nominal distribution fee is charged if the libraries are distributed
on tape.}, and free implementations of Unix exist (386BSD, linux)
which are powerful enough to run X Windows, the restrictions are
minimal.

At the core of the graphical user interface is the \pscreen\/ (see
Figure~\ref{window:project} on page~\pageref{window:project}) which
contains a scrollable list of tasks, along with pull-down menus that
perform functions such as file loading and saving, PERT and Gantt
chart display, date calculations, and \LaTeX\ file generation.  By
clicking on a task in the task list, the user will be able to bring up
the \tiscreen\/ for that task.  The user can then modify information
about the task, and save the changes into the task database.  These
two screens are used throughout the process of building a task list,
which can then later be displayed graphically as a PERT or Gantt
chart.

\begin{figure}
\centering
\centerline{\psfig{figure=main-window.ps,height=4in}}
\caption[Project Window]{The project window and its menus.}
\label{window:project}
\end{figure}

The \tiscreen\/ (see Figure~\ref{window:taskinfo} on
page~\pageref{window:taskinfo}) is the means by which the user enters
and views specific information about each task that is a part of the
project they are planning.  That information includes task name; task
description; task duration; planned, actual, forecast, earliest, and
latest start and end dates; float time; resource list; 
dependency list; and flags that indicate if completion of this task is
a milestone, and if completion of this task yields a deliverable.
Some items, like the earliest and latest start and end dates, cannot
be modified by the user, but are rather filled in by selecting the
{\em Date Calculation}\/ item in the {\em Analyze}\/ menu of the
\pscreen.  The resource, sub-task, and dependency lists are accessed
by selecting the appropriate button on the \tiscreen.  Once the user
is satisfied with the information entered for the task, he/she can
select the {\em Apply}\/ button to save the information for the given
task into the task database.  If at any point before selecting {\em
Apply}\/ the user decides he/she would like to revert to what was
previously stored in the database, the {\em Reset}\/ option can be
chosen.

\begin{figure}
\centering
\centerline{\psfig{figure=det-des-task-info.ps,height=4in}}
\caption[Task Information Screen]{The \tiscreen\/ with detailed task
information.}
\label{window:taskinfo}
\end{figure}

The \pcscreen\/ is for the graphical display of PERT charts which
correspond to the task list created by the user.  The chart is
generated automatically based upon the tasks and their dependency
lists.  Each box on the chart will be the same size, and will contain
the task name, planned start date and end date for the task, task
number, and task duration.  Task dependency will be indicated by the
tool placing the tasks that have to be completed first on the left end
of the chart and placing tasks that can be completed next to the right
of that task and connecting them with a line.  If the task is part of
the critical path, then the line from that task to the next task on
the critical path will be drawn thicker than other lines, to give a
good graphical representation of its importance.

The \gcscreen\/ is for the graphical display of Gantt charts, which
like the PERT charts will be generated based on the information in the
task list created by the user.  The user will have the ability to
select a task from the Gantt chart which will cause the \tiscreen\/ to
be displayed with information on that task.

In addition to those main screens, a \flsscreen\/ along with an
\poscreen\/ are provided so that the user can control the destination
of the project file when saved, and the destination of the \LaTeX\
output that the program produces.

The \flsscreen\/ includes a field with the path to the current
directory displayed in it, along with a list of files in the current
directory, and a field in which the user can enter a directory that
they would like to move to or the name of a file they would like to
load.

The \poscreen\/ contains fields for the user to enter directory and
file names for the generated \LaTeX\ code to be stored in.  Direct
printing of the \LaTeX\ files from within the application will not be
provided since the main purpose of using a \LaTeX\ format for the
output is to allow a user to incorporate generated task sheets, along
with PERT and Gantt charts, into his/her own document for later
printing.  If the user chooses to print the generated files directly
rather than incorporating them into another document, the normal {\tt
latex}, {\tt dvips}, and {\tt lpr} commands can be used from a command
shell.

All of the menus in the system are on the project window, which is
illustrated in Figure~\ref{window:project}.  These menus, their
associated items, and the result of choosing an item include:

\begin{description}

\begin{figure}
\centering
\centerline{\psfig{figure=file-menu.ps,height=1in}}
\caption[File Menu]{The file menu of the project window.}
\label{menu:file}
\end{figure}

\item[File Menu] Refer to Figure~\ref{menu:file} on
page~\pageref{menu:file}.
\begin{enumerate}
\item {\bf Load...}\\
Prompts the user for the name of a file to load (via
Figure~\ref{default} on page \pageref{default}) and loads it.  If a
project file has been loaded previously, the information for that file
is deleted and the information for the new file replaces it.  
\begin{figure}
\centering
\centerline{\psfig{figure=default.ps,height=4in}}
\caption[File Selection Screen]{The file selection window.}
\label{default}
\end{figure}

\item {\bf New Project}\\
Sets the database up to begin working on a new project.  If a project
is currently loaded and has been changed, the user is prompted on
whether they would like to save the changes made to it.
\item {\bf Save}\\
Saves the current project to a file with the same  name as that from
which it was loaded.  If it is a new project, the user is prompted for
a filename to save it to. 
\item {\bf Save as...}\\
Saves the current project to a file that is named by the user.
\end{enumerate}

\begin{figure}
\centering
\centerline{\psfig{figure=chart-menu.ps,height=1in}}
\caption[Chart Menu]{The chart menu of the project window.}
\label{menu:chart}
\end{figure}

\item[Chart Menu] Refer to Figure~\ref{menu:chart} on
page~\pageref{menu:chart}.
\begin{enumerate}
\item {\bf PERT}\\
Pops up the PERT chart for the currently loaded project.
\item {\bf Gantt}\\
Pops up the Gantt chart for the currently loaded project.
\end{enumerate}

\begin{figure}
\centering
\centerline{\psfig{figure=analyze-menu.ps,height=1in}}
\caption[Analyze Menu]{The analyze menu of the project window.}
\label{menu:analyze}
\end{figure}

\item[Analyze Menu] Refer to Figure~\ref{menu:analyze} on
page~\pageref{menu:analyze}.
\begin{enumerate}
\item {\bf Find Critical Path}\\
Finds the critical path in the task network.  This critical path will
be displayed in the PERT and Gantt charts once it has been calculated.
\item {\bf Check Dependencies}\\
Checks the dependencies of the tasks to make sure there are no
dependency loops.
\item {\bf Calculate Dates}\\
Calculates the earliest and latest start and end dates for the tasks
in the task network, along with the float for each task.  The duration
of each task, along with the start date of the first task, must have
been previously specified.
\end{enumerate}

\begin{figure}
\centering
\centerline{\psfig{figure=export-menu.ps,height=1in}}
\caption[Export Menu]{The export menu of the project window.}
\label{menu:export}
\end{figure}

\item[Export Menu] Refer to Figure~\ref{menu:export} on
page~\pageref{menu:export}.
\begin{enumerate}
\item {\bf Generate Task Sheet}\\
Generates the \LaTeX\ representation of a task sheet for the current
task network, in tabular form.
\item {\bf Generate PERT Chart}\\
Generates the \LaTeX\ representation of a PERT chart for the current
network.
\item {\bf Generate Gantt Chart}\\
Generates the \LaTeX\ representation of a Gantt chart for the current
network.
\item {\bf Export Options...}\\
Pop up the export options screen to retrieve the filename and
directory that the generated charts should be stored to.
\end{enumerate}

\end{description}

The best way to learn how to use \xplan\ is to experiment with it.  The
online help features and the GUI are self-explanatory in regards to
the function and usage of \xplan\ and \xplan's menus.  However, for the
novice user, the following section will provide an example of how
\xplan\ may be used to enter task information and generate PERT and
Gantt charts based on the task information.
@


1.2
log
@*** empty log message ***
@
text
@d216 1
a216 1
The best way to learn how to use xplan is to experiment with it.  The
d218 1
a218 1
the function and usage of xplan and xplan's menus.  However, for the
d220 1
a220 1
xplan may be used to enter task information and generate PERT and
@


1.1
log
@Initial revision
@
text
@d13 1
a13 1
xview's GUI, built using the Sun OpenWindows Developer's Guide,
d47 1
a47 1
latest start and end dates; float time; resource list; sub-task list;
d81 1
a81 3
good graphical representation of its importance.  By double-clicking
on a task box, the user will cause the \tiscreen\/ to be displayed
with the details of that task.
d131 1
a131 4
is deleted and the information for the new file replaces it.  If in
fact a project file was previously loaded, and a change has been made
to it, the user will be prompted on whether they would like to save
the changes made to it before loading the new file.
@
