head	1.3;
access;
symbols;
locks; strict;
comment	@% @;


1.3
date	92.12.14.09.45.05;	author lacey;	state Exp;
branches;
next	1.2;

1.2
date	92.12.14.07.44.48;	author lacey;	state Exp;
branches;
next	1.1;

1.1
date	92.12.14.00.03.09;	author lacey;	state Exp;
branches;
next	;


desc
@@


1.3
log
@*** empty log message ***
@
text
@\section{Requirements Analysis}

\subsection{Introduction}

Paragraph~1 on page~1 states that PERT charts will be generated in a
\LaTeX\ picture format.  This feature was not completed by release of
the product, and is considered a future extension.

Figures~1 and 2 on page~2 are now obsolete.  The user is referred to
pages~2 and 3 of the user manual for pictures of the current screens
used for task list manipulation and the entering of task information.
These two figures in the user-manual should be referred to rather than
any other depictions of these screens, as these are the most accurate
at the time of this publishing.

As explained in the addendum to the project plan, the explanation of
interaction with the PERT and Gantt screens on pages~2 and ~3 of the
requirements specification are no longer valid.

\subsection{Information Description}

The reference to sub-tasks on page~3 is no longer valid.  Sub-tasks
are not supported in any way.

On page~5, the data-flow diagram presented depicts the GUI and \LaTeX\
generator as receiving information on Gantt chart formatting.  This is
no longer the case.  The Gantt routines determine their position
locally.  However, it is still the case that the PERT chart
information is generated in the calculations system, and the GUI and
\LaTeX\ generator use this information in their formatting.

\subsubsection{Information Content Representation}

The only paragraph in this Section (which is on page~6) states that an
intermediate database is used to sort by dependency.  This is not
true.  Instead, as explained in Section 3.1.2 (Review of Data
Structure, pages 4-6) of the preliminary design, the dependency
information is stored in the task database, and can be thought of as
an adjacency list representation of the graph.

\subsection{Functional Description}

In the first paragraph on page~8 it is stated that the user can ``send
a request to the calculations subsystem which will highlight the
critical path along the task network''.  Instead of this, whenever a
PERT chart or Gantt chart is generated, the proper routine is called
which fills in this information.

\subsubsection{Calculations Subsystem}

On page~14 of the document in the Processing Narrative section an
``interpret command subsubsystem'' and a ``get database info''
subsubsystem are mentioned.  These were not actually implemented.
Rather, the ``calculate critical path'', ``check dependencies'', and
``calculate date info'' routines were all written as separate modules.

\subsubsection{\LaTeX\ Generation Subsystem}

Page~14 talks about generation of \LaTeX\ representations of PERT
charts.  As mentioned in the addendum to the project plan, this was
not implemented.


\subsubsection{Database Subsystem}

In addition to those routines specified, routines for handling
resources were also added.  These were implemented with a hash table
to cut down on the amount of space needed for duplicate resources.

Figure~14 and 15 on page~17 and 18 depict the \LaTeX\ subsystem as
using Gantt formatting information from the calculations subsystem,
which is not the case.  The Gantt routines do the formatting locally.

\subsection{Behavioral Description}

On page~21 it is specified that an edit button will be present that
allows cutting and pasting data.  In lieu of doing this we implemented
a delete button which simply cuts out the information (but does not
allow for further pasting).

On page~22, again subtasks are mentioned.  All references to subtasks
should be considered incorrect, as they were never implemented due to
the complexity and the time given.

@


1.2
log
@*** empty log message ***
@
text
@d13 1
a13 1
any other depictions of these screens, as these are the most acurate
d55 1
a55 1
``calculate date info'' routines were all written as seperate modules.
d74 1
a74 1
\subsection{Behaviorial Description}
d77 1
a77 1
allows cutting and pasting data.  In leiu of doing this we implemented
@


1.1
log
@Initial revision
@
text
@d2 83
@
