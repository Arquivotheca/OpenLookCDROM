head	1.1;
access;
symbols;
locks; strict;
comment	@% @;


1.1
date	92.12.12.21.36.17;	author lacey;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@\slide
\slidetitle{File Read/Write Subsystem}
\begin{center}
Mark M. Lacey \\
Documentation Manager
\end{center}

\begin{topitemize}
\item Features supported by component include:
	\begin{itemize}
	\item Ability to load and save project information
	\end{itemize}	
\item Tasks comprising component include:
	\begin{itemize}
	\item Read project data from project file and place it into
the database
	\begin{itemize}
		\item {\em bison}\/ (parser generator) was used to
simplify the process of extracting information from the project file
		\item {\em flex}\/ (lexical analyzer generator) was used
to break input into tokens
		\item The use of these two tools greatly simplified
the code for reading in files
	\end{itemize}
	\item Write project data from database to project file
	\end{itemize}
%
% Difficulties include implementation constraints, refinement of
% requirements, time constraints, and etc.
% 
\item Difficulties encountered (and relevant solutions) include:
	\begin{itemize}
	\item Grammar file for {\em bison}\/ had to be re-written to
accommodate processing of information.
	\end{itemize}
\end{topitemize}
\slide
\slidetitle{Sample File}
%
% Place a sample file here after one has been generated.
% 
\begin{verbatim}
begin tasks

task = {
        name = "Sample task #1";
        description = "This is the task 
description for sample task #1.";
        duration = 1;
        planned_start = 2448958;
        planned_end = 2448958;
        actual_start = 2448958;
        actual_end = 2448958;
        milestone = false;
        deliverable = false;
}

.
.
.

end tasks.
\end{verbatim}
@
