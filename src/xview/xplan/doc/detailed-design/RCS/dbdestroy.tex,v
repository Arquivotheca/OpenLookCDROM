head	1.6;
access;
symbols;
locks; strict;
comment	@% @;


1.6
date	92.10.28.10.41.18;	author lacey;	state Exp;
branches;
next	1.5;

1.5
date	92.10.28.10.24.29;	author marlow;	state Exp;
branches;
next	1.4;

1.4
date	92.10.28.05.25.03;	author marlow;	state Exp;
branches;
next	1.3;

1.3
date	92.10.28.05.14.13;	author marlow;	state Exp;
branches;
next	1.2;

1.2
date	92.10.28.03.49.54;	author lacey;	state Exp;
branches;
next	1.1;

1.1
date	92.10.28.03.35.27;	author lacey;	state Exp;
branches;
next	;


desc
@@


1.6
log
@*** empty log message ***
@
text
@%*****************************************************************************
% Remember, you need to be as detailed as possible in the description
% of the modules in order to facilitate the coding task. Do not leave any 
% room for ambiguity.
%*****************************************************************************
%
% For each module and major submodule complete the following
% section and subsections
%
\subsection{Database Destroy Module}
  The data base destroy module is used in conjunction with the data base addition
module.  When PERT/Gantt chart tasks are no longer desired, and the user decides
to delete them by interacting with the Graphical User Interface, the procedures
of the destroy module will free the storage space that was occupied by tasks 
which were marked for deletion from the data base.  All of the tasks information
will be deleted, as will its related information such as pointers and doubly
linked lists of dependencies, dependents, subtasks, and resources.

% 
% Include a data flow diagram for this module
%
\subsubsection{Data Flow Diagram}
  A data flow diagram is not necessary for this module, since only a few 
statements are necessary to delete a task.  See the PDL descriptions for detailed
information.  For the data base data flow diagrams, the reader is referred to the
Requirements Specification Document.

%
% Include a Structure Chart for this module
%
\subsubsection{Structure Chart}

  The PDL is small enough to fully describe the functions of this module.
The module procedures are too small to need a structure chart to describe them.

%
% Include a processing narrative for this module
%
\subsubsection{Processing Narrative}

The procedures destroy-task-info, destroy-task-node, and
destroy-resource-info are called when the \xplan\/ user decides to delete
a task from the \xplan\/ database.  destroy-task-info will delete the
storage space for a single task's information which is represented in
a structure. The procedure destroy-task-node is called to delete a
single task from a doubly linked list of tasks.  The procedure
destroy-resource-info is called to destroy the storage space for a
single resource. The resources are represented in a doubly linked list
of resources for a single task.

%
% Include a PDL pseudocode description for this module
%
\subsubsection{PDL}
\begin{verbatim}

PROCEDURE destroy-task-info;
   INTERFACE ARGUMENTS old;
   INTERFACE RETURNS void;
   free storage space for old.name;
   free storage space for old.desc;
   free storage space for old;
END destroy-task-info;

PROCEDURE destroy-task-node;
  INTERFACE ARGUMENTS old;
  INTERFACE RETURNS void;
  free storage space for old;
END destroy-task-node;

PROCEDURE destroy-resource-info;
   INTERFACE ARGUMENTS old;
   INTERFACE RETURNS void;
   free storage space for old;
END destroy-resource-info;

\end{verbatim}

%
% Include a description of the interfaces for this module.
% This should include a list of data elements passed between
% modules.  The data elements described here should either be
% described in the next subsection or in the relevant owner's
% data dictionary
%
\subsubsection{Internal Interfaces}

   See the Database Addition Module for this information.  It is the
same.

%
% Include a data dictionary for this module.  The format should be:
%  
% Name: (this is the name of the data item)
% Aliases: (this is a list of aliases, if any)
% Where Used/ How Used: (this is a paired list of where the item is
%     used and how it is used
% Description: (this is a demarco description of the data item)
%
\subsubsection{Data Dictionary}

\begin{enumerate}

\item
\begin{description}
\item[Name:] old
\item[Where Used/How Used:] Procedure destroy-task-info.
old represents a structure of task information, which
has its storage space freed when that task is to be deleted from the doubly
linked list of tasks.
\item[Description (Content):] * a pointer to a task structure *
\end{description}

\item
\begin{description}
\item[Name:] old
\item[Where Used/How Used:] Procedure destroy-task-node.
old represents a task node in the doubly linked list of tasks.  The task node
contains the previous node, and next node pointers, and a pointer to a structure
of task information for that node which represents a single task in xplan.
\item[Description (Content):] * a pointer to a task node *
\end{description}

\item
\begin{description}
\item[Name:] old
\item[Where Used/How Used:] Procedure destroy-resource-info
old represents a structure of resource information in a
doubly linked list of resources for a single task.
\item[Description (Content):] * A pointer to a resource structure *
\end{description}
\end{enumerate}




@


1.5
log
@*** empty log message ***
@
text
@d102 6
a107 3
NAME: old
ALIASES: None
WHERE USED/HOW USED: Procedure destroy-task-info.
d111 2
a112 1
DESCRIPTION (CONTENT): * a pointer to a task structure *
d114 4
a117 3
NAME: old
ALIASES: None
WHERE USED/HOW USED: Procedure destroy-task-node.
d121 7
a127 4
DESCRIPTION (CONTENT): * a pointer to a task node *
NAME: old
ALIASES: None
WHERE USED/HOW USED: Procedure destroy-resource-info
d130 4
a133 1
DESCRIPTION (CONTENT): * a pointer to a resource structure *
@


1.4
log
@*** empty log message ***
@
text
@d22 1
a22 1
\subsubsection{Database Destroy Data Flow Diagram}
d31 1
a31 1
\subsubsection{Database Destroy Structure Chart}
d34 1
a34 1
The module procedures are to small to need a structure chart to describe them.
d39 1
a39 1
\subsubsection{Database Destroy Processing Narrative}
d42 2
a43 2
destroy-resource-info are called when the xplan user decides to delete
a task from the xplan database.  destroy-task-info will delete the
d54 1
a54 1
\subsubsection{Data base Destroy PDL}
d86 1
a86 1
\subsubsection{Database Destroy Internal Interfaces}
d100 1
a100 1
\subsubsection{Data base Destroy Data Dictionary}
@


1.3
log
@*** empty log message ***
@
text
@d16 1
a16 1
will be deleted, as will its realted information such as pointers and doubly
d25 1
a25 1
information.  For the data base data flow diagrams, the reader is refered to the
@


1.2
log
@*** empty log message ***
@
text
@d11 7
d23 4
d33 3
d104 2
a105 2
WHERE USED/HOW USED: Procedure destroy-task-info;
DESCRIPTION (CONTENT): old represents a structure of task information, which
d108 1
d112 5
a116 6
WHERE USED/HOW USED: Procedure destroy-task-node;
DESCRIPTION (CONTENT): old represents a task node in the doubly linked list
of tasks.  The task node contains the previous node, and next node pointers, and a
pointer to a structure of task information for that node which represents
a single task in xplan.

d120 1
a120 1
DESCRIPTION (CONTENT): old represents a structure of resource information in a
d122 3
@


1.1
log
@Initial revision
@
text
@d10 2
a11 3
\subsection{Data base Destroy Module}
\begin{verbatim}
\end{verbatim}
d15 1
a15 3
\subsubsection{Data base Destroy Data Flow Diagram}
\begin{verbatim}
\end{verbatim}
d20 1
a20 4
\subsubsection{Data base Destroy Structure Chart}
\begin{verbatim}
  None.
\end{verbatim}
d25 1
a25 9
\subsubsection{Data base Destroy Processing Narrative}
\begin{verbatim}
   The procedures destroy_task_info, destroy_task_node, and destroy_resource_info
are called when the xplan user decides to delete a task from the xplan database.
destroy_task_info will delete the storage space for a single task's information
which is represented in a structure. The procedure destroy_task_node is called to
delete a single task from a doubly linked list of tasks.  The procedure destroy_resource_info
is called to destroy the storage space for a single resource. The resources are represented
in a doubly linked list of resources for a single task.
d27 10
a36 1
\end{verbatim}
d43 1
a43 1
PROCEDURE destroy_task_info;
d49 1
a49 1
END destroy_task_info;
d51 1
a51 1
PROCEDURE destroy_task_node;
d55 1
a55 1
END destroy_task_node;
d57 1
a57 1
PROCEDURE destroy_resource_info;
d61 1
a61 1
END destroy_resource_info;
d72 1
a72 4
\subsubsection{Data base Destroy Internal Interfaces}
\begin{verbatim}
   See the Data base Addition Module for this information. It is the same.
\end{verbatim}
d74 3
a87 2
\begin{verbatim}

d90 1
a90 1
WHERE USED/HOW USED: Procedure destroy_task_info;
d97 1
a97 1
WHERE USED/HOW USED: Procedure destroy_task_node;
d105 1
a105 1
WHERE USED/HOW USED: Procedure destroy_resource_info
a108 1
\end{verbatim}
@
