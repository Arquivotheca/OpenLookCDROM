head	1.2;
access;
symbols;
locks; strict;
comment	@% @;


1.2
date	92.11.11.05.20.53;	author gaubert;	state Exp;
branches;
next	1.1;

1.1
date	92.11.11.05.00.14;	author gaubert;	state Exp;
branches;
next	;


desc
@hjklsdfghgsfdkjljfdgksl
@


1.2
log
@bla bla
@
text
@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% From the information described in the Test plan, give the 
% actual procedure for carrying out the plans.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Test Procedure for the Read-File Module}
  The read-file module will be the first of the three modules to be
tested. The testing of this module will include testing that the file
safely arrived from the user interface and that the call to the
function yyparse was correctly made. The next tests will be done to
the yylex function. This function will first be tested with the
read-file module, but with the yylex call in place of the yyparse
call. Within the yylex function, the token codes of the items in the
file that are scanned will be displayed to the screen. Finally, the
function yyparse will be tested. This is the last function to be
tested because it will use both the read-file module and the yylex
function. The function yyparse will be tested by input files and data
that is printed to the screen or to a temporary file. Within the
tests for the yyparse function, a test file that contains a
representation of the task list will be made up by hand. This test
file will sent to the scanner, and then to the parser. The parser will
display the contents of the task list node that will eventually be
placed into the database. 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% For each top level module:
%
%	0. Describe the top level module
%
%	1. List the low-level modules that are invoked by the
% 	top level module
%
%	2. Discuss integration provisions and outline integration tests
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsection{Order of integration}
\input{read-file-integ}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Describe (briefly) the modules that are to be tested.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\paragraph{Modules to be tested}
  The modules that will be tested for the read-file modules will
include the read-file module, the yyparse function, and the yylex function.


%
% Guys --- put in an input line like the one below for each module
% that you have.
%\input{moduleX}
%

%
%   This is the input files for the read functions and modules.
%   This module must come after the database tests.    
%
\input{moduleread-file}
\input{module-yylex}
\input{module-yyparse}
@


1.1
log
@Initial revision
@
text
@d39 2
@
