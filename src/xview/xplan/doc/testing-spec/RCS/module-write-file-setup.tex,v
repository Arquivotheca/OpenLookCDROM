head	1.2;
access;
symbols;
locks; strict;
comment	@% @;


1.2
date	92.11.11.02.46.25;	author gaubert;	state Exp;
branches;
next	1.1;

1.1
date	92.11.10.03.06.07;	author gaubert;	state Exp;
branches;
next	;


desc
@This is the new module that will be used to call the write-file module
@


1.2
log
@hjklfds.
@
text
@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% The following subsubsection should be repeated for each module that
% is invoked by the top-level module.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsubsection{Unit tests for module write-file-setup} 
\begin{description}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Describe the test for the module.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\item[{\bf Description of test for module write-file-setup:}] \hfill \\
Testing for this function will be to set up the file pointer from
the filename, to get the pointer for the top of the main list, and to
call the write-file module with the pointer to the top of the list.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Use of stubs or other software to facilitate the test
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\item[{\bf Overhead software description:}] \hfill \\
The filename will be hard coded in the open statement to check for
the errors of the file. A dummy module will be made that will be
called from the write-file-setup to facilitate the call of the
write-file module. The node that will be sent to the dummy module will
be created in the write-file-setup function. The contents of the node
will be printed in the dummy routine to make sure that the pointer is
being transferred correctly.




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% What data did you use to conduct the tests?
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\item[{\bf Test case data:}] \hfill \\
  Test data for this module will consist of opening the file with a
file that exists and one that doesn't. This test will tell whether the
module will return the correct value or not. 
The next test case is to set up a node and call the dummy write-file
routine with that node.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Briefly, what type of results do you expect?
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\item[{Expected Results:}] \hfill \\
  The first case will send the caller a ``0'' if the opening of the
file is good and a ``1'' if not. The second case will print out the
contents of the node within the dummy write-file routine.



\end{description}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% DO NOT FILL OUT THE FOLLOWING SECTION FOR THE TESTING SPEC DELIVERABLE!!
% The testing results will be turned when the practice demo is given.
%
% For each top level module, describe the testing results.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
%\subsubsection{Actual Test Results}
@


1.1
log
@Initial revision
@
text
@d13 1
a13 1
Tesiting for this function will be to set up the filepointer from
d29 1
a29 1
being transfered correctly.
d39 1
a39 1
file that exist and one that doesn't. This test will tell whether the
d48 1
a48 1
\item[{Expected Results:}] \hfill \
@
