head	1.2;
access;
symbols;
locks; strict;
comment	@% @;


1.2
date	92.11.11.01.54.36;	author gaubert;	state Exp;
branches;
next	1.1;

1.1
date	92.11.10.00.12.50;	author gaubert;	state Exp;
branches;
next	;


desc
@This is the testing spec fot the function yylex
@


1.2
log
@This is the ass kicken file fot the yylex file oin the testing specs
@
text
@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% The following subsubsection should be repeated for each module that
% is invoked by the top-level module.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsubsection{Unit tests for function yylex} 
\begin{description}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Describe the test for the module.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\item[{\bf Description of test for function yylex:}] \hfill \\
  This function yylex will scan an input file and determine different
tokens for the data that it's read from the file. These tokens will
correlate to a number that is associated with the particular keyword
or symbol. 



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Use of stubs or other software to facilitate the test
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\item[{\bf Overhead software description:}] \hfill \\
  The stubs for the yylex function will consist of a driver that will
set up the yyin file pointer and call the yylex function. Within each
token that is found in from the scanner, code will be used to display
the token code number to the screen.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% What data did you use to conduct the tests?
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\item[{\bf Test case data:}] \hfill \\
 The test data for this function will consist of a file that displays
all of the symbols, keywords, strings, and integers that an input file
can have for the scanner. The cases will consist of making a number
of files that test all of the keywords, strings, integers, and symbols
can be encountered in scanning.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Briefly, what type of results do you expect?
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\item[{Expected Results:}] \hfill \
  The expected results will display the correct token code numbers for
the keywords, symbols, strings, and integers from within the file to
the screen.


\end{description}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% DO NOT FILL OUT THE FOLLOWING SECTION FOR THE TESTING SPEC DELIVERABLE!!
% The testing results will be turned when the practice demo is given.
%
% For each top level module, describe the testing results.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
%\subsubsection{Actual Test Results}
@


1.1
log
@Initial revision
@
text
@d15 1
a15 1
coorolate to a number that is associated with the particular keyword
a23 1

d37 1
a37 1
dcan have for the scanner. The cases will consist of making a number
d39 1
a39 1
are getting the correct token codes.
a45 1

@
