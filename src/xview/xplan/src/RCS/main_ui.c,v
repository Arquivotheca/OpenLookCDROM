head	1.5;
access;
symbols;
locks; strict;
comment	@ * @;


1.5
date	92.12.11.15.45.50;	author lacey;	state Exp;
branches;
next	1.4;

1.4
date	92.12.10.09.05.52;	author lacey;	state Exp;
branches;
next	1.3;

1.3
date	92.12.03.14.54.23;	author lacey;	state Exp;
branches;
next	1.2;

1.2
date	92.11.27.20.32.23;	author lacey;	state Exp;
branches;
next	1.1;

1.1
date	92.11.19.15.29.18;	author lacey;	state Exp;
branches;
next	;


desc
@@


1.5
log
@The file we did our final demo with.
@
text
@/*
 * main_ui.c - User interface object initialization functions.
 * This file was generated by `gxv' from `main.G'.
 * DO NOT EDIT BY HAND.
 */

#include <stdio.h>
#include <sys/param.h>
#include <sys/types.h>
#include <xview/xview.h>
#include <xview/canvas.h>
#include <xview/panel.h>
#include <xview/scrollbar.h>
#include <xview/svrimage.h>
#include <xview/termsw.h>
#include <xview/text.h>
#include <xview/tty.h>
#include <xview/xv_xrect.h>
#include "main_ui.h"

/*
 * Create object `fileMenu' in the specified instance.
 */
Xv_opaque
main_fileMenu_create(caddr_t ip, Xv_opaque owner)
{
	extern Menu_item	main_fileMenu_item0_callback(Menu_item, Menu_generate);
	extern Menu_item	new_project_callback(Menu_item, Menu_generate);
	extern Menu_item	save_callback(Menu_item, Menu_generate);
	extern Menu_item	main_fileMenu_item3_callback(Menu_item, Menu_generate);
	Xv_opaque	obj;
	
	obj = xv_create(XV_NULL, MENU_COMMAND_MENU,
		XV_KEY_DATA, INSTANCE, ip,
		MENU_ITEM,
			XV_KEY_DATA, INSTANCE, ip,
			MENU_STRING, "Load...",
			MENU_GEN_PROC, main_fileMenu_item0_callback,
			NULL,
		MENU_ITEM,
			XV_KEY_DATA, INSTANCE, ip,
			MENU_STRING, "New Project",
			MENU_GEN_PROC, new_project_callback,
			NULL,
		MENU_ITEM,
			XV_KEY_DATA, INSTANCE, ip,
			MENU_STRING, "Save",
			MENU_GEN_PROC, save_callback,
			NULL,
		MENU_ITEM,
			XV_KEY_DATA, INSTANCE, ip,
			MENU_STRING, "Save As...",
			MENU_GEN_PROC, main_fileMenu_item3_callback,
			NULL,
		MENU_GEN_PIN_WINDOW, owner, "",
		NULL);
	return obj;
}

/*
 * Create object `chartMenu' in the specified instance.
 */
Xv_opaque
main_chartMenu_create(caddr_t ip, Xv_opaque owner)
{
	extern Menu_item	display_pert_callback(Menu_item, Menu_generate);
	extern Menu_item	display_gantt_callback(Menu_item, Menu_generate);
	Xv_opaque	obj;
	
	obj = xv_create(XV_NULL, MENU_COMMAND_MENU,
		XV_KEY_DATA, INSTANCE, ip,
		MENU_ITEM,
			XV_KEY_DATA, INSTANCE, ip,
			MENU_STRING, "PERT",
			MENU_GEN_PROC, display_pert_callback,
			NULL,
		MENU_ITEM,
			XV_KEY_DATA, INSTANCE, ip,
			MENU_STRING, "Gantt",
			MENU_GEN_PROC, display_gantt_callback,
			NULL,
		MENU_GEN_PIN_WINDOW, owner, "",
		NULL);
	return obj;
}

/*
 * Create object `analyzeMenu' in the specified instance.
 */
Xv_opaque
main_analyzeMenu_create(caddr_t ip, Xv_opaque owner)
{
	extern Menu_item	find_critical_path_callback(Menu_item, Menu_generate);
	extern Menu_item	check_dependencies_callback(Menu_item, Menu_generate);
	extern Menu_item	calc_early_start_date(Menu_item, Menu_generate);
	Xv_opaque	obj;
	
	obj = xv_create(XV_NULL, MENU_COMMAND_MENU,
		XV_KEY_DATA, INSTANCE, ip,
		MENU_ITEM,
			XV_KEY_DATA, INSTANCE, ip,
			MENU_STRING, "Find Critical Path",
			MENU_GEN_PROC, find_critical_path_callback,
			NULL,
		MENU_ITEM,
			XV_KEY_DATA, INSTANCE, ip,
			MENU_STRING, "Check Dependencies",
			MENU_GEN_PROC, check_dependencies_callback,
			NULL,
		MENU_ITEM,
			XV_KEY_DATA, INSTANCE, ip,
			MENU_STRING, "Date Calculation",
			MENU_GEN_PROC, calc_early_start_date,
			NULL,
		MENU_DEFAULT, 2,
		MENU_GEN_PIN_WINDOW, owner, "",
		NULL);
	return obj;
}

/*
 * Create object `exportMenu' in the specified instance.
 */
Xv_opaque
main_exportMenu_create(caddr_t ip, Xv_opaque owner)
{
	extern Menu_item	task_list_callback(Menu_item, Menu_generate);
	extern Menu_item	latex_pert_callback(Menu_item, Menu_generate);
	extern Menu_item	latex_gantt_callback(Menu_item, Menu_generate);
	extern Menu_item	main_exportMenu_item3_callback(Menu_item, Menu_generate);
	Xv_opaque	obj;
	
	obj = xv_create(XV_NULL, MENU_COMMAND_MENU,
		XV_KEY_DATA, INSTANCE, ip,
		MENU_ITEM,
			XV_KEY_DATA, INSTANCE, ip,
			MENU_STRING, "Generate Task Sheet",
			MENU_GEN_PROC, task_list_callback,
			NULL,
		MENU_ITEM,
			XV_KEY_DATA, INSTANCE, ip,
			MENU_STRING, "Generate PERT Chart",
			MENU_GEN_PROC, latex_pert_callback,
			NULL,
		MENU_ITEM,
			XV_KEY_DATA, INSTANCE, ip,
			MENU_STRING, "Generate Gantt Chart",
			MENU_GEN_PROC, latex_gantt_callback,
			NULL,
		MENU_ITEM,
			XV_KEY_DATA, INSTANCE, ip,
			MENU_STRING, "Options...",
			MENU_GEN_PROC, main_exportMenu_item3_callback,
			NULL,
		MENU_DEFAULT, 2,
		MENU_GEN_PIN_WINDOW, owner, "",
		NULL);
	return obj;
}

/*
 * Create object `insertMenu' in the specified instance.
 */
Xv_opaque
main_insertMenu_create(caddr_t ip, Xv_opaque owner)
{
	extern Menu_item	main_insertMenu_item0_callback(Menu_item, Menu_generate);
	extern Menu_item	main_insertMenu_item1_callback(Menu_item, Menu_generate);
	extern Menu_item	main_insertMenu_item2_callback(Menu_item, Menu_generate);
	extern Menu_item	main_insertMenu_item3_callback(Menu_item, Menu_generate);
	Xv_opaque	obj;
	
	obj = xv_create(XV_NULL, MENU_COMMAND_MENU,
		XV_KEY_DATA, INSTANCE, ip,
		MENU_ITEM,
			XV_KEY_DATA, INSTANCE, ip,
			MENU_STRING, "Before",
			MENU_GEN_PROC, main_insertMenu_item0_callback,
			NULL,
		MENU_ITEM,
			XV_KEY_DATA, INSTANCE, ip,
			MENU_STRING, "After",
			MENU_GEN_PROC, main_insertMenu_item1_callback,
			NULL,
		MENU_ITEM,
			XV_KEY_DATA, INSTANCE, ip,
			MENU_STRING, "Top",
			MENU_GEN_PROC, main_insertMenu_item2_callback,
			NULL,
		MENU_ITEM,
			XV_KEY_DATA, INSTANCE, ip,
			MENU_STRING, "Bottom",
			MENU_GEN_PROC, main_insertMenu_item3_callback,
			NULL,
		MENU_DEFAULT, 5,
		MENU_GEN_PIN_WINDOW, owner, "",
		NULL);
	return obj;
}

/*
 * Initialize an instance of object `mainWindow'.
 */
main_mainWindow_objects *
main_mainWindow_objects_initialize(main_mainWindow_objects *ip, Xv_opaque owner)
{
	if (!ip && !(ip = (main_mainWindow_objects *) calloc(1, sizeof (main_mainWindow_objects))))
		return (main_mainWindow_objects *) NULL;
	if (!ip->mainWindow)
		ip->mainWindow = main_mainWindow_mainWindow_create(ip, owner);
	if (!ip->control)
		ip->control = main_mainWindow_control_create(ip, ip->mainWindow);
	if (!ip->fileButton)
		ip->fileButton = main_mainWindow_fileButton_create(ip, ip->control);
	if (!ip->chartButton)
		ip->chartButton = main_mainWindow_chartButton_create(ip, ip->control);
	if (!ip->analyzeButton)
		ip->analyzeButton = main_mainWindow_analyzeButton_create(ip, ip->control);
	if (!ip->exportButton)
		ip->exportButton = main_mainWindow_exportButton_create(ip, ip->control);
	if (!ip->tasksLabel)
		ip->tasksLabel = main_mainWindow_tasksLabel_create(ip, ip->control);
	if (!ip->taskList)
		ip->taskList = main_mainWindow_taskList_create(ip, ip->control);
	if (!ip->insertButton)
		ip->insertButton = main_mainWindow_insertButton_create(ip, ip->control);
	if (!ip->deleteButton)
		ip->deleteButton = main_mainWindow_deleteButton_create(ip, ip->control);
	return ip;
}

/*
 * Create object `mainWindow' in the specified instance.
 */
Xv_opaque
main_mainWindow_mainWindow_create(main_mainWindow_objects *ip, Xv_opaque owner)
{
	Xv_opaque	obj;
	
	obj = xv_create(owner, FRAME,
		XV_KEY_DATA, INSTANCE, ip,
		XV_WIDTH, 343,
		XV_HEIGHT, 315,
		XV_LABEL, "xplan",
		FRAME_SHOW_FOOTER, TRUE,
		FRAME_SHOW_RESIZE_CORNER, TRUE,
		NULL);
	return obj;
}

/*
 * Create object `control' in the specified instance.
 */
Xv_opaque
main_mainWindow_control_create(main_mainWindow_objects *ip, Xv_opaque owner)
{
	Xv_opaque	obj;
	
	obj = xv_create(owner, PANEL,
		XV_KEY_DATA, INSTANCE, ip,
		XV_HELP_DATA, "main:control",
		XV_X, 0,
		XV_Y, 0,
		XV_WIDTH, WIN_EXTEND_TO_EDGE,
		XV_HEIGHT, WIN_EXTEND_TO_EDGE,
		WIN_BORDER, FALSE,
		NULL);
	return obj;
}

/*
 * Create object `fileButton' in the specified instance.
 */
Xv_opaque
main_mainWindow_fileButton_create(main_mainWindow_objects *ip, Xv_opaque owner)
{
	extern Xv_opaque	main_fileMenu_create(caddr_t, Xv_opaque);
	Xv_opaque	obj;
	
	obj = xv_create(owner, PANEL_BUTTON,
		XV_KEY_DATA, INSTANCE, ip,
		XV_HELP_DATA, "main:fileButton",
		XV_X, 16,
		XV_Y, 16,
		PANEL_LABEL_STRING, "File",
		PANEL_ITEM_MENU, main_fileMenu_create((caddr_t) ip, ip->mainWindow),
		NULL);
	return obj;
}

/*
 * Create object `chartButton' in the specified instance.
 */
Xv_opaque
main_mainWindow_chartButton_create(main_mainWindow_objects *ip, Xv_opaque owner)
{
	extern Xv_opaque	main_chartMenu_create(caddr_t, Xv_opaque);
	Xv_opaque	obj;
	
	obj = xv_create(owner, PANEL_BUTTON,
		XV_KEY_DATA, INSTANCE, ip,
		XV_HELP_DATA, "main:chartButton",
		XV_X, 88,
		XV_Y, 16,
		PANEL_LABEL_STRING, "Chart",
		PANEL_ITEM_MENU, main_chartMenu_create((caddr_t) ip, ip->mainWindow),
		NULL);
	return obj;
}

/*
 * Create object `analyzeButton' in the specified instance.
 */
Xv_opaque
main_mainWindow_analyzeButton_create(main_mainWindow_objects *ip, Xv_opaque owner)
{
	extern Xv_opaque	main_analyzeMenu_create(caddr_t, Xv_opaque);
	Xv_opaque	obj;
	
	obj = xv_create(owner, PANEL_BUTTON,
		XV_KEY_DATA, INSTANCE, ip,
		XV_HELP_DATA, "main:analyzeButton",
		XV_X, 168,
		XV_Y, 16,
		PANEL_LABEL_STRING, "Analyze",
		PANEL_ITEM_MENU, main_analyzeMenu_create((caddr_t) ip, ip->mainWindow),
		NULL);
	return obj;
}

/*
 * Create object `exportButton' in the specified instance.
 */
Xv_opaque
main_mainWindow_exportButton_create(main_mainWindow_objects *ip, Xv_opaque owner)
{
	extern Xv_opaque	main_exportMenu_create(caddr_t, Xv_opaque);
	Xv_opaque	obj;
	
	obj = xv_create(owner, PANEL_BUTTON,
		XV_KEY_DATA, INSTANCE, ip,
		XV_HELP_DATA, "main:exportButton",
		XV_X, 264,
		XV_Y, 16,
		PANEL_LABEL_STRING, "Export",
		PANEL_ITEM_MENU, main_exportMenu_create((caddr_t) ip, ip->mainWindow),
		NULL);
	return obj;
}

/*
 * Create object `tasksLabel' in the specified instance.
 */
Xv_opaque
main_mainWindow_tasksLabel_create(main_mainWindow_objects *ip, Xv_opaque owner)
{
	Xv_opaque	obj;
	
	obj = xv_create(owner, PANEL_MESSAGE,
		XV_KEY_DATA, INSTANCE, ip,
		XV_X, 16,
		XV_Y, 48,
		PANEL_LABEL_STRING, "Tasks",
		PANEL_LABEL_BOLD, TRUE,
		NULL);
	return obj;
}

/*
 * Create object `taskList' in the specified instance.
 */
Xv_opaque
main_mainWindow_taskList_create(main_mainWindow_objects *ip, Xv_opaque owner)
{
	extern int		main_mainWindow_taskList_notify_callback(Panel_item, char *, Xv_opaque, Panel_list_op, Event *, int);
	Xv_opaque	obj;
	
	obj = xv_create(owner, PANEL_LIST,
		XV_KEY_DATA, INSTANCE, ip,
		XV_HELP_DATA, "main:taskList",
		XV_X, 16,
		XV_Y, 72,
		PANEL_LIST_WIDTH, 300,
		PANEL_LIST_DISPLAY_ROWS, 10,
		PANEL_LAYOUT, PANEL_HORIZONTAL,
		PANEL_READ_ONLY, TRUE,
		PANEL_CHOOSE_ONE, TRUE,
		PANEL_CHOOSE_NONE, TRUE,
		PANEL_NOTIFY_PROC, main_mainWindow_taskList_notify_callback,
		NULL);
	return obj;
}

/*
 * Create object `insertButton' in the specified instance.
 */
Xv_opaque
main_mainWindow_insertButton_create(main_mainWindow_objects *ip, Xv_opaque owner)
{
	extern Xv_opaque	dependencies_insertMenu_create(caddr_t, Xv_opaque);
	Xv_opaque	obj;
	
	obj = xv_create(owner, PANEL_BUTTON,
		XV_KEY_DATA, INSTANCE, ip,
		XV_HELP_DATA, "main:insertButton",
		XV_X, 96,
		XV_Y, 288,
		PANEL_LABEL_STRING, "Insert",
		PANEL_ITEM_MENU, main_insertMenu_create((caddr_t) ip, ip->mainWindow),
		NULL);
	return obj;
}

/*
 * Create object `deleteButton' in the specified instance.
 */
Xv_opaque
main_mainWindow_deleteButton_create(main_mainWindow_objects *ip, Xv_opaque owner)
{
	extern void		main_deleteButton_callback(Panel_item, Event *);
	Xv_opaque	obj;
	
	obj = xv_create(owner, PANEL_BUTTON,
		XV_KEY_DATA, INSTANCE, ip,
		XV_HELP_DATA, "main:deleteButton",
		XV_X, 192,
		XV_Y, 288,
		PANEL_LABEL_STRING, "Delete",
		PANEL_NOTIFY_PROC, main_deleteButton_callback,
		NULL);
	return obj;
}

@


1.4
log
@*** empty log message ***
@
text
@d261 1
d282 1
d302 1
d322 1
d342 1
d400 1
a400 1
	extern Xv_opaque	main_insertMenu_create(caddr_t, Xv_opaque);
d405 1
d425 1
@


1.3
log
@Revisions prior to practice demo.
@
text
@d95 1
d113 1
d127 3
d138 1
d143 1
d148 1
@


1.2
log
@*** empty log message ***
@
text
@d28 2
d43 1
d48 1
d406 1
d414 1
@


1.1
log
@Initial revision
@
text
@d62 2
a63 2
	extern Menu_item	main_chartMenu_item0_callback(Menu_item, Menu_generate);
	extern Menu_item	main_chartMenu_item1_callback(Menu_item, Menu_generate);
d71 1
a71 1
			MENU_GEN_PROC, main_chartMenu_item0_callback,
d76 1
a76 1
			MENU_GEN_PROC, main_chartMenu_item1_callback,
d89 2
d98 1
d103 1
@
