head	1.6;
access;
symbols;
locks; strict;
comment	@# @;


1.6
date	92.12.11.15.50.53;	author lacey;	state Exp;
branches;
next	1.5;

1.5
date	92.12.10.09.10.46;	author lacey;	state Exp;
branches;
next	1.4;

1.4
date	92.11.19.15.26.56;	author lacey;	state Exp;
branches;
next	1.3;

1.3
date	92.11.19.03.27.37;	author lacey;	state Exp;
branches;
next	1.2;

1.2
date	92.11.09.15.13.00;	author lacey;	state Exp;
branches;
next	1.1;

1.1
date	92.11.06.21.44.12;	author lacey;	state Exp;
branches;
next	;


desc
@Guide file for the export options screen.
@


1.6
log
@File with help text included.
@
text
@;GIL-3
(
(
	:type                   :popup-window
	:name                   exportPopup
	:owner                  mainWindow
	:width                  343
	:height                 105
	:background-color       ""
	:foreground-color       ""
	:label                  "Export Options"
	:label-type             :string
	:initial-state          :invisible
	:show-footer            t
	:resizable              t
	:pinned                 t
	:done-handler           nil
	:event-handler          nil
	:user-data              ()
	:actions                (
		(
		:from                   (exportPopup)
		:when                   (Done )
		:to                     (exportPopup)
		:function_type          :user_defined
		:arg_type               ()
		:action                 (Hide)
		)
	)
)
(
	:type                   :control-area
	:name                   control
	:owner                  exportPopup
	:help                   "The main window for the export options.  This is where you specify the filename and directory for the exported LaTeX files.
"
	:x                      0
	:y                      0
	:width                  343
	:height                 105
	:background-color       ""
	:foreground-color       ""
	:initial-state          :visible
	:show-border            nil
	:menu                   nil
	:event-handler          nil
	:user-data              ()
	:actions                ()
)
(
	:type                   :text-field
	:name                   directory
	:owner                  control
	:help                   "The directory in which exported LaTeX files will be placed."
	:x                      16
	:y                      16
	:width                  314
	:height                 15
	:value-x                90
	:value-y                16
	:value-length           30
	:stored-length          100
	:rows                   3
	:foreground-color       ""
	:text-type              :alphanumeric
	:label                  "Directory:"
	:label-type             :string
	:layout-type            :horizontal
	:value-underlined       t
	:initial-value          ""
	:initial-state          :active
	:read-only              nil
	:notify-handler         nil
	:event-handler          nil
	:user-data              ()
	:actions                ()
)
(
	:type                   :text-field
	:name                   file
	:owner                  control
	:help                   "The file into which exported LaTeX documents will be placed.
"
	:x                      16
	:y                      48
	:width                  276
	:height                 15
	:value-x                52
	:value-y                48
	:value-length           30
	:stored-length          100
	:rows                   3
	:foreground-color       ""
	:text-type              :alphanumeric
	:label                  "File:"
	:label-type             :string
	:layout-type            :horizontal
	:value-underlined       t
	:initial-value          ""
	:initial-state          :active
	:read-only              nil
	:notify-handler         nil
	:event-handler          nil
	:user-data              ()
	:actions                ()
)
(
	:type                   :button
	:name                   applyButton
	:owner                  control
	:help                   "Apply your changes to the directory and filename."
	:x                      144
	:y                      80
	:width                  53
	:height                 19
	:constant-width         nil
	:button-type            :normal
	:foreground-color       ""
	:label                  "Apply"
	:label-type             :string
	:initial-state          :active
	:menu                   nil
	:notify-handler         export_apply_callback
	:event-handler          nil
	:user-data              ()
	:actions                (
		(
		:from                   (exportPopup applyButton)
		:when                   (Notify )
		:to                     (exportPopup applyButton)
		:function_type          CallFunction
		:arg_type               ()
		:action                 (export_apply_callback)
		)
	)
)
)
@


1.5
log
@*** empty log message ***
@
text
@d35 2
a36 1
	:help                   ""
d54 1
a54 1
	:help                   ""
d82 2
a83 1
	:help                   ""
d111 1
a111 1
	:help                   ""
@


1.4
log
@*** empty log message ***
@
text
@d61 1
a61 1
	:stored-length          30
d89 1
a89 1
	:stored-length          30
d121 1
a121 1
	:notify-handler         nil
d124 10
a133 1
	:actions                ()
@


1.3
log
@This is the latest version before eliminating subtasks.
@
text
@d16 1
a16 1
	:pinned                 nil
@


1.2
log
@*** empty log message ***
@
text
@d5 2
a6 2
	:name                   popup
	:owner                  window
d22 1
a22 1
		:from                   (popup)
d24 1
a24 1
		:to                     (popup)
d34 1
a34 1
	:owner                  popup
d51 1
a51 1
	:name                   DirField
d79 1
a79 1
	:name                   LaTeXFileField
d107 1
a107 1
	:name                   ExportOptionsApplyButton
@


1.1
log
@Initial revision
@
text
@a3 169
	:type                   :menu
	:name                   MainFileMenu
	:help                   ""
	:columns                1
	:menu-type              :command
	:menu-handler           nil
	:menu-title             ""
	:menu-item-labels       ("Load..." "New Project" "Save" "Save As..." )
	:menu-item-label-types  (:string :string :string :string )
	:menu-item-states       (:active :active :active :active )
	:menu-item-defaults     (nil nil nil nil )
	:initial-selections     (nil nil nil nil )
	:menu-item-handlers     (nil nil nil nil )
	:menu-item-menus        (nil nil nil nil )
	:menu-item-colors       ("" "" "" "" )
	:pinnable               t
	:user-data              ()
	:actions                ()
)
(
	:type                   :menu
	:name                   MainChartMenu
	:help                   ""
	:columns                1
	:menu-type              :command
	:menu-handler           nil
	:menu-title             ""
	:menu-item-labels       ("PERT" "Gantt" )
	:menu-item-label-types  (:string :string )
	:menu-item-states       (:active :active )
	:menu-item-defaults     (nil nil )
	:initial-selections     (nil nil )
	:menu-item-handlers     (nil nil )
	:menu-item-menus        (nil nil )
	:menu-item-colors       ("" "" )
	:pinnable               t
	:user-data              ()
	:actions                ()
)
(
	:type                   :menu
	:name                   MainAnalyzeMenu
	:help                   ""
	:columns                1
	:menu-type              :command
	:menu-handler           nil
	:menu-title             ""
	:menu-item-labels       ("Find Critical Path" "Check Dependencies" "Date Calculation" )
	:menu-item-label-types  (:string :string :string )
	:menu-item-states       (:active :active :active )
	:menu-item-defaults     (t nil nil )
	:initial-selections     (nil nil nil )
	:menu-item-handlers     (nil nil nil )
	:menu-item-menus        (nil nil nil )
	:menu-item-colors       ("" "" "" )
	:pinnable               t
	:user-data              ()
	:actions                ()
)
(
	:type                   :menu
	:name                   MainInsertMenu
	:help                   ""
	:columns                1
	:menu-type              :command
	:menu-handler           nil
	:menu-title             ""
	:menu-item-labels       ("Before" "After" "Top" "Bottom" )
	:menu-item-label-types  (:string :string :string :string )
	:menu-item-states       (:active :active :active :active )
	:menu-item-defaults     (nil nil nil t )
	:initial-selections     (nil nil nil nil )
	:menu-item-handlers     (nil nil nil nil )
	:menu-item-menus        (nil nil nil nil )
	:menu-item-colors       ("" "" "" "" )
	:pinnable               t
	:user-data              ()
	:actions                ()
)
(
	:type                   :menu
	:name                   MainPasteMenu
	:help                   ""
	:columns                1
	:menu-type              :command
	:menu-handler           nil
	:menu-title             ""
	:menu-item-labels       ("Before" "After" "Top" "Bottom" )
	:menu-item-label-types  (:string :string :string :string )
	:menu-item-states       (:active :active :active :active )
	:menu-item-defaults     (nil nil nil nil )
	:initial-selections     (nil nil nil nil )
	:menu-item-handlers     (nil nil nil nil )
	:menu-item-menus        (nil nil nil nil )
	:menu-item-colors       ("" "" "" "" )
	:pinnable               t
	:user-data              ()
	:actions                ()
)
(
	:type                   :menu
	:name                   MainEditMenu
	:help                   ""
	:columns                1
	:menu-type              :command
	:menu-handler           nil
	:menu-title             ""
	:menu-item-labels       ("Cut" "Copy" "Paste" "Delete" )
	:menu-item-label-types  (:string :string :string :string )
	:menu-item-states       (:active :active :active :active )
	:menu-item-defaults     (t nil nil nil )
	:initial-selections     (nil nil nil nil )
	:menu-item-handlers     (nil nil nil nil )
	:menu-item-menus        (nil nil MainPasteMenu nil )
	:menu-item-colors       ("" "" "" "" )
	:pinnable               t
	:user-data              ()
	:actions                ()
)
(
	:type                   :menu
	:name                   MainExportMenu
	:help                   ""
	:columns                1
	:menu-type              :command
	:menu-handler           nil
	:menu-title             ""
	:menu-item-labels       ("Generate Task Sheet" "Generate PERT Chart" "Generate Gantt Chart" "Options..." )
	:menu-item-label-types  (:string :string :string :string )
	:menu-item-states       (:active :active :active :active )
	:menu-item-defaults     (t nil nil nil )
	:initial-selections     (nil nil nil nil )
	:menu-item-handlers     (nil nil nil nil )
	:menu-item-menus        (nil nil nil nil )
	:menu-item-colors       ("" "" "" "" )
	:pinnable               t
	:user-data              ()
	:actions                (
		(
		:from                   (MainExportMenu "Options...")
		:when                   (Notify )
		:to                     (ExportOptionsPopup)
		:function_type          :user_defined
		:arg_type               ()
		:action                 (Show)
		)
	)
)
(
	:type                   :menu
	:name                   DependInsertMenu
	:help                   ""
	:columns                1
	:menu-type              :command
	:menu-handler           nil
	:menu-title             ""
	:menu-item-labels       ("Before" "After" "Top" "Bottom" )
	:menu-item-label-types  (:string :string :string :string )
	:menu-item-states       (:active :active :active :active )
	:menu-item-defaults     (nil nil nil t )
	:initial-selections     (nil nil nil nil )
	:menu-item-handlers     (nil nil nil nil )
	:menu-item-menus        (nil nil nil nil )
	:menu-item-colors       ("" "" "" "" )
	:pinnable               t
	:user-data              ()
	:actions                ()
)
(
d5 2
a6 2
	:name                   ExportOptionsPopup
	:owner                  ProjectWindow
d20 10
a29 1
	:actions                ()
d33 2
a34 2
	:name                   controls2
	:owner                  ExportOptionsPopup
d52 1
a52 1
	:owner                  controls2
d80 1
a80 1
	:owner                  controls2
d108 1
a108 1
	:owner                  controls2
@
