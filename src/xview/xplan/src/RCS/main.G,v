head	1.9;
access;
symbols;
locks; strict;
comment	@# @;


1.9
date	92.12.11.15.50.53;	author lacey;	state Exp;
branches;
next	1.8;

1.8
date	92.12.10.09.10.46;	author lacey;	state Exp;
branches;
next	1.7;

1.7
date	92.12.05.01.38.55;	author lacey;	state Exp;
branches;
next	1.6;

1.6
date	92.12.03.14.56.06;	author lacey;	state Exp;
branches;
next	1.5;

1.5
date	92.11.27.20.31.43;	author lacey;	state Exp;
branches;
next	1.4;

1.4
date	92.11.19.15.26.56;	author lacey;	state Exp;
branches;
next	1.3;

1.3
date	92.11.19.03.27.37;	author lacey;	state Exp;
branches;
next	1.2;

1.2
date	92.11.09.15.13.00;	author lacey;	state Exp;
branches;
next	1.1;

1.1
date	92.11.06.21.44.59;	author lacey;	state Exp;
branches;
next	;


desc
@Guide file for the main screen.
@


1.9
log
@File with help text included.
@
text
@;GIL-3
(
(
	:type                   :menu
	:name                   fileMenu
	:help                   ""
	:columns                1
	:menu-type              :command
	:menu-handler           nil
	:menu-title             ""
	:menu-item-labels       ("Load..." "New Project" "Save" "Save As..." )
	:menu-item-label-types  (:string :string :string :string )
	:menu-item-states       (:active :active :active :active )
	:menu-item-defaults     (nil nil nil nil )
	:initial-selections     (nil nil nil nil )
	:menu-item-handlers     (nil new_project_callback save_callback nil )
	:menu-item-menus        (nil nil nil nil )
	:menu-item-colors       ("" "" "" "" )
	:pinnable               t
	:user-data              ()
	:actions                (
		(
		:from                   (fileMenu "New Project")
		:when                   (Notify )
		:to                     (fileMenu "New Project")
		:function_type          CallFunction
		:arg_type               ()
		:action                 (new_project_callback)
		)
		(
		:from                   (fileMenu "Save")
		:when                   (Notify )
		:to                     (fileMenu "Save")
		:function_type          CallFunction
		:arg_type               ()
		:action                 (save_callback)
		)
	)
)
(
	:type                   :menu
	:name                   chartMenu
	:help                   ""
	:columns                1
	:menu-type              :command
	:menu-handler           nil
	:menu-title             ""
	:menu-item-labels       ("PERT" "Gantt" )
	:menu-item-label-types  (:string :string )
	:menu-item-states       (:active :active )
	:menu-item-defaults     (nil nil )
	:initial-selections     (nil nil )
	:menu-item-handlers     (display_pert_callback display_gantt_callback )
	:menu-item-menus        (nil nil )
	:menu-item-colors       ("" "" )
	:pinnable               t
	:user-data              ()
	:actions                (
		(
		:from                   (chartMenu "PERT")
		:when                   (Notify )
		:to                     (chartMenu "PERT")
		:function_type          CallFunction
		:arg_type               ()
		:action                 (display_pert_callback)
		)
		(
		:from                   (chartMenu "Gantt")
		:when                   (Notify )
		:to                     (chartMenu "Gantt")
		:function_type          CallFunction
		:arg_type               ()
		:action                 (display_gantt_callback)
		)
	)
)
(
	:type                   :menu
	:name                   analyzeMenu
	:help                   ""
	:columns                1
	:menu-type              :command
	:menu-handler           nil
	:menu-title             ""
	:menu-item-labels       ("Find Critical Path" "Check Dependencies" "Date Calculation" )
	:menu-item-label-types  (:string :string :string )
	:menu-item-states       (:active :active :active )
	:menu-item-defaults     (t nil nil )
	:initial-selections     (nil nil nil )
	:menu-item-handlers     (find_critical_path_callback check_dependencies_callback calc_early_start_date )
	:menu-item-menus        (nil nil nil )
	:menu-item-colors       ("" "" "" )
	:pinnable               t
	:user-data              ()
	:actions                (
		(
		:from                   (analyzeMenu "Find Critical Path")
		:when                   (Notify )
		:to                     (analyzeMenu "Find Critical Path")
		:function_type          CallFunction
		:arg_type               ()
		:action                 (find_critical_path_callback)
		)
		(
		:from                   (analyzeMenu "Check Dependencies")
		:when                   (Notify )
		:to                     (analyzeMenu "Check Dependencies")
		:function_type          CallFunction
		:arg_type               ()
		:action                 (check_dependencies_callback)
		)
		(
		:from                   (analyzeMenu "Date Calculation")
		:when                   (Notify )
		:to                     (analyzeMenu "Date Calculation")
		:function_type          CallFunction
		:arg_type               ()
		:action                 (calc_early_start_date)
		)
	)
)
(
	:type                   :menu
	:name                   exportMenu
	:help                   ""
	:columns                1
	:menu-type              :command
	:menu-handler           nil
	:menu-title             ""
	:menu-item-labels       ("Generate Task Sheet" "Generate PERT Chart" "Generate Gantt Chart" "Options..." )
	:menu-item-label-types  (:string :string :string :string )
	:menu-item-states       (:active :active :active :active )
	:menu-item-defaults     (t nil nil nil )
	:initial-selections     (nil nil nil nil )
	:menu-item-handlers     (task_list_callback latex_pert_callback latex_gantt_callback nil )
	:menu-item-menus        (nil nil nil nil )
	:menu-item-colors       ("" "" "" "" )
	:pinnable               t
	:user-data              ()
	:actions                (
		(
		:from                   (exportMenu "Generate Task Sheet")
		:when                   (Notify )
		:to                     (exportMenu "Generate Task Sheet")
		:function_type          CallFunction
		:arg_type               ()
		:action                 (task_list_callback)
		)
		(
		:from                   (exportMenu "Generate PERT Chart")
		:when                   (Notify )
		:to                     (exportMenu "Generate PERT Chart")
		:function_type          CallFunction
		:arg_type               ()
		:action                 (latex_pert_callback)
		)
		(
		:from                   (exportMenu "Generate Gantt Chart")
		:when                   (Notify )
		:to                     (exportMenu "Generate Gantt Chart")
		:function_type          CallFunction
		:arg_type               ()
		:action                 (latex_gantt_callback)
		)
	)
)
(
	:type                   :menu
	:name                   insertMenu
	:help                   ""
	:columns                1
	:menu-type              :command
	:menu-handler           nil
	:menu-title             ""
	:menu-item-labels       ("Before" "After" "Top" "Bottom" )
	:menu-item-label-types  (:string :string :string :string )
	:menu-item-states       (:active :active :active :active )
	:menu-item-defaults     (nil nil nil t )
	:initial-selections     (nil nil nil nil )
	:menu-item-handlers     (nil nil nil nil )
	:menu-item-menus        (nil nil nil nil )
	:menu-item-colors       ("" "" "" "" )
	:pinnable               t
	:user-data              ()
	:actions                (
	)
)
(
	:type                   :base-window
	:name                   mainWindow
	:owner                  nil
	:width                  343
	:height                 315
	:background-color       ""
	:foreground-color       ""
	:label                  "xplan"
	:label-type             :string
	:initial-state          :open
	:show-footer            t
	:resizable              t
	:icon-file              ""
	:icon-label             ""
	:icon-mask-file         ""
	:event-handler          nil
	:user-data              ()
	:actions                ()
)
(
	:type                   :control-area
	:name                   control
	:owner                  mainWindow
	:help                   "This is the main window of xplan.  The list in the window is the list of tasks for the project being planned.  The menu options allow you to do various calculations and displays."
	:x                      0
	:y                      0
	:width                  343
	:height                 315
	:background-color       ""
	:foreground-color       ""
	:initial-state          :visible
	:show-border            nil
	:menu                   nil
	:event-handler          nil
	:user-data              ()
	:actions                ()
)
(
	:type                   :button
	:name                   fileButton
	:owner                  control
	:help                   "File menu, for starting a new project, or loading an old one."
	:x                      16
	:y                      16
	:width                  54
	:height                 19
	:constant-width         nil
	:button-type            :normal
	:foreground-color       ""
	:label                  "File"
	:label-type             :string
	:initial-state          :active
	:menu                   fileMenu
	:notify-handler         nil
	:event-handler          nil
	:user-data              ()
	:actions                ()
)
(
	:type                   :button
	:name                   chartButton
	:owner                  control
	:help                   "The chart menu, which allows you to display graphically the PERT or Gantt chart for a task network."
	:x                      88
	:y                      16
	:width                  66
	:height                 19
	:constant-width         nil
	:button-type            :normal
	:foreground-color       ""
	:label                  "Chart"
	:label-type             :string
	:initial-state          :active
	:menu                   chartMenu
	:notify-handler         nil
	:event-handler          nil
	:user-data              ()
	:actions                ()
)
(
	:type                   :button
	:name                   analyzeButton
	:owner                  control
	:help                   "The analyize menu, which allows you to do various calculations."
	:x                      168
	:y                      16
	:width                  80
	:height                 19
	:constant-width         nil
	:button-type            :normal
	:foreground-color       ""
	:label                  "Analyze"
	:label-type             :string
	:initial-state          :active
	:menu                   analyzeMenu
	:notify-handler         nil
	:event-handler          nil
	:user-data              ()
	:actions                ()
)
(
	:type                   :button
	:name                   exportButton
	:owner                  control
	:help                   "The menu for the LaTeX export options.
"
	:x                      264
	:y                      16
	:width                  71
	:height                 19
	:constant-width         nil
	:button-type            :normal
	:foreground-color       ""
	:label                  "Export"
	:label-type             :string
	:initial-state          :active
	:menu                   exportMenu
	:notify-handler         nil
	:event-handler          nil
	:user-data              ()
	:actions                ()
)
(
	:type                   :message
	:name                   tasksLabel
	:owner                  control
	:help                   ""
	:x                      16
	:y                      48
	:width                  41
	:height                 13
	:foreground-color       ""
	:label                  "Tasks"
	:label-type             :string
	:label-bold             t
	:initial-state          :active
	:event-handler          nil
	:user-data              ()
	:actions                ()
)
(
	:type                   :scrolling-list
	:name                   taskList
	:owner                  control
	:help                   "This is the task list for the current project.  Entries in the list correspond to tasks that much be completed for this project.  The first task in the list must be the task that begins the project, and the last task in the list must be the final task in the project.  All tasks other than the first and last must have dependencies, and must be a dependency of another tasks.  The first task can have no dependencies, and no task can depend on the last."
	:x                      16
	:y                      72
	:width                  300
	:height                 200
	:value-x                16
	:value-y                72
	:rows                   10
	:foreground-color       ""
	:label                  ""
	:title                  ""
	:label-type             :string
	:layout-type            :horizontal
	:read-only              t
	:multiple-selections    nil
	:selection-required     nil
	:initial-state          :active
	:droppable              nil
	:default-drop-site      nil
	:menu                   nil
	:notify-handler         nil
	:event-handler          nil
	:initial-list-values    ()
	:initial-list-glyphs    ()
	:initial-selections     ()
	:user-data              ()
	:actions                ()
)
(
	:type                   :button
	:name                   insertButton
	:owner                  control
	:help                   "Insert a new task into the task list, either before or after the currently selected task, or at the top of bottom of the list.
"
	:x                      96
	:y                      288
	:width                  67
	:height                 19
	:constant-width         nil
	:button-type            :normal
	:foreground-color       ""
	:label                  "Insert"
	:label-type             :string
	:initial-state          :active
	:menu                   insertMenu
	:notify-handler         nil
	:event-handler          nil
	:user-data              ()
	:actions                (
	)
)
(
	:type                   :button
	:name                   deleteButton
	:owner                  control
	:help                   "Deletes the currently selected task from the task list."
	:x                      192
	:y                      288
	:width                  57
	:height                 19
	:constant-width         nil
	:button-type            :normal
	:foreground-color       ""
	:label                  "Delete"
	:label-type             :string
	:initial-state          :active
	:menu                   nil
	:notify-handler         main_deleteButton_callback
	:event-handler          nil
	:user-data              ()
	:actions                (
		(
		:from                   (mainWindow deleteButton)
		:when                   (Notify )
		:to                     (mainWindow deleteButton)
		:function_type          CallFunction
		:arg_type               ()
		:action                 (main_deleteButton_callback)
		)
	)
)
)
@


1.8
log
@*** empty log message ***
@
text
@d150 1
a150 1
		:from                   (exportMenu "Generate Gantt Chart")
d152 1
a152 1
		:to                     (exportMenu "Generate Gantt Chart")
d155 1
a155 1
		:action                 (latex_gantt_callback)
d158 1
a158 1
		:from                   (exportMenu "Generate PERT Chart")
d160 1
a160 1
		:to                     (exportMenu "Generate PERT Chart")
d163 1
a163 1
		:action                 (latex_pert_callback)
d185 2
a186 1
	:actions                ()
d212 1
a212 1
	:help                   ""
d230 1
a230 1
	:help                   ""
d251 1
a251 1
	:help                   ""
d272 1
a272 1
	:help                   ""
d293 2
a294 1
	:help                   ""
d333 1
a333 1
	:help                   "This is the task list."
d365 2
a366 1
	:help                   ""
d381 2
a382 1
	:actions                ()
d388 1
a388 1
	:help                   ""
@


1.7
log
@*** empty log message ***
@
text
@d135 1
a135 1
	:menu-item-handlers     (nil nil nil nil )
d140 26
a165 1
	:actions                ()
d233 1
a233 1
	:height                 20
d254 1
a254 1
	:height                 20
d275 1
a275 1
	:height                 20
d296 1
a296 1
	:height                 20
d367 1
a367 1
	:height                 20
d388 1
a388 1
	:height                 20
@


1.6
log
@Latest revisions before practice demo.
@
text
@d90 1
a90 1
	:menu-item-handlers     (find_critical_path_callback check_dependencies_callback nil )
d112 8
d160 1
a160 2
	:actions                (
	)
d208 1
a208 1
	:height                 19
d229 1
a229 1
	:height                 19
d250 1
a250 1
	:height                 19
d271 1
a271 1
	:height                 19
d342 1
a342 1
	:height                 19
d353 1
a353 2
	:actions                (
	)
d363 1
a363 1
	:height                 19
@


1.5
log
@*** empty log message ***
@
text
@d16 1
a16 1
	:menu-item-handlers     (nil nil nil nil )
d21 18
a38 1
	:actions                ()
d60 1
a60 1
		:from                   (chartMenu "Gantt")
d62 1
a62 1
		:to                     (chartMenu "Gantt")
d65 1
a65 1
		:action                 (display_gantt_callback)
d68 1
a68 1
		:from                   (chartMenu "PERT")
d70 1
a70 1
		:to                     (chartMenu "PERT")
d73 1
a73 1
		:action                 (display_pert_callback)
d97 1
a97 1
		:from                   (analyzeMenu "Check Dependencies")
d99 1
a99 1
		:to                     (analyzeMenu "Check Dependencies")
d102 1
a102 1
		:action                 (check_dependencies_callback)
d105 1
a105 1
		:from                   (analyzeMenu "Find Critical Path")
d107 1
a107 1
		:to                     (analyzeMenu "Find Critical Path")
d110 1
a110 1
		:action                 (find_critical_path_callback)
d152 2
a153 1
	:actions                ()
d346 2
a347 1
	:actions                ()
d365 1
a365 1
	:notify-handler         nil
d368 10
a377 1
	:actions                ()
@


1.4
log
@*** empty log message ***
@
text
@d36 1
a36 1
	:menu-item-handlers     (nil nil )
d41 18
a58 1
	:actions                ()
d73 1
a73 1
	:menu-item-handlers     (nil nil nil )
d78 18
a95 1
	:actions                ()
d135 1
a135 2
	:actions                (
	)
@


1.3
log
@This is the latest version before eliminating subtasks.
@
text
@d21 1
a21 2
	:actions                (
	)
d41 1
a41 2
	:actions                (
	)
d84 21
d108 2
a109 2
	:width                  350
	:height                 283
d131 2
a132 2
	:width                  350
	:height                 283
d248 1
a248 1
	:help                   ""
d261 1
a261 1
	:read-only              nil
d268 1
a268 1
	:notify-handler         taskList_Notify
d274 43
a316 10
	:actions                (
		(
		:from                   (mainWindow taskList)
		:when                   (Notify )
		:to                     (mainWindow taskList)
		:function_type          CallFunction
		:arg_type               ()
		:action                 (taskList_Notify)
		)
	)
@


1.2
log
@*** empty log message ***
@
text
@d5 1
a5 1
	:name                   FileMenu
d21 2
a22 1
	:actions                ()
d26 1
a26 1
	:name                   ChartMenu
d42 2
a43 1
	:actions                ()
d47 1
a47 1
	:name                   AnalyzeMenu
d67 1
a67 1
	:name                   ExportMenu
d87 1
a87 1
	:name                   window
d108 1
a108 1
	:owner                  window
d125 1
a125 1
	:name                   MainFileButton
d138 1
a138 1
	:menu                   FileMenu
d146 1
a146 1
	:name                   MainChartButton
d159 1
a159 1
	:menu                   ChartMenu
d167 1
a167 1
	:name                   MainAnalyzeButton
d180 1
a180 1
	:menu                   AnalyzeMenu
d188 1
a188 1
	:name                   MainExportButton
d201 1
a201 1
	:menu                   ExportMenu
d209 1
a209 1
	:name                   TaskLabel
d227 1
a227 1
	:name                   MainList
d249 1
a249 1
	:notify-handler         nil
d255 10
a264 1
	:actions                ()
@


1.1
log
@Initial revision
@
text
@d5 1
a5 1
	:name                   MainFileMenu
d25 1
a25 1
	:name                   MainChartMenu
d45 1
a45 1
	:name                   MainAnalyzeMenu
d65 1
a65 1
	:name                   MainInsertMenu
a70 60
	:menu-item-labels       ("Before" "After" "Top" "Bottom" )
	:menu-item-label-types  (:string :string :string :string )
	:menu-item-states       (:active :active :active :active )
	:menu-item-defaults     (nil nil nil t )
	:initial-selections     (nil nil nil nil )
	:menu-item-handlers     (nil nil nil nil )
	:menu-item-menus        (nil nil nil nil )
	:menu-item-colors       ("" "" "" "" )
	:pinnable               t
	:user-data              ()
	:actions                ()
)
(
	:type                   :menu
	:name                   MainPasteMenu
	:help                   ""
	:columns                1
	:menu-type              :command
	:menu-handler           nil
	:menu-title             ""
	:menu-item-labels       ("Before" "After" "Top" "Bottom" )
	:menu-item-label-types  (:string :string :string :string )
	:menu-item-states       (:active :active :active :active )
	:menu-item-defaults     (nil nil nil nil )
	:initial-selections     (nil nil nil nil )
	:menu-item-handlers     (nil nil nil nil )
	:menu-item-menus        (nil nil nil nil )
	:menu-item-colors       ("" "" "" "" )
	:pinnable               t
	:user-data              ()
	:actions                ()
)
(
	:type                   :menu
	:name                   MainEditMenu
	:help                   ""
	:columns                1
	:menu-type              :command
	:menu-handler           nil
	:menu-title             ""
	:menu-item-labels       ("Cut" "Copy" "Paste" "Delete" )
	:menu-item-label-types  (:string :string :string :string )
	:menu-item-states       (:active :active :active :active )
	:menu-item-defaults     (t nil nil nil )
	:initial-selections     (nil nil nil nil )
	:menu-item-handlers     (nil nil nil nil )
	:menu-item-menus        (nil nil MainPasteMenu nil )
	:menu-item-colors       ("" "" "" "" )
	:pinnable               t
	:user-data              ()
	:actions                ()
)
(
	:type                   :menu
	:name                   MainExportMenu
	:help                   ""
	:columns                1
	:menu-type              :command
	:menu-handler           nil
	:menu-title             ""
a83 20
	:type                   :menu
	:name                   DependInsertMenu
	:help                   ""
	:columns                1
	:menu-type              :command
	:menu-handler           nil
	:menu-title             ""
	:menu-item-labels       ("Before" "After" "Top" "Bottom" )
	:menu-item-label-types  (:string :string :string :string )
	:menu-item-states       (:active :active :active :active )
	:menu-item-defaults     (nil nil nil t )
	:initial-selections     (nil nil nil nil )
	:menu-item-handlers     (nil nil nil nil )
	:menu-item-menus        (nil nil nil nil )
	:menu-item-colors       ("" "" "" "" )
	:pinnable               t
	:user-data              ()
	:actions                ()
)
(
d85 1
a85 1
	:name                   ProjectWindow
d87 2
a88 2
	:width                  352
	:height                 311
d105 2
a106 2
	:name                   MainWinControls
	:owner                  ProjectWindow
d110 2
a111 2
	:width                  352
	:height                 311
d124 1
a124 1
	:owner                  MainWinControls
d136 1
a136 1
	:menu                   MainFileMenu
d145 1
a145 1
	:owner                  MainWinControls
d157 1
a157 1
	:menu                   MainChartMenu
d166 1
a166 1
	:owner                  MainWinControls
d178 1
a178 1
	:menu                   MainAnalyzeMenu
d187 1
a187 1
	:owner                  MainWinControls
d199 1
a199 1
	:menu                   MainExportMenu
d208 1
a208 1
	:owner                  MainWinControls
d226 1
a226 1
	:owner                  MainWinControls
a251 42
	:user-data              ()
	:actions                ()
)
(
	:type                   :button
	:name                   MainInsertButton
	:owner                  MainWinControls
	:help                   ""
	:x                      96
	:y                      280
	:width                  67
	:height                 19
	:constant-width         nil
	:button-type            :normal
	:foreground-color       ""
	:label                  "Insert"
	:label-type             :string
	:initial-state          :active
	:menu                   MainInsertMenu
	:notify-handler         nil
	:event-handler          nil
	:user-data              ()
	:actions                ()
)
(
	:type                   :button
	:name                   MainEditButton
	:owner                  MainWinControls
	:help                   ""
	:x                      184
	:y                      280
	:width                  56
	:height                 19
	:constant-width         nil
	:button-type            :normal
	:foreground-color       ""
	:label                  "Edit"
	:label-type             :string
	:initial-state          :active
	:menu                   MainEditMenu
	:notify-handler         nil
	:event-handler          nil
@
