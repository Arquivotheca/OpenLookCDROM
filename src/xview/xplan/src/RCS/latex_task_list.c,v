head	1.5;
access;
symbols;
locks; strict;
comment	@ * @;


1.5
date	92.12.12.22.02.50;	author gaubert;	state Exp;
branches;
next	1.4;

1.4
date	92.12.11.16.41.56;	author lacey;	state Exp;
branches;
next	1.3;

1.3
date	92.12.10.09.05.38;	author gaubert;	state Exp;
branches;
next	1.2;

1.2
date	92.12.08.03.05.26;	author lacey;	state Exp;
branches;
next	1.1;

1.1
date	92.12.08.02.34.07;	author gaubert;	state Exp;
branches;
next	;


desc
@This is the task list for the latex generator.
@


1.5
log
@This is teh final version of this file the file has been
thourly documented
@
text
@/* xplan - project planning tool
 * Copyright (C) 1992 Brian Gaubert, Mark M. Lacey, Richard Malingkas,
 * and Mike Marlow.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation.
 * 
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License (distributed with this program in the file
 * COPYING) for more details.
 * 
 * If you did not received a copy of the GNU General Public License
 * along with this program, write to the Free Software Foundation,
 * Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 * 
 * Since this was a project for a one semester software engineering
 * course, the authors will not be offering support for the product
 * after its release.
 *--------------------------------------------------------------------------
 * FILE latex_task_list.c *************************************************
 *
 *  CONTENTS OF THE FILE
 *
 *    This file contains the function latex_task_list,
 *
 * FILE latex_task_list.c *************************************************/
      
#include <stdio.h>
#include <string.h>
#include "db.h"
#include "julian.h"
#include <stdlib.h>
#include <ctype.h>

static FILE *tl;
static FILE *out;

extern char export_filename[];

/* FUNCTION latex_task_list() **********************************
 *
 *   DESCRIPTION OF FUNCTION
 *    This function will create two pages of task sheet information in latex
 *    format so the user can incorperate the information into documentation
 *
 *
 *  SAMPLE CALL
 *
 *    vara = latex_task_list();
 *
 *  OUTPUTS
 *
 *   Latex output of 2 task sheets
 *
 *  AUTHOR/TESTER
 *
 *  Author... Brian Gaubert Dec, 2 1992
 *  Tester... Brian Gaubert Dec, 2 1992
 *
 *  LAST MODIFIED    
 *
 *   Date....  December 7, 1992
 *
 * FUNCTION latex_task_list() */

int latex_task_list()
{

   /* Declaring and initializing all variables usen in the function */
   int i, j, k;
   struct task_list *temp;
   struct task_list *temp2;
   struct task_node *node;
   struct task_node *node2;
   char taskl[256];
   char task[4];
   char c;
   int pages = 45;
   char b;
   int count = 1;


   /* Open the file used to create the latex document */
   tl = fopen(export_filename,"w");

   /* If it is a vbad file then return 1 */
   if (tl == NULL) {
      return 1;
   }

   /* Get the main task list so the information can be used to store */
   /* in the latex document */
   temp = get_main_task_list();
   strcpy(task,"Task");
   
   /* This will set up the document for the latex output of
      the task list. */
   fprintf(tl,"\\documentstyle[11pt,fullpage]{article}\n");
   fprintf(tl,"\\begin{document}\n");
   fprintf(tl,"\\centering{{\\Large\\bf Task Sheet}} \\\\\n");
   fprintf(tl,"\\begin{tabular}{||l|l|l|c|c||} \\hline\n");
   fprintf(tl,"TASK  & NAME & DUR & PLANNED START DATE & PLANNED END DATE \\\\ \\hline\\hline\n");
   
   /* Set the head of the top of the list to the current task in the 
      list */
   node = temp->head;
   if(node == NULL) {
      return 1;
   }

   /* This will start the formation of the first page in the task list */
   /* and go until the list has been exhausted, and print the */
   /* pertinant information to the file in latex format */
   while( node != NULL ) {
      strcpy(taskl,node->data->name);
      strfix(taskl);
      fprintf(tl,"%4.4s %3.3d & %25.25s & %3.3d & %8.8s & %8.8s \\\\ \\hline\n",\
	      task, count,taskl, node->data->duration,\
	      julian_to_str_date(node->data->planned_start_date),\
	      julian_to_str_date(node->data->planned_end_date));
      count++;
      node = node->next;

      /* If there is not any more room on the page, then start a new */
      /* page */
      if (count > pages) {
	 fprintf(tl,"\\end{tabular}\n");
	 fprintf(tl,"\\clearpage\n");
	 fprintf(tl,"\\begin{tabular}{||l|l|l|c|c||} \\hline\n");
	 fprintf(tl,"TASK  & NAME & DUR & PLANNED START DATE & PLANNED END DATE \\\\ \\hline\\hline\n");
	 pages = pages + 45;
      }
      
   }
   /* Print out the next page which contains the description and the */
   /* task number, and this will be in the latex description */
   /* environment */
   fprintf(tl,"\\end{tabular}\n");
   fprintf(tl,"\\clearpage\n");
   
   count = 1;
   fprintf(tl,"\\begin{description}\n");

   /* Get the head of the lits as a different node  and check its */
   /* pointer */
   temp2 = get_main_task_list();   
   node2 = temp2->head;
   if(node2 == NULL) {
      return 1;
   }

   /* Go until the list is exhausted */
   while( node2 != NULL ) {
      fprintf(tl,"\\item[%s %d]%s\n",task,count,node2->data->desc);
      count++;
      node2 = node2->next;
   }

   /* End the document */
   fprintf(tl,"\\end{description}\n");
   fprintf(tl,"\\end{document}\n");
   fclose(tl);   
}

@


1.4
log
@Brian's latest updates
@
text
@d1 29
a29 6

/* FILE latex_task_list.c ****************************************

   CONTENTS OF THE FILE

     This file contains the function latex_task_list,
a30 15

   SAMPLE CALL

     vara = latex_task_list( filename );

   OUTPUTS

   LAST MODIFIED    

    Date....  December 7, 1992

 * FILE latex_task_list.c */

/* FUNCTION latex_task_list( filename ) */

d43 26
d72 1
d86 1
d88 2
a89 1
   
d93 3
a100 1

a108 1
   
d113 4
d126 3
d133 1
d136 1
a136 1
	 
d138 3
d143 1
a143 1

d146 3
d154 2
d161 2
a162 1
   
d165 1
a165 7
   fclose(tl);
   




   
@


1.3
log
@*** empty log message ***
@
text
@d40 1
d42 1
a51 1
   out = fopen(strcat(export_filename,"list2.tex"),"w");
a55 3
   if (out == NULL) {
      return 1;
   }
d61 1
a61 6
   printf(" ooooo\n");
   
   fprintf(out,"\\documentstyle[11pt,fullpage]{article}\n");
   fprintf(out,"\\begin{document}\n");   
   fprintf(out,"\\begin{description}\n");
   
d66 1
a81 1
      fprintf(out,"\\item[%s %d]%s\n",task,count,node->data->desc);
d92 15
a106 1
   printf(" ooooo\n");
d108 1
a108 1
   fprintf(tl,"\\end{tabular}\n");
a110 3
   fprintf(out,"\\end{description}\n");
   fprintf(out,"\\end{document}\n");
   fclose(out);
@


1.2
log
@Modified a few things, of course...
@
text
@d27 2
d30 3
a37 1
   FILE *fp;
d41 1
a41 2
   struct date task_date1;
   struct date task_date2;
d43 3
a47 1
   strcpy(export_filename, "TEST_TASK_SHEET.tex");
d49 9
a57 1
   fp = fopen(export_filename,"w");
d60 1
a60 1

d63 11
a73 6

   fprintf(fp,"\\documentstyle[11pt,fullpage]{article}\n");
   fprintf(fp,"\\begin{document}\n");
   fprintf(fp,"\\centering{{\\Large\\bf Task Sheet}} \\\\\n");
   fprintf(fp,"\\begin{tabular}{||l|l|l|c|c||} \\hline\n");

d76 1
d78 22
a99 11
 while( node != NULL ) {
    task_date1 = julian_to_date(node->data->planned_start_date);
    task_date2 = julian_to_date(node->data->planned_end_date);
    fprintf(fp,"%4.4s %3.3d & %25.25s & %3.3d & %2.2d-%2.2d-%2.2d &
%2.2d-%2.2d-%2.2d & \\hline\n", task, count,
	    node->data->name, node->data->duration,
	    task_date1.month, task_date1.day, task_date1.year,  
	    task_date2.month, task_date2.day, task_date2.year);
    count++;
    node = node->next;
 }
d101 6
a106 2
   fprintf(fp,"\\end{tabular}\n");
   fprintf(fp,"\\end{document}\n");
a107 2
}
     
a109 1
  
d111 1
d113 1
a113 1
   
@


1.1
log
@Initial revision
@
text
@d25 2
a26 3
#include "db.c"
#inclide "string_table.c"
#include "julian.c"
d28 3
a30 1
int latex_task_list(char *filename)
d36 3
a38 2
   struct date *task_date1;
   struct date *task_date2;
d42 3
a44 1
   fp = fopen(filename,"w");
d51 1
a51 1
   fprintf(fp,"\\documentstyle[11pt,fullpage]{article}\n"):
d53 2
a54 2
   fprintf(fp,"\\centering{{\Large\\bf Task Sheet}} \\\\\n");
   fprintf(fp,"\\begin{tabular}{||l|l|l|c|c||} \hline\n");
d58 5
a62 6
   temp->current = temp->head;
 while( temp->current != NULL )
  {
   task_date1 = julian_to_date(temp->current->data->planned_start_date);
   task_date2 = julian_to_date(temp->current->data->planned_end_date);
   fprintf(fp,"%4.4s %3.3d & %25.25s & %3.3d & %2.2d-%2.2d-%2.2d &
d64 7
a70 7
	   temp->current->data->name, temp->current->data->duration,
	   task_date1->month, task_date1->day, task_date1->year,  
	   task_date2->month, task_date2->day, task_date2->year);
   count++;
   temp->current = temp->current->next;
  }

d72 1
a72 1
   frpintf(fp,"\\end{document}\n");
d74 1
a74 1
 }
@
