head	1.6;
access;
symbols;
locks; strict;
comment	@# @;


1.6
date	92.12.11.15.50.53;	author lacey;	state Exp;
branches;
next	1.5;

1.5
date	92.12.03.14.56.06;	author lacey;	state Exp;
branches;
next	1.4;

1.4
date	92.11.19.15.26.56;	author lacey;	state Exp;
branches;
next	1.3;

1.3
date	92.11.19.03.27.37;	author lacey;	state Exp;
branches;
next	1.2;

1.2
date	92.11.09.15.13.00;	author lacey;	state Exp;
branches;
next	1.1;

1.1
date	92.11.06.21.44.21;	author lacey;	state Exp;
branches;
next	;


desc
@Guide file for the file load/save screen.
@


1.6
log
@File with help text included.
@
text
@;GIL-3
(
(
	:type                   :popup-window
	:name                   filePopup
	:owner                  mainWindow
	:width                  343
	:height                 318
	:background-color       ""
	:foreground-color       ""
	:label                  "Default"
	:label-type             :string
	:initial-state          :invisible
	:show-footer            t
	:resizable              t
	:pinned                 t
	:done-handler           filePopup_done_callback
	:event-handler          nil
	:user-data              ()
	:actions                (
		(
		:from                   (filePopup)
		:when                   (Done )
		:to                     (filePopup)
		:function_type          CallFunction
		:arg_type               ()
		:action                 (filePopup_done_callback)
		)
	)
)
(
	:type                   :control-area
	:name                   control
	:owner                  filePopup
	:help                   "This is the window in which you select a file that you would like to load/save."
	:x                      0
	:y                      0
	:width                  343
	:height                 318
	:background-color       ""
	:foreground-color       ""
	:initial-state          :visible
	:show-border            nil
	:menu                   nil
	:event-handler          nil
	:user-data              ()
	:actions                ()
)
(
	:type                   :text-field
	:name                   directoryField
	:owner                  control
	:help                   "This is the field in which you specify the directory that you would like to enter."
	:x                      24
	:y                      16
	:width                  314
	:height                 15
	:value-x                98
	:value-y                16
	:value-length           30
	:stored-length          256
	:rows                   3
	:foreground-color       ""
	:text-type              :alphanumeric
	:label                  "Directory:"
	:label-type             :string
	:layout-type            :horizontal
	:value-underlined       t
	:initial-value          ""
	:initial-state          :active
	:read-only              nil
	:notify-handler         directory_prompt_notify
	:event-handler          nil
	:user-data              ()
	:actions                (
		(
		:from                   (filePopup directoryField)
		:when                   (Notify )
		:to                     (filePopup directoryField)
		:function_type          CallFunction
		:arg_type               ()
		:action                 (directory_prompt_notify)
		)
	)
)
(
	:type                   :scrolling-list
	:name                   fileList
	:owner                  control
	:help                   "A listing of files in the specified directory."
	:x                      24
	:y                      40
	:width                  300
	:height                 200
	:value-x                24
	:value-y                40
	:rows                   10
	:foreground-color       ""
	:label                  ""
	:title                  ""
	:label-type             :string
	:layout-type            :horizontal
	:read-only              t
	:multiple-selections    nil
	:selection-required     nil
	:initial-state          :active
	:droppable              nil
	:default-drop-site      nil
	:menu                   nil
	:notify-handler         fileList_notify_callback
	:event-handler          nil
	:initial-list-values    ()
	:initial-list-glyphs    ()
	:initial-selections     ()
	:user-data              ()
	:actions                (
		(
		:from                   (filePopup fileList)
		:when                   (Notify )
		:to                     (filePopup fileList)
		:function_type          CallFunction
		:arg_type               ()
		:action                 (fileList_notify_callback)
		)
	)
)
(
	:type                   :text-field
	:name                   fileField
	:owner                  control
	:help                   "This is the field in which you can specify the file you would like to load/save."
	:x                      24
	:y                      256
	:width                  276
	:height                 15
	:value-x                60
	:value-y                256
	:value-length           30
	:stored-length          30
	:rows                   3
	:foreground-color       ""
	:text-type              :alphanumeric
	:label                  "File:"
	:label-type             :string
	:layout-type            :horizontal
	:value-underlined       t
	:initial-value          ""
	:initial-state          :active
	:read-only              nil
	:notify-handler         file_prompt_notify
	:event-handler          nil
	:user-data              ()
	:actions                (
		(
		:from                   (filePopup fileField)
		:when                   (Notify )
		:to                     (filePopup fileField)
		:function_type          CallFunction
		:arg_type               ()
		:action                 (file_prompt_notify)
		)
	)
)
(
	:type                   :button
	:name                   applyButton
	:owner                  control
	:help                   "The file named will be stored or saved from/to the disk as appropriate.
"
	:x                      144
	:y                      288
	:width                  63
	:height                 19
	:constant-width         nil
	:button-type            :normal
	:foreground-color       ""
	:label                  "Default"
	:label-type             :string
	:initial-state          :active
	:menu                   nil
	:notify-handler         applyButton_callback
	:event-handler          nil
	:user-data              ()
	:actions                (
		(
		:from                   (filePopup applyButton)
		:when                   (Notify )
		:to                     (filePopup applyButton)
		:function_type          CallFunction
		:arg_type               ()
		:action                 (applyButton_callback)
		)
	)
)
)
@


1.5
log
@Latest revisions before practice demo.
@
text
@d35 1
a35 1
	:help                   ""
d53 1
a53 1
	:help                   ""
d90 1
a90 1
	:help                   ""
d131 1
a131 1
	:help                   ""
d168 2
a169 1
	:help                   ""
@


1.4
log
@*** empty log message ***
@
text
@d7 2
a8 2
	:width                  355
	:height                 311
d17 1
a17 1
	:done-handler           nil
d20 10
a29 1
	:actions                ()
d38 2
a39 2
	:width                  355
	:height                 311
d51 1
a51 1
	:name                   directory
d61 1
a61 1
	:stored-length          30
d72 1
a72 1
	:notify-handler         nil
d75 10
a84 1
	:actions                ()
d110 1
a110 1
	:notify-handler         nil
d116 10
a125 1
	:actions                ()
d129 1
a129 1
	:name                   file
d150 1
a150 1
	:notify-handler         nil
d153 10
a162 1
	:actions                ()
d180 1
a180 1
	:notify-handler         nil
d183 10
a192 1
	:actions                ()
@


1.3
log
@This is the latest version before eliminating subtasks.
@
text
@d16 1
a16 1
	:pinned                 nil
d85 1
a85 1
	:read-only              nil
@


1.2
log
@*** empty log message ***
@
text
@d5 2
a6 2
	:name                   popup
	:owner                  window
d25 1
a25 1
	:owner                  popup
d42 1
a42 1
	:name                   DirectoryField
d70 1
a70 1
	:name                   FileLoadList
d102 1
a102 1
	:name                   FileField
d130 1
a130 1
	:name                   LoadButton
@


1.1
log
@Initial revision
@
text
@a3 160
	:type                   :menu
	:name                   MainFileMenu
	:help                   ""
	:columns                1
	:menu-type              :command
	:menu-handler           nil
	:menu-title             ""
	:menu-item-labels       ("Load..." "New Project" "Save" "Save As..." )
	:menu-item-label-types  (:string :string :string :string )
	:menu-item-states       (:active :active :active :active )
	:menu-item-defaults     (nil nil nil nil )
	:initial-selections     (nil nil nil nil )
	:menu-item-handlers     (nil nil nil nil )
	:menu-item-menus        (nil nil nil nil )
	:menu-item-colors       ("" "" "" "" )
	:pinnable               t
	:user-data              ()
	:actions                ()
)
(
	:type                   :menu
	:name                   MainChartMenu
	:help                   ""
	:columns                1
	:menu-type              :command
	:menu-handler           nil
	:menu-title             ""
	:menu-item-labels       ("PERT" "Gantt" )
	:menu-item-label-types  (:string :string )
	:menu-item-states       (:active :active )
	:menu-item-defaults     (nil nil )
	:initial-selections     (nil nil )
	:menu-item-handlers     (nil nil )
	:menu-item-menus        (nil nil )
	:menu-item-colors       ("" "" )
	:pinnable               t
	:user-data              ()
	:actions                ()
)
(
	:type                   :menu
	:name                   MainAnalyzeMenu
	:help                   ""
	:columns                1
	:menu-type              :command
	:menu-handler           nil
	:menu-title             ""
	:menu-item-labels       ("Find Critical Path" "Check Dependencies" "Date Calculation" )
	:menu-item-label-types  (:string :string :string )
	:menu-item-states       (:active :active :active )
	:menu-item-defaults     (t nil nil )
	:initial-selections     (nil nil nil )
	:menu-item-handlers     (nil nil nil )
	:menu-item-menus        (nil nil nil )
	:menu-item-colors       ("" "" "" )
	:pinnable               t
	:user-data              ()
	:actions                ()
)
(
	:type                   :menu
	:name                   MainInsertMenu
	:help                   ""
	:columns                1
	:menu-type              :command
	:menu-handler           nil
	:menu-title             ""
	:menu-item-labels       ("Before" "After" "Top" "Bottom" )
	:menu-item-label-types  (:string :string :string :string )
	:menu-item-states       (:active :active :active :active )
	:menu-item-defaults     (nil nil nil t )
	:initial-selections     (nil nil nil nil )
	:menu-item-handlers     (nil nil nil nil )
	:menu-item-menus        (nil nil nil nil )
	:menu-item-colors       ("" "" "" "" )
	:pinnable               t
	:user-data              ()
	:actions                ()
)
(
	:type                   :menu
	:name                   MainPasteMenu
	:help                   ""
	:columns                1
	:menu-type              :command
	:menu-handler           nil
	:menu-title             ""
	:menu-item-labels       ("Before" "After" "Top" "Bottom" )
	:menu-item-label-types  (:string :string :string :string )
	:menu-item-states       (:active :active :active :active )
	:menu-item-defaults     (nil nil nil nil )
	:initial-selections     (nil nil nil nil )
	:menu-item-handlers     (nil nil nil nil )
	:menu-item-menus        (nil nil nil nil )
	:menu-item-colors       ("" "" "" "" )
	:pinnable               t
	:user-data              ()
	:actions                ()
)
(
	:type                   :menu
	:name                   MainEditMenu
	:help                   ""
	:columns                1
	:menu-type              :command
	:menu-handler           nil
	:menu-title             ""
	:menu-item-labels       ("Cut" "Copy" "Paste" "Delete" )
	:menu-item-label-types  (:string :string :string :string )
	:menu-item-states       (:active :active :active :active )
	:menu-item-defaults     (t nil nil nil )
	:initial-selections     (nil nil nil nil )
	:menu-item-handlers     (nil nil nil nil )
	:menu-item-menus        (nil nil MainPasteMenu nil )
	:menu-item-colors       ("" "" "" "" )
	:pinnable               t
	:user-data              ()
	:actions                ()
)
(
	:type                   :menu
	:name                   MainExportMenu
	:help                   ""
	:columns                1
	:menu-type              :command
	:menu-handler           nil
	:menu-title             ""
	:menu-item-labels       ("Generate Task Sheet" "Generate PERT Chart" "Generate Gantt Chart" "Options..." )
	:menu-item-label-types  (:string :string :string :string )
	:menu-item-states       (:active :active :active :active )
	:menu-item-defaults     (t nil nil nil )
	:initial-selections     (nil nil nil nil )
	:menu-item-handlers     (nil nil nil nil )
	:menu-item-menus        (nil nil nil nil )
	:menu-item-colors       ("" "" "" "" )
	:pinnable               t
	:user-data              ()
	:actions                ()
)
(
	:type                   :menu
	:name                   DependInsertMenu
	:help                   ""
	:columns                1
	:menu-type              :command
	:menu-handler           nil
	:menu-title             ""
	:menu-item-labels       ("Before" "After" "Top" "Bottom" )
	:menu-item-label-types  (:string :string :string :string )
	:menu-item-states       (:active :active :active :active )
	:menu-item-defaults     (nil nil nil t )
	:initial-selections     (nil nil nil nil )
	:menu-item-handlers     (nil nil nil nil )
	:menu-item-menus        (nil nil nil nil )
	:menu-item-colors       ("" "" "" "" )
	:pinnable               t
	:user-data              ()
	:actions                ()
)
(
d5 2
a6 2
	:name                   FilePopup
	:owner                  ProjectWindow
d24 2
a25 2
	:name                   controls1
	:owner                  FilePopup
d43 1
a43 1
	:owner                  controls1
d71 1
a71 1
	:owner                  controls1
d103 1
a103 1
	:owner                  controls1
d131 1
a131 1
	:owner                  controls1
@
