Xftp.wcChildren:		layout	
Xftp.wcPopups:			Shellhelp, Shellconnect, Shelltran, \
				Shellstatus, Shellcommand
Xftp*wcTrace:			FALSE
Xftp.title:			Xftp

*.shapeStyle:			Rectangle

*.font:			       -*-courier-bold-r-*-*-14-*-*-*-*-*-ISO8859-1
*Command.font:                 -*-helvetica-bold-o-*-*-14-*-*-*-*-*-ISO8859-1
*Text*font:                    -*-courier-bold-r-*-*-14-*-*-*-*-*-ISO8859-1
*Label*font:		       -*-helvetica-bold-r-*-*-14-*-*-*-*-*-ISO8859-1
*LabelQUICK*font:	       -*-courier-bold-r-*-*-14-*-*-*-*-*-ISO8859-1
*listsw*list.font:             -*-courier-bold-r-*-*-14-*-*-*-*-*-ISO8859-1
*hostsw*list.font:             -*-courier-bold-r-*-*-14-*-*-*-*-*-ISO8859-1

*width_in_chars:		90

*translations: 	#override \
		<Key>Help:      help() \n\
		<Key>F1:        help()  

*layout.wcCreate: 		formWidgetClass
*layout.wcChildren: 		quitm, options, \
				    fileopts, filesopts, helpm, \
				status, \
				dir, \
				host_name, system_name, default_mode, \
			        connect, dir_display, command, glob, \
				search, next, reconnect, archie_command, rate,\
				percent, \
				listsw
*layout.defaultDistance:	2
!
! Quit menu
!
*quitm.wcCreate: 	   	menuButtonWidgetClass
*quitm.wcCallback:        	help_register
*quitm.label: 			Quit
*quitm.shapeStyle:		Rectangle
*quitm.right: 			chainleft
*quitm.left: 	        	chainleft
*quitm.bottom: 			chaintop
*quitm.top: 			chaintop
*quitm.wcPopups:		qmenu
*quitm.menuName:          	qmenu
*quitm.horizDistance:		4
*quitm.translations:          	#override \
				<Key>Help: help() \n\
				<Key>F1:   help() 


;                                <Btn1Down>:  XawPositionSimpleMenu(qmenu) \
;                                             XtMenuPopup(qmenu) \n\
;                                <Btn2Down>:  XawPositionSimpleMenu(qmenu) \
;                                             XtMenuPopup(qmenu) \n\
;                                <Btn3Down>:  XawPositionSimpleMenu(qmenu) \
;                                             XtMenuPopup(qmenu) 


*qmenu.wcCreate:		simpleMenuWidgetClass
*qmenu.wcManged:		False
*qmenu.wcChildren:	        quit, abort

*quit.wcCreate:			SmeBSB
*quit.label:			Quit
*quit*callback:			quit

*abort.wcCreate:		SmeBSB
*abort.label:			Abort
*abort*callback:		abort

;
; Option cacase menu
;

*options.wcCreate:		menuButtonWidgetClass
*options.wcCallback:		noop(get put dir connect action Sensitive) \
				help_register
*options.wcPopups:		op_menu
*options.menuName:          	op_menu
*options.label: 		Options
*options.shapeStyle:		Rectangle
*options.right: 		chainleft
*options.left: 		        chainleft
*options.bottom: 		chaintop
*options.top: 			chaintop
*options.fromHoriz:		*quitm
*options.horizDistance:		4
*options.translations:          #override \
				<Key>Help: help() \n\
				<Key>F1:   help() 

*op_menu.wcCreate:		simpleMenuWidgetClass
*op_menu.wcManged:		False
*op_menu.wcChildren:	        op_line, op_1, op_2, op_line, op_3, op_4
*op_menu.wcPopups:		lmenu, smenu
*op_menu.label:			Options
*op_menu.*.leftMargin:          20
*op_menu.translations:  	#override \n\
    <BtnMotion>: 		highlight() menu_cascade() \n\
    <BtnUp>:			PopDownSubs() notify() unhighlight() \n\
    <LeaveWindow>:		unhighlight() 


*op_1.wcCreate:			SmeBSB
*op_1.label:			Ignore Errors
*op_1*callback:			op(IgnoreErrors)

*op_2.wcCreate:			SmeBSB
*op_2.WcCallback:		op(NoAutoDir)
*op_2.label:			No Auto Directy Listings
*op_2*callback:			op(NoAutoDir)

*op_line.wcCreate:		SmeLine

*op_3.wcCreate:			SmeBSB
*op_3.wcCallback:		bind_menu(*lmenu)
*op_3.label:			Listing Options

*op_4.label:			Sort Options
*op_4.wcCreate:			SmeBSB
*op_4.wcCallback:		bind_menu(*smenu)

*lmenu.wcCreate:		simpleMenuWidgetClass
*lmenu.wcManged:		False
*lmenu.wcChildren:	        lmenuline, lmenu1, lmenu2, \
				           lmenu3, lmenu4, \
				           lmenuline, lmenu5

*lmenu.translations:  		#override \n\
    <BtnUp>:			PopDownSubs() notify() unhighlight() \n
    <LeaveWindow>:		unhighlight() 
*lmenu.*.leftMargin:            20

*lmenuline.wcCreate:		SmeLine

*lmenu1.wcCreate:		SmeBSB
*lmenu1.wcCallback:             toggle(listing, SHORT) \
			        mark_menu()
*lmenu1.label:			Short listing
*lmenu1*callback:		listing_type(SHORT)

*lmenu2.wcCreate:		SmeBSB
*lmenu2.wcCallback:             toggle(listing, MEDIUM)
*lmenu2.label:			Medium listing
*lmenu2*callback:		listing_type(MEDIUM)

*lmenu3.wcCreate:		SmeBSB
*lmenu3.wcCallback:             toggle(listing, LONG)
*lmenu3.label:			Long listing
*lmenu3*callback:		listing_type(LONG)

*lmenu4.wcCreate:		SmeBSB
*lmenu4.wcCallback:             toggle(listing, TRANSLATIONS)
*lmenu4.label:			Translation  listing
*lmenu4*callback:		listing_type(TRANSLATIONS)

*lmenu5.wcCreate:		SmeBSB
*lmenu5.label:			Translations
*lmenu5*callback:		List_Translations

*smenu.wcCreate:		simpleMenuWidgetClass
*smenu.wcManged:		False
*smenu.wcChildren:	        smenuline, \
				smbyname, smbysize, smbyage, smenuline, \
				smbytype, smnormal
;*smenu.label:			Sort Options
*smenu.justify:			center
*smenu.translations:  		#override \n\
    <BtnUp>:			PopDownSubs() notify() unhighlight() \n\
    <LeaveWindow>:		unhighlight() 
*smenu.*.leftMargin:		20

*smenuline.wcCreate:		SmeLine

*smbyname.wcCreate:	        SmeBSB
*smbyname.wcCallback:		mark_menu() \
				toggle(sort_type, SORT_BY_NAME)
*smbyname.label:            	Sort By Name
*smbyname.callback:		listing_type(SORT_BY_NAME)

*smbysize.wcCreate:	        SmeBSB
*smbysize.wcCallback:		toggle(sort_type, SORT_BY_SIZE)
*smbysize.label:            	Sort By Size
*smbysize.callback:		listing_type(SORT_BY_SIZE)

*smbyage.wcCreate:	        SmeBSB
*smbyage.wcCallback:		toggle(sort_type, SORT_BY_AGE)
*smbyage.label:            	Sort By Age
*smbyage.callback:		listing_type(SORT_BY_AGE)

*smbytype.wcCreate:	        SmeBSB
*smbytype.label:            	Sort By Type
*smbytype.callback:		listing_type(SORT_BY_TYPE)

*smnormal.wcCreate:	        SmeBSB
*smnormal.wcCallback:		mark_menu()
*smnormal.label:            	Normal
*smnormal.callback:		listing_type(NORMAL)

*fileopts.wcCreate: 		menuButtonWidgetClass
*fileopts.wcCallback:	\
		noop(get put dir connect notconnected action Sensitive) \
		help_register
*fileopts.label: 		File Options
*fileopts.shapeStyle:		Rectangle
*fileopts.right: 		chainleft
*fileopts.left: 	        chainleft
*fileopts.bottom: 		chaintop
*fileopts.top: 			chaintop
*fileopts.horizDistance:	4
*fileopts.wcPopups:		fileoptsmenu
*fileopts.menuName:          	fileoptsmenu
*fileopts.callback:		Single_File_Actions()
*fileopts.fromHoriz:		*options
*fileopts.translations:		#override \
				<Key>Help: help() \n\
				<Key>F1: help() \n\


;                   <Btn1Down>:  Single_File_Actions() \
;			      	XawPositionSimpleMenu(fileoptsmenu) \
;				XtMenuPopup(fileoptsmenu) \n\
;                   <Btn2Down>:  Single_File_Actions() \
;				XawPositionSimpleMenu(fileoptsmenu) \
;				XtMenuPopup(fileoptsmenu) \n\
;                   <Btn3Down>:  Single_File_Actions() \
;				XawPositionSimpleMenu(fileoptsmenu) \
;				XtMenuPopup(fileoptsmenu) 


*fileoptsmenu.wcCreate:        	simpleMenuWidgetClass
*fileoptsmenu.wcManged:         False
*fileoptsmenu.wcChildren:       filem_UP, filem_CD, filem_GET, filem_VIEW, \
                                filem_PUT, filem_Ascii, filem_Binary, \
				filem_Tenex, filem_Default, \
				filem_ignore, filem_use, filem_Dir

*filem_UP.wcCreate:	        SmeBSB
*filem_UP.wcCallback:		Register_action(up)
*filem_UP.justify:		left
*filem_UP.label:            	Up
*filem_UP.callback:		SetFileAction_menu()

*filem_CD.wcCreate:	        SmeBSB
*filem_CD.wcCallback:		Register_action(cd)
*filem_CD.justify:		left
*filem_CD.label:            	Cd
*filem_CD.callback:		SetFileAction_menu()

*filem_GET.wcCreate:	        SmeBSB
*filem_GET.wcCallback:		Register_action(get)
*filem_GET.justify:		left
*filem_GET.label:            	Get
*filem_GET.callback:		SetFileAction_menu()

*filem_VIEW.wcCreate:	        SmeBSB
*filem_VIEW.wcCallback:		Register_action(view)
*filem_VIEW.justify:		left
*filem_VIEW.label:            	Veiw
*filem_VIEW.callback:		SetFileAction_menu()

*filem_PUT.wcCreate:	        SmeBSB
*filem_PUT.wcCallback:		Register_action(put)
*filem_PUT.justify:		left
*filem_PUT.label:            	Put
*filem_PUT.callback:		SetFileAction_menu()

*filem_Ascii.wcCreate:		SmeBSB
*filem_Ascii.wcCallback:        Register_action(ascii)
*filem_Ascii.label:		Ascii
*filem_Ascii.callback:         	SetFileAction_menu()

*filem_Binary.wcCreate:	        SmeBSB
*filem_Binary.wcCallback:       Register_action(binary)
*filem_Binary.label:		Binary
*filem_Binary.callback: 	SetFileAction_menu()

*filem_Tenex.wcCreate:	        SmeBSB
*filem_Tenex.wcCallback:        Register_action(tenex)
*filem_Tenex.label:		Tenex
*filem_Tenex.callback: 	        SetFileAction_menu()

*filem_Default.wcCreate:	SmeBSB
*filem_Default.wcCallback:      Register_action(default)
*filem_Default.label:		Default
*filem_Default.callback: 	SetFileAction_menu()

*filem_ignore.wcCreate:    	SmeBSB
*filem_ignore.wcCallback:       Register_action(ignore)
*filem_ignore.label:      	Ignore
*filem_ignore.Callback: 	SetFileAction_menu()

*filem_use.wcCreate:       	SmeBSB
*filem_use.wcCallback:          Register_action(use)
*filem_use.label:         	Don't ignore
*filem_use.Callback:    	SetFileAction_menu()

*filem_Dir.wcCreate:       	SmeBSB
*filem_Dir.wcCallback:          Register_action(dir)
*filem_Dir.label:         	Dir
*filem_Dir.Callback:    	SetFileAction_menu()



*filesopts.wcCreate: 		menuButtonWidgetClass
*filesopts.wcCallback:          help_register \
        noop(get put dir connect action Sensitive ifsensitive) 
*filesopts.sensitive:           FALSE
*filesopts.label: 		Multi File Options
*filesopts.shapeStyle:		Rectangle
*filesopts.right: 		chainleft
*filesopts.left: 	        chainleft
*filesopts.bottom: 		chaintop
*filesopts.top: 		chaintop
*filesopts.horizDistance:	4
*filesopts.wcPopups:		filesoptsmenu
*filesopts.menuName:          	filesoptsmenu
*filesopts.callback:		Single_File_Actions()
*filesopts.fromHoriz:		*fileopts
*filesopts.translations:	#override \
				<Key>Help: help() \n\
				<Key>F1: help() 

*filesoptsmenu.wcCreate:       	simpleMenuWidgetClass
*filesoptsmenu.wcManged:	False
*filesoptsmenu.wcChildren:      filesm_CLEAR filesm_GET_ALL filesm_PUT_ALL

*filesm_CLEAR.wcCreate:	        SmeBSB
*filesm_CLEAR.wcCallback:	Register_action(clear_all)
*filesm_CLEAR.justify:		left
*filesm_CLEAR.label:            Clear File Selections
*filesm_CLEAR.callback:		SetFileAction_menu()

*filesm_GET_ALL.wcCreate:       SmeBSB
*filesm_GET_ALL.wcCallback:	Register_action(get_all)
*filesm_GET_ALL.justify:	left
*filesm_GET_ALL.label:         	Get Selected Files
*filesm_GET_ALL.callback:	SetFileAction_menu()

*filesm_PUT_ALL.wcCreate:	SmeBSB
*filesm_PUT_ALL.wcCallback:	Register_action(put_all)
*filesm_PUT_ALL.justify:	left
*filesm_PUT_ALL.label:         	Put Selected Files
*filesm_PUT_ALL.callback:	SetFileAction_menu()

!
! Help 
!
*helpm.wcCreate:		menuButtonWidgetClass
*helpm.wcCallback:		help_register
*helpm.label:			help
*helpm.shapeStyle:		Rectangle
*helpm.right:			chainleft
*helpm.left:			chainleft
*helpm.bottom:			chaintop
*helpm.top:			chaintop
*helpm.fromHoriz:		*filesopts
*helpm.horizDistance:           4
*helpm.wcPopups:		helpme
*helpm.menuName:          	helpme
*helpm.translations:		#override \
				<Key>Help: help() \n\
				<Key>F1: help() 


*helpme.wcCreate:		simpleMenuWidgetClass
*helpme.wcManged:		False
*helpme.wcChildren:		help_context, help_general

*help_context.wcCreate:		SmeBSB
*help_context.label:		Context Sensitive Help
*help_context.callback:		help(c)

*help_general.wcCreate:		SmeBSB
*help_general.label:		General Help
*help_general.callback:		help()
!
!
! status line
!
*status.wcCreate:		Label
*status.wcCallback:		help_register set_width(1)
*status.label:			
*status.justify:		left
*status.right: 			chainright
*status.left: 			chainleft
*status.bottom: 		chaintop
*status.top: 			chaintop
*status.fromVert:		*quitm
*status.borderWidth: 		2
*status.translations:           #override \
				<Key>Help: help() \n\
				<Key>F1: help()  \n\
                                <Btn1Down>: WcPopupACT(*Shellstatus) \
					    SetStatusIcon()
!
! Remote directory
!
*dir.wcCreate:			Label
*dir.wcCallback:		help_register set_width(1)
*dir.label:			
*dir.justify:			left
*dir.fromVert: 			*status
*dir.right: 			chainright
*dir.left: 			chainleft
*dir.bottom: 		  	chaintop
*dir.top: 			chaintop
*dir.borderWidth: 		2
!
! host name, system name, and default transfer mode display
!
*host_name.wcCreate:		Label
*host_name.wcCallback:		help_register set_width(3, -6)
*host_name.label:			
*host_name.justify:		left
*host_name.fromVert: 		*dir
*host_name.right: 		chainleft
*host_name.left:		chainleft
*host_name.bottom: 		chaintop
*host_name.top: 		chaintop
*host_name.borderWidth: 	0

*system_name.wcCreate:		Label
*system_name.wcCallback:	help_register set_width(3, -6)
*system_name.label:			
*system_name.justify:		center
*system_name.fromVert: 		*dir
*system_name.fromHoriz:		*host_name
*system_name.right: 		chainright
*system_name.left:		chainleft
*system_name.bottom: 		chaintop
*system_name.top: 		chaintop
*system_name.borderWidth: 	0

*default_mode.wcCreate:		Label
*default_mode.wcCallback:	help_register set_width(3, -6) 
*default_mode.label:			
*default_mode.justify:		right
*default_mode.fromVert: 	*dir
*default_mode.fromHoriz:	*system_name
*default_mode.right: 		chainright
*default_mode.left:		chainright
*default_mode.bottom: 		chaintop
*default_mode.top: 		chaintop
*default_mode.borderWidth: 	0

!
! Connect button
!
*connect.wcCreate: 		commandWidgetClass
*connect.wcCallback:		help_register help_register(system_list) \
			        help_register(dotxftp) \
				help_register(netrc) \
                                help_register(Trademarks) \
				help_register(xftp_fonts) \
				help_register(list_key_input) \
                                help_register(Shellcommand) \
                                help_register(Shellview) \
                                help_register(Shelltran) \
                                help_register(Shellconnect) \
                                help_register(Shellstatus) \
                                help_register(Shellhelp) \
                                help_register(Shellglobdialog) \
                                help_register(Shellsearchdialog) \
                                help_register(Shellsearchhostdialog) \
                                help_register(op_listing) \
                                help_register(op_sort)
*connect.label:			Login
*connect.shapeStyle:		Rectangle
*connect.callback:		connect_disconnect() Set_noop(connect)
*connect.fromVert: 		*host_name
*connect.right: 		chainleft
*connect.bottom: 		chaintop
*connect.top: 			chaintop

!
! Remote/local toggle
!
*dir_display.wcCreate: 		commandWidgetClass
*dir_display.wcCallback: \
		noop(get put dir connect notconnected action Sensitive) \
		help_register
*dir_display.label: 		Remote
*dir_display.shapeStyle:	Rectangle
*dir_display.right: 		chainleft
*dir_display.left: 	        chainleft
*dir_display.bottom: 		chaintop
*dir_display.top: 		chaintop
*dir_display.fromHoriz:		*connect
*dir_display.fromVert: 		*host_name
*dir_display.horizDistance:	4
*dir_display.callback:	        remote_local_toggle
!
! Command
!
*command.wcCreate: 		commandWidgetClass
*command.wcCallback:		help_register
*command.label:			Command Shell
*command.shapeStyle:		Rectangle
*command.fromHoriz:		*dir_display
*command.fromVert: 		*host_name
*command.left: 	        	chainleft
*command.right: 		chainleft
*command.bottom: 		chaintop
*command.top: 			chaintop
*command.horizDistance:		4
*command.callback:		WcPopupCB(*Shellcommand) \
                                SetIcons(*Shellcommand)

!
! glob button
!
*glob.wcCreate:        		commandWidgetClass
*glob.wcCallback:		CreateGlobDialog \
	noop(get put dir connect notconnected action Sensitive) \
	help_register
*glob.label:        		Glob
*glob.fromHoriz:		*command
*glob.fromVert: 		*host_name
*glob.left: 	       		chainleft
*glob.right: 			chainleft
*glob.bottom: 			chaintop
*glob.top: 			chaintop
*glob.horizDistance:		4
*glob.sensitive:		False
*glob.callback:			PositionDialog(*Shellglobdialog) \
				WcPopupCB(*Shellglobdialog) 

!
! Search and highlight a file
!
*search.wcCreate:      		commandWidgetClass
*search.wcCallback:		CreateSearchDialog \
	noop(get put dir connect notconnected action Sensitive) \
	help_register
*search.label:        		Search
*search.fromHoriz:		*glob
*search.fromVert: 		*host_name
*search.left: 	       		chainleft
*search.right: 			chainleft
*search.bottom: 		chaintop
*search.top: 			chaintop
*search.horizDistance:		4
*search.sensitive:		False
*search.callback:		PositionDialog(*Shellsearchdialog) \
				WcPopupCB(*Shellsearchdialog) 

*Shellsearchdialog*.translations:   #override \
   <Key>Help:  			help() \n\
   <Key>F1:    			help() 
	
*Shellsearchdialog*value.translations:   #override \
   <Key>Help:  			help() \n\
   <Key>F1:    			help() \n\
   <Key>Return:          	WcPopdownACT(*Shellsearchdialog) \
				set_search_text(glob) \n\
   Ctrl<Key>r:          	WcPopdownACT(*Shellsearchdialog) \
				set_search_text(reg) \n\
   Ctrl<Key>g:          	WcPopdownACT(*Shellsearchdialog) \
				set_search_text(glob) \n\
   Ctrl<Key>c:			WcPopdownACT(*Shellsearchdialog) \n\
   Ctrl<Key>:     		no-op(RingBell) 

!
! Next button
!	
*next.wcCreate:      		commandWidgetClass
*next.wcCallback: \
	noop(get put dir connect notconnected action Sensitive ifsensitive) \
	help_register
*next.label:        		Search Next
*next.fromHoriz:		*search
*next.fromVert: 		*host_name
*next.left: 	       		chainleft
*next.right: 			chainleft
*next.bottom: 			chaintop
*next.top: 			chaintop
*next.horizDistance:		4
*next.callback:			search_next()
*next.sensitive:		FALSE

!
! reconnect button
!
*reconnect.wcCreate:           	commandWidgetClass
*reconnect.wcCallback:		help_register
*reconnect.label:        	Reconnect
*reconnect.fromHoriz:		*next
*reconnect.fromVert: 		*host_name
*reconnect.left: 	       	chainleft
*reconnect.right: 		chainleft
*reconnect.bottom: 		chaintop
*reconnect.top: 		chaintop
*reconnect.horizDistance:	4
*reconnect.callback:		Reconnect
*reconnect.sensitive:		False

!
! Archie interface
! 
*archie_command.wcCreate: 	commandWidgetClass
*archie_command.wcCallback:	archie_noop() help_register
*archie_command.label:		Archie
*archie_command.shapeStyle:	Rectangle
*archie_command.fromHoriz:	*reconnect
*archie_command.fromVert: 	*host_name
*archie_command.left: 	        chainleft
*archie_command.right: 		chainleft
*archie_command.bottom: 	chaintop
*archie_command.top: 		chaintop
*archie_command.horizDistance:	4
*archie_command.callback:	archie()

!
! Rate
!
*rate.wcCreate:			LableQUICKClass
*rate.wcCallback:               help_register \
	       			set_width(1) 
*rate.resize:                   FALSE
*rate.label:			\ 
*rate.justify:                  right
*rate.fromVert: 		*host_name
*rate.bottom: 			chaintop
*rate.top: 			chaintop
*rate.left: 	        	chainleft
*rate.right: 	        	chainright
*rate.horizDistance:		5
*rate.borderWidth: 		0
!
! Title list 
!
*percent.wcCreate:		Label
*percent.wcCallback:	        set_width(1)
*percent.height:		3
*percent.label:			
*percent.fromVert: 		*connect
*percent.right: 		chainright
*percent.bottom: 		chaintop
*percent.top: 			chaintop
*percent.borderWidth: 		0
*percent.translations:     	<Expose>:       resize_percent() 

*listsw.wcCreate:		MyListSW
*listsw.wcCallback:	        noop(get put dir action connect notconnected) \
	       			set_width(1) \
				CreateContinueDialog() \
	        		help_register 
*listsw.wcPopups:		fmenu
*listsw.height:			400
*listsw.min:			100
*listsw.fromVert:               *percent
*listsw.right: 			chainright
*listsw.left: 			chainleft
*listsw.top: 			chaintop
*listsw.bottom: 		chainbottom
*listsw.labelw:			TRUE
*listsw.list.width:		10
*listsw.list.height:		10
*listsw.list.Callback:          list_notify 
*listsw.list.columnSpacing:	0
*listsw.list.defaultColumns:	1
*listsw.list.rowSpacing:	0
*listsw.list.translations:    	#override \
   <Key>Help:  		help() \n\
   <Key>F1:    		help() \n\
  ~Ctrl ~Shift <Key>h:	Listop(Left)\n\
  ~Ctrl ~Shift <Key>k:  Listop(Up)\n\
  ~Ctrl ~Shift <Key>l:  Listop(Right)\n\
  ~Ctrl ~Shift <Key>j:	Listop(Down)\n\
  ~Ctrl   <Key>dollar: Listop(End)\n\
  ~Ctrl ~Shift <Key>0:	Listop(Start)\n\
  ~Ctrl  Shift <Key>m:	Listop(Down)\n\
   Ctrl ~Shift <Key>f:  Listop(NextPage)\n\
   Ctrl ~Shift <Key>b:  Listop(PrevPage)\n\
   Ctrl ~Shift <Key>n:	Listop(Down)\n\
   Ctrl ~Shift <Key>j:	Listop(Down)\n\
   Ctrl ~Shift <Key>p:	Listop(Up)\n\
  ~Shift  ~Meta ~Alt <Key>space: Listop(Select) \n\
   Ctrl ~Shift <Key>t:	remote_local_toggle()\n\
  ~Ctrl  Shift <Key>l:	Listing_type(LONG)\n\
  ~Ctrl  Shift <Key>s: 	Listing_type(SHORT)\n\
  ~Ctrl  Shift <Key>t:	Listing_type(TRANSLATIONS)\n\
  ~Ctrl  <Key>greater:	Listop(NextPage)\n\
  ~Ctrl  <Key>less:  	Listop(PrevPage)\n\
   Ctrl  <Key>greater: 	Listop(Bottom)\n\
   Ctrl  <Key>less:     Listop(Top)\n\
  ~Ctrl ~Shift <Key>u:	SetFileAction(up)\n\
  ~Ctrl ~Shift <Key>c:	SetFileAction(cd)\n\
  ~Ctrl ~Shift <Key>g:	SetFileAction(get)\n\
  ~Ctrl ~Shift <Key>p:	SetFileAction(put)\n\
  ~Ctrl ~Shift <Key>a:	SetFileAction(ascii)\n\
  ~Ctrl ~Shift <Key>b:	SetFileAction(binary)\n\
  ~Ctrl ~Shift <Key>d:	SetFileAction(default)\n\
  ~Ctrl ~Shift <Key>t:	SetFileAction(tenex)\n\
   Ctrl        <Key>s:  search_next()\n\
   Ctrl        <Key>g:  search_clear()\n\
   Button1<Motion>:     Set(M)\n\
   ~Ctrl <Btn1Down>:    Set() \n\
   ~Ctrl <Btn1Up>:      Notify()\n\
   Ctrl <Btn1Down>:     Set(x) Open_file() \n\
  ~Ctrl <Btn3Down>: 	Single_File_Actions() \
			XawPositionSimpleMenu(fmenu) \
			MyPopup(fmenu) \n\
   Ctrl <Btn3Down>: 	Set(x) \
	       		Single_File_Actions() \
			XawPositionSimpleMenu(fmenu) \
			MyPopup(fmenu)
! 
! Action menus
!
*fmenu.wcCreate:		simpleMenuWidgetClass
!*fmenu.popdownCallback:	Clear_List_Entry()
*fmenu.wcManged:		False
*fmenu.wcPopups:		fmenu_modem
*fmenu.wcChildren:		fmenuline, \
				fmenu_UP, fmenu_Cd, fmenu_GET, fmenu_VIEW, \
				fmenu_PUT,\
				fmenu_dir, \
				fmenu_mode, \
				amenuline, \
				fmenu_clear_all, \
                                fmenu_get_all, fmenu_put_all, fmenu_delete_all

*fmenu*ShapeStyle:		XmuShapeOval
*fmenu.label:			File Actions
*fmenu.translations:  		#override \n\
    <BtnMotion>:                highlight() menu_cascade() \n\
    <BtnUp>:			PopDownSubs() notify() unhighlight() \n
    <LeaveWindow>:		unhighlight() 

*fmenuline.wcCreate:		SmeLine

*fmenu_UP.wcCreate:		SmeBSB
*fmenu_UP.wcCallback:           Register_action(up)
*fmenu_UP.label:		Up
*fmenu_UP.callback:		SetFileAction()

*fmenu_Cd.wcCreate:		SmeBSB
*fmenu_Cd.wcCallback:           Register_action(cd)
*fmenu_Cd.label:		Cd
*fmenu_Cd.callback:             SetFileAction()

*fmenu_GET.wcCreate:		SmeBSB
*fmenu_GET.wcCallback:          Register_action(get)
*fmenu_GET.label:		Get
*fmenu_GET.callback:   		SetFileAction()

*fmenu_VIEW.wcCreate:		SmeBSB
*fmenu_VIEW.wcCallback:         Register_action(view)
*fmenu_VIEW.label:		View
*fmenu_VIEW.callback:   	SetFileAction()

*fmenu_PUT.wcCreate:		SmeBSB
*fmenu_PUT.wcCallback:          Register_action(put)
*fmenu_PUT.label:		Put
*fmenu_PUT.callback:           	SetFileAction()

*fmenu_mode.wcCreate:           SmeBSB
*fmenu_mode.wcCallback:         bind_menu(*fmenu_modem)
*fmenu_mode.label:              File Modes

*fmenu_modem.wcCreate:		simpleMenuWidgetClass
*fmenu_modem.wcManged:		False
*fmenu_modem.wcChildren:        fmenu_Ascii, fmenu_Binary, fmenu_Tenex, \
				fmenu_Default, \
				fmenu_ignore, fmenu_use, 
*fmenu_modem.translations:	#override \n\
    <BtnUp>:			PopDownSubs() notify() unhighlight() \n
    <LeaveWindow>:		unhighlight() 
*fmenu_modem.*.leftMargin:      20


*fmenu_Ascii.wcCreate:		SmeBSB
*fmenu_Ascii.wcCallback:        Register_action(ascii)
*fmenu_Ascii.label:		Ascii
*fmenu_Ascii.callback:         	SetFileAction()

*fmenu_Binary.wcCreate:	        SmeBSB
*fmenu_Binary.wcCallback:       Register_action(binary)
*fmenu_Binary.label:		Binary
*fmenu_Binary.callback: 	SetFileAction()

*fmenu_Tenex.wcCreate:	        SmeBSB
*fmenu_Tenex.wcCallback:        Register_action(tenex)
*fmenu_Tenex.label:		Tenex
*fmenu_Tenex.callback: 	        SetFileAction()

*fmenu_Default.wcCreate:	SmeBSB
*fmenu_Default.wcCallback:      Register_action(default)
*fmenu_Default.label:		Default
*fmenu_Default.callback: 	SetFileAction()

*fmenu_ignore.wcCreate:    	SmeBSB
*fmenu_ignore.wcCallback:       Register_action(ignore)
*fmenu_ignore.label:      	Ignore
*fmenu_ignore.Callback: 	SetFileAction()

*fmenu_use.wcCreate:       	SmeBSB
*fmenu_use.wcCallback:          Register_action(use)
*fmenu_use.label:         	Don't ignore
*fmenu_use.Callback:    	SetFileAction()

*fmenu_dir.wcCreate:       	SmeBSB
*fmenu_dir.wcCallback:          Register_action(dir)
*fmenu_dir.label:         	Dir
*fmenu_dir.Callback:    	SetFileAction()

*amenuline.wcCreate:		SmeLine

*fmenu_clear_all.wcCreate:	SmeBSB
*fmenu_clear_all.wcCallback:	Register_action(clear_all)
*fmenu_clear_all.label:		Clear File Selesctions
*fmenu_clear_all*callback:	SetFileAction()

*fmenu_put_all.wcCreate:	SmeBSB
*fmenu_put_all.wcCallback:	Register_action(put_all)
*fmenu_put_all.label:		Put Selected Files
*fmenu_put_all*callback:	SetFileAction()
*fmenu_put_all.sensitive:	False

*fmenu_get_all.wcCreate:	SmeBSB
*fmenu_get_all.wcCallback:	Register_action(get_all)
*fmenu_get_all.label:		Get Selected Files
*fmenu_get_all*callback:	SetFileAction()

*fmenu_delete_all.wcCreate:	SmeBSB
*fmenu_delete_all.label:	Delete Selected Files
*fmenu_delete_all.sensitive:	False
!*fmenu_get_all*callback:	delete

!
! Help shell
!
*Shellarchie.wcCreate:		TopLevelShell
*Shellarchie.wcChildren:	archie_layout
*Shellarchie.title:		Archie
*Shellarchie.destroyCallback:	help_dead

*archie_layout.wcCreate:	formWidgetClass
*archie_layout.wcChildren:	ArchieHits, ArchieHost, ArchieNice,\
				    ArchieSearch, ArchieSort,\
				archie_hide, archie_search, archie_abort,\
				   archie_label, archietext, \
				archie_lw

*ArchieHits.wcCreate: 		commandWidgetClass
*ArchieHits.wcPopups:		archiehits
*ArchieHits.label: 		Hits
*ArchieHits.SapeStyle:		Rectangle
*ArchieHits.right: 		chainleft
*ArchieHits.left: 	        chainleft
*ArchieHits.bottom: 		chaintop
*ArchieHits.top: 		chaintop
*ArchieHits.horizDistance:	4
*ArchieHits.translations: 	#override \
			<Key>Help: help() \n\
			<Key>F1:   help() \n\
                        <Btn1Down>:  XawPositionSimpleMenu(archiehits) \
                                     XtMenuPopup(archiehits) \n\
                        <Btn3Down>:  XawPositionSimpleMenu(archiehits) \
                                     XtMenuPopup(archiehits) 

*archiehits.wcCreate:		simpleMenuWidgetClass
*archiehits.wcManged:		False
*archiehits.wcChildren: 	archie_hit_95, archie_hit_200, \
                                archie_hit_400 archie_hit_800
*archiehits.wcManaged:          FALSE

*archie_hit_95.wcCreate:	SmeBSB
*archie_hit_95.wcCallback:	Register_archie(95)
*archie_hit_95.label:		95
*archie_hit_95*callback:	do_archie

*archie_hit_200.wcCreate:	SmeBSB
*archie_hit_200.wcCallback:	Register_archie(200)
*archie_hit_200.label:		200
*archie_hit_200*callback:	do_archie

*archie_hit_400.wcCreate:	SmeBSB
*archie_hit_400.wcCallback:	Register_archie(400)
*archie_hit_400.label:		400
*archie_hit_400*callback:	do_archie

*archie_hit_800.wcCreate:	SmeBSB
*archie_hit_800.wcCallback:	Register_archie(800)
*archie_hit_800.label:		800
*archie_hit_800*callback:	do_archie


*ArchieHost.wcCreate: 		commandWidgetClass
*ArchieHost.wcPopups:		archiehost
*ArchieHost.label: 		Host
*ArchieHost.SapeStyle:		Rectangle
*ArchieHost.right: 		chainleft
*ArchieHost.left: 	        chainleft
*ArchieHost.bottom: 		chaintop
*ArchieHost.top: 		chaintop
*ArchieHost.horizDistance:	4
*ArchieHost.fromHoriz:		*ArchieHits
*ArchieHost.translations: 	#override \
			<Key>Help: help() \n\
			<Key>F1:   help() \n\
                        <Btn1Down>:  XawPositionSimpleMenu(archiehost) \
                                     XtMenuPopup(archiehost) \n\
                        <Btn3Down>:  XawPositionSimpleMenu(archiehost) \
                                     XtMenuPopup(archiehost) 

*archiehost.wcCreate:		simpleMenuWidgetClass
*archiehost.wcCallback:		archie_hosts()
*archiehost.wcManged:		False
*archiehost.wcChildren: 	
*archiehost.wcManaged:          FALSE

*archie_host.wcCreate:		SmeBSB
*archie_host.wcCallback:	Register_archie(host)
*archie_host.label:		
*archie_host*callback:		do_archie


*ArchieNice.wcCreate: 		commandWidgetClass
*ArchieNice.wcPopups:		archienice
*ArchieNice.label: 		Nice
*ArchieNice.SapeStyle:		Rectangle
*ArchieNice.right: 		chainleft
*ArchieNice.left: 	        chainleft
*ArchieNice.bottom: 		chaintop
*ArchieNice.top: 		chaintop
*ArchieNice.horizDistance:	4
*ArchieNice.fromHoriz:		*ArchieHost
*ArchieNice.translations: 	#override \
			<Key>Help: help() \n\
			<Key>F1:   help() \n\
                        <Btn1Down>:  XawPositionSimpleMenu(archienice) \
                                     XtMenuPopup(archienice) \n\
                        <Btn3Down>:  XawPositionSimpleMenu(archienice) \
                                     XtMenuPopup(archienice) 

*archienice.wcCreate:		simpleMenuWidgetClass
*archienice.wcManged:		False
*archienice.wcChildren: 	archie_nice_default, archie_nice_nice,\
                                archie_nice_nicer,  archie_nice_very,\
                                archie_nice_exterm,  archie_nice_nicest
*archienice.wcManaged:          FALSE

*archie_nice_default.wcCreate:	SmeBSB
*archie_nice_default.wcCallback:Register_archie(nice_default)
*archie_nice_default.label:	Nice Default      (0)
*archie_nice_default*callback:	do_archie

*archie_nice_nice.wcCreate:	SmeBSB
*archie_nice_nice.wcCallback:	Register_archie(nice_nice)
*archie_nice_nice.label:	Nice            (500)
*archie_nice_nice*callback:	do_archie

*archie_nice_nicer.wcCreate:	SmeBSB
*archie_nice_nicer.wcCallback:	Register_archie(nice_nicer)
*archie_nice_nicer.label:	Nice           (1000)
*archie_nice_nicer*callback:	do_archie

*archie_nice_very.wcCreate:	SmeBSB
*archie_nice_very.wcCallback:	Register_archie(nice_very)
*archie_nice_very.label:	Very Nice      (5000)
*archie_nice_very*callback:	do_archie

*archie_nice_exterm.wcCreate:	SmeBSB
*archie_nice_exterm.wcCallback:	Register_archie(nice_exterm)
*archie_nice_exterm.label:	Extermly Nice (10000)
*archie_nice_exterm*callback:	do_archie

*archie_nice_nicest.wcCreate:	SmeBSB
*archie_nice_nicest.wcCallback:Register_archie(nice_nicest)
*archie_nice_nicest.label:	Extermly Nice (32765)
*archie_nice_nicest*callback:	do_archie

*ArchieSearch.wcCreate: 	commandWidgetClass
*ArchieSearch.wcPopups:		archiesearch
*ArchieSearch.label: 		Search Types
*ArchieSearch.SapeStyle:	Rectangle
*ArchieSearch.right: 		chainleft
*ArchieSearch.left: 	        chainleft
*ArchieSearch.bottom: 		chaintop
*ArchieSearch.top: 		chaintop
*ArchieSearch.horizDistance:	4
*ArchieSearch.fromHoriz:	*ArchieNice
*ArchieSearch.translations: 	#override \
			<Key>Help: help() \n\
			<Key>F1:   help() \n\
                        <Btn1Down>:  XawPositionSimpleMenu(archiesearch) \
                                     XtMenuPopup(archiesearch) \n\
                        <Btn3Down>:  XawPositionSimpleMenu(archiesearch) \
                                     XtMenuPopup(archiesearch) 

*archiesearch.wcCreate:		simpleMenuWidgetClass
*archiesearch.wcManged:		False
*archiesearch.wcChildren: 	archie_csss, archie_esm, archie_res,\
                        	archie_ciss
*archiesearch.wcManaged: 	FALSE

*archie_csss.wcCreate:		SmeBSB
*archie_csss.wcCallback:        Register_archie(csss)
*archie_csss.label:		Case Sensitive substring search
*archie_csss*callback:		do_archie

*archie_esm.wcCreate:		SmeBSB
*archie_esm.wcCallback:         Register_archie(esm)
*archie_esm.label:		Exact String Match
*archie_esm*callback:		do_archie

*archie_res.wcCreate:		SmeBSB
*archie_res.wcCallback:         Register_archie(res)
*archie_res.label:		Regular Expession Search
*archie_res*callback:		do_archie

*archie_ciss.wcCreate:		SmeBSB
*archie_ciss.wcCallback:	Register_archie(ciss)
*archie_ciss.label:		Case Insensitive Substring Search
*archie_ciss*callback:		do_archie

*ArchieSort.wcCreate: 		commandWidgetClass
*ArchieSort.wcPopups:		archiesort
*ArchieSort.label: 		Sort
*ArchieSort.SapeStyle:		Rectangle
*ArchieSort.right: 		chainleft
*ArchieSort.left: 	        chainleft
*ArchieSort.bottom: 		chaintop
*ArchieSort.top: 		chaintop
*ArchieSort.horizDistance:	4
*ArchieSort.fromHoriz:		*ArchieSearch
*ArchieSort.translations: 	#override \
			<Key>Help: help() \n\
			<Key>F1:   help() \n\
                        <Btn1Down>:  XawPositionSimpleMenu(archiesort) \
                                     XtMenuPopup(archiesort) \n\
                        <Btn3Down>:  XawPositionSimpleMenu(archiesort) \
                                     XtMenuPopup(archiesort) 
*archiesort.wcCreate:		simpleMenuWidgetClass
*archiesort.wcManged:		False
*archiesort.wcChildren:         archie_sort_age, archie_sort_name,\
                                archie_sort_size,\
                                archie_sort_sep,\
                                archie_sort_normal,\
                                archie_sort_reverse
*archiesort.wcManaged: 		FALSE

*archie_sort_age.wcCreate:	SmeBSB
*archie_sort_age.wcCallback:	Register_archie(sort_by_age)
*archie_sort_age.label:		Age
*archie_sort_age*callback:	do_archie

*archie_sort_name.wcCreate:	SmeBSB
*archie_sort_name.wcCallback:	Register_archie(sort_by_name)
*archie_sort_name.label:	Name
*archie_sort_name*callback:	do_archie

*archie_sort_size.wcCreate:	SmeBSB
*archie_sort_size.wcCallback:	Register_archie(sort_by_size)
*archie_sort_size.label:	Size
*archie_sort_size*callback:	do_archie

*archie_sort_sep.wcCreate:	SmeLine

*archie_sort_normal.wcCreate:	SmeBSB
*archie_sort_normal.wcCallback:	Register_archie(sort_normal)
*archie_sort_normal.label:	Normal
*archie_sort_normal*callback:	do_archie

*archie_sort_reverse.wcCreate:	SmeBSB
*archie_sort_reverse.wcCallback:Register_archie(sort_reverse)
*archie_sort_reverse.label:	Reverse
*archie_sort_reverse*callback:	do_archie

*archie_hide.wcCreate: 		commandWidgetClass
*archie_hide.label:		Hide
*archie_hide.shapeStyle:	Rectangle
*archie_hide.left: 		chainleft
*archie_hide.right: 		chainleft
*archie_hide.bottom: 		chaintop
*archie_hide.top: 		chaintop
*archie_hide.callback:          WcPopDownCB(~)
*archie_hide.fromVert:		*ArchieHits
*archie_hide.horizDistance:	4

*archie_search.wcCreate: 	commandWidgetClass
*archie_search.wcCallback:      Register_archie(do_search)
*archie_search.label:		Search
*archie_search.shapeStyle:	Rectangle
*archie_search.left: 		chainleft
*archie_search.right: 		chainleft
*archie_search.bottom:		chaintop
*archie_search.top:		chaintop
*archie_search.callback:	do_archie
*archie_search.fromVert:	*ArchieHits
*archie_search.fromHoriz:	*archie_hide
*archie_search.horizDistance:	4

*archie_abort.wcCreate: 	commandWidgetClass
*archie_abort.label:		Abort Search
*archie_abort.shapeStyle:	Rectangle
*archie_abort.left: 		chainleft
*archie_abort.right: 		chainleft
*archie_abort.bottom:		chaintop
*archie_abort.top:		chaintop
*archie_abort.callback:		abort_archie
*archie_abort.fromVert:		*ArchieHits
*archie_abort.fromHoriz:	*archie_search
*archie_abort.horizDistance:	4

*archie_label.wcCreate:		Label
*archie_label.label:		Archie Search Item:
*archie_label.resize:		FALSE
*archie_label.width:		140	
*archie_label.justify:		left
*archie_label.right: 		chainleft
*archie_label.left: 		chainleft
*archie_label.bottom: 		chaintop
*archie_label.top: 		chaintop
*archie_label.fromVert:		*ArchieHits
*archie_label.fromHoriz:	*archie_abort
*archie_label.horizDistance:	4
*archie_label.borderWidth: 	0

*archietext.wcCreate:  		AsciiText
*archietext.wcCallback:         Register_archie(search_text)
*archietext.width:		435
*archietext*editType:           edit
*archietext.input:              TRUE
*archietext.border:             black
*archietext.right:              chainright
*archietext.left:               chainleft
*archietext.bottom:             chaintop
*archietext.top:                chaintop
*archietext.fromVert:		*ArchieHits
*archietext.fromHoriz:		*archie_label
*archietext.translations:       #override \
                                <Key>Help: help() \n\
                                <Key>F1:   help() \n\
                                <Key>Return:    no-op(RingBell) \n\
                                Ctrl<Key>J:     no-op(RingBell) \n\
                                Ctrl<Key>M:     no-op(RingBell) \n\
                                Ctrl<Key>O:     no-op(RingBell) \n\
                                Ctrl<Key>V:     no-op(RingBell) \n\

*archie_lw.wcCreate:            MyListSW
*archie_lw.height:              300
*archie_lw.width:		800
*archie_lw.labelw:              TRUE
*archie_lw.left: 		chainleft
*archie_lw.right: 		chainright
*archie_lw.bottom: 		chainbottom
*archie_lw.top: 		chaintop
*archie_lw.fromVert:		*archie_hide
*archie_lw.list.Callback:       archie_notify
*archie_lw.list.height:		10
*archie_lw.list.width:		10
*archie_lw.list.columnSpacing:  0
*archie_lw.list.defaultColumns: 1
*archie_lw.list.rowSpacing:     0
*archie_lw.translations:       #override \
                                <Key>Help: help() \n\
                                <Key>F1:   help() 



!
! Help shell
!
*Shellhelp.wcCreate:            XtCreateTopLevelShell
*Shellhelp.wcChildren:		help_layout
*Shellhelp.title:		Help
*Shellhelp.destroyCallback:	help_dead

*help_layout.wcCreate:		formWidgetClass
*help_layout.wcChildren:	help_quit, help_options, help_title, help_text

*help_quit.wcCreate: 		commandWidgetClass
*help_quit.label:		Hide
*help_quit.shapeStyle:		Rectangle
*help_quit.left: 		chainleft
*help_quit.right: 		chainleft
*help_quit.bottom: 		chaintop
*help_quit.top: 		chaintop
*help_quit.horizDistance:	4
*help_quit.callback:            WcPopDownCB(~)
!
! Help options
!	
*help_options.wcCreate: 	commandWidgetClass
*help_options.label:		Selections
*help_options.shapeStyle:	Rectangle
*help_options.left: 		chainleft
*help_options.right: 		chainleft
*help_options.bottom: 		chaintop
*help_options.top: 		chaintop
*help_options.fromHoriz:	*help_quit
*help_options.wcPopups:		helpmenu
*help_options.horizDistance:	4
*help_options.translations:     #override \
                                <Btn1Down>:  XawPositionSimpleMenu(helpmenu) \
                                             XtMenuPopup(helpmenu) \n\
                                <Btn3Down>:  XawPositionSimpleMenu(helpmenu) \
                                             XtMenuPopup(helpmenu)
!
! Title
!
*help_title.wcCreate:		Label
*help_title.label:			
*help_title.resize:		FALSE
*help_title.width:		350
*help_title.justify:		left
*help_title.right: 		chainright
*help_title.left: 		chainleft
*help_title.bottom: 		chaintop
*help_title.top: 		chaintop
*help_title.fromHoriz:		*help_options
*help_title.horizDistance:	4
*help_title.borderWidth: 	0

!
! Help by title 
!
*helpmenu.wcCreate:		simpleMenuWidgetClass
*helpmenu.label:		Help Menu
*helpmenu*ShapeStyle:		XmuShapeOval
*helpmenu.translations:  	#override \n\
    <BtnMotion>: 		highlight() menu_cascade() \n\
    <BtnUp>:			PopDownSubs() notify() unhighlight() \n\
    <LeaveWindow>:		unhighlight()

*help_sub.wcCreate:             SmeBSB

;*help_menu.wcCreate:            simpleMenuWidgetClass
*help_menu.wcManged:            False
*help_menu.translations:  	#override \n\
    <BtnMotion>: 		highlight() menu_cascade() \n\
    <BtnUp>:			PopDownSubs() notify() unhighlight() \n\
    <LeaveWindow>:		unhighlight() 

*helpmenu1.wcCreate:		SmeBSB
*helpmenu1.label:			
*helpmenu1.callback:		help_by_title()  help_once()
!
! Help text
!
*help_text.wcCreate:		AsciiText
*help_text.width:		630
*help_text.height:		300
*help_text*scrollVertical:	whenNeeded
*help_text*scrollHorizontal: 	whenNeeded
*help_text*editType: 		read
*help_text.borderWidth:		1
*help_text.fromVert: 		*help_quit
*help_text.left: 		chainleft
*help_text.right: 		chainright
*help_text.bottom: 		chainbottom
*help_text.top: 		chaintop
!
! Display translation table 
!
*Shelltran.wcCreate:		TopLevelShell
*Shelltran.wcChildren:		tran_layout
*Shelltran.title:		Remote File Translations Examples

*tran_layout.wcCreate:		formWidgetClass
*tran_layout.wcChildren:	tran_quit, tran_text

*tran_quit.wcCreate: 		commandWidgetClass
*tran_quit.label:		Hide
*tran_quit.shapeStyle:		Rectangle
*tran_quit.left: 		chainleft
*tran_quit.right: 		chainleft
*tran_quit.bottom: 		chaintop
*tran_quit.top: 		chaintop
*tran_quit.callback:            WcPopDownCB(~)
!
! Translations
!
*tran_text.wcCreate:		AsciiText
*tran_text.wcCallback:	        set_tran
*tran_text.width:		500
*tran_text.height:		300
*tran_text*scrollVertical:	whenNeeded
*tran_text*scrollHorizontal: 	whenNeeded
*tran_text*editType: 		read
*tran_text.borderWidth:		1
*tran_text.fromVert: 		*tran_quit
*tran_text.left: 		chainleft
*tran_text.right: 		chainright
*tran_text.bottom: 		chainbottom
*tran_text.top: 		chaintop
!
! Connect Popup shell
!
*Shellconnect.wcCreate:		TopLevelShell
*Shellconnect.wcChildren:	Shconnectlayout
*Shellconnect.title:		Connect...


*Shconnectlayout.wcCreate: 	formWidgetClass
*Shconnectlayout.wcChildren:	DoAnonymous, \
				DoConnect, DoHide, DoRetry, DoGateway,\
				   DoArchie,\
			        hostsw, \
                                hostlabel, hosttext,\
                                loginlabel, logintext,\
                                passwordlabel, passwordtext,\
                                remotedirlabel, remotedirtext,\
                                localdirlabel, localdirtext,\
				gatewaylabel, gatewaytext


*DoAnonymous.wcCreate: 		menuButtonWidgetClass
*DoAnonymous.label:		Anonymous Login
*DoAnonymous.shapeStyle:	Rectangle
*DoAnonymous.menuName:		anonymous
*DoAnonymous.right:		chainleft
*DoAnonymous.left:		chainleft
*DoAnonymous.bottom:		chaintop
*DoAnonymous.top:		chaintop
*DoAnonymous.wcPopups:		anonymous

*anonymous.wcCreate:		simpleMenuWidgetClass
*anonymous.wcManged:	 	False
*anonymous.wcChildren:     	anonGuest, anonMail, anonLogin

*anonGuest.wcCreate:	        SmeBSB
*anonGuest.label:            	Guest
*anonGuest.callback:		Anonymous(guest)

*anonMail.wcCreate:	        SmeBSB
*anonMail.label:            	Mail Address
*anonMail.callback:		Anonymous(MAIL)

*anonLogin.wcCreate:	        SmeBSB
*anonLogin.label:            	Login Name
*anonLogin.callback:		Anonymous(NAME)

*DoConnect.wcCreate: 		commandWidgetClass
*DoConnect.label:		Connect
*DoConnect.right:		chainleft
*DoConnect.fromVert:		*DoAnonymous
*DoConnect.bottom:		chaintop
*DoConnect.top:			chaintop
*DoConnect.shapeStyle:		Rectangle
*DoConnect.callback:		Login()

*DoHide.wcCreate: 		commandWidgetClass
*DoHide.label:			Hide
*DoHide.shapeStyle:		Rectangle
*DoHide.fromHoriz:		*DoConnect
*DoHide.fromVert:		*DoAnonymous
*DoHide.right:			chainleft
*DoHide.left:			chainleft
*DoHide.bottom:			chaintop
*DoHide.top:			chaintop
*DoHide.callback:		WcPopDownCB(~) \
				Clear_noop(connect) \
				WcSetSensitiveCB("*connect")

*DoRetry.wcCreate: 		toggleWidgetClass
*DoRetry.label:			Retry
*DoRetry.callback:		Set_retry
*DoRetry.shapeStyle:		Rectangle
*DoRetry.fromVert:		*DoAnonymous
*DoRetry.fromHoriz:		*DoHide
*DoRetry.right:			chainleft
*DoRetry.left:			chainleft
*DoRetry.bottom:		chaintop
*DoRetry.top:			chaintop

*DoGateway.wcCreate: 		toggleWidgetClass
*DoGateway.label:		Use ftp gateway
*DoGateway.callback:		Set_use_gateway
*DoGateway.shapeStyle:		Rectangle
*DoGateway.fromVert:		*DoAnonymous
*DoGateway.fromHoriz:		*DoRetry
*DoGateway.right:		chainleft
*DoGateway.left:		chainleft
*DoGateway.bottom:		chaintop
*DoGateway.top:			chaintop
!
! Archie interface
! 
*DoArchie.wcCreate: 		commandWidgetClass
*DoArchie.wcCallback:		archie_noop()
*DoArchie.label:		Archie
*DoArchie.shapeStyle:		Rectangle
*DoArchie.fromVert: 		*DoAnonymous
*DoArchie.fromHoriz:		*DoGateway
*DoArchie.left: 	     	chainleft
*DoArchie.right: 		chainleft
*DoArchie.bottom: 		chaintop
*DoArchie.top: 			chaintop
*DoArchie.horizDistance:	4
*DoArchie.callback:		archie()


;
; The list SW
;
*hostsw.wcCreate:               MyListSW
*hostsw.wcCallback:             help_register \
			        CreateHostSearchDialog() 
*hostsw.height:                 100
*hostsw.width:			424
*hostsw.min:			100
*hostsw.labelw:                 FALSE
*hostsw.fromVert:		*DoConnect
*hostsw.top:			chaintop
*hostsw.bottom:			chainbottom
*hostsw.right:			chainright
*hostsw.left:			chainleft
*hostsw.list.Callback:          SelectHost
*hostsw.list.width:		10
*hostsw.list.height:		10
*hostsw.list.columnSpacing:     0
*hostsw.list.defaultColumns:    1
*hostsw.list.forceColumns:      FALSE
*hostsw.list.mulitselect:       FALSE
*hostsw.list.rowSpacing:        0
*hostsw.list.translations:      #override \
  Ctrl ~Shift <Key>n:           Listop(Down)\n\
 ~Ctrl ~Shift <Key>j:           Listop(Down)\n\
  Ctrl ~Shift <Key>p:           Listop(Up)\n\
 ~Ctrl ~Shift <Key>k:           Listop(Up)\n\
  Ctrl ~Shift <Key>f:           Listop(Right)\n\
 ~Ctrl ~Shift <Key>l:           Listop(Right)\n\
  Ctrl ~Shift <Key>b:           Listop(Left)\n\
 ~Ctrl ~Shift <Key>h:           Listop(Left)\n\
  Ctrl ~Shift <Key>a:           Listop(Start)\n\
  Ctrl ~Shift <Key>e:           Listop(End)\n\
 ~Ctrl  <Key>greater:           Listop(NextPage)\n\
 ~Ctrl  <Key>less:              Listop(PrevPage)\n\
  Ctrl  <Key>greater:           Listop(Bottom)\n\
  Ctrl  <Key>less:              Listop(Top)\n\
  Ctrl  <Key>s:  		search_host()\n\
  Ctrl  <Key>g: 		search_host(clear)\n\
 ~Shift ~Meta ~Alt <Key>space:  Listop(Select)\n\
 <Btn1Down>(1):                 Set() Notify()\n\
 <Btn1Down>(2):                 Login()\n\
 <Key>Help:                 	help() \n

*Shellsearchhostdialog*value.translations:   #override \
   <Key>Help:                   help() \n\
   <Key>F1:                     help() \n\
   <Key>Return:                 WcPopdownACT(*Shellsearchhostdialog) \
                                set_search_host(reg) \n\
   Ctrl<Key>r:                  WcPopdownACT(*Shellsearchhostdialog) \
                                set_search_host(reg) \n\
   Ctrl<Key>c:                  WcPopdownACT(*Shellsearchhostdialog) \n\
   Ctrl<Key>:                   no-op(RingBell)


*hmenu.wcCreate:		simpleMenuWidgetClass
*hmenu.wcChildren:		hmenuline
*hmenu.label:			Hosts

*hmenu_more.wcCreate:		simpleMenuWidgetClass
*hmenu_more.wcChildren:		hmenuline1
*hmenu_more.label:		Hosts

*hmenuline.wcCreate:		SmeLine

*hmenuline1.wcCreate:		SmeLine
*hmenuline1.wcCallback:        	CreateHostList()

*hmenu1.wcCreate:		SmeBSB
*hmenu1.wcCallback:             SetHostName()
*hmenu1.label:			
*hmenu1.callback:		GetHostName()

*hostlabel.wcCreate:		Label
*hostlabel.width:		120
*hostlabel.justify:		right
*hostlabel.label:		Remote host:
*hostlabel.borderWidth:		0
*hostlabel.fromVert:		*hostsw
*hostlabel.right:		chainleft
*hostlabel.left:		chainleft
*hostlabel.bottom:		chainbottom
*hostlabel.top:			chainbottom

*hosttext.wcCreate:		AsciiText
*hosttext.wcCallback:		init_connect_info(host) \
				SetHostList
*hosttext.width:		300
*hosttext*editType: 		edit
*hosttext.borderWidth:		1
*hosttext.input:		TRUE
*hosttext.border:		black
*hosttext.fromVert:		*hostsw
*hosttext.fromHoriz:		*hostlabel
*hosttext.right:		chainright
*hosttext.left:			chainleft
*hosttext.bottom:		chainbottom
*hosttext.top:			chainbottom
*hosttext.translations: 	#override \
				<Key>Help: help() \n\
				<Key>F1:   help() \n\
				<Key>Return:    Login() \n\
				Ctrl<Key>J:     insert-char() \n\
				Ctrl<Key>M:     insert-char() \n\
				Ctrl<Key>O:     insert-char() \n\
				Ctrl<Key>P:     warp_pointer(up) \n\
				Ctrl<Key>N:     warp_pointer(down) \n\
				Ctrl<Key>S:	no-op(RingBell) \n\
				Ctrl<Key>V:     insert-char() \n\

*loginlabel.wcCreate:		Label
*loginlabel.width:		120
*loginlabel.justify:		right
*loginlabel.label:		Login:
*loginlabel.borderWidth:	0
*loginlabel.fromVert:		*hostlabel
*loginlabel.right:		chainleft
*loginlabel.left:		chainleft
*loginlabel.bottom:		chainbottom
*loginlabel.top:		chainbottom

*logintext.wcCreate:		AsciiText
*logintext.wcCallback:		init_connect_info(login)
*logintext.width:		300
*logintext*editType: 		edit
*logintext.input:		TRUE
*logintext.border:		black
*logintext.fromVert:		*hostlabel
*logintext.fromHoriz:		*loginlabel
*logintext.right:		chainright
*logintext.left:		chainleft
*logintext.bottom:		chainbottom
*logintext.top:			chainbottom
*logintext.translations: 	#override \
				<Key>Help: help() \n\
				<Key>F1:   help() \n\
				<Key>Return:    Login() \n\
				Ctrl<Key>J:     no-op(RingBell) \n\
				Ctrl<Key>M:     no-op(RingBell) \n\
				Ctrl<Key>O:     no-op(RingBell) \n\
				Ctrl<Key>V:     no-op(RingBell) \n\
				Ctrl<Key>S:	no-op(RingBell) \n\
				Ctrl<Key>P:     warp_pointer(up) \n\
				Ctrl<Key>N:     warp_pointer(down)

*passwordlabel.wcCreate:	Label
*passwordlabel.width:		120
*passwordlabel.justify:		right
*passwordlabel.label:		Password:
*passwordlabel.borderWidth:	0
*passwordlabel.fromVert:	*loginlabel
*passwordlabel.right:		chainleft
*passwordlabel.left:		chainleft
*passwordlabel.bottom:		chainbottom
*passwordlabel.top:		chainbottom

*passwordtext.wcCreate:		AsciiText
*passwordtext.wcCallback:	init_connect_info(password)
*passwordtext.width:		300
*passwordtext*editType: 	edit
*passwordtext.borderWidth:	1
*passwordtext.input:		TRUE
*passwordtext.border:		black
*passwordtext.fromVert:		*loginlabel
*passwordtext.fromHoriz:	*passwordlabel
*passwordtext.right:		chainright
*passwordtext.left:		chainleft
*passwordtext.bottom:		chainbottom
*passwordtext.top:		chainbottom
*passwordtext.translations: 	#override \
				<Key>Help:  help() \n\
				<Key>F1:    help() \n\
				<Key>Return:    Login() \n\
				Ctrl<Key>F:     no-op(RingBell) \n\
				Ctrl<Key>J:     no-op(RingBell) \n\
				Ctrl<Key>M:     no-op(RingBell) \n\
				Ctrl<Key>O:     no-op(RingBell) \n\
				Ctrl<Key>V:     no-op(RingBell) \n\
				Ctrl<Key>S:	no-op(RingBell) \n\
				Ctrl<Key>P:     warp_pointer(up) \n\
				Ctrl<Key>N:     warp_pointer(down) \n\
			        <Key>Delete:    delete_char() \n\
			        <Key>BackSpace: delete_char() \n\
		                <Key>:          my_insert_char()

*remotedirlabel.wcCreate:	Label
*remotedirlabel.width:		120
*remotedirlabel.justify:	right
*remotedirlabel.label:		Remote Directory:
*remotedirlabel.borderWidth:	0
*remotedirlabel.fromVert:	*passwordlabel
*remotedirlabel.right:		chainleft
*remotedirlabel.left:		chainleft
*remotedirlabel.bottom:		chainbottom
*remotedirlabel.top:		chainbottom

*remotedirtext.wcCreate:	AsciiText
*remotedirtext.wcCallback:	init_connect_info(remotedir)
*remotedirtext.width:		300
*remotedirtext*editType: 	edit
*remotedirtext.borderWidth:	1
*remotedirtext.input:		TRUE
*remotedirtext.border:		black
*remotedirtext.fromVert:	*passwordlabel
*remotedirtext.fromHoriz:	*remotedirlabel
*remotedirtext.right:		chainright
*remotedirtext.left:		chainleft
*remotedirtext.bottom:		chainbottom
*remotedirtext.top:		chainbottom
*remotedirtext.translations: 	#override \
				<Key>Help: help() \n\
				<Key>F1:   help() \n\
				<Key>Return:    Login() \n\
				Ctrl<Key>F:     no-op(RingBell) \n\
				Ctrl<Key>J:     no-op(RingBell) \n\
				Ctrl<Key>M:     no-op(RingBell) \n\
				Ctrl<Key>O:     no-op(RingBell) \n\
				Ctrl<Key>S:	no-op(RingBell) \n\
				Ctrl<Key>V:     no-op(RingBell) \n\
				Ctrl<Key>Z:     no-op(RingBell) \n\
				Ctrl<Key>P:     warp_pointer(up) \n\
				Ctrl<Key>N:     warp_pointer(down)

*localdirlabel.wcCreate:	Label
*localdirlabel.width:		120
*localdirlabel.justify:		right
*localdirlabel.label:		Local Directory:
*localdirlabel.borderWidth:	0
*localdirlabel.fromVert:	*remotedirlabel
*localdirlabel.right:		chainleft
*localdirlabel.left:		chainleft
*localdirlabel.bottom:		chainbottom
*localdirlabel.top:		chainbottom

*localdirtext.wcCreate:		AsciiText
*localdirtext.wcCallback:	init_connect_info(localdir)
*localdirtext.width:		300
*localdirtext*editType: 	edit
*localdirtext.borderWidth:	1
*localdirtext.input:		TRUE
*localdirtext.border:		black
*localdirtext.fromVert:		*remotedirlabel
*localdirtext.fromHoriz:	*localdirlabel
*localdirtext.right:		chainright
*localdirtext.left:		chainleft
*localdirtext.bottom:		chainbottom
*localdirtext.top:		chainbottom
*localdirtext.translations: 	#override \
				<Key>Help: help() \n\
				<Key>F1:   help() \n\
				<Key>Return:    Login() \n\
				Ctrl<Key>F:     no-op(RingBell) \n\
				Ctrl<Key>J:     no-op(RingBell) \n\
				Ctrl<Key>M:     no-op(RingBell) \n\
				Ctrl<Key>O:     no-op(RingBell) \n\
				Ctrl<Key>S:	no-op(RingBell) \n\
				Ctrl<Key>V:     no-op(RingBell) \n\
				Ctrl<Key>P:     warp_pointer(up) \n\
				Ctrl<Key>N:     warp_pointer(down)

*gatewaylabel.wcCreate:		Label
*gatewaylabel.width:		120
*gatewaylabel.justify:		right
*gatewaylabel.label:		Gateway:
*gatewaylabel.borderWidth:	0
*gatewaylabel.fromVert:		*localdirlabel
*gatewaylabel.right:		chainleft
*gatewaylabel.left:		chainleft
*gatewaylabel.bottom:		chainbottom
*gatewaylabel.top:		chainbottom

*gatewaytext.wcCreate:		AsciiText
*gatewaytext.wcCallback:	init_connect_info(gateway)
*gatewaytext.width:		300
*gatewaytext*editType: 		edit
*gatewaytext.borderWidth:	1
*gatewaytext.input:		TRUE
*gatewaytext.border:		black
*gatewaytext.fromVert:		*localdirlabel
*gatewaytext.fromHoriz:		*gatewaylabel
*gatewaytext.right:		chainright
*gatewaytext.left:		chainleft
*gatewaytext.bottom:		chainbottom
*gatewaytext.top:		chainbottom
*gatewaytext.translations: 	#override \
				<Key>Help: help() \n\
				<Key>F1:   help() \n\
				<Key>Return:    Login() \n\
				Ctrl<Key>F:     no-op(RingBell) \n\
				Ctrl<Key>J:     no-op(RingBell) \n\
				Ctrl<Key>M:     no-op(RingBell) \n\
				Ctrl<Key>S:	no-op(RingBell) \n\
				Ctrl<Key>O:     no-op(RingBell) \n\
				Ctrl<Key>V:     no-op(RingBell) \n\
				Ctrl<Key>P:     warp_pointer(up) \n\
				Ctrl<Key>N:     warp_pointer(down)
!
! Status shell
!
*Shellstatus.wcCreate:		TopLevelShell
*Shellstatus.wcCallback:	NoWindowGroup()
*Shellstatus.wcChildren:	status_layout
*Shellstatus.title:		Status Message Log

*status_layout.wcCreate:	formWidgetClass
*status_layout.wcChildren:	status_quit, status_clear,\
			        status_text

*status_quit.wcCreate: 		commandWidgetClass
*status_quit.label:		Hide
*status_quit.shapeStyle:	Rectangle
*status_quit.left: 		chainleft
*status_quit.right: 		chainleft
*status_quit.bottom: 		chaintop
*status_quit.top: 		chaintop
*status_quit.callback:          WcPopDownCB(~)

*status_clear.wcCreate:         commandWidgetClass
*status_clear.label:		Clear Text
*status_clear.shapeStyle:	Rectangle
*status_clear.Callback: 	Clear_Text(*status_text)
*status_clear.right: 		chainleft
*status_clear.left: 		chainleft
*status_clear.bottom: 		chaintop
*status_clear.top: 		chaintop
*status_clear.fromHoriz:	*status_quit


!
! Status window
!
*status_text.wcConstructor:     CreateStatusWindow
*status_text.width:		600
*status_text.height:		200
*status_text*scrollVertical:	whenNeeded
*status_text*scrollHorizontal: 	whenNeeded
*status_text.borderWidth:	1
*status_text.fromVert: 		*status_quit
*status_text.left: 		chainleft
*status_text.right: 		chainright
*status_text.bottom: 		chainbottom
*status_text.top: 		chaintop
!
! Command shell
!
*Shellcommand.wcCreate:     	TopLevelShell
*Shellcommand.wcCallback:	NoWindowGroup() \
			 	help_register
*Shellcommand.wcChildren:       command_layout
*Shellcommand.title:            command_layout

*command_layout.wcCreate:	formWidgetClass
*command_layout.wcChildren:  	command_quit, command_clear, \
				ftp

*command_quit.wcCreate:        	commandWidgetClass
*command_quit.label:           	Hide
*command_quit.shapeStyle:      	Rectangle
*command_quit.left:            	chainleft
*command_quit.right:           	chainleft
*command_quit.bottom:          	chaintop
*command_quit.top:             	chaintop
*command_quit.callback:      	WcPopDownCB(~)

*command_clear.wcCreate:    	commandWidgetClass
*command_clear.label:		Clear Text
*command_clear.shapeStyle:	Rectangle
*command_clear.callback: 	Clear_Text(*ftp)
*command_clear.right: 		chainleft
*command_clear.left: 		chainleft
*command_clear.bottom: 		chaintop
*command_clear.top: 		chaintop
*command_clear.fromHoriz:	*command_quit

*ftp.wcConstructor:         	CreateDialogWindow
*ftp.wcCallback: \
		noop(get put dir action connect notconnected Sensitive) \
		help_register
*ftp.width:                     600
*ftp.height:                    200
*ftp.skipAdjust:		TRUE
*ftp*scrollVertical:	 	always
*ftp*scrollHorizontal: 		whenNeeded
*ftp*AsciiText*XtNwrap:		XawtextWrapNever
*ftp.min:			200
*ftp.fromVert: 			*command_quit
*ftp.left: 			chainleft
*ftp.right: 			chainright
*ftp.bottom: 			chainbottom
*ftp.top:			chaintop
*ftp.translations:     		#override \
		Ctrl<Key>W:     DeleteWord()\n\
        	Ctrl<Key>U:     DeleteLine()\n\
        	Ctrl<Key>H:     InsertSpace() delete-previous-character()\n\
        	<Key>Delete:    InsertSpace() delete-previous-character()\n\
        	<Key>BackSpace: InsertSpace() delete-previous-character()\n\
                <Key>Help:      help() \n\
                <Key>F1:        help() \n\
        	<Key>Return:    newline() Dispatch()
!
! View shell
!
*Shellview.wcCreate:		TopLevelShell
*Shellview.wcCallback:		NoWindowGroup() \
				help_register
*Shellview.wcChildren:        	view_layout
*Shellview.title:             	View File

*view_layout.wcCreate:       	formWidgetClass
*view_layout.wcChildren:      	view_quit, view_text

*view_quit.wcCreate:          	commandWidgetClass
*view_quit.label:             	Dismiss
*view_quit.shapeStyle:        	Rectangle
*view_quit.left:              	chainleft
*view_quit.right:             	chainleft
*view_quit.bottom:            	chaintop
*view_quit.top:               	chaintop
*view_quit.callback:          	WcDestroyCB(~)
!
! view text
!
*view_text.wcCreate:     	AsciiText
*view_text.wcCallback:		set_view_file \
      			        set_form_vert(^view_quit)
*view_text.width:             	600
*view_text.height:            	200
*view_text*scrollVertical:    	whenNeeded
*view_text*scrollHorizontal:  	whenNeeded
*view_text.borderWidth:       	1
*view_text.left:              	chainleft
*view_text.right:             	chainright
*view_text.bottom:            	chainbottom
*view_text.top:               	chaintop
