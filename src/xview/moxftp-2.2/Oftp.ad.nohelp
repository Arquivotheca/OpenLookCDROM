Oftp.wcChildren:          	layout
Oftp.wcPopups:			Shellstatus, Shellhelp, Shellconnect,\
				Shellcommand
Oftp.title:                    	Oftp
Oftp.allowShellResize:		FALSE
Oftp*wcTrace:                   FALSE
Oftp*background:        	grey

*width_in_chars:                85

*font:                         -*-courier-bold-r-*-*-14-*-*-*-*-*-ISO8859-1
*listsw.*.list.font:           -*-courier-bold-r-*-*-14-*-*-*-*-*-ISO8859-1
*hostsw.*.list.font:           -*-courier-bold-r-*-*-14-*-*-*-*-*-ISO8859-1

*translations:  #override \
                <Key>Help:      help() \n\
                <Key>F1:        help()

*layout.wcClass:		Form
*layout.wcChildren:            	quitm, options, \
				   fileopts, filesopts, helpm, \
				status, \
                                dir, \
				host_name, system_name, default_mode, \
                                connect, dir_display, command, glob, search, \
				    next, reconnect, archie_command, rate,\
                                percent, \
				listsw
;
; Quit menu.
;
*quitm.wcClass:			menuButtonWidgetClass
*quitm.wcCallback:    		WcCreateChildren( this*pane, quit, abort) \
                             	help_register 
*quitm.label:              	Quit

*quitm*pane.abort.wcClass:	oblongButtonGadgetClass
*quitm*pane.abort.Label:	Abort
*quitm*pane.abort.select:	abort

*quitm*pane.quit.wcClass:	oblongButtonGadgetClass
*quitm*pane.quit.Label:		Quit
*quitm*pane.quit.select: 	Quit

;
; Options menu.
;
*options.wcClass:  		menuButtonWidgetClass            
*options.wcCallback:            noop(get put dir connect action Sensitive) \
      				help_register \
   WcCreateChildren( this*pane, op_1, op_2, line, op_3, op_4)
*options.xRefName:		quitm
*options.xAddWidth:		TRUE
*options.xOffset:		4
*options.Label:                 Options
*options.translations:  	#override \
                <Key>Help:      help() \n\
                <Key>F1:        help()

*options*pane.op_1.wcCreate:	oblongButtonGadgetClass
*options*pane.op_1.label:       Ignore Errors
*options*pane.op_1*select:      op(IgnoreErrors)

*options*pane.op_2.wcCreate:	oblongButtonGadgetClass
*options*pane.op_2.wcCallback:  op(NoAutoDir)
*options*pane.op_2.label:       No Auto Directory Listings
*options*pane.op_2*select:      op(NoAutoDir)

*options*pane.line.wcCreate:   	CreateSep

*options*pane.op_3.wcClass:  	menuButtonWidgetClass
*options*pane.op_3.wcCallback: \
   WcCreateChildren( this*pane, lmenu1, lmenu2, lmenu3, lmenu4, sep, lmenu6) \
                             	help_register 
*options*pane.op_3.label:    	Listing Options

*options*pane.op_4.wcClass:  	menuButtonWidgetClass
*options*pane.op_4.wcCallback: \
   WcCreateChildren( this*pane, smbyname, smbysize, smbyage, line, \
				smbytype, smnormal) \
                             	help_register 
*options*pane.op_4.label:    	Sort Options

*options*pane.op_3*pane.lmenu1.wcClass:	oblongButtonGadgetClass
*options*pane.op_3*pane.lmenu1.wcCallback:toggle(listing, SHORT) \
                               		 mark_menu()
*options*pane.op_3*pane.lmenu1.Label:  	Short listing
*options*pane.op_3*pane.lmenu1.select:	listing_type(SHORT) 

*options*pane.op_3*pane.lmenu2.wcClass:	oblongButtonGadgetClass
*options*pane.op_3*pane.lmenu2.wcCallback:toggle(listing, MEDIUM)
*options*pane.op_3*pane.lmenu2.label:  	Medium listing
*options*pane.op_3*pane.lmenu2.select:	listing_type(MEDIUM) 

*options*pane.op_3*pane.lmenu3.wcClass:	oblongButtonGadgetClass
*options*pane.op_3*pane.lmenu3.wcCallback:toggle(listing, LONG)
*options*pane.op_3*pane.lmenu3.label:  	Long listing
*options*pane.op_3*pane.lmenu3.select:	listing_type(LONG) 

*options*pane.op_3*pane.lmenu4.wcClass:	oblongButtonGadgetClass
*options*pane.op_3*pane.lmenu4.wcCallback:toggle(listing, TRANSLATIONS)
*options*pane.op_3*pane.lmenu4.label:	Translation listing
*options*pane.op_3*pane.lmenu4.select:	listing_type(TRANSLATIONS) 

*options*pane.op_3*pane.sep.wcCreate:	CreateSep

*options*pane.op_3*pane.lmenu6.wcClass: oblongButtonGadgetClass
*options*pane.op_3*pane.lmenu6.label:   Translations
*options*pane.op_3*pane.lmenu6.select:	List_Translations

*options*pane.op_4*pane.smbyname.wcClass: oblongButtonGadgetClass
*options*pane.op_4*pane.smbyname.wcCallback:toggle(sort_type, SORT_BY_NAME)
*options*pane.op_4*pane.smbyname.sensitive: 	FALSE
*options*pane.op_4*pane.smbyname.label:		Sort By Name
*options*pane.op_4*pane.smbyname.select:	listing_type(SORT_BY_NAME) 

*options*pane.op_4*pane.smbysize.wcClass:   	oblongButtonGadgetClass
*options*pane.op_4*pane.smbysize.wcCallback:toggle(sort_type, SORT_BY_SIZE)
*options*pane.op_4*pane.smbysize.label: 	Sort By Size
*options*pane.op_4*pane.smbysize.select:	listing_type(SORT_BY_SIZE) 

*options*pane.op_4*pane.smbyage.wcClass:   	oblongButtonGadgetClass
*options*pane.op_4*pane.smbyage.wcCallback:toggle(sort_type, SORT_BY_AGE)
*options*pane.op_4*pane.smbyage.label: 		Sort By Age
*options*pane.op_4*pane.smbyage.select:		listing_type(SORT_BY_AGE) 

*options*pane.op_4*pane.line.wcCreate:   	CreateSep

*options*pane.op_4*pane.smbytype.wcClass:    	oblongButtonGadgetClass
*options*pane.op_4*pane.smbytype.label:      	Sort By Type
*options*pane.op_4*pane.smbytype.select:	listing_type(SORT_BY_TYPE) 

*options*pane.op_4*pane.smnormal.wcClass:    	oblongButtonGadgetClass
*options*pane.op_4*pane.smnormal.label:  	Reverse
*options*pane.op_4*pane.smnormal.select:	listing_type(NORMAL) 

;
; File  Menu
;
*fileopts.wcCreate:             menuButtonWidgetClass
*fileopts.wcCallback:           noop(get put dir connect action Sensitive) \
                             	help_register \
   WcCreateChildren( this*pane, filem_UP, filem_CD, filem_GET, filem_VIEW, \
                                filem_PUT, filem_Ascii, filem_Binary, \
                                filem_Tenex, filem_Default \
				filem_ignore, filem_use, filem_DIR) 
*fileopts.label:       		File Options 
*fileopts.xRefName:		options
*fileopts.xAddWidth:		TRUE
*fileopts.xOffset:		4

*fileopts*pane.filem_UP.wcClass: 	oblongButtonGadgetClass
*fileopts*pane.filem_UP.wcCallback: 	Register_action(up)
*fileopts*pane.filem_UP.label:		Up
*fileopts*pane.filem_UP.select:		SetFileAction_menu()

*fileopts*pane.filem_CD.wcClass: 	oblongButtonGadgetClass
*fileopts*pane.filem_CD.wcCallback: 	Register_action(cd)
*fileopts*pane.filem_CD.label:		Cd
*fileopts*pane.filem_CD.select:		SetFileAction_menu()

*fileopts*pane.filem_GET.wcClass: 	oblongButtonGadgetClass
*fileopts*pane.filem_GET.wcCallback: 	Register_action(get)
*fileopts*pane.filem_GET.label:		Get
*fileopts*pane.filem_GET.select:	SetFileAction_menu()

*fileopts*pane.filem_VIEW.wcClass: 	oblongButtonGadgetClass
*fileopts*pane.filem_VIEW.wcCallback: 	Register_action(view)
*fileopts*pane.filem_VIEW.label:	View
*fileopts*pane.filem_VIEW.select:	SetFileAction_menu()

*fileopts*pane.filem_PUT.wcClass: 	oblongButtonGadgetClass
*fileopts*pane.filem_PUT.wcCallback: 	Register_action(put)
*fileopts*pane.filem_PUT.label:		Put
*fileopts*pane.filem_PUT.select:	SetFileAction_menu()

*fileopts*pane.filem_Ascii.wcClass: 	oblongButtonGadgetClass
*fileopts*pane.filem_Ascii.wcCallback: 	Register_action(ascii)
*fileopts*pane.filem_Ascii.label:	Ascii
*fileopts*pane.filem_Ascii.select:	SetFileAction_menu()

*fileopts*pane.filem_Binary.wcClass: 	oblongButtonGadgetClass
*fileopts*pane.filem_Binary.wcCallback: Register_action(binary)
*fileopts*pane.filem_Binary.label:	Binary
*fileopts*pane.filem_Binary.select:	SetFileAction_menu()

*fileopts*pane.filem_Tenex.wcClass: 	oblongButtonGadgetClass
*fileopts*pane.filem_Tenex.wcCallback: 	Register_action(tenex)
*fileopts*pane.filem_Tenex.label:	Tenex
*fileopts*pane.filem_Tenex.select:	SetFileAction_menu()

*fileopts*pane.filem_Default.wcClass: 	oblongButtonGadgetClass
*fileopts*pane.filem_Default.wcCallback:Register_action(default)
*fileopts*pane.filem_Default.label:	Default
*fileopts*pane.filem_Default.select:	SetFileAction_menu()

*fileopts*pane.filem_ignore.wcClass: 	oblongButtonGadgetClass
*fileopts*pane.filem_ignore.wcCallback: Register_action(ignore)
*fileopts*pane.filem_ignore.label:	Ignore
*fileopts*pane.filem_ignore.select:	SetFileAction_menu()

*fileopts*pane.filem_use.wcClass: 	oblongButtonGadgetClass
*fileopts*pane.filem_use.wcCallback:    Register_action(use)
*fileopts*pane.filem_use.label:	        Don't ignore
*fileopts*pane.filem_use.select:	SetFileAction_menu()

*fileopts*pane.filem_DIR.wcClass: 	oblongButtonGadgetClass
*fileopts*pane.filem_DIR.wcCallback:    Register_action(dir)
*fileopts*pane.filem_DIR.label:	        Dir
*fileopts*pane.filem_DIR.select:	SetFileAction_menu()
;
; Multi File Menu
;
*filesopts.wcCreate:  		menuButtonWidgetClass
*filesopts.wcCallback:          help_register \
	noop(get put dir connect action Sensitive ifsensitive) \
				Single_File_Actions \
   WcCreateChildren( this*pane,  \
	filesm_CLEAR, filesm_GET_ALL, filesm_PUT_ALL)
*filesopts.sensitive:           FALSE
*filesopts.label:      		Multi File Options 
*filesopts.xRefName:		fileopts
*filesopts.xAddWidth:		TRUE
*filesopts.xOffset:		4

*filesopts*pane.filesm_CLEAR.wcClass: 	oblongButtonGadgetClass
*filesopts*pane.filesm_CLEAR.wcCallback:Register_action(clear_all)
*filesopts*pane.filesm_CLEAR.label:	Clear File Selections
*filesopts*pane.filesm_CLEAR.select:	SetFileAction_menu()

*filesopts*pane.filesm_GET_ALL.wcClass:	oblongButtonGadgetClass
*filesopts*pane.filesm_GET_ALL.wcCallback:Register_action(get_all)
*filesopts*pane.filesm_GET_ALL.label:	Get Selected Files
*filesopts*pane.filesm_GET_ALL.select:	SetFileAction_menu()

*filesopts*pane.filesm_PUT_ALL.wcClass:	oblongButtonGadgetClass
*filesopts*pane.filesm_PUT_ALL.wcCallback:Register_action(put_all)
*filesopts*pane.filesm_PUT_ALL.label:	Put Selected Files
*filesopts*pane.filesm_PUT_ALL.select:	SetFileAction_menu()
;
; Help menu
;
*helpm.wcCreate:              	menuButtonWidgetClass
*helpm.wcCallback: 		help_register \
       WcCreateChildren( this*pane, help_context, help_general) 
*helpm.label:                 	Help
*helpm.xRefName:              	filesopts
*helpm.xAddWidth:            	TRUE
*helpm.xOffset:               	4
*helpm.select:                	Help()

*helpm*pane.help_context.wcClass: oblongButtonGadgetClass
*helpm*pane.help_context.Label:   Context Sensitive Help
*helpm*pane.help_context.select:  help(c)

*helpm*pane.help_general.wcClass: oblongButtonGadgetClass
*helpm*pane.help_general.Label:   General Help
*helpm*pane.help_general.select:  help()
;
; Status display
;
*status.wcCreate:               Statictext
*status.wcCallback:		help_register set_width(1) 
*status.gravity:		west
*status.yRefName:		quitm
*status.yAddHeight:		TRUE
*status.yOffset:		2
*status.xAttachRight:		TRUE
*status.xVaryOffset:		FALSE
*status.xResizable:		TRUE
*status.recomputeSize:		FALSE
*status.borderWidth:		2
*status.translations:     	#override \
                		<Key>Help:      help() \n\
                		<Key>F1:        help() \n\
                                <Btn1Down>: WcPopupACT(*Shellstatus) \
					    SetIcons(*Shellstatus) 
!
! Local direcotry
!
*dir.wcCreate:         		Statictext
*dir.wcCallback:		help_register set_width(1)
*dir.gravity:			west
*dir.xRefName:		  	layout
*dir.borderWidth:		2
*dir.xAttachRight:		TRUE
*dir.xVaryOffset:		FALSE
*dir.xResizable:		TRUE
*dir.yRefName:			status
*dir.yAddHeight:		TRUE
*dir.yOffset:			2
*dir.recomputeSize:		FALSE
;
; Host name label
;
*host_name.wcCreate:        	Statictext
*host_name.wcCallback:		help_register set_width(3, -6) 
*host_name.gravity:		west
*host_name.borderWidth:    	0	
*host_name.recomputeSize:	FALSE
*host_name.yRefName:		dir
*host_name.yAddHeight:		TRUE
*host_name.yOffset:		2
;
; System name label
;
*system_name.wcCreate:     	Statictext
*system_name.wcCallback:	help_register set_width(3, -6)
*system_name.recomputeSize:	FALSE
*system_name.borderWidth:	0	
*system_name.xAttachRight:	TRUE
*system_name.xVaryOffset:	TRUE
*system_name.xResizable:	TRUE
*system_name.yRefName:		dir
*system_name.yAddHeight:	TRUE
*system_name.yOffset:		2
*system_name.xRefName:		host_name
*system_name.xAddWidth:		TRUE
*system_name.xOffset:		2
;
; Mode Name
;
*default_mode.wcCreate:  	Statictext 
*default_mode.wcCallback:	help_register set_width(3, -6)
*default_mode.recomputeSize:	FALSE
*default_mode.xAttachRight:	TRUE
*default_mode.xVaryOffset:	TRUE
*default_mode.borderWidth:	0
*default_mode.yRefName:    	dir
*default_mode.yAddHeight:       TRUE
*default_mode.yOffset:          2
*default_mode.xRefName:         system_name
*default_mode.xAddWidth:        TRUE
*default_mode.xOffset:          2
*default_mode.gravity:		east

!
! connect button, remote/local toggle, and Command shell button
!
*connect.wcCreate:		oblongButtonWidgetClass
*connect.wcCallback:		help_register \
			        help_register(system_list) \
                                help_register(dotxftp) \
				help_register(netrc) \
				help_register(Trademarks) \
			    	help_register(list_key_input) \
				help_register(oftp_fonts) \
                                help_register(Shellcommand) \
                                help_register(Shellview) \
                                help_register(Shelltran) \
                                help_register(Shellconnect) \
				help_register(Shellstatus) \
				help_register(Shellhelp) \
				help_register(Shellglobdialog) \
				help_register(Shellsearchdialog) \
				help_register(Shellsearchhostdialog) \
				help_register(op_listing) \
				help_register(op_sort)
*connect.label:           	Login\ \ 
*connect.yRefName:		host_name
*connect.yAddHeight:		TRUE
*connect.yOffset:		4
*connect.select:		Set_noop(connect) connect_disconnect() 

*dir_display.wcCreate:		oblongButtonWidgetClass
*dir_display.wcCallback:        noop(get put dir connect action Sensitive) \
                                help_register
*dir_display.label:		Remote
*dir_display.xRefName:		connect
*dir_display.xAddWidth:		TRUE
*dir_display.xOffset:		4
*dir_display.yRefName:		host_name
*dir_display.yAddHeight:	TRUE
*dir_display.yOffset:		4
*dir_display.select:		remote_local_toggle

*command.wcCreate:		oblongButtonWidgetClass
*command.wcCallback:		help_register
*command.label:           	Command Shell
*command.xRefName:		dir_display
*command.xAddWidth:		TRUE
*command.xOffset:		4
*command.yRefName:		host_name
*command.yAddHeight:		TRUE
*command.yOffset:		4
*command.select:	 	WcPopupCB(*Shellcommand) \
				raise_window(*Shellcommand) \
			        SetIcons(*Shellcommand)


! reconnect button
!
*glob.wcCreate:        		oblongButtonWidgetClass
*glob.wcCallback:		CreateGlobDialog help_register\
	noop(get put dir connect notconnected action Sensitive ifsensitive)
*glob.label:        		Glob
*glob.xRefName:			command
*glob.xAddWidth:		TRUE
*glob.xOffset:			4
*glob.yRefName:			host_name
*glob.yAddHeight:		TRUE
*glob.yOffset:			4
*glob.select:			PositionDialog(*Shellglobdialog) \
				WcPopupCB(*Shellglobdialog) \
				raise_window(*Shellglobdialog) 

*Shellglobdialog*translations:   #override \
   <Key>Help:                   help() \n\
   <Key>F1:                     help() \n\

*Shellglobdialog*text*translations:   #override \
   <Key>Help:                   help() \n\
   <Key>F1:                     help() \n\
   <Key>Return:                 WcPopdownACT(*Shellglobdialog) \
                                set_glob_text(glob) \n\
   Ctrl<Key>r:                  WcPopdownACT(*Shellglobdialog) \
                                set_glob_text(reg) \n\
   Ctrl<Key>g:                  WcPopdownACT(*Shellglobdialog) \
                                set_glob_text(glob) \n\
   Ctrl<Key>c:                  WcPopdownACT(*Shellglobdialog)

!
! Search and highlight a file
!
*search.wcCreate:      		oblongButtonWidgetClass
*search.wcCallback:		CreateSearchDialog  help_register\
	noop(get put dir connect notconnected action Sensitive ifsensitive)
*search.label:        		Search
*search.xRefName:		glob
*search.xAddWidth:		TRUE
*search.xOffset:		4
*search.yRefName:		host_name
*search.yAddHeight:		TRUE
*search.yOffset:		4
*search.select:			PositionDialog(*Shellsearchdialog) \
				WcPopupCB(*Shellsearchdialog) \
				raise_window(*Shellsearchdialog)

*next.wcCreate:      		oblongButtonWidgetClass
*next.wcCallback: help_register \
	noop(get put dir connect notconnected action Sensitive ifsensitive)
*next.label:        		Search Next
*next.xRefName:			search
*next.xAddWidth:		TRUE
*next.xOffset:			4
*next.yRefName:			host_name
*next.yAddHeight:		TRUE
*next.yOffset:			4
*next.sensitive:		FALSE
*next.select:	 		search_next()	

!
! reconnect button
!
*reconnect.wcCreate:           	oblongButtonWidgetClass
*reconnect.wcCallback:		help_register
*reconnect.label:        	Reconnect
*reconnect.xRefName:		next
*reconnect.xAddWidth:		TRUE
*reconnect.xOffset:		4
*reconnect.yRefName:		host_name
*reconnect.yAddHeight:		TRUE
*reconnect.yOffset:		4
*reconnect.select:		Reconnect
*reconnect.sensitive:		False

;
; Archie
;
*archie_command.wcCreate:	oblongButtonWidgetClass
*archie_command.wcCallback:	archie_noop() help_register
*archie_command.label:         	Archie
*archie_command.xRefName:	reconnect
*archie_command.xAddWidth:	TRUE
*archie_command.xOffset:	4
*archie_command.yRefName:	host_name
*archie_command.yAddHeight:	TRUE
*archie_command.yOffset:	4
*archie_command.select:	 	archie()

;
; Rate display
;
*rate.wcCreate:                 LableQUICKClass
*rate.label:                    \ \ \ \ \ \ \ \ \ \  
*rate.justify:                  right
*rate.xRefName:			archie_command
*rate.xAddWidth:		TRUE
*rate.borderWidth:		0
*rate.xOffset:			2
*rate.yRefName:			host_name
*rate.yAddHeight:		TRUE
*rate.yOffset:			4
*rate.traversalOn:	 	TRUE
*rate.topMargin:		0
*rate.bottomMargin:		0
*rate.rightMargin:		0
*rate.leftMargin:		0
*rate.xAttachRight:		TRUE
*rate.xVaryOffset:		FALSE
*rate.xResizable:		TRUE
*rate.gravity:			east
*rate.translations:          	\
                		<Key>Help:      help() \n\
                		<Key>F1:        help() 
;
; Percent display
;
*percent.wcCreate:          	Stub
*percent.wcCallback:		help_register set_width(1)
*percent.height:		3
*percent.borderWidth:		0
*percent.xAttachRight:		TRUE
*percent.xVaryOffset:		FALSE
*percent.xResizable:		TRUE
*percent.yRefName:		connect
*percent.yAddHeight:		TRUE
*percent.yOffset:		2
*percent.translations:          \
                		<Key>Help:      help() \n\
                		<Key>F1:        help() \n\
				<Expose>: resize_percent()
;
; The list SW
;
*listsw.wcCreate:		MyListSW
*listsw.wcCallback:             noop(get put dir action connect notconnected) \
                                help_register \
				set_width(1) \
				CreateContinueDialog() \
				WcCreatePopups(*list, fmenu)
*listsw.height:                 400
*listsw.yRefName:		percent
*listsw.yAddHeight:		TRUE
*listsw.yOffset:		2
*listsw.xOffset:		0
*listsw.xAttachRight:		TRUE
*listsw.xVaryOffset:		FALSE
*listsw.xResizable:		TRUE
*listsw.yAttachBottom:		TRUE
*listsw.yVaryOffset:           	FALSE
*listsw.yResizable:            	TRUE
*listsw.borderWidth:            1
*listsw.labelw:                 TRUE
*listsw.list.width:             1
*listsw.list.height:            1
*listsw.list.borderWidth:       1
*listsw.list.Callback:          list_notify
*listsw.list.traversalOn:	TRUE
*listsw.list.columnSpacing:     0
*listsw.list.defaultColumns:    1
*listsw.list.rowSpacing:        0
*listsw.list.translations:    	#override \
   <Key>Help:  		help() \n\
   <Key>F1:    		help() \n\
  ~Ctrl ~Shift <Key>h:	Listop(Left)\n\
  ~Ctrl ~Shift <Key>k:  Listop(Up)\n\
  ~Ctrl ~Shift <Key>l:  Listop(Right)\n\
  ~Ctrl ~Shift <Key>j:	Listop(Down)\n\
  ~Ctrl   <Key>dollar:  Listop(End)\n\
  ~Ctrl ~Shift <Key>0:	Listop(Start)\n\
  ~Ctrl  Shift <Key>m:	Listop(Down)\n\
   Ctrl ~Shift <Key>f:  Listop(NextPage)\n\
   Ctrl ~Shift <Key>b:  Listop(PrevPage)\n\
   Ctrl ~Shift <Key>n:	Listop(Down)\n\
   Ctrl ~Shift <Key>j:	Listop(Down)\n\
   Ctrl ~Shift <Key>p:	Listop(Up)\n\
  ~Shift  ~Meta ~Alt <Key>space: Listop(Select) \n\
   Ctrl ~Shift <Key>t:	remote_local_toggle()\n\
  ~Ctrl  Shift <Key>l:	Listing_type(LONG)\n\
  ~Ctrl  Shift <Key>s: 	Listing_type(SHORT)\n\
  ~Ctrl  Shift <Key>t:	Listing_type(TRANSLATIONS)\n\
  ~Ctrl  <Key>greater:	Listop(NextPage)\n\
  ~Ctrl  <Key>less:  	Listop(PrevPage)\n\
   Ctrl  <Key>greater: 	Listop(Bottom)\n\
   Ctrl  <Key>less:     Listop(Top)\n\
  ~Ctrl ~Shift <Key>u:	SetFileAction(up)\n\
  ~Ctrl ~Shift <Key>c:	SetFileAction(cd)\n\
  ~Ctrl ~Shift <Key>g:	SetFileAction(get)\n\
  ~Ctrl ~Shift <Key>p:	SetFileAction(put)\n\
  ~Ctrl ~Shift <Key>a:	SetFileAction(ascii)\n\
  ~Ctrl ~Shift <Key>b:	SetFileAction(binary)\n\
  ~Ctrl ~Shift <Key>d:	SetFileAction(default)\n\
  ~Ctrl ~Shift <Key>t:	SetFileAction(tenex)\n\
   Ctrl        <Key>s:  search_next()\n\
   Ctrl        <Key>g:  search_clear()\n\
   Button1<Motion>:     Set(M)\n\
   ~Ctrl <Btn1Down>:    Set()\n\
   ~Ctrl <Btn1Up>:      Notify()\n\
   Ctrl <Btn1Down>:     Set(x) Open_file() \n\
   ~Ctrl <Btn3Down>:    Single_File_Actions() \
                        MyPopup(fmenu) 



*Shellsearchdialog*translations:   #override \
   <Key>Help:                   help() \n\
   <Key>F1:                     help() \n\

*Shellsearchdialog*text*translations:   #override \
   <Key>Help:                   help() \n\
   <Key>F1:                     help() \n\
   <Key>Return:                 WcPopdownACT(*Shellsearchdialog) \
                                set_search_text(glob) \n\
   Ctrl<Key>r:                  WcPopdownACT(*Shellsearchdialog) \
                                set_search_text(reg) \n\
   Ctrl<Key>g:                  WcPopdownACT(*Shellsearchdialog) \
                                set_search_text(glob) \n\
   Ctrl<Key>c:                  WcPopdownACT(*Shellsearchdialog)

;
; The list popup menu
;
*fmenu.wcClass:		menuShellWidgetClass
*fmenu.title:		Signle File Options
*fmenu.pushpin:		none
*fmenu.wcCallback: WcCreateChildren( this*pane, \
                         fmenu_UP, fmenu_Cd, fmenu_GET, fmenu_PUT, fmenu_VIEW, \
                         fmenu_Ascii, fmenu_Binary, fmenu_Tenex, \
                         fmenu_Default,\
			 fmenu_ignore,\
			 fmenu_use,\
			 fmenu_dir, \
			 sep,\
			 fmenu_clear_all,\
			 fmenu_get_all, fmenu_put_all, fmenu_delete_all)
*fmenu.unmapCallback:	 Clear_List_Entry()


*fmenu*pane.fmenu_UP.wcClass:		oblongButtonGadgetClass
*fmenu*pane.fmenu_UP.wcCallback:	Register_action(up)
*fmenu*pane.fmenu_UP.label:    		Up
*fmenu*pane.fmenu_UP.select:		SetFileAction()

*fmenu*pane.fmenu_Cd.wcClass:  		oblongButtonGadgetClass
*fmenu*pane.fmenu_Cd.wcCallback:	Register_action(cd)
*fmenu*pane.fmenu_Cd.label:    		Cd
*fmenu*pane.fmenu_Cd.select:		SetFileAction()

*fmenu*pane.fmenu_GET.wcClass: 		oblongButtonGadgetClass
*fmenu*pane.fmenu_GET.wcCallback:	Register_action(get)
*fmenu*pane.fmenu_GET.label:   		Get
*fmenu*pane.fmenu_GET.select:		SetFileAction()

*fmenu*pane.fmenu_PUT.wcClass:		oblongButtonGadgetClass
*fmenu*pane.fmenu_PUT.wcCallback:	Register_action(put)
*fmenu*pane.fmenu_PUT.label:   		Put
*fmenu*pane.fmenu_PUT.select:		SetFileAction()

*fmenu*pane.fmenu_VIEW.wcClass:		oblongButtonGadgetClass
*fmenu*pane.fmenu_VIEW.wcCallback:	Register_action(view)
*fmenu*pane.fmenu_VIEW.label:  		View
*fmenu*pane.fmenu_VIEW.select:		SetFileAction()

*fmenu*pane.fmenu_Ascii.wcClass: 	oblongButtonGadgetClass
*fmenu*pane.fmenu_Ascii.wcCallback:	Register_action(ascii)
*fmenu*pane.fmenu_Ascii.label:		Ascii
*fmenu*pane.fmenu_Ascii.select:		SetFileAction()

*fmenu*pane.fmenu_Binary.wcClass: 	oblongButtonGadgetClass
*fmenu*pane.fmenu_Binary.wcCallback:	Register_action(binary)
*fmenu*pane.fmenu_Binary.label:		Binary
*fmenu*pane.fmenu_Binary.select: 	SetFileAction()

*fmenu*pane.fmenu_Tenex.wcClass: 	oblongButtonGadgetClass
*fmenu*pane.fmenu_Tenex.wcCallback:	Register_action(tenex)
*fmenu*pane.fmenu_Tenex.label:		Tenex
*fmenu*pane.fmenu_Tenex.select:		SetFileAction()

*fmenu*pane.fmenu_Default.wcClass: 	oblongButtonGadgetClass
*fmenu*pane.fmenu_Default.wcCallback:	Register_action(default)
*fmenu*pane.fmenu_Default.label: 	Default Mode
*fmenu*pane.fmenu_Default.select: 	SetFileAction()


*fmenu*pane.fmenu_ignore.wcClass: 	oblongButtonGadgetClass
*fmenu*pane.fmenu_ignore.wcCallback: 	Register_action(ignore)
*fmenu*pane.fmenu_ignore.label:		Ignore
*fmenu*pane.fmenu_ignore.select:    	SetFileAction()

*fmenu*pane.fmenu_use.wcClass: 		oblongButtonGadgetClass
*fmenu*pane.fmenu_use.wcCallback:    	Register_action(use)
*fmenu*pane.fmenu_use.label:	        Don't ignore
*fmenu*pane.fmenu_use.select:		SetFileAction()

*fmenu*pane.fmenu_dir.wcClass: 		oblongButtonGadgetClass
*fmenu*pane.fmenu_dir.wcCallback:    	Register_action(dir)
*fmenu*pane.fmenu_dir.label:	        Dir
*fmenu*pane.fmenu_dir.select:		SetFileAction()

*fmenu*pane.sep.wcCreate: 		CreateSep

*fmenu*pane.fmenu_clear_all.wcClass: 	oblongButtonGadgetClass
*fmenu*pane.fmenu_clear_all.wcCallback:	Register_action(clear_all)
*fmenu*pane.fmenu_clear_all.label: 	Clear File Selections
*fmenu*pane.fmenu_clear_all.select: 	SetFileAction()

*fmenu*pane.fmenu_get_all.wcClass:  	oblongButtonGadgetClass
*fmenu*pane.fmenu_get_all.wcCallback:   Register_action(get_all)
*fmenu*pane.fmenu_get_all.label: 	Get Selected Files
*fmenu*pane.fmenu_get_all.select: 	SetFileAction()

*fmenu*pane.fmenu_put_all.wcClass: 	oblongButtonGadgetClass
*fmenu*pane.fmenu_put_all.wcCallback:   Register_action(put_all)
*fmenu*pane.fmenu_put_all.sensitive:   	FALSE
*fmenu*pane.fmenu_put_all.label: 	Put Selected Files
*fmenu*pane.fmenu_put_all.select: 	SetFileAction()

*fmenu*pane.fmenu_delete_all.wcClass:	oblongButtonGadgetClass
*fmenu*pane.fmenu_delete_all.label:  	Delete Selected Files
*fmenu*pane.fmenu_delete_all.sensitive: FALSE
!*fmenu*pane.fmenu_delete_all.select:	delete
!
! Connect Popup shell
!
*Shellconnect.wcCreate:         TopLevelShell
*Shellconnect.wcChildren:       connectlayout
*Shellconnect.title:            Connect...  

*connectlayout.wcCreate:        Form
*connectlayout.wcChildren:      anonymous, \
				DoBoxConnect, DoHide, DoArchie, \
				DoRetry, DoGateway,\
				hostsw, \
				hostlabel, hosttext,\
				logonlabel, logontext,\
				passwordlabel, passwordtext,\
				remotedirlabel, remotedirtext,\
				localdirlabel, localdirtext,\
				gatewaylabel, gatewaytext


*anonymous.wcClass:		menuButtonWidgetClass
*anonymous.wcCallback: \
   WcCreateChildren( this*pane, anonGuest, anonMail, anonUser)
*anonymous.xAddWidth:        	TRUE
*anonymous.xOffset:          	2

*anonymous*pane.anonGuest.wcClass:	oblongButtonGadgetClass
*anonymous*pane.anonGuest.label:	guest
*anonymous*pane.anonGuest.select:	Anonymous(guest)

*anonymous*pane.anonMail.wcClass:	oblongButtonGadgetClass
*anonymous*pane.anonMail.label:		Mail Address
*anonymous*pane.anonMail.select:	Anonymous(MAIL)

*anonymous*pane.anonUser.wcClass:	oblongButtonGadgetClass
*anonymous*pane.anonUser.label:		Name
*anonymous*pane.anonUser.select:	Anonymous(NAME)

*DoBoxConnect.wcCreate:		oblongButtonWidgetClass
*DoBoxConnect.label:     	Connect
*DoBoxConnect.select: 		Login()
*DoBoxConnect.yRefName:		anonymous
*DoBoxConnect.yAddHeight:	TRUE
*DoBoxConnect.yOffset:		2

*DoHide.wcCreate:		oblongButtonWidgetClass
*DoHide.label:    		Hide
*DoHide.yRefName:		anonymous
*DoHide.yAddHeight:		TRUE
*DoHide.yOffset:		2
*DoHide.xRefName:    		DoBoxConnect
*DoHide.xAddWidth:   		TRUE
*DoHide.xOffset:     		2
*DoHide.select: 		Clear_noop(connect) \
                                Set_noop(notconnected) \
                                WcSetSensitiveCB("*connect") \
                                WcPopDownCB(~)

*DoArchie.wcCreate:		oblongButtonWidgetClass
*DoArchie.wcCallback:		archie_noop()
*DoArchie.label:    		Archie
*DoArchie.yRefName:		anonymous
*DoArchie.yAddHeight:		TRUE
*DoArchie.yOffset:		2
*DoArchie.xRefName:    		DoHide
*DoArchie.xAddWidth:   		TRUE
*DoArchie.xOffset:     		2
*DoArchie.select:		archie()

*DoRetry.wcCreate:		Checkbox
*DoRetry.traversalOn:		FALSE
*DoRetry.label:     		Retry
*DoRetry.select:      		Set_retry(1)
*DoRetry.unselect:     		Set_retry(0)
*DoRetry.yRefName:		DoBoxConnect
*DoRetry.yAddHeight:		TRUE
*DoRetry.xAttachRight:		TRUE
*DoRetry.xOffset:     		2
*DoRetry.xAddWidth:   		TRUE
*DoRetry.yOffset:		2
;*DoRetry.xRefName:    		DoArchie
;*DoRetry.xOffset:     		2

*DoGateway.wcCreate:		Checkbox
*DoGateway.traversalOn:		FALSE
*DoGateway.label:     		Use ftp gateway
*DoGateway.select:     		Set_gateway(1)
*DoGateway.unselect:   		Set_gateway(0)
*DoGateway.yRefName:		DoBoxConnect
*DoGateway.yAddHeight:		TRUE
*DoGateway.yOffset:		2
*DoGateway.xRefName:    	DoRetry
*DoGateway.xAddWidth:   	TRUE
*DoGateway.xOffset:     	2

;
; The list SW
;
*hostsw.wcCreate:               MyListSW
*hostsw.wcCallback:             help_register \
                                CreateHostSearchDialog()
*hostsw.height:                 100
*hostsw.width:			424
*hostsw.min:			100
*hostsw.labelw:			FALSE
*hostsw.yRefName:		DoRetry
*hostsw.yAddHeight:		TRUE
*hostsw.yOffset:		2
*hostsw.xOffset:		0
*hostsw.xAttachRight:		TRUE
*hostsw.xVaryOffset:		FALSE
*hostsw.xResizable:		TRUE
*hostsw.borderWidth:            1
*hostsw.list.Callback:          SelectHost
*hostsw.list.width:		10
*hostsw.list.height:		10
*hostsw.list.columnSpacing:     0
*hostsw.list.borderWidth: 	1
*hostsw.list.defaultColumns:    1
*hostsw.list.forceColumns:      FALSE
*hostsw.list.mulitselect:       FALSE
*hostsw.list.rowSpacing:        0
*hostsw.list.translations:      #override \
  Ctrl ~Shift <Key>n:           Listop(Down)\n\
 ~Ctrl ~Shift <Key>j:           Listop(Down)\n\
  Ctrl ~Shift <Key>p:           Listop(Up)\n\
 ~Ctrl ~Shift <Key>k:           Listop(Up)\n\
  Ctrl ~Shift <Key>f:           Listop(Right)\n\
 ~Ctrl ~Shift <Key>l:           Listop(Right)\n\
  Ctrl ~Shift <Key>b:           Listop(Left)\n\
 ~Ctrl ~Shift <Key>h:           Listop(Left)\n\
  Ctrl ~Shift <Key>a:           Listop(Start)\n\
  Ctrl ~Shift <Key>e:           Listop(End)\n\
 ~Ctrl  <Key>greater:           Listop(NextPage)\n\
 ~Ctrl  <Key>less:              Listop(PrevPage)\n\
  Ctrl  <Key>greater:           Listop(Bottom)\n\
  Ctrl  <Key>less:              Listop(Top)\n\
 ~Shift ~Meta ~Alt <Key>space:  Listop(Select)\n\
  Ctrl  <Key>s:                 search_host()\n\
  Ctrl  <Key>g:                 search_host(clear)\n\
 <Btn1Down>(1):                 Set() Notify()\n\
 <Btn1Down>(2):                 Login()\n\
 <Btn1Up>:                      Noop()\n\
 <Key>Help:                 	help()

*Shellsearchhostdialog*text*translations:   #override \
   <Key>Help:                   help() \n\
   <Key>F1:                     help() \n\
   <Key>Return:                 WcPopdownACT(*Shellsearchhostdialog) \
                                set_search_host(reg) \n\
   Ctrl<Key>r:                  WcPopdownACT(*Shellsearchhostdialog) \
                                set_search_host(reg) \n\
   Ctrl<Key>c:                  WcPopdownACT(*Shellsearchhostdialog) \n\

*hostlabel.wcCreate:     	Statictext
*hostlabel.wcCallback:		SetHostList
*hostlabel.String:     		Host:
*hostlabel.yRefName:		hostsw
*hostlabel.yAddHeight:		TRUE
*hostlabel.yOffset:		2

*hosttext.wcCreate:		textFieldWidgetClass
*hosttext.width:           	500
*hosttext.xAttachRight:         TRUE
*hosttext.xVaryOffset:          FALSE
*hosttext.xResizable:           TRUE
*hosttext.wcCallback:       	init_connect_info(host)
*hosttext.yRefName:		hostsw
*hosttext.yAddHeight:		TRUE
*hosttext.yOffset:		2
*hosttext.xRefName:        	hostlabel
*hosttext.xAddWidth:		TRUE
*hosttext.xOffset:		2
*hosttext.verification:		Login



*logonlabel.wcCreate:     	Statictext
*logonlabel.string:    		Login:
*logonlabel.yRefName:		hostlabel
*logonlabel.yAddHeight:		TRUE
*logonlabel.yOffset:		2

*logontext.wcCreate:		textFieldWidgetClass
*logontext.wcCallback:       	init_connect_info(login)
*logontext.yRefName:		hostlabel
*logontext.yAddHeight:		TRUE
*logontext.yOffset:		2
*logontext.xRefName:        	logonlabel
*logontext.xAddWidth:		TRUE
*logontext.xOffset:		2
*logontext.xAttachRight:        TRUE
*logontext.xVaryOffset:         FALSE
*logontext.xResizable:          TRUE
*logontext.verification:	Login


*passwordlabel.wcCreate:     	Statictext
*passwordlabel.string:     	Password:
*passwordlabel.yRefName:	logonlabel
*passwordlabel.yAddHeight:	TRUE
*passwordlabel.yOffset:		2

*passwordtext.wcCreate:		textFieldWidgetClass
*passwordtext.wcCallback:       init_connect_info(password) \
				take_over()
*passwordtext.borderWidth:	0
*passwordtext.yRefName:		logonlabel
*passwordtext.yAddHeight:	TRUE
*passwordtext.yOffset:		2
*passwordtext.xRefName:        	passwordlabel
*passwordtext.xAddWidth:	TRUE
*passwordtext.xOffset:		2
*passwordtext.xAttachRight:	TRUE
*passwordtext.xVaryOffset:   	FALSE
*passwordtext.xResizable:      	TRUE
*passwordtext.verification:	Login

*remotedirlabel.wcCreate:     	Statictext
*remotedirlabel.string:     	Remote Directory:
*remotedirlabel.yRefName:	passwordlabel
*remotedirlabel.yAddHeight:	TRUE
*remotedirlabel.yOffset:	2

*remotedirtext.wcCreate:	textFieldWidgetClass
*remotedirtext.wcCallback:      init_connect_info(remotedir)
*remotedirtext.yRefName:	passwordlabel
*remotedirtext.yAddHeight:	TRUE
*remotedirtext.yOffset:		2
*remotedirtext.xRefName:       	remotedirlabel
*remotedirtext.xAddWidth:	TRUE
*remotedirtext.xAttachRight:	TRUE
*remotedirtext.xVaryOffset:   	FALSE
*remotedirtext.xResizable:     	TRUE
*remotedirtext.xOffset:		2

*localdirlabel.wcCreate:  	Statictext
*localdirlabel.string:     	Local Directory:
*localdirlabel.yRefName:	remotedirlabel
*localdirlabel.yAddHeight:	TRUE
*localdirlabel.yOffset:		2

*localdirtext.wcCreate:		textFieldWidgetClass
*localdirtext.wcCallback:       init_connect_info(localdir)
*localdirtext.yRefName:		remotedirlabel
*localdirtext.yAddHeight:	TRUE
*localdirtext.yOffset:		2
*localdirtext.xRefName:        	localdirlabel
*localdirtext.xAddWidth:	TRUE
*localdirtext.xOffset:		2
*localdirtext.xAttachRight:	TRUE
*localdirtext.xVaryOffset:   	FALSE
*localdirtext.xResizable:     	TRUE

*gatewaylabel.wcCreate:  	Statictext
*gatewaylabel.string:     	Gateway:
*gatewaylabel.yRefName:		localdirlabel
*gatewaylabel.yAddHeight:	TRUE
*gatewaylabel.yOffset:		2

*gatewaytext.wcCreate:		textFieldWidgetClass
*gatewaytext.wcCallback:       	init_connect_info(gateway)
*gatewaytext.yRefName:		localdirlabel
*gatewaytext.yAddHeight:	TRUE
*gatewaytext.yOffset:		2
*gatewaytext.xRefName:        	gatewaylabel
*gatewaytext.xAddWidth:		TRUE
*gatewaytext.xOffset:		2
*gatewaytext.xAttachRight:	TRUE
*gatewaytext.xVaryOffset:   	FALSE
*gatewaytext.xResizable:     	TRUE

!
! Archie shell
!
*Shellarchie.wcCreate:          XtCreateTopLevelShell
*Shellarchie.wcChildren:        archie_layout
*Shellarchie.title:             Archie Interface

*archie_layout.wcCreate:	Form
*archie_layout.wcChildren:	ArchieHits, ArchieHost, ArchieNice,\
				    ArchieSearch, ArchieSort,\
				archie_hide, archie_search, archie_abort,\
				    archie_label, archietext,\
				archie_lw

*ArchieHits.wcCreate:		menuButtonWidgetClass
*ArchieHits.wcCallback:	\
	WcCreateChildren( this*pane, archie_hit_95, archie_hit_200, \
				     archie_hit_400 archie_hit_800)
*ArchieHits.label:		Hits
*ArchieHits.xoffset:		4


*ArchieHits*pane.archie_hit_95.wcClass:	oblongButtonGadgetClass
*ArchieHits*pane.archie_hit_95.wcCallback: Register_archie(95)
*ArchieHits*pane.archie_hit_95.label:	95
*ArchieHits*pane.archie_hit_95.select:	do_archie

*ArchieHits*pane.archie_hit_200.wcClass:	oblongButtonGadgetClass
*ArchieHits*pane.archie_hit_200.wcCallback: Register_archie(200)
*ArchieHits*pane.archie_hit_200.label:	200
*ArchieHits*pane.archie_hit_200.select:	do_archie

*ArchieHits*pane.archie_hit_400.wcClass:	oblongButtonGadgetClass
*ArchieHits*pane.archie_hit_400.wcCallback: Register_archie(400)
*ArchieHits*pane.archie_hit_400.label:	400
*ArchieHits*pane.archie_hit_400.select:	do_archie

*ArchieHits*pane.archie_hit_800.wcClass: oblongButtonGadgetClass
*ArchieHits*pane.archie_hit_800.wcCallback: Register_archie(800)
*ArchieHits*pane.archie_hit_800.label:	800
*ArchieHits*pane.archie_hit_800.select:	do_archie

*ArchieHost.wcCreate:		menuButtonWidgetClass
*ArchieHost.wcCallback:         archie_hosts()
*ArchieHost.label:		Host
*ArchieHost.xoffset:		4
*ArchieHost.xRefName:           ArchieHits
*ArchieHost.xAddWidth:		TRUE


*ArchieHost*pane.archiehost.wcClass: oblongButtonGadgetClass
*ArchieHost*pane.archiehost.wcCallback: Register_archie(host)
*ArchieHost*pane.archiehost.label:	
*ArchieHost*pane.archiehost.select:do_archie

*ArchieNice.wcCreate:		menuButtonWidgetClass
*ArchieNice.wcCallback:	\
   WcCreateChildren( this*pane, archie_nice_default, archie_nice_nice,\
                                archie_nice_nicer,  archie_nice_very,\
                                archie_nice_exterm,  archie_nice_nicest)

*ArchieNice.label:		Nice
*ArchieNice.xoffset:		4
*ArchieNice.xRefName:            ArchieHost
*ArchieNice.xAddWidth:		TRUE

*ArchieNice*pane.archie_nice_default.wcClass:	oblongButtonGadgetClass
*ArchieNice*pane.archie_nice_default.wcCallback: Register_archie(nice_default)
*ArchieNice*pane.archie_nice_default.label:	Nice Default    (0)
*ArchieNice*pane.archie_nice_default.select:	do_archie

*ArchieNice*pane.archie_nice_nice.wcClass:	oblongButtonGadgetClass
*ArchieNice*pane.archie_nice_nice.wcCallback: Register_archie(nice_nice)
*ArchieNice*pane.archie_nice_nice.label:	Nice          (500)
*ArchieNice*pane.archie_nice_nice.select:	do_archie

*ArchieNice*pane.archie_nice_nicer.wcClass:	oblongButtonGadgetClass
*ArchieNice*pane.archie_nice_nicer.wcCallback: Register_archie(nice_nicer)
*ArchieNice*pane.archie_nice_nicer.label:	Nice         (1000)
*ArchieNice*pane.archie_nice_nicer.select:	do_archie

*ArchieNice*pane.archie_nice_very.wcClass:	oblongButtonGadgetClass
*ArchieNice*pane.archie_nice_very.default.    Register_archie(nice_very)
*ArchieNice*pane.archie_nice_very.label:	Nice         (5000)
*ArchieNice*pane.archie_nice_very.select:	do_archie

*ArchieNice*pane.archie_nice_exterm.wcClass:	oblongButtonGadgetClass
*ArchieNice*pane.archie_nice_exterm.default.  Register_archie(nice_exerm)
*ArchieNice*pane.archie_nice_exterm.label:	Nice        (10000) 
*ArchieNice*pane.archie_nice_exterm.select:	do_archie

*ArchieNice*pane.archie_nice_nicest.wcClass:	oblongButtonGadgetClass
*ArchieNice*pane.archie_nice_nicest.default.  Register_archie(nice_exerm)
*ArchieNice*pane.archie_nice_nicest.label:	Nice        (32765) 
*ArchieNice*pane.archie_nice_nicest.select:	do_archie

*ArchieSearch.wcCreate:		menuButtonWidgetClass
*ArchieSearch.wcCallback:	\
   WcCreateChildren( this*pane, archie_csss, archie_esm, archie_res,\
                                archie_ciss)

*ArchieSearch.label:		Search Types
*ArchieSearch.xoffset:		4
*ArchieSearch.xRefName:         ArchieNice
*ArchieSearch.xAddWidth:	TRUE

*ArchieSearch*pane.archie_csss.wcClass:	oblongButtonGadgetClass
*ArchieSearch*pane.archie_csss.wcCallback:  Register_archie(csss)
*ArchieSearch*pane.archie_csss.label:	Case Sensitive substring search
*ArchieSearch*pane.archie_csss.select:	do_archie

*ArchieSearch*pane.archie_esm.wcClass:	oblongButtonGadgetClass
*ArchieSearch*pane.archie_esm.wcCallback:  Register_archie(esm)
*ArchieSearch*pane.archie_esm.label:	Exact String Match
*ArchieSearch*pane.archie_esm.select:	do_archie

*ArchieSearch*pane.archie_res.wcClass:	oblongButtonGadgetClass
*ArchieSearch*pane.archie_res.wcCallback:  Register_archie(res)
*ArchieSearch*pane.archie_res.label:	Regular Expession Search
*ArchieSearch*pane.archie_res.select:	do_archie

*ArchieSearch*pane.archie_ciss.wcClass:	oblongButtonGadgetClass
*ArchieSearch*pane.archie_ciss.wcCallback:  Register_archie(ciss)
*ArchieSearch*pane.archie_ciss.label:	Case Insensitive Substring Search
*ArchieSearch*pane.archie_ciss.select:	do_archie

*ArchieSort.wcCreate:		menuButtonWidgetClass
*ArchieSort.wcCallback:	\
   WcCreateChildren( this*pane, archie_sort_age, archie_sort_name,\
                                archie_sort_size,\
                                archie_sort_sep,\
                                archie_sort_normal,\
                                archie_sort_reverse)

*ArchieSort.label:		Sort
*ArchieSort.xoffset:		4
*ArchieSort.xRefName:            ArchieSearch
*ArchieSort.xAddWidth:		TRUE

*ArchieSort*pane.archie_sort_age.wcClass: oblongButtonGadgetClass
*ArchieSort*pane.archie_sort_age.wcCallback:  Register_archie(sort_by_age)
*ArchieSort*pane.archie_sort_age.label: Age
*ArchieSort*pane.archie_sort_age.select:	do_archie

*ArchieSort*pane.archie_sort_name.wcClass: oblongButtonGadgetClass
*ArchieSort*pane.archie_sort_name.wcCallback:  Register_archie(sort_by_name)
*ArchieSort*pane.archie_sort_name.label: Name
*ArchieSort*pane.archie_sort_name.select:do_archie

*ArchieSort*pane.archie_sort_size.wcClass: oblongButtonGadgetClass
*ArchieSort*pane.archie_sort_size.wcCallback:  Register_archie(sort_by_size)
*ArchieSort*pane.archie_sort_size.label: Size
*ArchieSort*pane.archie_sort_size.select:do_archie

*ArchieSort*pane.archie_sort_sep.wcCreate:  CreateSep

*ArchieSort*pane.archie_sort_normal.wcClass: oblongButtonGadgetClass
*ArchieSort*pane.archie_sort_normal.wcCallback:  Register_archie(sort_normal)
*ArchieSort*pane.archie_sort_normal.label: Normal
*ArchieSort*pane.archie_sort_normal.select:do_archie

*ArchieSort*pane.archie_sort_reverse.wcClass: oblongButtonGadgetClass
*ArchieSort*pane.archie_sort_reverse.wcCallback:  Register_archie(sort_reverse)
*ArchieSort*pane.archie_sort_reverse.label: Reverse
*ArchieSort*pane.archie_sort_reverse.select:do_archie

*archie_hide.wcCreate:         	oblongButtonWidgetClass
*archie_hide.label:            	Hide
*archie_hide.yRefName:         	ArchieHits
*archie_hide.yAddHeight:       	TRUE
*archie_hide.yOffset:         	4
*archie_hide.select:     	WcPopDownCB(~)

*archie_search.wcCreate:       	oblongButtonWidgetClass
*archie_search.wcCallback:	Register_archie(do_search)
*archie_search.label:          	Search
*archie_search.yRefName:       	ArchieHits
*archie_search.yAddHeight:     	TRUE
*archie_search.yOffset:        	4
*archie_search.select:     	do_archie
*archie_search.xRefName:	archie_hide
*archie_search.xAddWidth:      	TRUE
*archie_search.xOffset:        	4

*archie_abort.wcCreate:       	oblongButtonWidgetClass
*archie_abort.label:          	Abort Search
*archie_abort.yRefName:       	ArchieHits
*archie_abort.yAddHeight:     	TRUE
*archie_abort.yOffset:        	4
*archie_abort.select:     	abort_archie
*archie_abort.xRefName:		archie_search
*archie_abort.xAddWidth:      	TRUE
*archie_abort.xOffset:        	4

*archie_label.wcCreate:   	Statictext
*archie_label.string:          	Archie Search Item:
*archie_label.yRefName:        	ArchieHits
*archie_label.yAddHeight:       TRUE
*archie_label.yOffset:          2
*archie_label.xRefName:		archie_abort
*archie_label.xAddWidth:      	TRUE
*archie_label.xOffset:        	4

*archietext.wcCreate:            textFieldWidgetClass
*archietext.wcCallback:          Register_archie(search_text)
*archietext.yRefName:            ArchieHits
*archietext.yAddHeight:          TRUE
*archietext.yOffset:             2
*archietext.xRefName:            archie_label
*archietext.xAddWidth:           TRUE
*archietext.xOffset:             2
*archietext.xAttachRight:        TRUE
*archietext.xVaryOffset:         FALSE
*archietext.xResizable:          TRUE

*archie_lw.wcCreate:            MyListSW
*archie_lw.height:              300
*archie_lw.width:               800
*archie_lw.yRefName:            archie_hide
*archie_lw.yAddHeight:          TRUE
*archie_lw.yOffset:		2
*archie_lw.XOffset:		0
*archie_lw.XAttachRight:      	TRUE
*archie_lw.xVaryOffset:    	FALSE
*archie_lw.xResizable:          TRUE
*archie_lw.yAttachBottom:       TRUE
*archie_lw.yVaryOffset:         FALSE
*archie_lw.yResizable:          TRUE
*archie_lw.labelw:              TRUE
*archie_lw.top:                 chaintop
*archie_lw.fromVert:            *archie_hide
*archie_lw.borderWidth:         1
*archie_lw.list.Callback:       archie_notify
*archie_lw.list.width:    	1
*archie_lw.list.height:    	1
*archie_lw.list.borderWidth:    0
*archie_lw.list.columnSpacing:  0
*archie_lw.list.defaultColumns: 1
*archie_lw.list.rowSpacing:     0
*archie_lw.translations:       #override \
                                <Key>Help: help() \n\
                                <Key>F1:   help()


!
! Help shell
!
*Shellhelp.wcConstructor:       XtCreateTopLevelShell
*Shellhelp.wcChildren:        	helplayout
*Shellhelp.title:            	Help

*helplayout.wcClass:        	Form	
*helplayout.wcChildren:       	help_quit, helpmenu, help_title, \
				help_text

*help_quit.wcCreate:		oblongButtonWidgetClass
*help_quit.label:     		Hide
*help_quit.select: 		WcPopDownCB(~)

*helpmenu.wcClass:              menuButtonWidgetClass
*helpmenu.label:		Selections
*helpmenu.xRefName: 		help_quit
*helpmenu.xAddWidth:     	TRUE
*helpmenu.xOffset:		4

*helpmenu*pane.help_sub.wcClass:  menuButtonWidgetClass

*helpmenu*pane.helpmenuline.wcCreate:  CreateSep

*help_sub*pane.helpmenu1.wcClass:    oblongButtonWidgetClass 
*help_sub*pane.helpmenu1.select:     help_by_title(), help_once 

*help_title.wcCreate:       	Statictext
*help_title.borderWidth:	0
*help_title.text.width:        	400
*help_title.gravity:            west
*help_title.yOffset:		0
*help_title.xRefName:  		helpmenu
*help_title.xAddWidth:       	TRUE
*help_title.xOffset:           	2
*help_title.xAttachRight:       TRUE
*help_title.xVaryOffset:        FALSE
*help_title.xResizable:         TRUE
*help_title.recomputeSize:      FALSE

*help_text.wcCreate:		ScrolledText
*help_text.wcCallback:          set_help
*help_text.width:        	600
*help_text.height:        	400
*help_text.sourceType:		OL_STRING_SOURCE
*help_text.editType:      	textread
*help_textSW.yRefName:        	help_quit
*help_textSW.yAddHeight:      	TRUE
*help_textSW.yOffset:         	4
*help_textSW.xAttachRight:    	TRUE
*help_textSW.xVaryOffset:     	FALSE
*help_textSW.xResizable:      	TRUE
*help_textSW.yAttachBottom:    	TRUE
*help_textSW.yVaryOffset:      	FALSE
*help_textSW.yResizable:       	TRUE
*help_textSW.recomputeHeight:   FALSE
*help_textSW.recomputeWidth:    FALSE
*help_textSW.verticalSB:        	TRUE
*help_textSW.horizontalSB:      	TRUE
!
! Translate shell
!
*Shelltran.wcConstructor:       XtCreateTopLevelShell
*Shelltran.wcChildren:          tran_layout
*Shelltran.title:               Remote File Translations Examples
*Shelltran*deleteResponse:   	unmap

*tran_layout.wcCreate:       	Form
*tran_layout.wcChildren:       	tran_quit, tran_text

*tran_quit.wcCreate:		oblongButtonWidgetClass
*tran_quit.label:     		Hide
*tran_quit.select: 		WcPopDownCB(~)



*tran_text.wcCreate:           	ScrolledText
*tran_text.wcCallback:          set_tran
*tran_text.width:             	600
*tran_text.hight:             	400
*tran_text.sourceType:		OL_STRING_SOURCE
*tran_text.editType:		textread
*tran_textSW.yRefName:         	tran_quit
*tran_textSW.yAddHeight:       	TRUE
*tran_textSW.yOffset:          	0
*tran_textSW.xAttachRight:     	TRUE
*tran_textSW.xVaryOffset:      	FALSE
*tran_textSW.xResizable:       	TRUE
*tran_textSW.yAttachBottom:    	TRUE
*tran_textSW.yVaryOffset:      	FALSE
*tran_textSW.yResizable:       	TRUE
*tran_textSW.recomputeSize:    	FALSE
!
! Shell translate
!
*Shellstatus.wcCreate:		XtCreateTopLevelShell
*Shellstatus.wcCallback:        NoWindowGroup()
*Shellstatus.wcChildren:	status_layout
*Shellstatus.title:		Status Message Log

*status_layout.wcCreate:	Form
*status_layout.wcChildren:	status_quit, status_clear status_text

*status_quit.wcClass:		oblongButtonWidgetClass	
*status_quit.label:     	Hide
*status_quit.select: 		WcPopDownCB(~)

*status_clear.wcClass:		oblongButtonWidgetClass	
*status_clear.label:     	Clear Text
*status_clear.select: 		Clear_Text(*status_text)
*status_clear.xRefName:		status_quit
*status_clear.xAddWidth:	TRUE
*status_clear.xOffset:		4


*status_text.wcCreate:		ScrolledText
*status_text.width:          	600
*status_text.hight:          	400
*status_text.editType:		textread
*status_text.sourceType:	OL_STRING_SOURCE
*status_textSW.yRefName:       	status_quit
*status_textSW.yAddHeight:     	TRUE
*status_textSW.yOffset:        	0
*status_textSW.xAttachRight:   	TRUE
*status_textSW.xVaryOffset:    	FALSE
*status_textSW.xResizable:     	TRUE
*status_textSW.yAttachBottom:  	TRUE
*status_textSW.yVaryOffset:    	FALSE
*status_textSW.yResizable:     	TRUE
*status_textSW.recomputeSize:	FALSE

!
! Command shell
!
*Shellcommand.wcCreate:		XtCreateTopLevelShell
*Shellcommand.wcCallback:       NoWindowGroup()
*Shellcommand.wcChildren:	command_layout
*Shellcommand.title:		Ftp command

*command_layout.wcCreate:	Form
*command_layout.wcChildren:	command_quit, command_clear, ftp

*command_quit.wcClass:		oblongButtonWidgetClass	
*command_quit.label:     	Hide
*command_quit.select: 		WcPopDownCB(~)

*command_clear.wcClass:		oblongButtonWidgetClass	
*command_clear.label:     	Clear Text
*command_clear.select: 		Clear_Text(*ftp)
*command_clear.xRefName:	command_quit
*command_clear.xAddWidth:	TRUE
*command_clear.xOffset:		4

*ftp.wcCreate:			ScrolledText
*ftp.wcCallback:\
	noop(get put dir action connect notconnected Sensitive)
*ftp.width:         		800
*ftp.hight:         		400
*ftp.editType:                  textedit
*ftpSW.yRefName:       		command_quit
*ftpSW.yAddHeight:     		TRUE
*ftpSW.yOffset:        		0
*ftpSW.yAttachBottom:      	TRUE
*ftpSW.yVaryOffset:       	FALSE
*ftpSW.yResizable:        	TRUE
*ftpSW.xAttachRight:   		TRUE
*ftpSW.xVaryOffset:    		FALSE
*ftpSW.xResizable:     		TRUE
*ftpSW.recomputeSize:		TRUE
*ftp*translations:              #override \
        <Key>Help:      help() \n\
        <Key>F1:        help() \n\
        <Key>Return:    Dispatch() \n\
        <Key>Delete:    delete_the_char() \n\
        <Key>BackSpace: delete_the_char() \n\
        Ctrl <Key>u:    clear_line() \n\
        <Key>:          insert_the_char()
!
! View file shell
!
*Shellview.wcCreate:		XtCreateTopLevelShell
*Shellview.wcChildren:		view_layout
*Shellview.title:		View File

*view_layout.wcCreate:		Form
*view_layout.wcChildren:	view_quit, view_text

*view_quit.wcClass:		oblongButtonWidgetClass	
*view_quit.label:     		Dismiss
*view_quit.select: 		WcDestroyCB(~)

*view_text.wcCreate:		ScrolledText
*view_text.wcCallback:         	set_view_file
*view_text.width:          	600
*view_text.hight:          	400
*view_text.sourceType:		OL_STRING_SOURCE
*view_text.editType:      	textread
*view_textSW.yRefName:        	view_quit
*view_textSW.yAddHeight:      	TRUE
*view_textSW.yOffset:          	0
*view_textSW.xAttachRight:     	TRUE
*view_textSW.xVaryOffset:      	FALSE
*view_textSW.xResizable:       	TRUE
*view_textSW.yAttachBottom:    	TRUE
*view_textSW.yVaryOffset:      	FALSE
*view_textSW.yResizable:       	TRUE
