$ID$

XVgr help file

:main_panel

The top level panel for xvgr provides access to the features of xvgr.

Use the File pulldown menu for reading and writing data, accessing the command line interpreter, and printing.

Use View pulldown menu to access functions used to modify the appearance of graphs.

Use Edit to access popups allowing transformations affecting the data.

Use Redraw to refresh all of the items on the drawing area.


#

:files_menu

File

Provides these functions:

 * Reading data from a diskfile or pipe
 * Reading a file of graph parameter settings
 * Writing data from xvgr
 * Saving a set of parameter settings
 * Printing
 * Setting print options
 * Executing commands via the command line interpreter
 * Displaying information about xvgr
 * Exiting xvgr

#

:view_menu

View

Provides these functions:

 * Activate, copy, swap, kill, focus, show, set graph type, and arrange graphs.
 * Scaling of axes (Define world)
 * Positioning a graph (Define view)
 * Autoscaling a graph
 * Setting the drawing options
 * Defining the graph title and subtitle
 * Defining tick marks and tick labels
 * Setting line styles and symbols (Symbols)
 * Positioning and defining the graph legend
 * Creating annotative strings and boxes
 * Exchanging the coordinate axes (Flipxy)
 * Setting the fixed point and properties of the locator on the main panel.

#

:edit_menu

Edit

Provides these functions:

 * Transforming data, Evaluate, Load, Regression, Running averages, Histograms, Fourier transforms, Integration, Differentiation, Correlation, Splines, Sampling
 * Operations on data sets, Activate, Copy, Move, Swap, Drop, Join, Split, Kill, Sort, Write, Reverse, Coalesce
 * Operations on regions, Define, Evaluate, Extract, Delete, Area
 * Editing data values in sets
 * Operations on points, Find, Track, Delete, Add, Move, Goto


#

:redraw
Use the Redraw button to refresh the drawing area.

#

:locator
The locator gives the current location of the pointer in user coordinates preceded by the current graph number. See View/Locator/Props for setting parameters affecting the display of the point.

#

:calc
Calc - Calculator

Use Calc for a simple interface to the command line interpreter. Calc's primary function is to evaluate a simple expression and display the result.

For example, typing '2+2' at Calc then pressing <Return> will result in a '4' displayed in the Calc item.

#

:zoom
Z - Zoom

Use zoom to enlarge a portion of the graph. With the mouse, click on one corner of the rectangle to enlarge. Move the pointer to the opposite corner and click again. Provided that auto redraw is on, the graph will be drawn to reflect the new scaling limits.

#

:out
O - Zoom out

The Out button enlarges the scale of the graph a fixed amount. The amount of enlargement is set in View/Draw options.

#

:in
I - Zoom in

The In button shrinks the scale of the graph a fixed amount. The amount of shrink is set in View/Draw options.

#

:autoscale
AS - Autoscale

Autoscale uses the current autoscale method to rescale the plot to the default settings. The autoscale method is set in View/Autoscale.

Command line equivalent: autoscale

#

:autotick
AT - Autoticks

Automatically set the tick spacing for the current graph

Command line equivalent: autoticks

#

:stackdepth
SD - Stack depth

Display the depth of the world stack for the current graph.

#

:pushworld
PU - Push

Push the current world and tick spacing onto the world stack for the current graph

Command line equivalent: push

#

:popworld
PO - Pop

Set the world and tick settings from the top of the current graph's world stack and pop the stack.

Command line equivalent: pop

#

:pushnzoom
PZ - Push & zoom

Push the current world and tick settings onto the world stack and activate the pointer for a zoom. This item is a convenient method of looking at detail then backing out to the previous world and tick settings.

Command line equivalent: NONE

#

:cycle
CY - Cycle

Cycle through the current graph's world stack starting at the stack top. Cycling is done modulo the stack depth.

Command line equivalent: cycle
Related command: stack n, where n is a position in the world stack.

#

:currentcycle
C0:0 - Current item

Displays the current level in the stack while cycling through the stack.

#

:left
L - Scroll left

Shift the user defined scaling on the X-axis to the left by an amount set in View/Draw options.

Command line equivalent: page left

#

:right
R - Scroll right

Shift the user defined scaling on the X-axis to the right by an amount set in View/Draw options.

Command line equivalent: page right

#

:up
U - Scroll up

Shift the user defined scaling on the Y-axis up by an amount set in View/Draw options.

Command line equivalent: page up

#

:down
D - Scroll down

Shift the user defined scaling on the Y-axis down by an amount set in View/Draw options.

Command line equivalent: page down

#

:read_sets
Read sets

Use the Read sets popup to read data into xvgr from either a pipe or a disk file.

#

:read_parms
Read parameters

Read graph settings from a file.

#

:write_sets
Write sets

Write one or all sets from one or more graphs to disk.


#

:write_parms
Write parameters

Save the current settings for one or more graphs.

#

:print
Print

Send the current picture to the hard copy device.

Command line equivalent: hardcopy

#

:printer_setup
Printer setup

Select the options for the hardcopy device.

#

:commands
Commands

Invoke an interface to the command line interpreter.

#

:status
Status

Display the current state of sets, graphs, and regions.

#

:monitor

#

:about
About

Display the values of certain hardwired values in xvgr, and give the location of where xvgr source code can be acquired.

#

:exit

Depart ACE/gr

#

:graph_activate
Activate a graph

Initialize a graph.

#

:graph_copy
Copy graph

Copy a graph to another graph.

#

:graph_swap
Swap graphs

Exchange the contents of a graph with another graph. Graphs are numbered from 0-9 and are drawn in that order, this can cause problems when a graph is overlaid on another. For example, if there are 2 active graphs, say 0 and 1, and graph 0 is supposed to be inside graph 1 and graph 1 has a filled background, then graph 0 will be obscured when graph 1 is drawn.

#

:graph_kill
Kill graph

Kill all active sets in a graph, and reset all plot parameters to the default values.

#

:graph_focus
Focus

Set the current graph focus and the method of focusing.

#

:graph_show
Show graph

Toggle the display of one or more graphs.

#

:graph_type
Graph type

Set the type of a graph.

#

:graph_arrange
Arrange graphs

Arrange graphs on the page in a uniform manner.

#

:objects_text
Text

Prepare for writing text on the canvas.

#

:objects_text_at_angle
Text at angle

Define the angle for text by picking a line, then pick the spot to begin typing text.

#

:objects_edit_text
Edit text

Edit an existing text string.

#

:objects_text_props
Text props

Set the font, character size, color, angle, and justification for text strings.


#

:objects_line
Line

Click at the starting point of a line, followed by a click at the end of the line.

#

:objects_line_props
Line props

Set the line style, width, color, and arrowhead properties of lines.

#

:objects_box
Box

Click at one corner of a box, followed by a click at the opposite corner of the box.

#

:objects_box_props
Box props

Set the line style, width, color, and fill properties of boxes.


#

:objects_move
Move object

Click near the object to select the object to move, click again at the new location. Use the right mouse button to cancel or leave move mode.

#

:objects_moveh
Move horizontally (not active)

#

:objects_movev
Move vertically (not active)

#

:objects_copy
Copy an object (not active)

#

:objects_delete
Delete object

Click near the object to remove, use the right mouse button to cancel or leave delete mode.

#

:objects_snap
Snap objects (not active)

#

:objects_clear_text
Clear text

Remove ALL text objects.

#

:objects_clear_lines
Clear lines

Remove ALL lines.

#

:objects_clear_boxes
Clear boxes

Remove ALL boxes.

#

:fixedpoint_set
Set fixed point

Define the fixed point for the locator by clicking at the location on the canvas to serve as the fixed point.

#

:fixedpoint_clear
Clear fixed point

Set the fixed point to (0.0, 0.0).

#

:fixedpoint_props
Locator props

Set the format, precision, of the locator display on the main panel. 

#

:graphs_pullright


#

:world
Define world

Define the scaling of the graph axes and the spacing of major and minor tick marks.

#

:view
Define view

Define the viewport (where on the drawing area the graph appears).


#

:autoscale
Autoscale

Autoscale graphs and set the autoscaling options.


#

:draw_options
Draw options

Toggle auto-redraw, linked scrolling, and overlay mode. The slider denoted 'Scroll %', sets the amount of scrolling for the buttons U, D, L, and R (up, down, left, and right, resp.) on the main panel.


#

:title
Title/subtitle

Define the graph title and subtitle and properties of each.


#

:ticks
Ticks/tick labels

Define the properties of the axes labels, tick marks, and tick labels.


#

:editaxis
Select the axis 

#

:frame
Frame

Set properties of the box drawn around the graph and the background of the graph.


#

:symbols
Symbols

Define the lines, symbols, and legend associated with each data set.


#

:legends
Legends

Set the location, fonts for labels, and other items associated with the graph legend.


#

:defaults
Defaults (not active)


#

:objects
Strings & things

Annotative text, lines, and boxes.


#

:colors
Colors (not active)


#

:flipxy
Flip XY

Exchange the co-ordinate axes and X with Y in every data set.


#

:locator
Locator

Set/clear the fixed point, and set properties of the locator display item on the main panel.


#

:evaluate
Evaluate

Interpret an expression.


#

:load
Load

Load a set sequentially, given a starting point and an increment.


#

:load_and_eval

Evaluate functions with a parameter

1. Enter the expression defining X, the 'X=' is assumed.
2. Enter the expression defining Y, the 'Y=' is assumed.
3. Select the vector to use for the parameter.
4. Load the parameter by selecting the start, end and the number of points.
5. Press Apply.

Example:

FX =       cos(2*PI*a)
FY =       sin(2*PI*a)
select     a
start      0
end        2*PI
N points   100

In this example, a is the parameter and runs from 0 to 2*PI and is evenly sampled for 100 points.


#

:regress
Regression

Linear and polynomial regression.

#

:running
Running averages

Compute running averages, medians, standard deviations, minimums, or, maximums.

#

:histograms
Histogram

Compute a histogram from a data set.

#

:fourier

Compute discrete fourier transforms

#

:integrate

Numerical integration


#

:differentiate

Numerical differentiation

#

:xcor

Cross/Autocorrelation

#

:splines

Cubic splines

#

:sample

Sample points from a set


#

:digf
Apply a digital filter to a set

#

:linc

Convolve a set with another set

#

:set_activate

Activate a set

#
:deactivate_panel

#
:deactivate_apply

#
:reactivate_panel

#
:reactivate_apply


#

:set_length

Set the length of an active set

#

:set_copy

Copy a set to another set in the current or another graph.

#

:set_move

Move a set from location to another, possibly in another graph.

#

:set_swap

Exchange one set with another.

#

:set_drop

Drop points from a set.

#

:set_join

Join 2 sets together, appending one set to another.

#

:set_split

Split sets evenly.

#

:set_kill

Kill a set, optionally saving the plot parameters associated with the set(s).

#

:set_killall

Kill all sets in the current graph.

#

:set_sort

Sort a set on X or Y, in ascending or descending order.

#

:set_write

Write one or more active sets to disk, optionally saving the plot parameters associated with the saved sets.

#

:set_reverse

Reverse the order of a set.


#

:set_coalesce

Combine all active sets to another set.

#

:region_define

Define a region.

#

:region_eval

Evaluate a function with the domain from the selected region.

#

:region_clear
Remove a defined region.


#

:region_extract

Extract points from a region.

#

:region_delete

Delete points within a region.

#

:region_area

Compute the area or perimeter of a region.

#

:points_find

Display the data set point nearest the pointer by clicking near the point.

#

:points_tracker

Track points in a set.

#

:points_delete

Delete the nearest point.

#

:points_add

Add points to a set.

#

:points_move

Move points in a set.

#

:points_goto

Warp the pointer to a specified (x, y) location on the drawing area.

#

:edit_transformations

Transformations

#

:edit_setops

Set operations

#

:edit_regionops

Region operations

#

:edit_sets

Edit points in a set via a mini spreadsheet

#

:edit_points

Operations on point within a set.

#
# help for module tickwin.c

:ticks_panel

Set the parameters pertaining to the display of the co-ordinate axes.

#

:ticks_editaxis

Select the axis the following changes will apply.

#

:ticks_axisprops

Set the axis offset and alternate map if desired.

#

:ticks_axislabel

Type in the label for this axis.

#

:ticks_axislabelprops

Set the properties of the axis label, color, font, font size.

#

:ticks_major

Set the spacing of major tick marks.

#

:ticks_minor

Set the spacing of minor tick marks.

#

:ticks_ticklabeltog

Toggle the display of tick labels.

#

:ticks_ticklabelprops

Set the parameters associated with the selected axis' tick labels.

#

:ticks_ticktog

Toggle the display of tick marks.

#

:ticks_tickprops

Set the parameters associated with the selected axis' tick marks.

#

:ticks_bartog

Toggle the display of the axis bar.

#

:ticks_barprops

Set the properties of the selected axis' bar.

#

:ticks_special

Define ticks and tick labels at specified locations.

#

:ticks_applyto

Allows the axis selected above to be overridden.

#

:ticks_apply

Accept the choices made in this panel.

#

:ticks_done

Close the ticks popup.

#

:axisprops_panel

#

:axisprops_altmap

Toggle the use of the alternate map for axes labels.

#

:axisprops_altmin

Select the value to map to the world minimum for the axis selected above.

#


:axisprops_altmax

Select the value to map to the world maximum for the axis selected above.


#


:axisprops_leftorbot

Select the offset in viewport co-ordinates of the selected axis.


#


:axisprops_rightortop

Select the offset in viewport co-ordinates of the selected axis.


#


:axisprops_cancel

Make no changes and close this popup.


#


:axisprops_accept

Accept these selections and redraw the graph.


#


:axislabel_panel


#


:axislabel_layout

Set the orientation of the axis label - this item is not active as of this writing. Use a string instead.

#


:axislabel_font

Set the font to use for the axis label.


#


:axislabel_linew

Set the line width to use for the on-screen drawing of the axis label.

#


:axislabel_color

Select the color to use for drawing the axis label.

#


:axislabel_charsize

Select the font size to use for the axis label.

#


:axislabel_accept

#


:axislabel_cancel

#


:ticklabel_panel

Set parameters pertaing to the drawing of tick mark labels.

#


:ticklabel_font

Select the font to use to draw the tick labels. 

#


:ticklabel_color

Select the color to use to draw the tick labels.

#


:ticklabel_linew

Set the line width used to draw the tick label. This affects the on screen vector fonts only, and is ignored by the hardcopy device drivers.

#


:ticklabel_charsize

Select the size of the tick label.

#


:ticklabel_format

Select the format to use for the label. The time/date formats will only make sense when the data pertaing to the selected axis is in Julian Date format.

#


:ticklabel_stagger

Set the amount of offset to use when drawing tick labels. Use this to prevent long tick labels from overlapping each other.

#


:ticklabel_precision

Set the number of spaces to the right of the decimal point to display.

#


:ticklabel_skip

Select the number of major tick intervals to skip when drawing tick labels. Tick labels, by default, are draw at every major tick mark.

#


:ticklabel_startat

Set the starting point for drawing the tick labels, the default is to start labels at the graph minimum. If the Specified option is chosen, use the text item to specifiy where the tick labels should begin. There is a similar item in the tick mark props popup, for best results, synchronize these two items.

#


:ticklabel_start

Enter the starting point for drawing tick labels.

#


:ticklabel_stopat

Set the ending point for drawing the tick labels, the default is to stop drawing labels at the graph maximum. If the Specified option is chosen, use the text item to specifiy where the tick labels should end. There is a similar item in the tick mark props popup, for best results, synchronize these two items.

#


:ticklabel_stop

Specify the ending point for drawing tick labels.

#


:ticklabel_layout

#


:ticklabel_angle

Select the angle at which tick labels are drawn.

#


:ticklabel_op

Display axis labels on on side or the other or both.

#


:ticklabel_sign

Display tick labels as their absolute value, negated or as is. Use negated or absolute value to give the appearance of a reversed or reflected axis resp.  Some transformation of the data may be required.

#


:ticklabel_applyto

Override the axis selected in the parent popup.

#


:ticklabel_cancel

#


:ticklabel_accept

#


:tick_panel

Select options pertaining to tick marks.

#


:tick_dir

Select whether tick marks point inward, outward, or both.

#


:tick_op

Select the location of tick marks. Depending on the axis selected, either right, left, or both, or top, bottom, or both.

#


:tick_majorlen
Set the length of major tickmarks.

#


:tick_minorlen

Set the length of minor tickmarks.


#


:tick_majorgrid

Toggle display of grid lines drawn at major tick spacing intervals.


#


:tick_minorgrid

Toggle display of grid lines drawn at major tick spacing intervals.


#


:tick_majorcolor

Select the color to use for major tick marks or grid lines.


#


:tick_majorlinew

Select the color to use for minor tick marks or grid lines.


#


:tick_majorlines

Select the line style for major tick marks or grid lines.

#


:tick_minorcolor

Select the color to use for minor tick marks or grid lines.


#


:tick_minorlinew

Select the line width for minor tick marks or grid lines.

#


:tick_minorlines

Select the line style for minor tick marks or grid lines.

#


:tick_applyto

Override then axis selection from the parent popup.


#


:tick_cancel

#


:tick_accept

#


:axisbar_panel

#


:axisbar_color

Select the color to use for drawing the axis bar.

#


:axisbar_linew

Select the line width for drawing the axis bar.

#


:axisbar_lines

Select the line style for drawing the axis bar.

#


:axisbar_cancel

#


:axisbar_accept

#


:specialticks_panel

#


:specialticks_useticks

Toggle the use of the specially defined tick spacing from the text items below.

#


:specialticks_useticklabels
Toggle the use of the specially defined tick labels from the text items below.

#


:specialticks_n
Specify how many of the items define below should be used.

#


:specialticks_page
Display the next 5 special tick mark and tick label text items. There is a maximum of 20.

#


:specialticks_tickloc
These text items are for the locations of specially defined tick marks.

#


:specialticks_ticklableloc
These text items are for the locations of specially defined tick labels.

#


:specialticks_tick
Enter a value at which to place a major tick mark.

#


:specialticks_label
Enter a label to be displayed at a major tick mark.

#


:specialticks_cancel


#

:specialticks_accept


#


#

# help for module fileswin.c

:files_panel
Read data files.

#

:files_list
Select a file to read or a directory to change to.


#

:files_type
Select the file format.

  * XY
	2 column, one point (x, y) per line. Data sets are separated by a non-numeric character excluding '#' (comment line) or '@' (indicates a parameter statement).
  * Binary - not active
  * X Y1 Y2 Y3 ... 
	Multiple column data file. This is a file type, all sets from
	this file generate sets of type XY.
  * IHL
	A local format
  * X Y DX
	XY data with equal error bars along X
  * X Y DY
	XY data with equal error bars along Y
  * X Y DX1 DX2
	XY data with error bars along X of differing values
  * X Y DY1 DY2
	XY data with error bars along Y of differing values
  * X Y DY1 DY2
	XY data with error bars along Y of differing values
  * X Y Z
	XY data with a Z value drawn as text.
  * X HI LOW OPEN CLOSE
	A five column data set format for High-Low-Open-Close sets.
  * X Y RADIUS
	XY data used as the center of a circle drawn at X Y.
	

#

:files_from
Select the source of the data.
 
 * Disk, data resides on disk.
 * Pipe, read data from a program's standard output.

#

:files_graph
Select the graph to receive the data.


#

:files_file
Enter the data file to read, or the subdirectory to change to.


#

:files_accept
Read the data file.


#

:files_done
Close the files popup.


#

:symbols_panel

#
:symbols_selectset
Select the set 

#
:symbols_selectsym
Select a symbol

#
:symbols_symfill
Select the fill style

#
:symbols_symsize
Select the size of the symbol

#
:symbols_symchar
Not active

#
:symbols_symskip
Select the number of points to skip while drawing the set symbol

#
:symbols_symlegend
Define the legend for this set

#
:symbols_symapplyto

#
:symbols_linestyle
Set the line style for the selected set

#
:symbols_linewidth
Set the line width for the selected set

#
:symbols_linecolor
Set the line color for the selected set. This color will be used to draw the symbol also.

#
:symbols_filltype
Select the type of fill

#
:symbols_fillusing
Select either COlor or Pattern for fill

#
:symbols_fillcolor
Select the color for the fill

#
:symbols_fillpattern
Select the pattern for fill (not working very well).

#
:symbols_setallcolors
Set all colors for all sets incrementally starting with color 1.

#
:symbols_setallsymbols
Set all symbols for all sets incrementally.

#
:symbols_setalllinewidths
Set all line widths for sets incrementally.

#
:symbols_errorbar
Open a popup to set the properties of error bars.

#
:symbols_done

Close the symbols popup.

#

:symbols_accept

Accept the current settings.

#

:errbar_panel

Set the properties of error bars. Error bars consist of 2 parts, the error bar, and a line, referred to here as a riser,  connecting the error bar to the datum.

#

:errbar_size

Set the width of the error bar.

#

:errbar_width

Set the width of the line used to draw the error bar.

#

:errbar_style

Set the line style of the error bar.

#

:errbar_risertoggle

Toggle the display of the riser for error bars.

#

:errbar_riserlinew

Set the width of the line used to draw the riser.

#

:errbar_riserlines

Set the style of the line used to draw the riser.

#

:errbar_display

Set the display of error bars on either the top or the bottom, or both in the case of errors in Y, or either the left or right or both in the case of errors in X.

#

:errbar_done

Close the error bar popup.

#

:errbar_accept

Register the current selections mad for error bar properties.

#

:legend_panel

#
:legend_onoff

Toggle the display of the graph legend.

#
:legend_loctype

Select the legend location type, either Viewport or World coordinates. Selecting Viewport coordinates will force the legend to stay put if the graph scale changes, selecting world coordinates causes the location of the legend to change as the scaling changes.

#
:legend_font

Select the font to use for the legend labels.

#
:legend_charsize

Select the character size of the legend labels. 

#
:legend_color

Select the color to use when drawing the legend labels.

#
:legend_gap

Select the spacing in characters between individual legend entries.

#
:legend_length

Select the length in characters of the line.

#
:legend_x

Enter the value of X for the legend location, either in world or viewport coordinates, depending on the selected location type.

#
:legend_y

Enter the value of Y for the legend location, either in world or viewport coordinates, depending on the selected location type.

#
:legend_box
#
:legend_boxfill
#
:legend_boxfillusing
#
:legend_boxfillcolor
#
:legend_boxfillpat
#
:legend_boxlinecolor
#
:legend_boxlinewidth
#
:legend_boxlinestyle

#
:legend_place

#
:legend_load

Load the set comments to the legend labels.

#
:legend_cancel

#
:legend_accept

#
:frame_panel

#
:frame_onoff

Toggle the display of the graph frame.

#
:frame_style

Select the style of the frame around the graph. Either a closed rectangle, or a verticle line along the left and bottom of the graph.

#
:frame_color

Select the color to use when drawing the graph frame.

#
:frame_linew

Select the line width to use when drawing the graph frame.

#
:frame_lines

Select the line style to use when drawing the graph frame.

#
:frame_fillbg

Toggle the fill of the graph background.

#
:frame_bgcolor

Select the color to use when filling the graph background.

#
:frame_done

#
:frame_accept

#
:eval_panel

#
:eval_resulttoset

#
:eval_resulttograph

#
:eval_formula

#
:eval_apply

#
:eval_done

#
:load_panel

#
:load_to

Select the vector to load.

#
:load_start

Enter the starting value.

#
:load_step

Enter the step size.

#
:load_apply

#
:load_done

#
:histo_panel

#
:histo_binwidth

Enter the bin width.

#
:histo_minx

Enter the minimum value for the sequence of bins. 

#
:histo_maxx

Enter the maximum value for the sequence of bins. 

#
:histo_load

Select the quantity to load into the resulting set, either the actual counts or a cumulative sum.

#
:histo_apply

#
:histo_done

#
:fourier_panel

#
:fourier_load

#
:fourier_window

Select the type of data window:

1. None - use the default rectangular window
2. Triangular	1.0 - |(i-0.5*(N-1))/(0.5*(N-1))|
3. Hanning	0.5 * [1-cos(2*pi*i/(N-1))]
4. Welch	1-((i-0.5*(N-1))/(0.5*(N+1)))^2
5. Hamming	0.54-0.46*cos(2*pi*i/(N-1))
6. Blackman	0.42-0.5*cos(2*pi*i/(N-1))+0.08*cos(4*pi*i/(N-1))
7. Parzen	1.0 - |(i-0.5*(N-1))/(0.5*(N+1))|

Windows 3, 4, 7 are from Numerical Recipes pg. 425.
Windows 2, 5, 6 are from Introduction to Applied Statistical Signal Analysis pg. 124-125.

The two references have different definitions of the 'Parzen' window.

#
:fourier_xeq

#
:fourier_perform

#
:fourier_datatype

#
:fourier_applydft

Transform the data using the definition of the discrete Fourier transform. Data need not be a power of 2 (but should not be odd). This method is very slow for n > 1000.

#
:fourier_applyfft

Transform the data using a Radix-2 Fast Fourier Transform algorithm. The length of the series must be a power of 2.

#
:fourier_applywindow

Do not compute a transform, just apply the selected window to the selected set, a new set is created.

#
:fourier_done

#
:run_panel

#
:run_toggle

Select the type of running filter.

#
:run_length

Enter the length fo the running filter.

#
:run_apply

#
:run_done

#
:reg_panel

#
:reg_degree

Select the degree of fit.

#
:reg_load

Load the fitted values or the residuals to a new set.

#
:reg_apply

#
:reg_done

#
:diff_panel

#
:diff_method

Select the method for differentiation.

#
:diff_apply

#
:diff_done

#
:int_panel

#
:int_load

#
:int_sum

#
:int_apply

Numerically integrate the current set.

#
:int_done

Close the Integrate popup.

#
:xcor_panel

#
:xcor_bias

#
:xcor_lag

How many points to lag.

#
:xcor_apply

Compute the Cross/auto correlation using the selected set, lag, and bias.

#
:xcor_done

Close the Cross/auto correlation popup.

#
:spline_panel

Define a cubic spline with knots from a given set.

#
:spline_start

Starting value for the spline.

#
:spline_stop

Ending value for the spline.

#
:spline_nsteps

Number of points in the spline.

#
:spline_apply

Generate a spline.

#
:spline_done

Close the spline popup.

#
:samp_panel

Sample points in a set.

#
:samp_start

#
:samp_step

Select every Step point.

#
:samp_expr

Enter a logical expression that when evaluated to true (non-zero) will keep the point, false (zero) will discard the point.

#
:samp_type

Set the type of sampling.

#
:samp_apply

Sample the selected set.

#
:samp_done

Close the Sample popup.

#
:leval_panel

The load and evaluate function

#
:leval_fx

#
:leval_fy

#
:leval_to

#
:leval_start

#
:leval_stop

#
:leval_npts

#
:com_panel

#
:com_history

Previously executed commands. 

#
:com_save

Write the current set of commands displayed in the history list to a file.

#
:com_read

Read a file containing a set of previous executed commands.

#
:com_clear

Remove all the commands stored in the history list.

#
:com_replay

Execute all of the commands in the command history list.

#
:com_done

#
:com_command

Enter a command and press <return>

#
:draw_panel

#
:draw_scrollpercent

Set the amount of scrolling in terms of the % of the user axis scaling.

#
:draw_linkedscroll

Toggled on, this forces all graphs to be scrolled together when using the Up, Down, Right, and Left buttons to navigate through the user coordinate system for each graph.

#
:draw_linkedzoom

Not active.

#
:draw_autoredraw

Most operations in ACE/gr cause the current set of graphs to be redrawn automatically in cases where parameter settings are changed or a transformation is applied to the data. Sometimes, for large data sets, this is undesirable behavior.

#
:draw_overlay

Toggle overlay draw mode. If on, the drawing area is not erased on redraw.

#
:draw_cancel

#
:draw_accept

#
:gactivate_panel

#
:gactivate_graph

Select a graph to activate.

Command line equivalent: NONE

#
:gactivate_apply

#
:gactivate_done

#
:gcopy_panel

Copy a graph to another graph. As the copy will have the same viewport setting as the original graph, the two graphs will occupy the same position on the graph.

Command line equivalent: NONE

#
:gcopy_from

Select the graph to copy from.

#
:gcopy_to

Select the graph to copy to.

#
:gcopy_apply

#
:gcopy_done

#

:gswap_panel

Swapping a graph exchanges the indices of the two selected graphs. This will affect the order in which the two graphs are drawn and the precedence of setting the graph focus. 

#

:gswap_graph

#

:gswap_withgraph

Command line equivalent: NONE

#

:gswap_apply

#
:gkill_panel

#

:gkill_graph

Kill a particular graph or all graphs. This action resets all graph parameters to their default values.

Command line equivalent: kill g[0-9]
or                       kill graphs
to kill all active graphs.

#
:gfocus_panel

#
:gfocus_current

Select the focus to a particular graph.

Command line equivalent: focus g[0-9]

#

:gfocus_focusmethod

Select the method of setting the graph focus.

Command line equivalent: focus set|click|follows

where 	set 	= focus is fixed on a particular graph
	click 	= set the focus by clicking on a graph
	follows = focus is set by following the pointer


#

:gfocus_focusdisplay

Toggle the display of focus markers.

Command line equivalent: focus on|off

#
:gshow_panel

#
:gshow_toggle

Toggle the display of one or more graphs.

#
:gtype_panel

#
:gtype_type
Set the type of the current graph

	XY graph
	Log-linear
	Linear-log
	Log-log
	Bar chart
	Stacked bar chart

#
:block_list
The contents of the current directory.
#
:block_from
Set the source of the block data, if the source is Pipe, the the file name is assumed to be a command and a pipe is opened for reading using this command.
#
:block_file
If the source is Disk, enter the file name or click on the file name as it appears in the directory listing if the source is Pipe, enter the command line.
#
:block_accept
Using the current selected values for Source and File, read a set of block data.
#
:block_done
Close the Block data popup.
#
:eblock_type
Select the type fo set to create from the block data.
#
:eblock_x
Select the column to use as X.
#
:eblock_y
Select the column to use as Y.
#
:eblock_e1
Select an additional column for set types other than XY.
#
:eblock_e2
Select an additional column for set types other than XY.
#
:eblock_e3
Select an additional column for set types other than XY.
#
:eblock_set
Select the set number or use the next available set to hold the newly created set.
#
:eblock_graph
Select the graph to use for the newly created set.
#
:eblock_accept
Create the set
#
:eblock_done
Close the block data popup.
#
