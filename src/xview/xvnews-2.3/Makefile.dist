# This file was generated by `gxv' from `xvnews.G'.

# Compiler flags.

CC	 = cc
CFLAGS   += -O 
CPPFLAGS += -I$(GUIDEHOME)/include -I$(OPENWINHOME)/include 
LDFLAGS  += -L$(GUIDEHOME)/lib -L$(OPENWINHOME)/lib
#LDLIBS   += -lguidexv -lguide -lxview -lolgx -lX11 /stage/lib.linux/uflow.o
LDLIBS   += -lguidexv -lguide -lxview -lolgx -lX11

# Uncomment the following line to include INN's library (for nnrp.passwd)
# LDLIBS += -linn

# Possible flags for compatibility
# CFLAGS += -DNEED_STRCASECMP

# Parameters.

PROGRAM = xvnews
SOURCES.c = main.c server.c xv_articles.c xv_err.c xv_getauthor.c \
	    xv_init.c xv_init_newsrc.c xv_newsrc.c xv_post.c xv_props.c \
	    xv_regex.c xv_stuff.c xv_search.c xv_parse_newsrc.c \
	    textsw_regexp.c xv_drag.c xv_kill.c xv_sort.c
SOURCES.h = config.h
SOURCES.y = getdate.y
SOURCES.G = xvnews.G
STUBS.G = xvnews.G

# Derived parameters.

SOURCES = \
	$(SOURCES.G) \
	$(SOURCES.h) \
	$(SOURCES.l) \
	$(SOURCES.y) \
	$(SOURCES.c)

TARGETS.c = \
	$(SOURCES.G:%.G=%_ui.c) \
	$(STUBS.G:%.G=%_stubs.c)

TARGETS.h = \
	$(SOURCES.G:%.G=%_ui.h) \
	$(SOURCES.l:%.l=%.h)

TARGETS.other = \
	$(SOURCES.G:%.G=%.info)

TARGETS = \
	$(TARGETS.other) \
	$(TARGETS.h) \
	$(TARGETS.c)

OBJECTS = \
	$(SOURCES.c:%.c=%.o) \
	$(SOURCES.y:%.y=%.o) \
	$(TARGETS.c:%.c=%.o)


# Standard targets.

all:
	@echo "Select one of the following targets with make"
	@echo "(e.g. 'make sunos5')"
	@echo ""
	@echo "sunos5	- Solaris 2.x / SunOS 5.x"
	@echo "sunos4	- Solaris 1.x / SunOS 4.x"
	@echo "linux    - Linux"


db-sunos5:
	#@echo "Making all in guide..."
	#@cd guide; ${MAKE} -f Makefile.dist "CC=${CC}" \
	#"CFLAGS=-I/export/graaff/debug_include -g -DSVR4" \
	#"RANLIB=touch"
	#@echo "Making all in guide/libguide..."
	#@cd guide/libguide; ${MAKE} -f Makefile.dist "CC=${CC}" \
	#"CFLAGS=-I/export/graaff/debug_include -g" "RANLIB=touch"
	#@echo "Making in top level"
	${MAKE} -f Makefile.dist xvnews "CC=${CC}" \
	"CFLAGS=-I/export/graaff/debug_include -v -g -DSVR4 -DDEBUG" \
	"LDFLAGS=${LDFLAGS} -g -R${OPENWINHOME}/lib -L/export/graaff/lib" \
	"LDLIBS=-ldbmalloc ${LDLIBS} -lsocket -lnsl -lintl"

sunos5:
	#@echo "Making all in guide..."
	#@cd guide; ${MAKE} -f Makefile.dist "CC=${CC}" "CFLAGS=${CFLAGS} -DSVR4" "RANLIB=touch"
	#@echo "Making all in guide/libguide..."
	@cd guide/libguide; ${MAKE} -f Makefile.dist "CC=${CC}" "RANLIB=touch"
	${MAKE} -f Makefile.dist xvnews "CC=${CC}" "CFLAGS=${CFLAGS} -DSVR4" \
	"LDFLAGS=${LDFLAGS} -R${OPENWINHOME}/lib" "LDLIBS=${LDLIBS} \
	-lsocket -lnsl -lintl"


sunos4:
	#@echo "Making all in guide..."
	#@cd guide; ${MAKE} -f Makefile.dist "CC=${CC}" "CFLAGS=${CFLAGS}" "RANLIB=ranlib"
	#@echo "Making all in guide/libguide..."
	#@cd guide/libguide; ${MAKE} -f Makefile.dist "CC=${CC}" "RANLIB=ranlib"
	#@echo "Making all in top level..."
	${MAKE} -f Makefile.dist xvnews "CC=${CC}" "CFLAGS=${CFLAGS} -DUSE_FTIME"

linux:
	${MAKE} -f Makefile.dist xvnews "CC=${CC}"

db-linux:
	#@echo "Making all in guide..."
	#@cd guide; ${MAKE} -f Makefile.dist "CC=${CC}" "CFLAGS=${CFLAGS}" \
	#"RANLIB=ranlib"
	#@echo "Making all in guide/libguide..."
	#@cd guide/libguide; ${MAKE} -f Makefile.dist "CC=${CC}" "RANLIB=ranlib"
	${MAKE} -f Makefile.dist xvnews "CFLAGS=-DDEBUG -Wall -g ${CFLAGS}" \
	"LDFLAGS=-Lguide -Lguide/libguide -L/usr/X11R6/xview/lib -L/usr/X11R6/lib"


objects: $(SOURCES.c) $(SOURCES.h) $(SOURCES.y) $(TARGETS.c) $(TARGETS.h) $(OBJECTS)
sources: $(SOURCES)
targets: $(SOURCES) $(TARGETS)

$(PROGRAM): $(SOURCES.c) $(SOURCES.h) $(SOURCES.y) $(TARGETS.c) $(TARGETS.h) $(OBJECTS)
	$(CC) $(LDFLAGS) -o $(PROGRAM) $(OBJECTS) $(LDLIBS)

$(PROGRAM).purify: $(SOURCES.c) $(SOURCES.h) $(TARGETS.c) $(TARGETS.h) $(OBJECTS)
	purify $(LINK.c) -o $(PROGRAM) $(OBJECTS) $(LDLIBS)

# Targets to be used by a certain CASE tool.

stest: $(SOURCES.c) $(TARGETS.c) $(TARGETS.h) $(OBJECTS)
	#load $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(TARGET_ARCH) \
		-o $(PROGRAM) $(SOURCES.c) $(TARGETS.c) $(LDLIBS)

#%_ui.c + %_ui.h + %_stubs.c + %.info: %.G
	#$(GUIDEHOME)/bin/gxv_merge $*

depend:
	makedepend $(SOURCES.c) $(SOURCES.h)

clean:
	@cd guide; ${MAKE} -f Makefile.dist clean
	@cd guide/libguide; ${MAKE} -f Makefile.dist clean
	$(RM) $(OBJECTS) core *~


