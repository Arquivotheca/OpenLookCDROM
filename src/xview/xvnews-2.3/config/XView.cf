#ifndef XViewCf
#define XViewCf YES
/**/###########################################################################
/**/# @(#)XView.cf	1.8 10/4/91 SMI
/**/# XView.cf for XView release 3.0.  Specify site preferences here.

/*
 *      When anything is changed here, you must remake all the Makefiles
 *      from the Imakefiles.  
 *
 *	First set the IMAKEINCLUDE environment variable to point to the
 *	config directory in your installed X11 release (usually
 *	/usr/lib/X11/config) and the config directory in the XView release.
 *	For example:
 *
 *	    using csh where <X11> stands for the top of your installed X11
 *	    release and <XVIEW> stands for the top of the XView source
 *	    release.
 *
 *		% setenv IMAKEINCLUDE -I<X11>/lib/X11/config -I<XVIEW>/config
 *
 *          or using sh or ksh:
 *
 *		# IMAKEINCLUDE="-I<X11>/lib/X11/config -I<XVIEW>/config"
 *		# export IMAKEINCLUDE
 *
 *	    check the value of this with:
 *
 *		echo "IMAKEINCLUDE = "$IMAKEINCLUDE
 *		
 *	Second, make the top level Makefile.  For example:
 *
 *	    with the X.V11 release 5 from MIT installed and the X11 bin
 *	    directory is already in your PATH.
 *
 *              % imake -DUseInstalled -I<X11>/lib/X11/config -I./config 
 *
 *	Third, "make Makefiles", note "make World" will do a "make Makefiles".
 *
 *	If you've already made the Makefiles once before, can just do another
 *	"make Makefiles" from the <XVIEW> directory.
 */
/****************************************************************************/
/****************************************************************************/
/*
 *  NOTE:  Any of the values in this file or any of the other XView.* files
 *         can be overridden in the site.def file.
 *
 ****************************************************************************/ 
/****************************************************************************/
/*
 *	If you have the Open Windows release 2.0 or 3.0 distribution from Sun 
 *	Microsystems as your X environment, set this to YES.  See next
 *	comment.
 *
 */
#ifndef HasOpenWindows
#define HasOpenWindows NO
#endif
/*
 *	If you have Open Windows, then will need to set up the location of
 *	some files used by libxvps, client/clock.
 *	The default is set up as the environement variable "OPENWINHOME"
 *	preceeded by "$$" so it works correctly with make.  If you would
 *	rather code in the location of Open Windows instead of using an
 *	environment variable, that will work as well.  So, instead of setting
 *	this to be "$$OPENWINHOME", could set it to be "/home/openwin" if
 *	the "include" directory is found in /home/openwin/include or
 *	"/home/openwin/usr/" if the "include" directory is found in 
 *	/home/openwin/usr/include.
 *
 *	The OPENWINHOME environment variable should be set to point to the
 *	top of your OpenWindows distribution.  In the case of XVPS, you will
 *	need write permission for the OpenWindows distribution to install the
 *	XVPS library.  See also InstallInOpenwinHome.
 *
 */
#if HasOpenWindows
# ifndef OpenWindowsHome
# define OpenWindowsHome $$OPENWINHOME
# endif
#endif
/*
 *	When you have permission to install a file into $OPENWINHOME,
 *	set the following value to YES for PostScript files in libxvps.
 */
#ifndef InstallInOpenwinHome
#define InstallInOpenwinHome NO
#endif
/*
 *	Where to install the XView distribution.
 *
 *	By default XView will be installed wherever the X11R5 hiearchy is
 *	installed (via site.def). Defining XVDestDir will override this 
 *	i.e. XView will	be installed in XVDestDir instead.
 *
 *	Note: The OpenLook fonts are always installed in the R5 hierarchy
 *	regardless of whether XVDestDir is defined or not. (see	
 *	InstallOpenLookFonts below)
 *
 *	To make this macro active, uncomment this set of defines and give it
 *	the appropriate value.
#ifndef XVDestDir
#define XVDestDir /home/xview
#endif
 */
/*
 *	Command to add object modules to the library.
 *
 *	For compiling a second time, you might want to change the arguments
 *	for ar to be "rul" which will add a module if it is not already there.
 *	For quicker addition of modules, use the "clqv" flags to ar.
 */
#ifndef ArchiveCommand
#define ArchiveCommand ar rulv
#endif
/*
 *	Command to change the permissions of a file.
 */
#ifndef ChangePermissionsCommand
#define ChangePermissionsCommand chmod
#endif
/*
 *	Use PRE_R4_ICCCM only if you are compiling with X.V11R3.
 *	To do this change NO to YES for PreR4Server below.  Note:
 *	these Imakefiles will require the rules in the R4 config
 *	directory and the scripts mkdirhier, and makedepend.
 *
 *	See also InstallOpenLookFonts
 */
#ifndef PreR4Server
#define PreR4Server NO
#endif
/* 
 *      If you already have the configuration information installed from 
 *      the X.V11R5 distribution, set OnlyNeedsNewXViewConfigInstalled to 
 *      YES below. 
 * 
 *      By default, the X.V11R5 configuration files would have been 
 *	installed in $(DESTDIR)/lib/X11/config (aka $(CONFIGDIR)).
 */ 
#ifndef OnlyNeedsNewXViewConfigInstalled 
#define OnlyNeedsNewXViewConfigInstalled NO 
#endif 
/*
 *	If you would like the XView man pages to be installed in 
 *	the same directory as the X.V11R5 man pages, then set 
 *	InstallManPagesInXVDestDir below to NO.
 *
 *	By default, these files would be installed in $(XVDESTDIR)/man
 *	and setting this to NO would install them in $(DESTDIR)/man.
 */
#ifndef InstallManPagesInXVDestDir
#define InstallManPagesInXVDestDir YES
#endif
/*
 *	If your server does not have the OpenLook fonts installed, then set
 *	InstallOpenLookFonts to YES below.  
 *
 *	The X.V11 Release 5 MIT server installs these by default.  
 *	Any X.V11 release older than R4 will need these installed.
 *	The Open Windows Release 1.0.1 onward is based on X.V11 Release 4.
 *	These are unchanged from X.V11R4 and the XView 2 release.
 */
#ifndef InstallOpenLookFonts
#define InstallOpenLookFonts NO
#endif
/*
 *	If you want to install the private header files, set below value to
 *	YES.  Some extensions will want to use the private header files, so
 *	if you will be doing alot of subclassing, set it to YES.
 */
#ifndef InstallPrivateHeaders
#define InstallPrivateHeaders YES
#endif
/*
 *	If you do want to install the conversion from SunView to XView
 *	scripts, set the following value to YES below.
 */
#ifndef InstallConversion
#define InstallConversion NO
#endif
/*
 *	If you are using SunOS 3.5 or another 4.2 BSD based operating system,
 *	add in the flag -DOLD_BSD_FDSETS to LibXViewDefines below.
 */
#ifndef LibXViewDefines
# if PreR4Server
# define LibXViewDefines -DPRE_R4_ICCCM
# else
# define LibXViewDefines
# endif
#endif
/*
 *	If you can compile with shared libraires, and want to at this time,	 *	set WantToCompileSharedLibs to YES below.
 */
#ifndef WantToCompileSharedLibs
#define WantToCompileSharedLibs NO
#endif
/*
 *	To compile a shared library, set HasSharedLibraries to YES in
 *	the site.def file.  Only do this if you really do have shared library
 *	capabilities in your operating system.  By default, SunOS 4.x and
 *	older will build both a shared and a static library.  Since building a
 *	shared library takes longer than a static one, you may want to make
 *	sure the static library builds first, then try the shared one.
 *
 *	The name of this directive is SharedLibXView, but it applies to all
 *	the libraries:  libxview, libolgx, and libxvps.
 */
#ifndef SharedLibXView
# if HasSharedLibraries && WantToCompileSharedLibs
#define SharedLibXView YES
# else
#define SharedLibXView NO
# endif
#endif
/*
 *	To compile a debugged version of the library, set DebugLibXView to YES
 *	below.  This has not been tested.
 *
 *	Note:  a complete debugged library will be between 17 and 20 MB in
 *	       size.
 */
#ifndef DebugLibXView
#define DebugLibXView NO
#endif
/*
 *	To compile a profiled version of the library, set ProfileLibXView to
 *	YES below.  This has not been tested.
 */
#ifndef ProfileLibXView 
#define ProfileLibXView NO
#endif
/*
 *	any machine without pixrect includes in /usr/include will
 *	need to set InstallPixrectHeaders to YES below.
 *
 *	XView does not use the Pixrect library, it uses the Pixrect
 *	data structures as an internal structure to provide
 *	compatibility with programs which do use the Pixrect library.
 */
#ifndef InstallPixrectHeaders
#define InstallPixrectHeaders NO
#endif
/*
 *	Many of the images are not used by the library or the clients provided
 *	with the XView 3.0 public source release.  The images are broken up
 *	into a group of "core" images which are used and "others" which are
 *	not used.  To install images in addition to the "core" group, set the
 *	following variable to YES.  
 */
#ifndef InstallAllImages
#define InstallAllImages NO
#endif
/*
 *	If you do not already have the textsw extras menu installed in
 *	/usr/lib/.text_extras_menu, then set RedefineTextExtrasMenu below
 *	to YES.
 */
#ifndef RedefineTextExtrasMenu
#define RedefineTextExtrasMenu NO
#endif
/*
 *	DEC 3100 Config options
 */
#ifdef UltrixArchitecture
# ifndef InstallCommand
# define InstallCommand /usr/bin/install
# endif
#endif
/*
 *	Assume that the X library has been built and installed.
 *	Set the Dependent X library to null to avoid make file conflicts.
 *
 *	A dependent library means that the build will try to grab the library
 *	from within the source code hierarchy.  If the library is not there,
 *	it will then attempt to build the library first.
 */
#ifndef XVDependentXLib
#define XVDependentXLib
#endif
/*
 *	The command to extract static strings from a source file and
 *	replace it with an index into a common hash table.  The hash table
 *	is then compiled into the executable as a separate module.  
 */
#ifndef ExtractStringCommand
#define ExtractStringCommand xstr
#endif
/*
 *	Messaging routines such as dgettext(), gettext() are part of
 *	XView 3.0. They are used for localized text handling i.e. so that
 *	error messages, button labels, etc. can be displayed in the current 
 *	locale.  By default, they are implemented using mmap(). Set OsHasMMap 
 *	to NO if it is not available on your OS. An alternate method using
 *	malloc() and read() will be used instead.
 */
#ifndef OsHasMmap
#define OsHasMmap YES
#endif
/*
 *	The implementation of internationalization support in XView depends
 *	on the function setlocale(). If it is not available, set OsHasLocale
 *	to NO. A dummy stub setlocale() function will be defined (just to
 *	resolve some symbols) but XView will have it's internationalization 
 *	features disabled.
 */
#ifndef OsHasLocale
#define OsHasLocale YES
#endif
#endif /* XViewCf */
