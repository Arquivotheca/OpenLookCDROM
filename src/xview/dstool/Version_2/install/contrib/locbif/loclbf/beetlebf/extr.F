C  -------------------------------------------------------------------
C
C	Copyright (1990-1995) by Alexander Khibnik, Yuri Kuznetsov, and 
C	Eugene Nikolaev.
C
C The Locbif computation code in DsTool is distributed in the hope that it  
C will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty  
C of FITNESS FOR A PARTICULAR PURPOSE.  The software is provided as is without 
C any obligation on the part of Locbif authors, Cornell faculty, 
C Cornell staff or Cornell students to assist in its use, correction, 
C modification or enhancement. 
C
C  -------------------------------------------------------------------

      SUBROUTINE EXTR (ISTEP,NX,NDIMM,NG,NCAN,NUE,IVARS,IPRE,STX2,EPS,
     A                 FUN,DFDX,OUT,DFUN,ISTOP)
C     3.05.90É.
C     5.08.1991
C     13.11.92
C     15.06.94
C* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C*                                                                     *
C*    èPOÉPAMMA  EXTR  èPEÑHAáHAóEHA Ñãü ìTOóHEHàü TOóEK ùKCTPEMìMA    *
C*    áAÑAHHõX èEPEMEHHõX HA KPàBOâ. CóàTAETCü, óTO èEPEMEHHAü         *
C*    ÑOCTàÉãA CBOEÉO ùKCTPEMAãúHOÉO áHAóEHàü, ECãà COOTBETCTBìûôAü    *
C*    KOMèOHEHTA KACATEãúHOÉO BEKTOPA OÅPATàãACú B HOãú.               *
C*    è A P A M E T P õ:                                               *
C*    ==================                                               *
C*    ISTEP -óàCãO èPOÑEãAHHõX òAÉOB BÑOãú KPàBOâ.                     *
C*    NX    -PAáMEPHOCTú èPOCTPAHCTBA èEPEMEHHõX.                      *
C*    NDIM  -áAüBãEHHAü CTOóHAü PAáMEPHOCTú MATPàñõ DFUN.              *
C*    NG    -HOMEP BõÑEãEHHOâ èEPEMEHHOâ.                              *
C*    NCAN  -HOMEP KAHAãA BõBOÑA PEáìãúTATOB.                          *
C*    NUE   -óàCãO èEPEMEHHõX, AHAãàáàPìEMõX HA ùKCTPEMìM.             *
C*    IVARS -MACCàB HOMEPOB AHAãàáàPìEMõX èEPEMEHHõX.                  *
C*    STX2  -KOOPÑàHATõ TEKìôEâ TOóKà HA KPàBOâ.                       *
C*    EPS   -TOóHOCTú METOÑA HúûTOHA.                                  *
C*    IPRE  -èPàáHAK èOÑPOÅHOCTà èEóATà (CM.OèàCAHàE èAPAMETPOB BEETLE.*
C*    FUN   -àMü èPOÉPAMMõ BõóàCãEHàü BEKTOP-îìHKñàà.                  *
C*    DFDX  -àMü èPOÉPAMMõ BõóàCãEHàü MATPàñõ üKOÅà èO üBHõM îOPMìãAM. *
C*    DFUN  -MACCàB, COÑEPÜAôàâ MATPàñì óACTHõX èPOàáBOÑHõX.           *
C*    IER   -èPàáHAK OKOHóAHàü èPOÉPAMMõ (èOKA Hà HA óTO HE BãàüET).   *
C*    ISTOP -èPEPõBAHàE PAÅOTõ èPOÉPAMMõ èOãúáOBATEãEM.                *
C* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C*    èPà àáMEHEHàà MAKCàMAãúHOÉO óàCãA èEPEMEHHõX-NDIM, HEOÅXOÑàMO    *
C*    àáMEHàTú PAáMEPHOCTà MACCàBOB:                                   *
C*    XEXT(*) STX1(*) STV1(*) XABD(*) X1(*) X2(*) VMOVE1(*) VMOVE2(*)  *
C*    VMOVE(*)        STV2(*)                                          *
C* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
C
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT INTEGER*2 (I-N)
      include 'beetlebf.dim'
      EXTERNAL   FUN, DFDX, OUT
      DIMENSION  XEXT(NDIM), STX1(NDIM), STX2(1), STV1(NDIM),
     A           DFUN(NDIM,NX), IVARS(1), XABD(NDIM), X1(NDIM),
     B           X2(NDIM), INDEX(NPTYP), VMOVE1(NDIM),
     C           VMOVE2(NDIM), VMOVE3(NDIM), FNEXT(NDIM)
C
      COMMON /ADD4B/ EPSEXT
C
      COMMON /OUT5/  EPSE,  EPSR
      COMMON /OUT6/  INDE
C
      COMMON /WRTO1/ NFIX1, NFIX
      COMMON /WRTO2/ DMOVE2, DMOVE
      COMMON /WRTO4/ EPSC, EPSN
      COMMON /WRTO6/ ITC,IT2
      COMMON /WRTO7/ STV2(NDIM),VMOVN(NDIM)
      SAVE DMOVE1,STX1,STV1,/OUT5/,/OUT6/
C
      ISTOP = 0
      IF (NUE .EQ. 0) RETURN
      IF (ISTEP .EQ. 0) GOTO 400
          DO 100 I=1,NPTYP
             INDEX(I) = 0
 100      CONTINUE
          EPSC  = EPS
          EPSE  = EPSEXT
          ITMAX = 10
          DONE1 = DMOVE1/DABS(DMOVE1)
          DONE2 = DMOVE2/DABS(DMOVE2)
C
C.... ñàKã èPOBEPKà HA ùKCTPEMìM BCEX èEPEMEHHõX.
C     KOOPÑàHATA  XEXT(NFIX1)  HE èPOBEPüETCü.
C
          DO 390 IVAR = 1,NUE
            INDE = 0
            NEXT = IVARS(IVAR)
            IF (NEXT .EQ. NFIX1) GOTO 380
C
C.... èOÑÉOTOBKA PAÅOóàX MACCàBOB.
C
                DO 200 I = 1,NX
                  X1(I)     = STX1(I)
                  X2(I)     = STX2(I)
                  VMOVE1(I) = STV1(I)
                  VMOVE2(I) = STV2(I)
 200            CONTINUE
C
C.... èPOBEPKA ìCãOBàü ùKCTPEMìMA.
C
                FEXT1 = DONE1*VMOVE1(NEXT)
                FEXT2 = DONE2*VMOVE2(NEXT)
                IF (FEXT1*FEXT2 .GT. 0.D0) GOTO 370
                DF = DABS((FEXT1-FEXT2)/(X1(NFIX1)-X2(NFIX1)))
                IF (DF.LT.0.1*EPSE) GOTO 370
		INFLOC = 0
C
C.... OèPEÑEãEHàE XAPAKTEPA ùKCTPEMìMA:
C                   IEXT = 1 -ÑOCTàÉAETCü MAKCàMìM;
C                   IEXT =-1 -ÑOCTàÉAETCü MàHàMìM;
C
                    IEXT = 1
                    IF (FEXT1.LE.0.D0 .OR. FEXT2.GE.0.D0) IEXT =-1
C
C.... ñàKã ìTOóHEHàü KOOPÑàHAT ùKCTPEMìMA  XEXT(NEXT).
C
                    DO 350 ITER=1,ITMAX
C
C.... èPOÉHOá Hìãü KOMèOHEHTõ VMOVE(NEXT) KACATEãúHOÉO BEKTOPA.
C
 205              CONTINUE
                  IF (INDLOC .EQ. 0) RX = FEXT2/(FEXT2-FEXT1)
                  IF (INDLOC .EQ. 1) RX = 0.5D0
                  IF (INDLOC .EQ. 2) RX = 4.D0/9.D0
C
                       DO 210 I=1,NX
                          XEXT(I) = X2(I)-(X2(I)-X1(I))*RX
 210                   CONTINUE
                       IT = ITC
                       IPR= 0
                       IER= 0
                       CALL NEWTN (NX,NDIM,NG,NFIX1,NCAN,XEXT,EPS,EPSN,
     A                             IT,IPR,FUN,DFDX,DFUN,IER,ISTOP)
                       IF (ISTOP .NE. 0) RETURN
                       IF (IER   .EQ. 0) GOTO 220
                        INDLOC=INDLOC+1
                        IF (INDLOC .LE. 2) GOTO 205
C
C.... HE COòãàCú HúûTOHOBCKàE àTEPAñàà:ìTOóHEHàE TOóKà ùKCTPEMìMA
C     èPEKPAôAETCü.
C
 215                    CONTINUE
                           IWRT  = 1 - IER
                           GOTO 230
 220                    CONTINUE
        	R1 = 0.D0
		R2 = 0.D0
		DO 225 I=1,NX
                   R1 = R1+(XEXT(I)-STX1(I))*(STX2(I)-STX1(I))
                   R2 = R2+(XEXT(I)-STX2(I))*(STX2(I)-STX1(I))
 225            CONTINUE
                IF (R1*R2 .GT. 0.) GOTO 215
C
                        IER = 0
                        CALL TANGNT (NX,NDIM,NFIX1,XEXT,FNEXT,VMOVE3,
     A                               FUN,DFDX,DFUN,IER,ISTOP)
                        IF (ISTOP .NE. 0) RETURN
                        IF (IER   .EQ. 0) GOTO 290
                        INDLOC=INDLOC+1
                        IF (INDLOC .LE. 2) GOTO 205
C
C.... HE HAâÑEH KACATEãúHõâ BEKTOP:ìTOóHEHàE TOóKà ùKCTPEMìMA
C     èPEKPAôAETCü.
C
                            IWRT = 5 - IER
 230                    CONTINUE
                            DO 235 I=1,NX
                               XABD(I) = XEXT(I)
 235                        CONTINUE
C
C.... BõÅEPEM TOóKì HA KPàBOâ, ÅãàÜAâòìû K TOóKE ùKCTPEMìMA.
C
                            IF (DABS(FEXT1) .GT. DABS(FEXT2)) GOTO 250
                                FEXT3 = FEXT1
                                DO 240 I=1,NX
                                   XEXT(I)   = X1(I)
                                   VMOVE3(I) = VMOVE1(I)
 240                            CONTINUE
                                GOTO 270
 250                        CONTINUE
                                FEXT3 = FEXT2
                                DO 260 I=1,NX
                                   XEXT(I)   = X2(I)
                                   VMOVE3(I) = VMOVE2(I)
 260                            CONTINUE
 270                        CONTINUE
C
C.... KOHTPOãú TOóHOCTà B TOóKE, ÅãàÜAâòEâ K TOóKE ùKCTPEMìMA.
C
                             EPSR = DABS(X2(NFIX1)-X1(NFIX1))
C
C.... èOÑÉOTOBàM ÑAHHõE Ñãü èPOÉPAMMõ   WRTOUT.
C
                           DMOVER = DMOVE
                           NFIXR  = NFIX
                           DMOVE  = DMOVE1
                           NFIX   = NFIX1
                           IPRTCL = 3
#if defined(hib)
                           CALL WRTEXT (IPRTCL,IWRT,IPRE,ITER,IT,
     A                                  NCAN,NX,NDIM,NEXT,IEXT,EPSE,
     B                                  EPSR,XEXT,XABD,VMOVE3,DFUN)
#endif
                           DMOVE = DMOVER
                           NFIX  = NFIXR
                           INDE  =-1
                           GOTO 365
 290                    CONTINUE
C
C.... èOÑèPABàM ìTOóHüEMìû KOMèOHEHTì KACATEãúHOÉO BEKTOPA.
C
                        FEXT3 = DONE1*VMOVE3(NEXT)
C
C.... BõÅOP TOóEK, ÅãàÜAâòàX K TOóKE ùKCTPEMìMA.
C
                        IF (FEXT1*FEXT3 .LT. 0.D0)  GOTO 310
                           FEXT1 = FEXT3
                           DO 300 I=1,NX
                             X1(I)     = XEXT(I)
                             VMOVE1(I) = VMOVE3(I)
 300                       CONTINUE
                           GOTO 330
 310                   CONTINUE
                           FEXT2 = FEXT3
                           DO 320 I=1,NX
                             X2(I)     = XEXT(I)
                             VMOVE2(I) = VMOVE3(I)
 320                       CONTINUE
 330                   CONTINUE
C
C.... KOHTPOãú ÑOCTàÉHìTOâ TOóHOCTà.
C
                       EPSR = DABS(X2(NFIX1)-X1(NFIX1))
                       DF = DABS((FEXT1-FEXT2)/(X1(NFIX1)-X2(NFIX1)))
                       FN=    DABS (FEXT3/DF)
                       IF (EPSR.LE.EPSE .OR. FN.LE.0.1*EPSE) GOTO 360
 350                CONTINUE
C
C.... áAÑAHHAü TOóHOCTú HE ÑOCTàÉHìTA.
C
                    INDE   =-1
                    ITER   = ITMAX
                    IPRTCL = 2
                    GOTO 362
 360                CONTINUE
C
C.... KOOPÑàHATõ TOóKà ùKCTPEMìMA ìTOóHEHõ C áAÑAHHOâ TOóHOCTúû.
C
                    IPRTCL = 1
 362                CONTINUE
#if defined(hib)
                    CALL WRTEXT (IPRTCL,IWRT,IPRE,ITER,IT,NCAN,NX,
     A                           NDIM,NEXT,IEXT,EPSE,EPSR,XEXT,
     B                           XABD,VMOVE3,DFUN)
#endif
 365                CONTINUE
C
C.... OÅPAÅOTKA TOóKà ùKCTPEMìMA èOãúáOBATEãEM.
C
                    INDEX(4) = NEXT*IEXT
                    CALL OUT (ISTEP,INDEX,NX,NDIM,XEXT,VMOVE3,
     A                        DFUN,ISTOP)
                    IF (ISTOP .NE. 0) RETURN
 370            CONTINUE
 380        CONTINUE
 390      CONTINUE
 400  CONTINUE
C
C.... OÅPAÅOTKA èEPBOâ TOóKà HA KPàBOâ       (ISTEP=0);
C     èOÑÉOTOBKA K OóEPEÑHOMì òAÉì èO KPàBOâ (ISTEP>0).
C
          DMOVE1 = DMOVE2
          DO 410 I=1,NX
            STX1(I) =  STX2(I)
            STV1(I) =  STV2(I)
 410      CONTINUE
          RETURN
          END
