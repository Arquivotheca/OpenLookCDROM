/* @(#)Imakefile 1.5 */
/* Where do you have OpenWindows 3 installed? */
#OPENWINHOME = /usr/local/OW3

#Uncomment the appropriate one if necessary. You should not need
#either, as it should be determined by the program.
#XVIEW= -DXVIEW3
#XVIEW= -DXVIEW2

#Uncomment the following line for SunOS 4.X
#DEFINES= $(XVIEW) -DSUNOS41
#Choose a CC (only tested under cc and gcc though)
#CC=cc
#CC=gcc -ansi

#Uncomment the following lines for SunOS 5.0 with Sun cc.
DEFINES= -DSYSV -DSVR4 -DGLOBAL_FTPTOOLRC=\"$(FTPTOOLRC)\"
LIBSUNOS5= -R /usr/openwin/lib:/opt/openwin/lib:/usr/opt/openwin/lib \
	-lsocket -lnsl
CC=cc -Xa

#Uncomment the following lines for SunOS 5.0 with gcc
#Don't use -ansi, there seems to be a header file problem with that.
#DEFINES= -DSYSV -DSVR4 $(XVIEW) -DGLOBAL_FTPTOOLRC=\"$(FTPTOOLRC)\"
#LIBSUNOS5= -L${OPENWINHOME}/lib -lsocket -lnsl -lm
#CC=gcc -g

#Uncomment the following line for 386 SVR4.
#DEFINES= -DSYSV386 -DSYSV -DSVR4

#ifdef HPArchitecture
CCOPTIONS = -DSVR4 $(XVIEW) -Aa -D_HPUX_SOURCE -Dhpux
STD_DEFINES = -I/usr/include/X11R4 -DGLOBAL_FTPTOOLRC=\"$(FTPTOOLRC)\"
INSTALL     = /usr/local/lib/imake/scripts/bsdinst.sh
BSDLIB      = /usr/lib/libBSD.a
MKDIRHIER   = /bin/sh $(BINDIR)/mkdirhier
SIGNALS     = signal.o sigvec.o
#define ManSuffix 1
#endif

FTPTOOLRCDIR = $(LIBDIR)/ftptool
FTPTOOLRC    = $(FTPTOOLRCDIR)/ftptoolrc
SYS_LIBRARIES 	= -lm
LOCAL_LIBRARIES = -lxview -lolgx $(XLIB) $(LIBSUNOS5)
LDOPTIONS 		= -L$(OPENWINHOME)/lib
INCLUDES 		= -I$(OPENWINHOME)/include -I/usr/include

/* this probably needs to be changed to suit your site. */
HELPDIR			= $(OPENWINHOME)/lib/help

ICONS = busy1.ftptool.icon busy2.ftptool.icon busy3.ftptool.icon \
	busy4.ftptool.icon ftptool.icon tar.viewer.icon

HEADERS = ftptool.h

SUBHEADERS= batch.h batch_struct.h button_funcs.h change_dir.h config.h \
	create_main.h create_other.h dircache.h dircache_struct.h dirlist.h \
	dirlist_struct.h dofuncs.h dnd.h event.h ftp_var.h host_list.h \
	host_list_struct.h main.h menu_funcs.h misc.h patchlevel.h readdir.h \
	schedule.h schedule_struct.h tar_view.h transfer.h view_file.h \
	view_file_struct.h

INFOFILES = ftptool.info

MANPAGES = ftptool.man

SRCS = batch.c button_funcs.c change_dir.c create_main.c create_other.c \
	dircache.c dirlist.c dofuncs.c dnd.c event.c ftp.c host_list.c \
	lex.l main.c menu_funcs.c misc.c readdir.c schedule.c tar_view.c \
	transfer.c view_file.c

OBJS = batch.o button_funcs.o change_dir.o create_main.o create_other.o \
	dircache.o dirlist.o dofuncs.o dnd.o event.o ftp.o host_list.o \
	lex.o main.o menu_funcs.o misc.o readdir.o schedule.o tar_view.o \
	transfer.o view_file.o  $(SIGNALS)

ALLFILES = ${HEADERS} ${INFOFILES} ${MANPAGES} ${ICONS} ${SRCS}

AllTarget(ftptool)

#ifdef HPArchitecture
signal.o: $(BSDLIB)
	ar x $(BSDLIB) signal.o
 
sigvec.o: $(BSDLIB)
	ar x $(BSDLIB) sigvec.o
#endif

$(OBJS): $(HEADERS) $(SUBHEADERS)

ComplexProgramTarget(ftptool)
#MakeDirectories(install, $(FTPTOOLRCDIR))

install::
	$(INSTALL) -c $(INSTMANFLAGS) ftptool.info $(HELPDIR)/ftptool.info
	#$(INSTALL) -c $(INSTDATFLAGS) ftptoolrc $(FTPTOOLRC)
