.\"
.\" @(#)gxv.1	2.9 91/10/18 Copyright 1989 Sun Microsystems
.\"
.TH GXV 1 "27 May 1991"
.SH NAME
gxv \- generate C and XView source code for user interface elements described in a GIL file
.SH SYNOPSIS
.B gxv
[
.BR options
]
[
.I filename
]
.SH DESCRIPTION
.LP
.B gxv
reads a Graphical Interface Language (GIL) file created by OpenWindows 
Developer's Guide, a user interface design editor.  As it reads,
.B gxv
generates C and XView source code for the OpenWindows user
interface elements.  
.LP
Note that GIL files all end with a .G extension.
.B gxv
allows you to specify the
.I filename
with or without the extension: both
.I filename.G
and
.I filename
are acceptable names to specify filename.G to
.B gxv.
.SH OPTIONS
.TP
.B \-s [\-silent]
Sets
.B gxv
so it works silently, producing no messages while generating 
source code.
.TP
.B \-v [\-verbose]
Sets
.B gxv
so it is verbose, producing a message each time it generates 
source code for a user interface element.
.TP
.B \-a [\-ansi]
Sets
.B gxv
so it writes ANSI C.  
.B gxv
will write the proper function prototypes for all functions.  The resulting
code will work with most ANSI C compilers.
.TP
.B \-n [\-nomerge]
Prohibits
.B gxv
from merging existing and new _stubs.c files.
.TP
.B \-p [\-project] myproj
Sets
.B gxv
so it will generate code for project
.I myproj
.TP
.B \-m [\-main]
Sets
.B gxv
so that it only generates source code for
.I main()
and any common callback functions in the
.I project.c
file.  Only works with the
.I -p
option present.
.TP
.B \-h [\-helpfile]
Sets
.B gxv
so it generates only the help text file (the
.I .info
file).
.TP
.B \-i [\-i18n]
Sets
.B gxv
so that is generates code for internationalization.  This option
sets the
.I -g
and
.I -r
options discussed below.
.TP
.B \-g [\-gettext]
Sets
.B gxv
so that it generates dgettext string wrappers for internationalization.
.TP
.B \-d [\-domain] mydomainname
Sets
.B gxv
so it will use 
.I mydomainname
when generating dgettext string wrappers.  This overrides the default domain
name of 
.I filename_labels.
.TP
.B \-r
Sets
.B gxv
so that is generates XView XV_USE_DB attributes for internationalization.
.TP
.B \-x [\-xdb]
Sets
.B gxv
so that it creates an X resource database for internationlization (the
.I .db
file).
.TP
.B \-? [\-help]
Print out a help message explaining all
.B gxv
options.
.SH "FILES"
.TP
.I filename_ui.c
The primary source code file, containing
initialization and creation functions for user interface elements.
.TP
.I filename_ui.h
Contains declarations, typedefs for window
structures, and C externs.
.TP
.I filename_stubs.c
Contains callback function templates for the
element handlers specified in the user interface.
.TP
.I filename.info
Contains help text attached to user interface elements.
Makefile, which controls the source code compile.
.TP
.I project.c
If 
.B gxv
is generating code for a project, this file will contain
the main() plus any callback functions that are common
across interfaces.
.TP
.I project.h
If 
.B gxv
is generating code for a project, this file will contain
declarations for any callback functions that are common
across interfaces.
.SH "SEE ALSO"
.LP
The OpenWindows Developer's Guide User's Manual
.SH DIAGNOSTICS
.LP
.TP
.B "gxv: reading interface.G"
gxv is reading the GIL file.
.TP
.B "gxv: writing interface_ui.c"
gxv is generating the _ui.c source code file.
.TP
.B "gxv: writing interface_ui.h"
gxv is generating the _ui.h source code file.
.TP
.B "gxv: writing interface_stubs.c"
gxv is generating the _stubs.c source code file.
.TP
.B "gxv: writing project.c"
gxv is generating the project.c source code file.
.TP
.B "gxv: writing project.h"
gxv is generating the project.h source code file.
.TP
.B "gxv: writing interface.info"
gxv is generating the .info help text file.
.TP
.B "gxv: writing Makefile"
gxv is generating a Makefile for the generated interface source code.
.TP
.B "gxv: skipping Makefile"
gxv detects an existing Makefile in the current directory and so is not 
generating a new Makefile.
.TP
.B "gxv: object NAME: attribute ATTRIBUTE: cannot find string"
gxv can't find a string it expects to describe an attribute of a user
interface element described in the GIL file.
.TP
.B "gxv: object NAME: attribute ATTRIBUTE: cannot find integer"
gxv can't find an integer it expects to describe an attribute of a user
interface element described in the GIL file.
.TP
.B "gxv: object NAME: attribute ATTRIBUTE: cannot find boolean"
gxv can't find a Boolean setting it expects to describe an attribute of a 
user interface element described in the GIL file.
.TP
.B "gxv: object NAME: attribute ATTRIBUTE: cannot find keyword"
gxv can't find a keyword it expects to describe an attribute of a user
interface element described in the GIL file.
.TP
.B "gxv: object NAME: attribute ATTRIBUTE: cannot find start of list"
gxv can't find the beginning of a list it expects to describe an attribute 
of a user interface element described in the GIL file.
.TP
.B "gxv: object NAME: attribute ATTRIBUTE: cannot find start of name"
gxv can't find the beginning of a name it expects to describe an
attribute of a user interface element described in the GIL file.
.TP
.B "gxv: object NAME: attribute ATTRIBUTE: cannot find start of object"
gxv doesn't find an open parenthesis at the beginning of an object
definition in the GIL file.
.TP
.B "gxv: object NAME: attribute ATTRIBUTE: unexpected end-of-file"
gxv encounters a truncated GIL file or a GIL file that doesn't end with 
the proper file structure.
.TP
.B "gxv: object NAME: attribute ATTRIBUTE: unknown file format"
gxv encounters a GIL file missing the file header information that
identifies it as a GIL file.
.TP
.B "gxv: object NAME: attribute ATTRIBUTE: unknown value"
gxv finds an attribute in a GIL file that it doesn't recognize, or
encounters an attribute value that is not appropriate for that attribute.
.TP
.B "gxv: object NAME: attribute ATTRIBUTE: unknown object"
gxv encounters an element that specifies an owner that doesn't exist.
.TP
.B "gxv: object NAME: attribute ATTRIBUTE: not a valid C identifier"
gxv encounters an object name that is an illegal identifier in C.
.TP
.B "gxv: object NAME: attribute ATTRIBUTE: WARNING, not a C identifier, ignored"
gxv encounters a special handler in quotes and ignores it.
.SH BUGS
.LP
None
