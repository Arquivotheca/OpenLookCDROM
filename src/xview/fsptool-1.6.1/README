----------------------------------------------------------------------------------
FSPtool v1.6.0 (14th Dec 1993) -- (c)1993 A.J.Doherty (ssudoher@uk.ac.reading)
==============================================================================

FSPtool is an OpenLook compliant X-Windows program which gives an easy to use
front end to the fsp client side software, current version of which is 2.7.1. It
uses the XView libraries which are distributed with X11R5 and System V R4. If you
are installing for a Sun or a full SVR4 machine then these will almost certainly
be installed already, otherwise you may have to get hold of them (latest version
is 3.2 -- you need at least 3.0) yourself.

The standard fgetcmd, flscmd etc programs are retained and driven by the program,
this means that updates to the FSP client and server programs are more easily
accommodated. You simply install the new client executables and FSPtool uses them.
I prefered this approach to hacking the FSP client code to suit and then
incorporating it into the program.

Feature wise it will be familiar to anyone who has used Ftptool. Essentially it
provides directory browsing, semi-intelligent file typing and execution of
downloaded files. The best thing is to try it and see ...

Additional documentation can be found in the "doc" directory.

This latest release has a bunch of new goodies on the surface as well as a lot
of changes under the surface and around the format of the distribution. The file
doc/REVISIONS details all.

Installation:
-------------

You will need to have a copy of the FSP client programs - version 2.7.1 is the
latest available at the time of writing. These will need to be compiled and
placed somewhere which is accessible to the FSPtool program at run-time.

  1) Edit the "Configure.tmpl" file - if required - for your system. The compiler
     to be used and main installation options are here.

  2) Edit the "config.h" file if required, mainly this should involve changing
     the names of the FSP client programs to suitable ones for your setup and
     setting the default programs associated with particular filetypes on your
     system.

  3) type "xmkmf" to create a new Makefile.

  4) type "make Makefiles" to create Makefiles in the subdirectories.

  5) type "make" to compile and link the program.

  6) type "make install" this will place the executable and run-time help file
     in the locations which you specified in the Configure.tmpl file.

  7) type "make install.man" this will install the man pages in the the man pages
     directory you specified in the Configure.tmpl file.

  NB: If you are using the X11 xmkmf then you can replace steps 3-4 with "xmkmf -a"
      this won't work with the OpenWindows supplied xmkmf.


Portability:
------------

FSPtool runs happily under olwm/olwvm, mwm and twm window managers and shouldn't
present any problems with any others. A Quit option is provided in the "File"
menu for window managers which don't provide a Quit option in the FSPtool frame
menu. As of release (1.5.0) a variety of settings have been provided in the
FSPtool properties window which should allow easier use with non-OpenLook window
managers such as twm and mwm.

As for System variances these have been insolated into particular areas as much as
possible which should allow for easy porting. Mostly these consist of the standard
C library routines and other fairly run of the mill UNIX things ... of course this
could be a problem if you're not running unix :-) . I attempt to make the whole
thing as portable as possible, so if people could let me know about a system they
have[n't] installed it on and problems they have had, I'd be grateful.

FSPtool is currently known to build and run on:

		Sun SPARCstation-1	SunOS 4.1.1
		Sun SLC			SunOS 4.1.3
		Sun 4/690MP		SunOS 4.1.3
		Sun SPARCclassic	Solaris 2.2 (XView 3.2)
		Sun SPARCcentre 2000	Solaris 2.3 (XView 3.2)

All of these are using gcc-2.5.6, X11R5 and - apart from Solaris - XView 3.0

Rumours abound that it has been seen on some considerably more obscure machines
(ie: not Suns ;-> ). If you have added to this list please let me know.

All development work has been using GCC version 2.4.5, and more recently GCC
version 2.5.2 and up, older versions of GCC back to 2.3.3 shouldn't have any
problems compiling FSPtool. Earlier than that there do appear to have
occasionally been some problems with the compiler setups. As for other ANSI
standard C compilers, the code is ANSI compliant so they shouldn't have any
problems, that said I haven't had access to one to try this out in practice.

Problems have been reported when using the Sun supplied ANSI C compiler under
Solaris. However I don't access to it as Sun in their divine wisdom don't supply
it bundled with Solaris. If anyone does try it or any other non-gcc ANSI compiler
and has problems let me know and I'll do my best to correct them.

----------------------------------------------------------------------------------

