%!
%%Pages: (atend)
%%DocumentFonts: (atend)
%%EndComments
%
% Frame Maker PostScript Prolog 1.11, for use with Maker 1.11
% Copyright (c) 1986,87 by Frame Technology, Inc.  All rights reserved.
%
% Known Problems:
%	Due to bugs in Transcript, the 'PS-Adobe-' is omitted from line 1
/FMversion (1.11) def 
/FrameDict 120 dict def 
% The readline in 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(Maker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/landscape FMLOCAL
	/docheight FMLOCAL
	/docwidth FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
/FMDOCUMENT {
	/#copies exch def
	FrameDict begin
	0 ne /landscape exch def 
	/docheight exch def
	/docwidth exch def
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
		/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
/FMBEGINPAGE {
	FrameDict begin 
	/pagesave save def
	
	2 setlinecap
	xscale yscale scale
	landscape {
		90 rotate
		0 docheight neg translate
		} if
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
	/fontname FMLOCAL
	/fontscale FMLOCAL
	/fontnum FMLOCAL
	/fontdict FMLOCAL
/FMDEFINEFONT {
	FrameDict begin
	/fontname exch def
	/fontscale exch def
	/fontnum exch def
	/fontdict fontname findfont fontscale scalefont def
	fontdict /Encoding get StandardEncoding eq
	{
		fontdict DiacriticEncode 
		/fontdict exch def
	} {
		fontdict NonDiacriticEncode
		/fontdict exch def
	} ifelse
	FMfonts fontnum
		fontnum fontdict definefont
	put
	end 
	} def 
/FMLINEWIDTHS { 
	FrameDict begin
	dup array /FMlinewidths exch def 
	1 sub -1 0 {exch FMlinewidths 3 1 roll lnormalize put} for
	end 
	} def 
 
FrameDict begin 
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi	72 0 dmatrix defaultmatrix dtransform
	dup mul exch   dup mul add   sqrt
def
/max	{2 copy lt {exch} if pop} bind def
/min	{2 copy gt {exch} if pop} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/FMfonts 255 array def
	/basefontdict FMLOCAL
	/newfontdict FMLOCAL
/DiacriticEncode {
	/basefontdict exch def
	/newfontdict basefontdict maxlength dict def
	basefontdict
	{exch dup /FID ne
		{dup /Encoding eq
			{exch pop DiacriticEncoding}
			{exch}
			ifelse
			newfontdict 3 1 roll put
			}
		{pop pop}
		ifelse
		} forall
	newfontdict
	} bind def
/NonDiacriticEncode {
	/basefontdict exch def
	/newfontdict basefontdict maxlength dict def
	basefontdict
	{exch dup /FID ne
		{exch newfontdict 3 1 roll put}
		{pop pop}
		ifelse
		} forall
	newfontdict
	} bind def
	/freq FMLOCAL
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /freq    exch def
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq 0 {/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div setgray
	} bind def
/grayness {
	setgray
	orgxfer cvx settransfer
	orgfreq organgle orgproc cvx setscreen
	} bind def
/normalize {
	transform cvi exch cvi exch itransform
	} bind def
/dnormalize {
	dtransform cvi exch cvi exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/fillprocs
	[{0.00 grayness}
	 {0.10 grayness}
	 {0.30 grayness}
	 {0.50 grayness} 
	 {0.70 grayness}
	 {0.90 grayness}
	 {0.97 grayness} 
	 {1.00 grayness} 
	 {<0F1E3C78F0E1C387> 8 1 dpi 16 div setpattern} 
	 {<0F87C3E1F0783C1E> 8 1 dpi 16 div setpattern} 
	 {<CCCCCCCCCCCCCCCC> 8 1 dpi 16 div setpattern} 
	 {<FFFF0000FFFF0000> 8 1 dpi 16 div setpattern} 
	 {<8142241818244281> 8 1 dpi 16 div setpattern} 
	 {<03060C183060C081> 8 1 dpi 16 div setpattern} 
	 {<8040201008040201> 8 1 dpi 16 div setpattern} 
	 {}
	 {1.00 grayness}
	 {0.90 grayness}
	 {0.70 grayness}
	 {0.50 grayness} 
	 {0.30 grayness}
	 {0.10 grayness}
	 {0.03 grayness} 
	 {0.00 grayness} 
	 {<F0E1C3870F1E3C78> 8 1 dpi 16 div setpattern} 
	 {<F0783C1E0F87C3E1> 8 1 dpi 16 div setpattern} 
	 {<3333333333333333> 8 1 dpi 16 div setpattern} 
	 {<0000FFFF0000FFFF> 8 1 dpi 16 div setpattern} 
	 {<7EBDDBE7E7DBBD7E> 8 1 dpi 16 div setpattern} 
	 {<FCF9F3E7CF9F3F7E> 8 1 dpi 16 div setpattern} 
	 {<7FBFDFEFF7FBFDFE> 8 1 dpi 16 div setpattern} 
	 {}
	] def
/H { 
	FMlinewidths exch get setlinewidth
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	gsave stroke grestore 
	} bind def
/M {moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
/K { 
 	/n exch def
	newpath
	moveto 
	3 1 n {pop curveto} for
	} bind def
/J { 
 	/n exch def
	newpath
	moveto 
	1 1 n {pop curveto} for
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/Q { 
	moveto
	gsave show grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath eofill
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
/A { 
	/y exch def
	/x exch def
	/h exch def
	/w exch def
	x y normalize /yy exch def /xx exch def
	w h dnormalize /hh exch def /ww exch def
	ww abs hh abs xx ww add yy hh sub
	gsave
	savematrix
	newpath
	translate
	scale
	0.0 0.0 1.0 5 3 roll arc
	0 setlinecap
	restorematrix
	stroke
	grestore
	} bind def
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE {
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 6 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	newpath
	translate
	0.0 0.0 moveto
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/BEGINBITMAP { 
	gsave
	translate scale /h exch def /w exch def
	/lb w 7 add 8 idiv def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h 1 [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/ENDBITMAP {
	} bind def
end 
%%EndProlog
%%BeginSetup
(1.11) FMVERSION
1. 1. 612. 792. 0 1 FMDOCUMENT
0 12. /Times-Roman  FMDEFINEFONT
1 18. /Times-Bold  FMDEFINEFONT
2 12. /Times-Italic  FMDEFINEFONT
3 10. /Times-Bold  FMDEFINEFONT
4 14. /Times-Bold  FMDEFINEFONT
5 14. /Times-BoldItalic  FMDEFINEFONT
6 12. /Times-Bold  FMDEFINEFONT
0.5 1. 3. 4. 4 FMLINEWIDTHS
%%EndSetup
%%Page: "1" 1
FMBEGINPAGE
0 F
0 X
(Sun Microsystems Porting Guide) 380.33 36. T
(4-1) 72. 36. T
1 F
(Chapter 4) 72. 706. T
(Software Development Tools) 215. 706. T
0 F
(Sun has several products to assist in software development.  ) 217. 686. T
(This chapter gives an overview of:) 217. 673. T
( \245 ) 221. 655. T
2 F
(Programming Environment Support Tools) 234. 655. T
0 F
(: A set of ) 437. 655. T
(programming utilities bundled with SunOS.) 234. 642. T
( \245 ) 221. 624. T
2 F
(Network Software Environment \050NSE\051) 234. 624. T
0 F
(: A comprehen-) 417.66 624. T
(sive software development platform, ) 234. 611. T
(sold separately. ) 412.97 611. T
( \245 ) 221. 593. T
2 F
(SunTrac) 234. 593. T
3 F
(\252) 274.67 593. T
2 F
( Project Management System) 284.67 593. T
0 F
(: A project ) 424.97 593. T
(management system using ) 234. 580. T
(sophisticated analysis ) 363.66 580. T
(with the advantage of networked computing technology, ) 234. 567. T
(sold separately.) 234. 554. T
4 F
(4.1) 72. 526. T
(Programming Environment Support Tools) 216. 526. T
0 F
(Programming Environment Support Tools \050formerly known as ) 217. 507. T
(SunPro\051 are a set of programming utilities that come bundled ) 217. 494. T
(with SunOS.  These utilities form a productive programming ) 217. 481. T
(environment for developers of product release software.  Pro-) 217. 468. T
(gramming Environment Support Tools include: shell program-) 217. 455. T
(ming capabilities, editors, floating-point operations, preproces-) 217. 442. T
(sors, C compiler, debuggers, performance analysis utilities, and ) 217. 429. T
(source-code control utilities.  The following outline gives an ) 217. 416. T
(overview of the capabilities available, and pointers to detailed ) 217. 403. T
(documentation on each area. ) 217. 390. T
4 F
(4.1.1) 72. 365. T
(Organizing a Programming Environment ) 216. 365. T
0 F
(Shell programming capabilities are UNIX features that cus-) 217. 346. T
(tomize your working environment.  These features include: set-) 217. 333. T
(up files \050.login and .cshrc\051, root menu and SunView customiza-) 217. 320. T
(tion, and the use of shells and shell facilities \050online help; com-) 217. 307. T
(mand aliases; I/O redirection; pipelines; installing; running and ) 217. 294. T
(debugging shell scripts; grep; nm; and strip\051.) 217. 281. T
4 F
(4.1.2) 72. 256. T
(Editing Code) 216. 256. T
0 F
(Sun\325s version of the UNIX operating system provides several ) 217. 237. T
(editors  for general use on text files: the ) 217. 224. T
2 F
(ed) 410.63 224. T
0 F
( and ) 421.96 224. T
2 F
(ex) 445.29 224. T
0 F
( line editors, ) 455.94 224. T
(and the ) 217. 211. T
2 F
(vi) 254.99 211. T
0 F
( and ) 263.66 211. T
2 F
(textedit) 286.98 211. T
0 F
( screen editors.  In addition, other editors ) 322.31 211. T
(\050such as Emacs\051 are available from third-party vendors.  ) 217. 198. T
(SunOS also provides an indent facility. ) 217. 185. T
2 F
(Indent) 407.99 185. T
0 F
( is a C program ) 438.65 185. T
(source-code formatter.  It reformats a C program according to ) 217. 172. T
(an extensive set of options.) 217. 159. T
4 F
(4.1.3) 72. 134. T
(Organizing and Storing Code with SCCS) 216. 134. T
0 F
(The Software Code Control System \050SCCS\051 is a software man-) 217. 115. T
(agement tool that helps coordinate a team of programmers ) 217. 102. T
(working on a large software development project.  SCCS serves ) 217. 89. T
(as a custodian of program source files, determining who may ) 217. 76. T
FMENDPAGE
%%Page: "2" 2
FMBEGINPAGE
0 F
0 X
(Sun Microsystems Porting Guide) 72. 36. T
(4-2) 524. 36. T
(have access to files and who may edit them.  SCCS maintains ) 217. 711. T
(when a file is edited, and keeps track of the revision levels of ) 217. 698. T
(each file. A check-out system prevents the possibility of multi-) 217. 685. T
(ple uncoordinated updates.  SCCS commands include ) 217. 672. T
2 F
(create) 477.65 672. T
0 F
( ) 507.64 672. T
(\050create a file in SCCS\051, ) 217. 659. T
2 F
(get) 331.65 659. T
0 F
( \050get a copy of an SCCS file on which ) 346.31 659. T
(to work\051, ) 217. 646. T
2 F
(sccs) 263.99 646. T
0 F
( edit \050edit the file copy\051, and ) 283.98 646. T
2 F
(sccs) 423.29 646. T
0 F
( delta ) 443.28 646. T
(\050incorporate changes to form the new version of the file\051.) 217. 633. T
4 F
(4.1.4) 72. 608. T
5 F
(make:) 216. 608. T
4 F
( Keeping Files Up to Date) 251.77 608. T
0 F
(The ) 217. 588. T
2 F
(make ) 238.66 588. T
0 F
(utility assists programmers in recompiling code thor-) 266.98 588. T
(oughly  and efficiently.  A user-defined makefile lists all depen-) 217. 575. T
(dent modules that are required to construct a target program.  ) 217. 562. T
(When ) 217. 549. T
2 F
(make) 248.66 549. T
0 F
( is invoked, it looks at the UNIX timestamp placed ) 273.98 549. T
(on each dependent file listed in the makefile to determine when ) 217. 536. T
(it was last revised.  ) 217. 523. T
2 F
(make) 311.66 523. T
0 F
( then recompiles only modules that ) 336.98 523. T
(have a timestamp later than the last target recompile.  ) 217. 510. T
2 F
(make) 476.62 510. T
0 F
( is ) 501.94 510. T
(efficient and thorough, in that only modules that have been ) 217. 497. T
(altered are recompiled.  Sun\325s implementation of ) 217. 484. T
2 F
(make) 454.96 484. T
0 F
(  contains ) 480.28 484. T
(many enhancements. Most notable are hidden dependency ) 217. 471. T
(checking and command dependency checking.) 217. 458. T
4 F
(4.1.5) 72. 433. T
(Debug) 216. 433. T
72. 72. 540. 720. C
U
4 F
0 X
(ging Code) 254.89 433. T
0 F
(Sun offers two types of debuggers:) 217. 414. T
2 F
( dbx) 384.64 414. T
0 F
(, a source-level debug-) 404.97 414. T
(ger, and  ) 217. 401. T
2 F
(adb) 261.65 401. T
0 F
(, an assembly-level interactive debugger. ) 279.65 401. T
(Sun\325s ) 217. 384. T
2 F
(dbx) 247.34 384. T
0 F
( is an extended and debugged version of the Berkeley ) 264.66 384. T
(4.2BSD ) 217. 371. T
2 F
(dbx) 258.34 371. T
0 F
(.  Enhancements that Sun has added include robust-) 275.67 371. T
(ness; debugging capabilities for Pascal, Modula-2 , C, and ) 217. 358. T
(FORTRAN; faster initialization; source code searching; expand-) 217. 345. T
(ed evaluation of C operators; improved stack-walking facilities; ) 217. 332. T
(arbitrary-process debugging; multiple-process debugging; and ) 217. 319. T
(kernel debugging.) 217. 306. T
(A window/mouse-based version of ) 217. 289. T
2 F
(dbx) 387.64 289. T
0 F
(, called ) 404.97 289. T
2 F
(dbxtool) 442.62 289. T
0 F
(, has ) 478.62 289. T
(become the  debugger of choice on Sun systems.  Using only the ) 217. 276. T
(mouse pointing device, users can run the program, set and clear ) 217. 263. T
(breakpoints in the source code, display the values of variables, ) 217. 250. T
(display a call stack trace, single-step a program, and continue ) 217. 237. T
(execution from a stopped condition.  In addition to the mouse-) 217. 224. T
(selectable functions, ) 217. 211. T
2 F
(dbxtool) 317.98 211. T
0 F
( provides a window in which you ) 353.98 211. T
(can type any of the normal ) 217. 198. T
2 F
(dbx) 348.3 198. T
0 F
( commands.  Although ) 365.63 198. T
2 F
(dbxtool) 477.96 198. T
0 F
( is ) 513.96 198. T
(not a true integrated programming environment, it exhibits the ) 217. 185. T
(major features of one: you can edit, compile, link, and debug a ) 217. 172. T
(program within ) 217. 159. T
2 F
(dbxtool) 294.33 159. T
0 F
(.) 330.33 159. T
2 F
(adb) 217. 142. T
0 F
( is an assembly-level interactive debugger.  ) 235. 142. T
2 F
(adb) 445.62 142. T
0 F
( is more dif-) 463.62 142. T
(ficult to use, but it can do some things that ) 217. 129. T
2 F
(dbx) 424. 129. T
0 F
( cannot, such as ) 441.33 129. T
(debug programs not compiled with the -g symbol table option ) 217. 116. T
(and patch code in memory or in a file. ) 217. 103. T
2 F
(adb) 402.96 103. T
0 F
( is a good general tool ) 420.96 103. T
(for interactively examining binary files.) 217. 90. T
70. 181. 201. 366. C
70. 181. 201. 366. R
7 X
V
2 F
0 X
(Dbxtool is a graphic ) 72. 256. T
(interface to dbx that ) 72. 242. T
(eases and speeds ) 72. 228. T
(development on Suns) 72. 214. T
U
FMENDPAGE
%%Page: "3" 3
FMBEGINPAGE
0 F
0 X
(Sun Microsystems Porting Guide) 380.33 36. T
(4-3) 72. 36. T
6 F
(Note:) 217. 711. T
0 F
(  Another source-level debugger commonly found on ) 244.98 711. T
(UNIX systems is ) 217. 698. T
2 F
(sdb) 302. 698. T
0 F
( from Bell Laboratories.  Sun supplies ) 318.66 698. T
2 F
(dbx) 504.65 698. T
0 F
( ) 521.98 698. T
(rather than ) 217. 685. T
2 F
(sdb) 271.65 685. T
0 F
( because the former has better capabilities for ) 288.32 685. T
(controlling execution and for displaying complex data-structure ) 217. 672. T
(elements.  For those already familiar with ) 217. 659. T
2 F
(sdb) 420.3 659. T
0 F
(, ) 436.97 659. T
2 F
(dbx) 442.97 659. T
0 F
( provides a ) 460.3 659. T
(command aliasing facility that lets users alter its syntax to ) 217. 646. T
(resemble that of ) 217. 633. T
2 F
(sdb) 297.32 633. T
0 F
(.) 313.98 633. T
4 F
(4.1.6) 72. 608. T
(Performance Analysis Utilities) 216. 608. T
0 F
(Performance analysis tools are of two major types: those that ) 217. 589. T
(monitor  the performance of an individual program, and those ) 217. 576. T
(that monitor aspects of system performance as a whole.  ) 217. 563. T
(Sun\325s operating system provides four major tools that examine ) 217. 546. T
(the performance of an individual program: ) 217. 533. T
2 F
(time) 217. 516. T
0 F
(Monitors execution time.) 250. 516. T
2 F
(size) 217. 503. T
0 F
(Displays the size of different sections of the program. ) 250. 503. T
2 F
(prof) 217. 490. T
0 F
(Constructs a profile of time spent per routine, subroutine) 250. 490. T
(call frequency, and average time spent in each routine per) 250. 477. T
(call. \050) 250. 464. T
2 F
(gprof) 277.32 464. T
0 F
( is an enhanced version of ) 303.33 464. T
2 F
(prof) 431.3 464. T
0 F
( that produces a) 451.3 464. T
(call graph that identifies the runtime relationships) 250. 451. T
(between routines.\051) 250. 438. T
2 F
(tcov) 217. 425. T
0 F
(Produces reports that show which parts of the program) 250. 425. T
(were exercised in a test run and which parts remain to be) 250. 412. T
(tested. \050) 250. 399. T
2 F
(pxp) 287.99 399. T
0 F
( is the Pascal equivalent of ) 305.32 399. T
2 F
(tcov) 436.64 399. T
0 F
(.\051) 456.63 399. T
(For system analysis, Sun provides utilities that gather statis-) 217. 382. T
(tics on system performance:) 217. 369. T
2 F
(perfmeter) 217. 352. T
0 F
(Determines whether the program is CPU-bound.) 284. 352. T
2 F
(perfmon) 217. 339. T
0 F
(Provides statistical display of CPU use.) 284. 339. T
2 F
(vmstat ) 217. 326. T
0 F
(Reports virtual memory statistics.) 284. 326. T
2 F
(iostat ) 217. 313. T
0 F
(Reports I/O statistics.) 284. 313. T
2 F
(netstat) 217. 300. T
0 F
(Reports network memory management and ) 284. 300. T
(interface statistics.) 284. 287. T
2 F
(mfsstat) 217. 274. T
0 F
(Reports kernel-network interface statistics.) 284. 274. T
4 F
(4.1.7) 72. 249. T
(Source-Code Control within NFS) 216. 249. T
0 F
(Sun\325s Network File System \050NFS\051 makes any number of ) 217. 230. T
(remote  filesystems appear to be mounted locally.  After file ) 217. 217. T
(systems are exported and mounted with NFS, a remote file can ) 217. 204. T
(be accessed with standard UNIX I/O calls, regardless of its ) 217. 191. T
(location in the network. The most important advantage of NFS ) 217. 178. T
(for programmers is the ability to import and export files trans-) 217. 165. T
(parently across the network, provide immediate access to any ) 217. 152. T
(file of interest \050provided permissions have  been granted\051, and ) 217. 139. T
(conserve local disk memory.  For a team of developers to take ) 217. 126. T
(advantage of NFS, the use of network groups and the use of ) 217. 113. T
(SCCS in NFS should be understood.) 217. 100. T
FMENDPAGE
%%Page: "4" 4
FMBEGINPAGE
0 F
0 X
(Sun Microsystems Porting Guide) 72. 36. T
(4-4) 524. 36. T
(Network groups were invented for use with the Yellow Pages to ) 217. 710. T
(simplify the permission checking associated with remote ) 217. 697. T
(mounts, logins, and shells.  Network groups classify machines ) 217. 684. T
(and users on the network who are allowed access to files and ) 217. 671. T
(operations on other machines.  For remote mounts, the informa-) 217. 658. T
(tion in network groups is used to classify machines; for remote ) 217. 645. T
(logins and remote shells, it is used to classify users.) 217. 632. T
(Because NFS does not lock files, SCCS is commonly used to ) 217. 615. T
(control  access to source code in the NFS environment.  To con-) 217. 602. T
(trol parallel development, when a file is checked out for editing ) 217. 589. T
(on each machine, SCCS creates a local lock file so that no one ) 217. 576. T
(else can edit the file until it is returned.  In sequential develop-) 217. 563. T
(ment, a common way to share the SCCS directory is to form a ) 217. 550. T
(symbolic link between the SCCS directories.  When two pro-) 217. 537. T
(grammers use the same SCCS files for their source, they elimi-) 217. 524. T
(nate the need for merging because their work proceeds sequen-) 217. 511. T
(tially - they edit the same file at the same time.) 217. 498. T
(For more information, the following documents are recommended:) 217. 481. T
(\245 ) 221. 463. T
2 F
(The UNIX System: A Sun Technical Report) 234. 463. T
0 F
(\245 ) 221. 445. T
2 F
(SunPro: The Sun Programming Environment ) 234. 445. T
(\050A Sun Technical Report\051) 234. 432. T
4 F
(4.2) 72. 404. T
(Network S) 216. 404. T
72. 60. 543. 719. C
U
4 F
0 X
(oftware Environment \050NSE\051 ) 279.38 404. T
0 F
(As software engineering projects become increasingly complex, ) 217. 385. T
(the adoption of a systematic approach to software planning, ) 217. 372. T
(development, and tracking is imperative.  Sun\325s Network Soft-) 217. 359. T
(ware Environment \050NSE\051 is a comprehensive software develop-) 217. 346. T
(ment platform that improves software quality, development pro-) 217. 333. T
(ductivity, and programming performance.) 217. 320. T
(Project administration and coordination difficulties pervade the ) 217. 303. T
(entire software lifecycle.  The NSE supports the various devel-) 217. 290. T
(opment objects used during the different phases of software ) 217. 277. T
(development.  These objects can include source code and associ-) 217. 264. T
(ated program files, project requirements, design documents and ) 217. 251. T
(drawings, test data and drivers, schedules, budgets, and staffing ) 217. 238. T
(plans.  The NSE Version Control System records and maintains ) 217. 225. T
(the versions and histories of all development objects.) 217. 212. T
(NSE developers work in individual work spaces called environ-) 217. 195. T
(ments. Environments provide isolation and stability, maintaining ) 217. 182. T
(object naming consistency and a hierarchy of development ) 217. 169. T
(objects and associated tools.  Developers can make changes to ) 217. 156. T
(development objects without effecting each other\325s work.  ) 217. 143. T
(Because the NSE allows developers to work concurrently on the ) 217. 130. T
(same object, they must eventually merge their changes.  Ordi-) 217. 117. T
(narily, conflicts arise when developers merge their changes ) 217. 104. T
(together into a single version of a program, but NSE detects all ) 217. 91. T
(program integration differences and automatically resolves these ) 217. 78. T
(problems or displays them for manual resolution.) 217. 65. T
70. 151. 207. 362. C
70. 151. 207. 362. R
7 X
V
U
72. 208. 180. 359. R
7 X
V
2 F
0 X
(NSE is a comprehen-) 72. 350. T
(sive software devel-) 72. 336. T
(opment platform that ) 72. 322. T
(improves software ) 72. 308. T
(quality, development ) 72. 294. T
(productivity, and ) 72. 280. T
(programming perfor-) 72. 266. T
(mance) 72. 252. T
FMENDPAGE
%%Page: "5" 5
FMBEGINPAGE
0 F
0 X
(Sun Microsystems Porting Guide) 380.33 36. T
(4-5) 72. 36. T
(By facilitating parallel rather than serial methods of software ) 217. 711. T
(development, the NSE promotes network-based development.  ) 217. 698. T
(Using the network-based configuration and version control sys-) 217. 685. T
(tem, users easily control and manage complex distributed soft-) 217. 672. T
(ware projects.  From within the NSE, developers can use all ) 217. 659. T
(standard Sun software development tools, including the stan-) 217. 646. T
(dard Sun compilers, linkers, and debuggers, and all UNIX edi-) 217. 633. T
(tors and utilities.  With a consistent and standard mechanism ) 217. 620. T
(for software tool integration, the NSE encourages users to ) 217. 607. T
(adopt emerging technologies as they become available. ) 217. 594. T
(The NSE is a generic platform for the integration of computer-) 217. 577. T
(aided software engineering \050CASE\051 tools.  A programmatic ) 217. 564. T
(interface to all NSE functions assures a consistent and stan-) 217. 551. T
(dard mechanism for software tool integration and allows users ) 217. 538. T
(to configure tool sets into a single development environment.  ) 217. 525. T
(By using the standard NSE extension facilities, users can apply ) 217. 512. T
(the NSE to non-software development projects.) 217. 499. T
(Users can configure and extend the NSE open architecture to ) 217. 482. T
(meet specific software development needs by using NSE capac-) 217. 469. T
(ity for defining new types.  Rather than limiting development ) 217. 456. T
(objects to a predefined set, the NSE allows developers to ) 217. 443. T
(define unique application-specific objects.  Users cannot tell ) 217. 430. T
(which objects are built-in and which have been added. This fea-) 217. 417. T
(ture offers users a single view of development objects regard-) 217. 404. T
(less of their origins.  In addition to supporting extension via ) 217. 391. T
(add-in objects and tools, the NSE also provides a standard way ) 217. 378. T
(to link objects, or parts of objects, together.  Thus, new objects ) 217. 365. T
(can be integrated both with the NSE and with each other. ) 217. 352. T
(For increased accessibility, the NSE includes two user inter-) 217. 335. T
(faces. Powerful window- and mouse-based graphic interfaces ) 217. 322. T
(fully utilize the high-resolution, bit-mapped graphics available ) 217. 309. T
(on Sun systems and the alternate command line interface.) 217. 296. T
(For more information on NSE and its functions, the following ) 217. 279. T
(documents are recommended:) 217. 266. T
(\245 ) 221. 248. T
2 F
(Introduction to the NSE) 234. 248. T
0 F
(\245 ) 221. 230. T
2 F
(Network Software Environment: Reference Manual) 234. 230. T
0 F
(\245 ) 221. 212. T
2 F
(Network Software Environment: Installation and ) 234. 212. T
(Administration ) 234. 199. T
4 F
(4.3) 72. 171. T
(SunTr) 216. 171. T
72. 72. 540. 720. C
U
4 F
0 X
(ac Project Management System) 254.91 171. T
0 F
(SunTrac blends sophisticated analysis with networked comput-) 217. 152. T
(ing technology to put control into the hands of project man-) 217. 139. T
(agers.  By incorporating  Sun\325s bit-mapped graphics displays, ) 217. 126. T
(multitasking window system, and mouse- and menu-driven ) 217. 113. T
(user interface, SunTrac quickly responds to project changes and ) 217. 100. T
(communicates results to project participants.) 217. 87. T
71. 72. 211. 149. C
71. 72. 211. 149. R
7 X
V
2 F
0 X
(SunTrac  puts control ) 72. 123. T
(into the hands of ) 72. 109. T
(project managers) 72. 95. T
U
FMENDPAGE
%%Page: "6" 6
FMBEGINPAGE
0 F
0 X
(Sun Microsystems Porting Guide) 72. 36. T
(4-6) 524. 36. T
(Modern management strategies produce dense, highly intercon-) 217. 711. T
(nected project networks with many near-critical paths.  ) 217. 698. T
(Although these strategies maximize resource use and aid just-) 217. 685. T
(in-time materials procurement, they are  vulnerable to disrup-) 217. 672. T
(tion by unforeseen delays. SunTrac\325s Risk Analysis feature pro-) 217. 659. T
(vides a way to plan for disruptions and recover from them.) 217. 646. T
(SunTrac is an easy-to-use risk analysis tool.  It analyzes the ) 217. 629. T
(interplay of all activities, calculates how their effects on each ) 217. 616. T
(other will affect cost, schedule, etc., then expresses the results ) 217. 603. T
(in probabilistic terms to accurately identify risk to the schedule.  ) 217. 590. T
(The manager can then run what-if analyses at different levels of ) 217. 577. T
(certainty to see additional cost and schedule effects.) 217. 564. T
(SunTrac  features:) 217. 547. T
(\245) 221. 529. T
(Traditional Gantt, PERT, and Critical Path Method ) 234. 529. T
(diagramming and analysis in a ) 234. 516. T
(powerful graph-) 383.65 516. T
(ic/interactive environment) 234. 503. T
(\245 ) 221. 485. T
(Graphic display and presentation-quality output) 234. 485. T
(\245 ) 221. 467. T
(A unique risk assessment algorithm) 234. 467. T
(\245) 221. 449. T
(Automatic generation of cost-optimized overtime plans) 234. 449. T
(\245) 221. 431. T
(Graphically interactive resource leveling) 234. 431. T
(\245 ) 221. 413. T
(ASCII file structure) 234. 413. T
(\245) 221. 395. T
(Hierarchical framework) 234. 395. T
(SunTrac benefits:) 221. 374. T
(\245 ) 221. 356. T
(Delivers rapid what-if and realtime analysis capability) 234. 356. T
(\245 ) 221. 338. T
(Provides instant communication of complex project ) 234. 338. T
(relationships) 234. 325. T
(\245 ) 221. 307. T
(Assesses the probability of success at any management ) 234. 307. T
(level, at any time during ) 234. 294. T
(the project\325s lifecycle) 353.99 294. T
(\245) 221. 276. T
(Accelerates the schedule realistically) 234. 276. T
(\245) 221. 258. T
(Pinpoints scheduling options and resource use by activity) 234. 258. T
(\245) 221. 240. T
(Easily imports and exports data to other applications ) 234. 240. T
(or hardware) 234. 227. T
(\245) 221. 209. T
(Encourages involvement by the entire staff and ) 234. 209. T
(leverages the power of the network) 234. 196. T
(Management quickly defines a project\325s goals and milestones, ) 217. 176. T
(then assigns principal areas of responsibility to subnetworks in ) 217. 163. T
(the top-level diagram.  Staff members then expand the subnet-) 217. 150. T
(works with bottom-up estimates of task duration and staffing ) 217. 137. T
(levels.  The expanded subnetworks form a hierarchy of plans for ) 217. 124. T
(the project, any of which is instantly available over Sun\325s Net-) 217. 111. T
(work File System \050NFS\051. The hierarchy offers a range of detail ) 217. 98. T
(from individual tasks to summary top-level overviews.) 217. 85. T
FMENDPAGE
%%Page: "7" 7
FMBEGINPAGE
0 F
0 X
(Sun Microsystems Porting Guide) 380.33 36. T
(4-7) 72. 36. T
(File formats are published in the ) 217. 711. T
2 F
(SunTrac Reference Guide) 375.65 711. T
0 F
(.) 499.62 711. T
(For additional information on SunTrac, please refer to the ) 217. 694. T
(following documents: ) 217. 681. T
(\245 ) 221. 663. T
2 F
(SunTrac User\325s Guide) 234. 663. T
0 F
(\245 ) 221. 645. T
2 F
(SunTrac Reference Guide) 234. 645. T
0 F
(\245 ) 221. 627. T
2 F
(SunTrac Tutorial) 234. 627. T
0 F
(\245 ) 221. 609. T
2 F
(SunTrac Installation Guide) 234. 609. T
FMENDPAGE
%%Trailer
%%Pages: 7 1
%%DocumentFonts: Times-Roman
%%+ Times-Bold
%%+ Times-Italic
%%+ Times-BoldItalic
