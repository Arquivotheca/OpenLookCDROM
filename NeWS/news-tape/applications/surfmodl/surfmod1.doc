
















                          SURFACE MODELING ON THE PC

                            By Kenneth E. Van Camp
                                  March, 1987


















































              Surface modeling is the science of producing realistic
        three-dimensional images on a computer display.  This
        capability has existed on large mainframe and minicomputer
        workstations for many years.  Only recently has it migrated to
        smaller computers, and the IBM PC is no exception.  I wrote
        SURFMODL on a Sanyo MBC-550, but it also runs on the IBM PC and
        most compatibles.  There are special versions of SURFMODL for
        the Hercules Graphics Adapter, IBM Enhanced Graphics Adapter
        (EGA), Heath/Zenith Z100, AT&T 6300, and the IBM 3270, as well
        as the standard IBM Color/Graphics Adapter (CGA).  SURFMODL
        requires only 256K RAM, runs amazingly fast, and is a
        general-purpose surface modeler.  It creates displays of
        three-dimensional wire frame images, it removes hidden lines,
        and it performs surface modeling.  Since it is a generalized
        program, it can be used to view any object from any angle, with
        single or multiple light sources.  It is accompanied by
        PREPROC, a general-purpose preprocessor.  This file contains
        instructions for the use of both programs. Source code for
        SURFMODL and PREPROC (3000+ lines of Turbo Pascal 3.01A source
        code) are included;  instructions for compilation of the two
        programs are at the end of this file, as are some special notes
        on becoming a registered user of SURFMODL (for free).
              SURFMODL is placed in the public domain.  However, I
        retain full copyright over the executable program, source
        files, this documentation, and all data files that are
        distributed with SURFMODL.  SURFMODL may be freely distributed,
        or distributed at nominal copying/mailing fee, but may not be
        otherwise charged for.  It may not be incorporated into
        commercial software without express written permission of the
        author:
                  Kenneth Van Camp
                  P.O. Box 784
                  Stroudsburg, PA  18360
              Surface modeling is often confused with solids modeling,
        which encompasses surface modeling but includes much more.  The
        pictorial results are often equivalent, however, so the
        distinction is not important if the objective is to produce
        spectacular graphics.  I will not go into specifics of this, or
        any other surface modeling theory, in this documentation file.
        This is the subject of an article I wrote that will hopefully
        appear in Byte Magazine in early 1988.  I welcome questions and
        comments about SURFMODL.  If you have electronic mail access to
        the ARPAnet, you can reach me that way.  Otherwise, snail
        (ground) mail will suffice.  More on this at the end of this
        file.
              Applications of surface modeling are many and growing.
        SURFMODL was originally written to display finite element data
        and plots of three-dimensional curves.  Computer-aided styling,
        general CAD/CAM, and artistic rendering are among the many
        applications at which SURFMODL excells.







Van Camp                    Page 1                    SURFACE MODELING ON THE PC








                                Using SURFMODL

              When used in conjunction with a finite element
        preprocessor, a special-purpose function generation routine, or
        PREPROC (the SURFMODL preprocessor), SURFMODL is a complete
        surface modeling system, capable of constructing models of any
        variety of objects of virtually unlimited complexity.
              SURFMODL has the distinction of being perhaps the only
        graphics program that runs (without recompilation) on both the
        Sanyo MBC-550 and the IBM PC.  It was important to me to
        develop SURFMODL on the Sanyo because of its superior graphics
        capabilities, and to maintain compatibility with the IBM to
        make its user base as wide as possible.  Compatibility between
        the Sanyo and IBM was made possible by the use of a public
        domain patch to the PC-DOS version of Turbo Pascal (3.01A)
        allowing its use on the Sanyo.  The patch was written by Jim
        Pelley, as was Sgraph, the Turbo Pascal graphics package for
        the Sanyo.  Sgraph is available for $25 from Jim at 2570 Adams,
        Eugene, Oregon 97405.
              Included with SURFMODL are all the source files making up
        the SURFMODL and PREPROC programs (about 50 in all),
        SURFMODL.COM, PREPROC.COM, data files for many example
        pictures, FEM2SURF.BAS (a Basic program to convert a
        general-format finite element data file to SURFMODL format),
        FUNC3D.PAS (a Pascal program that demonstrates the creation of
        a 3-D function data file), and FUNC2SUR.BAS (a Basic program to
        convert the 3-D function data file into SURFMODL format).
        Planned future enhancements to SURFMODL are for unlimited nodes
        and surfaces by using intermediate disk files for storage.  The
        current limit is 1024 nodes.  The maximum number of surfaces
        varies according to the value set by the user for MAXVERT.  The
        maximum number of surfaces can be calculated from the formula:
            MAXSURF = 4096 / MAXVERT

                             Interactive Operation

              Invoking SURFMODL from DOS is accomplished by a command
        of the form:
            SURFMODL [filename]
        where the filename is the optional specification of a SURFMODL
        data file.  If a filename is not specified on the command line,
        it must be read by menu options.
              When SURFMODL is started, the main menu appears.  Menu
        options are selected by pressing the number corresponding to
        the option desired, or pressing the function key of the same
        number.  Option 0 always returns to the previous menu or, in
        the case of the main menu, exits the program.  Pressing the
        space bar is equivalent to pressing 0.
              Options 2, 3 and 4 of the main menu will start the
        plotting of the selected data set in wire frame, hidden line
        removal, or surface modeling.  When plotting is complete, the
        program will wait for a keypress before returning to the main
        menu.  Option 1 of the main menu selects the parameters menu.
              There are nine options in the parameters menu.  Option 2
        selects the system type.  Only Sanyo MBC-550 (and 555) owners


Van Camp                    Page 2                    SURFACE MODELING ON THE PC








        may select a system type other than number 1.  System type 2 is
        the standard Sanyo high-resolution display;  type 3 is a Sanyo
        mode that emulates the IBM display in number of colors and
        resolution.  Selecting a Sanyo mode on an IBM (or true
        compatible), or selecting the IBM mode on a Sanyo, will hang
        the system.
              After selecting the system type, the user is asked
        whether his monitor is color or monochrome (in all versions
        except the Hercules).  This should not be taken as an
        "absolute" question.  Monochrome monitor users can select the
        Color Monitor option, and vice-versa.  The difference between
        the two options is as follows:  For wireframe and hidden line
        plots, there is no difference whatsoever.  For surface model
        plots (either Gouraud or regular), the Color option forces
        Surfmodl to use the colors specified in the data file for each
        surface;  shading is done by a process called "dithering"
        (alternating turning pixels on and off to create grey scales).
        The Monochrome option allows SURFMODL to use all the available
        colors of the system as shades of grey on the monochrome
        monitor.  Users are encouraged to try both specifications,
        since different pictures give varying results with this
        option.  One note:  When using the Color Option, since SURFMODL
        uses the color numbers from your data file, you should make
        sure the color numbers in your data file are all valid numbers
        for your system.  If SURFMODL plots a blank screen, it may be
        because it plotted all the surfaces in invalid colors.
              For users of the EGA version of SURFMODL, next a question
        follows on the number of available colors.  If you are unsure,
        follow the suggestions printed out.  Finally, the user is asked
        to enter XYadjust.  This is a scaling factor for users who have
        screens with a different horizontal/vertical aspect ratio from
        the standard IBM monitor.  98% of all monitors produce good
        results with XYadjust = 1.  An exception is some of the new
        laptop computers with short LCD displays.  For them, XYadjust >
        1 is appropriate.  XYadjust can also be used if you created a
        data file and found out afterward that it looks distorted.
              Options 3 and 4 set up the viewing angles by selecting
        three-dimensional coordinates of the viewer's eye and focal
        point.  The distance between the eye and focal point is
        important, since SURFMODL uses perspective plotting.  To start,
        always place the eye far from the focal point to avoid
        excessive distortion.  The focal point is important because
        this point is always placed at the center of the screen.  If
        the focal point is placed so that it lies outside the limits of
        the object, a warning message will be issued.  This does not
        necessarily mean the plot will not be visible, but is merely
        meant to warn the user that his plot may not be within the
        limits of the screen.  If a blank screen results, the user
        should move the focal point closer to the center of the
        object.
              Option 5 selects the magnification factor.  A
        magnification of 1 makes the plot as large as possible without
        exceeding the screen limits in either the X or Y direction.  To
        zoom in on a particular area of the figure, be sure to move the
        focal point to that area to center it on the screen, then


Van Camp                    Page 3                    SURFACE MODELING ON THE PC








        gradually increase the magnification.
              Option 6 of the parameters menu selects the view type.
        By default, all plots are made in perspective view (selection
        0).  This is almost always the option you should choose.  The
        only time a non-perspective drawing is done is when one of the
        orthogonal views is selected (X-Y, X-Z, or Y-Z).  In this case,
        the eye and focal coordinates are ignored.
              After selecting a view type, you will be asked to enter a
        1 to show axes on your plot, or 0 for no axes.  Typing 1 will
        place coordinate system axes, labeled X, Y and Z at the lower
        left corner of all plots subsequently produced.  This can be
        useful when trying to decide how to adjust eye coordinates.  If
        you select axis drawing, you will be asked for the length to
        draw the axes in the X, Y and Z directions.  These numbers are
        input in world coordinates, and should generally be about
        10-20% of the maximum dimension in the data file.  Finally, you
        are asked for a color to draw the axes.  Again, make sure you
        choose a valid color for your system.
              Option 7 will read a new SURFMODL data file from disk.
        This can be used in lieu of the command line specification of a
        filename, or to change data files without restarting SURFMODL.
        There are two files associated with the data file.  The main
        file is the name specified here or on the command line;  the
        other has the same name as the main file, but with a filename
        extension of .INI.  (It is therefore important that the main
        data file not have this extension.) The .INI file is an
        initialization file that is created with option 8 of the
        parameters menu.  When a new data file is read with option 7
        (or specified on the command line), SURFMODL automatically
        searches the disk for the .INI file.  If it exists, it is read
        in and used to initialize numerous parameters.  Every setting
        in the parameters menu and the lighting menu is copied into the
        .INI file.
              There is a small redundancy between the main data file
        and the .INI file.  Material properties can be set either in
        the main data file or in the lighting menu, and are therefore
        saved in the .INI file.  Since the .INI file is read after the
        main file, the material properties saved in the .INI file will
        be the final ones used in the program.
              Option 1 of the parameters menu selects the lighting
        menu.  The lighting menu has five options.  Option 1 of the
        lighting menu allows the user to change material properties.
        The user should know what material numbers were specified for
        the surfaces in the data file.  R1, R2 and R3 are reflectivity
        constants, which are used in the equation for the reflected
        light intensity:
            E = I[R1(cos s)**R2 + R3cos n] + Ambient
        where I is the incident light intensity, s is the angle between
        the reflected light vector and the line of sight, n is the
        angle between the light source and the surface normal (i.e.,
        independent of the viewing angle), and **R2 means "raised to
        the R2 power".  The color selected for the material is used for
        wireframe and hidden line plots, and for surface modeling if
        the Color Monitor option is selected.
              The ambient light intensity can be set for each material


Van Camp                    Page 4                    SURFACE MODELING ON THE PC








        individually, so that different parts of the solid can be given
        different intensities.  (This is one way to make a piece of an
        object stand out against the background of another piece.  It
        can also be used to give the illusion of different colors on a
        monochrome monitor.) Light intensity is a real number between
        zero and one, with zero corresponding to black and one to
        white.  Ambient light is usually set to a low level of around
        0.1 - 0.3.
              Option 2 changes the light source data.  Light source
        number one is the primary light source, and is the one used for
        shadowing calculations.  The first prompt at this option is for
        the light source number.  Entering a zero will delete the last
        light source (if there is more than one).  You may add a new
        light source by entering a number that is one greater than the
        current number of light sources.  The user is prompted for the
        new coordinates of the light source, and the intensity
        associated with it.  As before, this number is usually between
        zero and one, although larger numbers can be used for very
        bright lighting.  On color monitors, the dithering tends to
        darken the picture, so you may want to experiment with brighter
        lighting.  If the lighting is too bright, the picture will
        become washed out and features will be indistinguishable.
              Option 3 changes Epsilon, the constant for Gouraud
        interpolation.  Entering zero will result in no interpolation
        whatsoever.  Entering any other value will invoke the Gouraud
        interpolation option.  This is a simple 3-dimensional
        interpolation scheme that will artificially "smooth out"
        shading of curved objects.  Because SURFMODL uses flat surfaces
        for all plotting, curved objects (like MARYELLN, the data file
        on the distribution diskette of my wife's face) normally look
        very patchy.  The Gouraud option will smooth this out by
        averaging shading at the nodes and interpolating between them.
        The only problem with Gouraud interpolation is that sharp
        corners (which you may desire) tend to get washed out and look
        rounded.  Therefore, Epsilon is a difference option.  If the
        shades of any neighboring surfaces differ by more than Epsilon,
        they are not interpolated.  A good value of Epsilon is usually
        around 0.3, but other values may be necessary for special
        cases.
              Option 4 selects (or deselects) the shadowing option.
        This option will significantly increase computation time, so it
        should not be used until all viewing and lighting angles have
        been thoroughly tested.

                               Data File Format

              All input in the main data file is line oriented, in free
        format.  The separator between lines is a carriage return, and
        the separator between data items on a line is a space, tab or
        comma.  Any line that begins with an asterisk (*) in the first
        column is a comment, and is ignored.  This is true anywhere
        AFTER the first line of the file, which contains the Title for
        the file.  If you put an asterisk on the first line, you'll
        just get a title that starts with an asterisk.
              The data file can be created in any ASCII line editor


Van Camp                    Page 5                    SURFACE MODELING ON THE PC








        (like Edlin, or the Turbo Pascal editor), or by the SURFMODL
        preprocessor, PREPROC.
              Following is the format for the main data file.  Numbers
        in brackets indicate the range of possible numbers.

                                  Title Line
      (The first line of the data file is the title of the plot.)

                                 Version Line

      Variable             Description                                Type
      VERSION     Version Number of SURFMODL data file format [4]   Integer
      (This set of instructions is for data file format number 4.)

                                 Control Line

      Variable             Description                                Type
      NMATL       Total number of materials in solid [1..20]        Integer
      NNODES      Total number of nodes in solid [1..1024]          Integer
      NSURF       Total number of surfaces in solid [1..3000/MAXV]  Integer
      MAXVERT     Maximum number of vertices in any one surface     Integer
      NSIDES      Number of sides of the surface to use [1..2]      Integer

                          Material Data (NMATL lines)

      Variable             Description                                Type
      R1          First constant of material reflectivity [0..1]    Real
      R2          Second constant of material reflectivity          Real
      R3          Third constant of material reflectivity [0..1]    Real
      COLOR       Color # to use for wireframe plotting [1..3]      Integer
      AMBIENT     Ambient light intensity [0..1]                    Real

                     Nodal Coordinate Data (NNODES lines)

      Variable             Description                                Type
      XWORLD      World X coordinate of node                        Real
      YWORLD      World Y coordinate of node                        Real
      ZWORLD      World Z coordinate of node                        Real

                    Surface Connectivity Data (NSURF lines)
      (NOTE: Connectivity data may be continued onto multiple lines.)

      Variable             Description                                Type
      NVERT       Number of vertices in this surface [3..MAXVERT)   Integer
      MATL        Material number of this surface [1..NMATL]        Integer
      NODE1       Node number of the first vertex [1..NNODES]       Integer
      NODE2       Node number of the second vertex [1..NNODES]      Integer
        .                       .                                      .
        .                       .                                      .
        .                       .                                      .
      NODE nvert  Node number of the Nverth vertex [1..NNODES]      Integer






Van Camp                    Page 6                    SURFACE MODELING ON THE PC








                                 Using PREPROC


              PREPROC is a special-purpose preprocessor for SURFMODL.
        It allows the user to quickly generate SURFMODL data files
        consisting of surfaces of revolution, extrusion and simple
        planes.  It also allows multiple SURFMODL data files to be
        easily combined.  PREPROC is not interactive;  nor is it
        graphical.  However, the user will find it makes certain
        classes of objects very easy to create.  An example PREPROC
        input file, FAN.IN, is on the distribution diskette with
        SURFMODL.  The resulting SURFMODL data file, FAN.OUT, can be
        easily created by running PREPROC.  Before describing the
        details of the preprocessor data file, it is important to make
        a few notes.
              A PREPROC data file consists of three major sections:
        (1) the initial information, consisting of the title of the
        plot, control variables, and material data;  (2) codes for the
        input of one or more solids;  and (3) an ending code (0)
        marking the end of the input file.
              If PREPROC is only being used to combine two or more old
        SURFMODL data files, then it is not necessary to specify
        material data in the initial section.  Material constants will
        be used from the individual data files.
              When generating planes or surfaces of revolution or
        extrusion, material constants must be specified in the initial
        section.  Any plane or surface of revolution or extrusion can
        be scaled, shifted or rotated in any of the three principle
        directions.  It is important to note the order in which these
        operations occur (in case more than one is used in a single
        surface).  First, the surface is rotated.  Then it is shifted,
        and finally scaled.  Orientation codes are also provided to
        allow the user to easily orient a surface of revolution or
        extrusion about one of the major axes.  This is actually
        redundant to the use of the rotation angles, but is provided to
        make complex surfaces a little easier to generate.  An
        orientation code can be 1, 2 or 3, corresponding to the X, Y or
        Z axis, respectively.  The designated axis will then be the
        major axis of the surface (the axis of revolution or
        extrusion).  It is important to note that we will refer to R-Z
        coordinates when speaking of surfaces of revolution, and X-Y-Z
        coordinates when speaking of surfaces of extrusion.  These are
        not to be taken as true X-Y-Z coordinates unless an orientation
        code of 3 is used.  If a different code is specified, then the
        major axis (referred to as 'Z' below), becomes whichever one is
        requested.  The other two axes are rotated to maintain a
        right-handed system.
              Surfaces of revolution are specified by giving the R and
        Z coordinates of any number of outline points.  Once an outline
        is defined, it is rotated about the major axis, generating as
        many intermediate "slices" as specified by NSLICE.
              Surfaces of extrusion are formed by specifying a top and
        bottom Z coordinate for the two endplanes.  Then the
        coordinates of the endplanes are given, in any amount of
        detail.  NOUTLN specifies the number of points to be used to


Van Camp                    Page 7                    SURFACE MODELING ON THE PC








        describe the outline of the endplanes.  NEXTRUDE tells how many
        "slices" to break the surface into in the Z direction.  IQUAD
        is an option which, when selected (1), tells PREPROC to break
        down the two endplanes into quadrilaterals (to save storage
        space so you may keep MAXVERT=4).  When deselected (0), IQUAD
        tells PREPROC to keep your two endplanes exactly as you
        specified them.
              The Planes option is merely to allow placement of large
        quadrilateral surfaces, broken down into many smaller quads.
        This is useful to add a "floor" to an existing data set -- for
        instance if you want to experiment with shadowing.  The user
        specifies four sets of coordinates for the corners of a quad,
        and the number of smaller quads to break it into.  The numbers
        NX and NY have nothing to do with actual X and Y coordinates,
        but are merely to give a count of the number of smaller quads
        to use in the two directions along the larger quad.  The four
        corners must be specified in order so they form a
        counter-clockwise circular path when viewed from the visible
        side of the surface.  NX refers to the number of breaks in the
        direction traveled from node 1 to node 2;  NY refers to the
        other direction.
              When using PREPROC to combine two or more old SURFMODL
        data files, material data sets will be added for each surface.
        This is to avoid any conflicts between different material data
        sets.
              Invoking PREPROC from DOS is accomplished by a command of
        the form:
            PREPROC infile outfile
        where infile is the name of the PREPROC data file, and outfile
        is the name to be assigned to the output data file.  For
        instance, to preprocess the FAN.IN file, type:
            PREPROC FAN.IN FAN.OUT
        (Note that the extensions .IN and .OUT are arbitrary and can be
        replaced by anything desired.)

                               Data File Format

              All input in the preprocessor data file is line oriented,
        in free format.  Following is the format for the preprocessor
        data file.  Numbers in brackets show the range of possible
        numbers.

                                  Title Line
      (The first line of the data file is the title of the plot.)

                                 Version Line

      Variable             Description                                Type
      VERSION     Version Number of SURFMODL data file format [1]   Integer
      (This set of instructions is for data file format number 1.)







Van Camp                    Page 8                    SURFACE MODELING ON THE PC








                                 Control Line

      Variable             Description                                Type
      NMATL       Total number of materials in solid [1..20]        Integer
      MAXVERT     Maximum number of vertices in any one surface     Integer
      NSIDES      Number of sides of the surface to use [1..2]      Integer

                          Material Data (NMATL lines)

      Variable             Description                                Type
      R1          First constant of material reflectivity [0..1]    Real
      R2          Second constant of material reflectivity          Real
      R3          Third constant of material reflectivity [0..1]    Real
      COLOR       Color # to use for wireframe plotting [1..3]      Integer
      AMBIENT     Ambient light intensity [0..1]                    Real

      [The remaining set of data lines may be repeated as needed until all
      data has been inputted.]

                                  Shape Code

      Variable             Description                                Type
      CODE        Shape Code:  0 - End of data                      Integer
                               1 - Read old SURFMODL data file
                               2 - Surface of revolution
                               3 - Surface of extrusion
                               4 - Planar quadrilateral surface

                             READFILE Control Line
      (Include this section if CODE = 1.)
      (This line should contain the name of a SURFMODL data file to be read in.)

                             REVOLVE Control Line
      (Include this section if CODE = 2.)

      Variable             Description                                Type
      NOUTLN      Number of points describing outline of surface    Integer
      NSLICE      Number of angular slices to create [1..]          Integer
      MATERIAL    Material number of this surface [1..20]           Integer
      ORIENT      Orientation code [1..3]                           Integer

                              Scale & Shift Line

      Variable             Description                                Type
      XSCALE      Scaling factor in X direction                     Real
      YSCALE      Scaling factor in Y direction                     Real
      ZSCALE      Scaling factor in Z direction                     Real
      XSHIFT      Displacement in X direction                       Real
      YSHIFT      Displacement in Y direction                       Real
      ZSHIFT      Displacement in Z direction                       Real







Van Camp                    Page 9                    SURFACE MODELING ON THE PC








                                  Rotate Line

      Variable             Description                                Type
      XROTATE     Rotation about X axis (degrees) [-360..360]       Real
      YROTATE     Rotation about Y axis (degrees) [-360..360]       Real
      ZROTATE     Rotation about Z axis (degrees) [-360..360]       Real

                      Outline Coordinates (NOUTLN lines)

      Variable             Description                                Type
      R           R coordinate                                      Real
      Z           Z coordinate                                      Real

                             EXTRUDE Control Line
      (Include this section if CODE = 3.)

      Variable             Description                                Type
      NOUTLN      Number of points describing outline of surface    Integer
      NEXTRUDE    Number of Z slices to create [1..]                Integer
      IQUAD       Quadrilaterals option [1..2]                      Integer
      MATERIAL    Material number of this surface [1..20]           Integer
      ORIENT      Orientation code [1..3]                           Integer

                              Scale & Shift Line

      Variable             Description                                Type
      XSCALE      Scaling factor in X direction                     Real
      YSCALE      Scaling factor in Y direction                     Real
      ZSCALE      Scaling factor in Z direction                     Real
      XSHIFT      Displacement in X direction                       Real
      YSHIFT      Displacement in Y direction                       Real
      ZSHIFT      Displacement in Z direction                       Real

                                  Rotate Line

      Variable             Description                                Type
      XROTATE     Rotation about X axis (degrees) [-360..360]       Real
      YROTATE     Rotation about Y axis (degrees) [-360..360]       Real
      ZROTATE     Rotation about Z axis (degrees) [-360..360]       Real

                          Top & Bottom Z Coordinates

      Variable             Description                                Type
      ZTOP        Z coordinate of top surface                       Real
      ZBOT        Z coordinate of bottom surface                    Real

                      Outline Coordinates (NOUTLN lines)

      Variable             Description                                Type
      X           X coordinate                                      Real
      Y           Y coordinate                                      Real






Van Camp                   Page 10                    SURFACE MODELING ON THE PC








                              PLANE Control Line
      (Include this section if CODE = 4.)

      Variable             Description                                Type
      NX          Number of quads to break down - X [1..]           Integer
      NY          Number of quads to break down - Y [1..]           Integer
      MATERIAL    Material number of this surface [1..20]           Integer

                              Scale & Shift Line

      Variable             Description                                Type
      XSCALE      Scaling factor in X direction                     Real
      YSCALE      Scaling factor in Y direction                     Real
      ZSCALE      Scaling factor in Z direction                     Real
      XSHIFT      Displacement in X direction                       Real
      YSHIFT      Displacement in Y direction                       Real
      ZSHIFT      Displacement in Z direction                       Real

                     Corner Coordinates (include 4 lines)

      Variable             Description                                Type
      X           X coordinate of corner                            Real
      Y           Y coordinate of corner                            Real
      Z           Z coordinate of corner                            Real

































Van Camp                   Page 11                    SURFACE MODELING ON THE PC








               INSTRUCTIONS FOR RECOMPILING SURFMODL VERSION 1.1

            Compilation of SURFMODL is a two-step process;  it cannot be
      directly compiled by Turbo Pascal. This is because I have
      implemented some simple version control using a program called
      MPREP. You needn't understand MPREP to recompile SURFMODL, but if
      you're interested you can read the documentation provided at the
      beginning of the MPREP source file, MPREP.PAS (included on the
      SURFMODL distribution diskette).
            Before you can compile SURFMODL, you have to decide which
      version you want to compile.  There is NO default compilation
      version, so you must give this some thought.  Your options
      include:  (1) Whether you will compile with the PC-DOS version of
      Turbo Pascal 3.01A, or the generic MSDOS version;  (2) Whether you
      will compile it with Borland's Turbo Graphix Toolbox or just with
      the PC-DOS graphics routines;  and (3) What hardware you want to
      run on.
            Below is a list of some common hardware arrangements, and
      what options must be "defined" to compile SURFMODL.  Once you have
      decided which category you fit into, you will have to prepare a
      batch file to take care of the preprocessing of SURFMODL for your
      system.  Several example batch files are included on the release
      diskettes.  For example, the file RECOMPIL.BAT contains the
      following line:
          for %%a in (*.pre) do mprep -d STDCGA %%a

            The way this batch file (and all others on the diskette) work
      is this:  Any options that you want to define are preceded by a
      '-d'.  In the above example, only STDCGA is defined.  Another
      example batch file is RECOMZ10.BAT:
          for %%a in (*.pre) do mprep -d Z100 -d TOOLBOX -d MSDOS %%a

            In this case, the three options Z100, TOOLBOX and MSDOS were
      all defined.  Following is a list of many common configurations,
      and what options should be defined to prepare SURFMODL for
      compilation on your system:

      (1) You have a "fully IBM compatible" computer, using a graphics
      adapter that is compatible with the IBM Color/Graphics Adapter
      (CGA).  You should define only STDCGA, and compile with the PC-DOS
      version of Turbo Pascal 3.01A.

      (2) You have a "semi-IBM compatible", using a CGA-compatible
      graphics adapter.  If the PC-DOS version of Turbo Pascal 3.01A runs
      on your computer, then number (1) above applies.  If you can't use
      the PC-DOS version, then you will have to purchase a copy of
      Borland's Turbo Graphix Toolbox, and copy the files GRAPHIX.IBM,
      TYPEDEF.SYS, and KERNEL.SYS onto the SURFMODL diskette.  Then run
      the batch file with TBCGA, TOOLBOX and MSDOS all defined.

      (3) You have a Hercules Graphics Adapter or compatible.  [Warning:
      See the Bug Report at the end of this file.] You will need to
      purchase a copy of Borland's Turbo Graphix Toolbox, and copy the
      files GRAPHIX.HGC, TYPEDEF.SYS, and KERNEL.SYS onto the SURFMODL
      diskette.  Then run the batch file with HERCULES and TOOLBOX both


Van Camp                   Page 12                    SURFACE MODELING ON THE PC








      defined.  If PC-DOS Turbo Pascal 3.01A doesn't run on your
      computer, then you should also define MSDOS.

      (4) You have an IBM Enhanced Graphics Adapter (EGA) or compatible.
      You will need to purchase a copy of Borland's Turbo Graphix
      Toolbox, and copy the files GRAPHIX.EGA, TYPEDEF.SYS, and
      KERNEL.SYS onto the SURFMODL diskette.  Then run the batch file
      with EGA and TOOLBOX both defined.  If PC-DOS Turbo Pascal 3.01A
      doesn't run on your computer, then you should also define MSDOS.

      (5) You have a Sanyo MBC-550 or MBC-555 without the special
      IBM-compatible video adapter.  You must purchase a copy of SGRAPH
      from Jim Pelley ($25.00, 2570 Adams, Eugene, Oregon 97405).  You
      should use the PC-DOS version of Turbo Pascal, and define
      SANYOIBM.  This produces the standard version of SURFMODL.COM that
      I distribute, which has an option to select either the IBM PC or
      the Sanyo MBC-55x as different systems in the Parameters Menu.  One
      difference:  I am providing a copy of SGRAPH.P, which I have
      modified specifically for SURFMODL.  Use my version with SURFMODL,
      and Jim's for any other programs you write.  The only file you need
      to copy from Jim's package is SGRAPH.BIN (and don't forget to
      install his patch to PC-DOS Turbo Pascal so it runs on your
      Sanyo).

      (6) You have a Heath/Zenith Z-100.  You will need to purchase a
      copy of Borland's Turbo Graphix Toolbox, and copy the files
      GRAPHIX.Z10, TYPEDEF.SYS, and KERNEL.SYS onto the SURFMODL
      diskette.  Then run the batch file with Z100, MSDOS and TOOLBOX all
      defined.

      (7) You have an AT&T 3600.  You will need to purchase a copy of
      Borland's Turbo Graphix Toolbox, and copy the files GRAPHIX.ATT,
      TYPEDEF.SYS, and KERNEL.SYS onto the SURFMODL diskette.  Then run
      the batch file with ATT and TOOLBOX both defined.  If PC-DOS Turbo
      Pascal 3.01A doesn't run on your computer, then you should also
      define MSDOS.

      (8) You have an IBM 3270.  You will need to purchase a copy of
      Borland's Turbo Graphix Toolbox, and copy the files GRAPHIX.327,
      TYPEDEF.SYS, and KERNEL.SYS onto the SURFMODL diskette.  Then run
      the batch file with IBM3270 and TOOLBOX both defined.  If PC-DOS
      Turbo Pascal 3.01A doesn't run on your computer, then you should
      also define MSDOS.

            After you have decided what to define and made up a batch
      file, you should run the batch file.  This will convert all the
      files that have a .PRE extension into corresponding files with a
      .PAS extension.  Currently, there are seven files with a .PRE
      extension:  SURFMODL, DRAWPLOT, INITIAL, OPENWIN, PARAMENU,
      READINI, and SETGMODE.  If you need to modify any of these files,
      be careful not to modify the .PAS version because the next time you
      run the batch file the .PAS file will be overwritten.  Any of the
      other source files in SURFMODL can be used as-is with no
      preprocessing.
            If you are compiling on an all-floppy disk system, you may


Van Camp                   Page 13                    SURFACE MODELING ON THE PC








      not have enough room to run RECOMPIL.BAT (you would need about 24K
      free). You may want to do some selective copying of files to
      another diskette, or delete the SURFMODL.COM file from the
      diskette.
            After running RECOMPIL.BAT, you may now start up Turbo Pascal
      (3.01A) and compile the file SURFMODL.PAS. For additional notes,
      see the beginning of the SURFMODL.PAS (or SURFMODL.PRE) file.

                          BUGS & FUTURE ENHANCEMENTS

            I have tried to track down and solve most of the problems in
      SURFMODL.  However, some still persist and others will likely
      surface as more people begin to use the program.  Much as I hate to
      send out a program that I know has bugs, I realize that if I wait
      until I finish every fix and enhancement I would like to make, you
      will never get the program!  So for those of you who are interested
      in getting involved in the SURFMODL source code, here are some
      problems for you to take a crack at, and some suggested
      enhancements you might want to consider making if you have the
      time.
            Occasionally, when using the Read New File option from the
      Parameters Menu to read in a new file (after already having read a
      previous file), some of the old file's data will appear not to have
      been overwritten.  The resulting picture usually looks like a
      jumble on your screen.  It happens very infrequently (although it
      IS repeatable), and the easiest thing to do is exit SURFMODL, and
      restart it with the new file.
            The shadowing option has never worked 100%.  First of all,
      the results are very patchy because shadows are always cast to an
      entire surface, and are not calculated on a pixel-by-pixel basis.
      (This would be very slow.) Beyond this, however, I have often
      observed surfaces to show up being shadowed even though they are no
      where near an object that might cast a shadow.
            The Hercules version does not seem to work on all "Hercules
      compatible" graphics adapters.  I have tried SURFMODL on a few
      different systems, and on at least two of them I have gotten the
      Turbo Graphix Toolbox error message that the graphics hardware was
      not present (or something to that effect).  The problem is
      certainly in the Toolbox, and if you know how to solve it please
      let me know.
            Most of the Toolbox versions of SURFMODL are largely untested
      at this time.  For instance, at this writing, wireframe and hidden
      line plots work on the Hercules version, but the program seems to
      go into never-never land when asked to produce a surface model
      plot.  I would appreciate any fixes that you come up with.  Keep in
      mind that I cannot test most of these versions because I do not
      have access to the hardware.  (All I have is a Sanyo MBC-550 at
      home, and an IBM PC-XT with a CGA at my office.)
            I am unsure of the options in the Enhanced Graphics Adapter.
      I understand that EGA boards with more memory have more colors
      available.  Therefore, I have included the question about the
      number of colors in the system selection option.  If you have a way
      to automatically tell how many colors are available (i.e., the
      memory on the board), please incorporate it into SURFMODL and send
      me the changes.


Van Camp                   Page 14                    SURFACE MODELING ON THE PC








            With the Monochrome monitor option on the EGA, SURFMODL
      currently only uses up to seven colors, no matter how many you
      specify.  Ideally, a color table should be made up for the use of
      the EGA on a monochrome system.  See the procedure COLORMOD for the
      place to make the changes.  Basically, what is needed is a table
      that relates the different color numbers to the intensity produced
      on a monochrome screen.  Don't worry about the Fmod part of it;
      you won't need that if you can come up with at least 8 distinct
      shades of grey.  If you come up with a good ordering but can't
      figure out how to incorporate it into COLORMOD, let me know and
      I'll make the changes.
            If you're used to living with the shortcomings of Pascal's
      unforgiving I/O, you'll be happy to know that I have "Fortranized"
      the readln's with my Inreal routine.  All numeric data is read
      (either from keyboard or file) as character data, then converted
      into numeric variables within Inreal.  Unlike Pascal, Inreal lets
      you put commas between entries, and allows an optional trailing
      decimal point.  It also automatically ignores any lines that begin
      an asterisk, so that's where the comment option in SURFMODL comes
      from.  This all sounds well and good, but what's in doing in the
      Bugs and Enhancements section?  Well, there's something else that
      Inreal is supposed to do.  If you put an asterisk anywhere in the
      middle of a line, the entire rest of that line is supposed to be
      taken as a comment.  This works probably 90% of the time, but every
      now and then Inreal messes up and starts giving unpredictable
      results.  I'd like to blame this on Turbo Pascal, but I guess I'll
      reserve judgement until I get an independent confirmation.
            There is a small, but annoying, bug in the hidden line
      removal routine.  Sometimes, when a line is plotted a second time
      (because it is shared by two surfaces), it will not be entirely
      coincident on the first line, resulting in a line that is thicker
      is some spots than in others.
            When using the Color monitor option of SURFMODL under the
      Toolbox, I have observed a "Run-Time Error 01" at the conclusion of
      some plotting.  It appears to have occurred when the axes are being
      drawn, so turning off the axis option should make the problem go
      away. However, what causes the problem is unknown.
            Speaking of the axis option, this could really stand some
      rewriting.  The question that asks you to select a length for the
      axes really shouldn't be necessary, but I put it in because I
      needed 3-D (world) coordinates of the ends of the axes in order to
      do a transformation.  To make it automatic, the only idea I've come
      up with is to find the largest dimension in the model, multiply it
      by about 0.2, and then scale it by the magnification factor.
            The MSDOS option (to compile SURFMODL under the generic MSDOS
      version of Turbo Pascal 3.01A) needs some text windowing built in.
      If you are running one of the COM files that came with SURFMODL,
      other than the CGA version, it was compiled with the MSDOS option
      for maximum compatibility.  Text windowing is not used in these
      versions, and should be incorporated.  If you have PC-DOS Turbo and
      the Toolbox, you can compile any of these versions without the
      MSDOS option defined, and you'll get the full windowing.
            If you're looking for other things to do, here are some other
      ideas I have for enhancing SURFMODL:  (1) Multiple viewing windows
      on the screen.


Van Camp                   Page 15                    SURFACE MODELING ON THE PC








            (2) The Byte 1986 Extra Edition (Inside the IBM PCs) Best of
      Bix column (p. 295-298) contained some routines by Jim Keohane that
      will convert reals to integers, and back again, for compression of
      data and speeding up computations. SURFMODL is really an ideal
      application of this (just for the transformed data;  not the world
      coordinates).  The only problem with Jim's routines is that they
      don't work with negative numbers, so they would have to be
      rewritten for this.  Then, with some thought, it could be used to
      significantly speed AND compact SURFMODL.  I gave it some thought
      and decided the best way to implement it would be to have Perspect
      return a compacted real;  Setnormal uncompacts them for its
      calculations;  and Normalize uncompacts X & Y and returns them as
      integers (screen coordinates) and gives back Z as a compacted
      real.
            (3) SURFMODL could be extended to handle an unlimited number
      of nodes and surfaces, allowing very complex models, by using
      intermediate files for scratch storage.  I started doing this, but
      got sidetracked because right now my main priority is getting
      SURFMODL running on as many different computers and graphics boards
      as possible.  I'd love to see the program running on the Mac,
      Amiga, Atari, and lots of others!  And if you keep within the
      #ifdef format I've used, there's no reason why a single version of
      SURFMODL can't be distributed to compile on any computer.
            (4) PREPROC could stand LOTS of work.  Different shapes,
      interactive graphical input, and real-time screen rotations are all
      possibilities.  For instance, there is an undocumented option in
      PREPROC that converts bi-cubic surface patch data into flat
      surfaces.  However, the conversion is not correct, and should be
      done properly for cubic splines.
            Finally, at this time I have no feedback whatsoever about
      SURFMODL running on the IBM 3270, so let me know how that works if
      you try it.
            I'm sure you'll find, and possibly fix, other bugs. Please
      send any bug fixes to me.
            Have a request that can't wait, or that you don't have the
      capability to handle yourself?  I do some consulting on the side,
      and would consider making enhancements/translators on a contractual
      basis.  One possibility is if you need a translator to view data
      from your favorite finite element code or CAD program.

                          SURFMODL USER REGISTRATION

            As a low-cost way to communicate with satisfied users of
      SURFMODL, I am making the following offer:  If you mail me a
      self-addressed, stamped envelope, I will keep you informed of the
      latest developments in SURFMODL.  Please don't expect an immediate
      reply;  I am only going to mail out notices when I have compiled
      enough material to make it worthwhile.  I welcome you to send me
      copies of your data files for new and interesting objects that you
      display with SURFMODL, and I certainly welcome enhancements to
      SURFMODL or PREPROC.  If you don't stipulate otherwise, I will
      assume that any data files or programs you send me are intended for
      general distribution.  I really look forward to seeing what other
      people can do.  Below is my present address.
            Please do not send money or diskettes (unless it


Van Camp                   Page 16                    SURFACE MODELING ON THE PC








      is to send me your code or data files).  Also, I am
      available by electronic mail on the ARPAnet <kvancamp@ARDEC.ARPA>,
      but keep in mind that I may not necessarily be able to reply.  My
      mailer does not know how to reach UUCP addresses, and sometimes has
      trouble with others as well.
                Kenneth Van Camp
                P.O. Box 784
                Stroudsburg, PA 18360

      Happy modeling!

      --Ken Van Camp   3/28/87













































Van Camp                   Page 17                    SURFACE MODELING ON THE PC




